name: Lint, build and publish

on:
  workflow_dispatch:
  # pull_request:
  push:
  # branches:
  #   - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: nixbuild/nix-quick-install-action@5bb6a3b3abe66fd09bbf250dce8ada94f856a703 # v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true

      - name: Restore the package cache
        uses: nix-community/cache-nix-action@135667ec418502fa5a3598af6fb9eb733888ce6a # v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/flake.lock', '**/pnpm-lock.yaml') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1G
          paths: |
            node_modules/.pnpm
            ~/.cache/ms-playwright

      - run: nix develop -L .#node-build -c sh -x -c 'node --version'

      - run: nix develop -L .#node-build -c pnpm install

      - name: Check TypeScript types
        run: nix develop -L .#node-build -c pnpm run typecheck

      - name: Run eslint
        run: nix develop -L .#node-build -c pnpm run lint

      - name: Build the production assets
        run: nix develop -L .#node-build -c pnpm run build

      - name: Install Playwright browser
        # npm (provided by GitHub Actions) is a more reliable way to install a
        # browser that can be used on the platform.
        run: npx playwright install --with-deps chromium --only-shell

      - name: Run e2e tests
        run: CI=true NODE_ENV=production nix develop -L .#node-build -c pnpm run test-e2e:chromium

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
