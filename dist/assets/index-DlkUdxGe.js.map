{"version":3,"mappings":"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bJ,GAAwBK,EACXN,KAAT,KACF,GAAIC,GACF,GAAI,EACKD,GAAW,WAAjB,EACGA,GAAW,KACAA,GAAW,WAAtB,OACEA,GAAW,cAAc,KACzBA,IACJ,YAAYI,EAAa,SAAS,CACrC,OAAQnrD,EAAO,CACd6nD,GACEsD,EACAlD,EACAjoD,CACD,CACb,KAEU,IAAI,CACF+qD,GAAW,YAAYI,EAAa,SAAS,CAC9C,OAAQnrD,EAAO,CACd6nD,GACEsD,EACAlD,EACAjoD,CACD,CACb,CACM,MACF,IAAK,IACM+qD,KAAT,OACGC,IACKV,EAAeS,GACjBQ,GACQjB,EAAa,WAAnB,EACIA,EAAa,KACFA,EAAa,WAAxB,OACEA,EAAa,cAAc,KAC3BA,EACNa,EAAa,SACd,EACDK,GAAiBlB,CAAY,GAC7BiB,GAAsBR,GAAYI,EAAa,SAAS,GAC9D,MACF,IAAK,GACHC,EAAiBL,GACjBM,EAA4BL,GAC5BD,GAAaI,EAAa,UAAU,cACpCH,GAAwB,GACxBC,GACEX,EACArC,EACAkD,CACD,EACDJ,GAAaK,EACbJ,GAAwBK,EACxB,MACF,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACH/B,IACExB,GAA4B,EAAGqD,EAAclD,CAAsB,EACrEqB,IACExB,GAA4B,EAAGqD,EAAclD,CAAsB,EACrEgD,GACEX,EACArC,EACAkD,CACD,EACD,MACF,IAAK,GACH7B,KACGf,GAAgB4C,EAAclD,CAAsB,EACpDmD,EAAiBD,EAAa,UAChB,OAAOC,EAAe,sBAArC,YACEhD,GACE+C,EACAlD,EACAmD,CACZ,GACMH,GACEX,EACArC,EACAkD,CACD,EACD,MACF,IAAK,IACHF,GACEX,EACArC,EACAkD,CACD,EACD,MACF,IAAK,IACH7B,IACG8B,EAAiB9B,KACT6B,EAAa,gBAAtB,KACFF,GACEX,EACArC,EACAkD,CACD,EACD7B,GAA4B8B,EAC5B,MACF,QACEH,GACEX,EACArC,EACAkD,CACD,CACP,CACA,CACA,SAASV,GAAiCH,EAAc5C,EAAc,CACpE,GACWA,EAAa,gBAAtB,OACE4C,EAAe5C,EAA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AAc,EACnCJ,GACExD,EACA5C,EACAqG,EACAC,CACd,GACcE,EAAuB,aAAe,EACxCG,GACE/D,EACA5C,EACAqG,EACAC,GACOtG,EAAa,aAAe,SAAnC,CACd,GACMD,EAAQ,MAAQmG,GAAmCnoD,EAAIiiD,CAAY,EACnE,MACF,IAAK,IACHoG,GACExD,EACA5C,EACAqG,EACAC,CACD,EACDvG,EAAQ,MACNoG,GAA8BnG,EAAa,UAAWA,CAAY,EACpE,MACF,QACEoG,GACExD,EACA5C,EACAqG,EACAC,CACD,CACP,CACA,CACA,SAASK,GACPZ,EACAvB,EACAoC,EACAC,EACAb,EACA,CAGA,IAFAA,EACEA,IAAuCxB,EAAY,aAAe,SAAlC,EAC7BA,EAAcA,EAAY,MAAgBA,IAAT,MAAwB,CAC5D,IAAI5B,EAAemD,EACjB/F,EAAewE,EACf6B,EAAiBO,EACjBN,EAAuBO,EACvB9G,EAAQC,EAAa,MACvB,OAAQA,EAAa,IAAG,CACtB,IAAK,GACL,IAAK,IACL,IAAK,IACH2G,GACE/D,EACA5C,EACAqG,EACAC,EACAN,CACD,EACDlG,GAA0B,EAAGE,CAAY,EACzC,MACF,IAAK,IACH,MACF,IAAK,IACH,IAAIjb,EAAWib,EAAa,UACnBA,EAAa,gBAAtB,KACIjb,EAAS,YAAc,EACrB4hB,GACE/D,EACA5C,EACAqG,EACAC,EACAN,CAChB,EACcU,GACE9D,EACA5C,CAChB,GACcjb,EAAS,aAAe,EAC1B4hB,GACE/D,EACA5C,EACAqG,EACAC,EACAN,CACd,GACQA,GACEjG,EAAQ,MACRmG,GACElG,EAAa,UACbA,CACD,EACH,MACF,IAAK,IACH2G,GACE/D,EACA5C,EACAqG,EACAC,EACAN,CACD,EACDA,GACEjG,EAAQ,MACRoG,GAA8BnG,EAAa,UAAWA,CAAY,EACpE,MACF,QACE2G,GACE/D,EACA5C,EACAqG,EACAC,EACAN,CACD,CACT,CACIxB,EAAcA,EAAY,OAC9B,CACA,CACA,SAASkC,GACPX,EACAvB,EACA,CACA,GAAIA,EAAY,aAAe,MAC7B,IAAKA,EAAcA,EAAY,M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R,CACM17B,EAAG,CAGD,OAFAw2D,EAAkB/E,EAClBmF,EAAsBH,EACdG,EAAmB,CACzB,IAAK,GACL,IAAK,GACH,MAAM,MAAMzwC,EAAuB,GAAG,CAAC,EACzC,IAAK,GACH,IAAKuV,EAAQ,WAAaA,EAAO,MACnC,IAAK,GACH06B,GACEI,EACA96B,EACA+tB,GACA,CAAC0L,EACF,EACD,MAAMn1D,EACR,IAAK,GACH+yC,GAAsC,KACtC,MACF,IAAK,GACL,IAAK,GACH,MACF,QACE,MAAM,MAAM5sB,EAAuB,GAAG,CAAC,CACnD,CACQ,IACGuV,EAAQ,YAAcA,IACrB+6B,EAAalE,GAA+B,IAAMh4B,GAAK,EACzD,GAAKk8B,GACL,CAOA,GANAL,GACEI,EACA96B,EACA+tB,GACA,CAAC0L,EACF,EACSv5B,GAAa46B,EAAiB,EAAG,EAAE,IAAzC,EAA4C,MAAMx2D,EACtDw2D,EAAgB,cAAgBO,GAC9BC,GAAoB,KAClB,KACAR,EACAD,EACAxjB,GACA0iB,GACAD,GACA95B,EACA+tB,GACA6L,GACAxJ,GACAqJ,GACAyB,EACA,EACA,GACA,CACD,EACDH,CACD,EACD,MAAMz2D,CAChB,CACQg3D,GACER,EACAD,EACAxjB,GACA0iB,GACAD,GACA95B,EACA+tB,GACA6L,GACAxJ,GACAqJ,GACAyB,EACA,EACA,GACA,CACD,CACT,CACA,CACI,KACJ,OAAW,IACTP,GAAsB5E,CAAa,CACrC,CACA,SAASuF,GACPn7B,EACAqxB,EACA+J,EACAC,EACAC,EACAz7B,EACAyB,EACAC,EACAC,EACA+5B,EACAX,EACAY,EACAC,EACAC,EACA,CAGA,GAFA17B,EAAK,cAAgB,GACrBw7B,EAAwBnK,EAAa,cAEnCmK,EAAwB,OACVA,EAAwB,YAAtC,YAGIG,GAAiB,CAAE,YAAa,KAAM,MAAO,EAAG,UAAWv4C,EAAM,EACnEi1C,GAAiChH,CAAY,EAC5CmK,EAAwBI,GAAwB,EACxCJ,IAAT,MACA,CACAx7B,EAAK,oBAAsBw7B,EACzBK,GAAW,KACT,KACA77B,EACAqxB,EACAxxB,EACAu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5D,EAAW,aAAap5D,EAAKwB,CAAK,EACtC,MACF,IAAK,UACH27C,GAA0B,eAAgBic,CAAU,EACpDjc,GAA0B,SAAUic,CAAU,EAC9C1tB,GAAqB0tB,EAAY,UAAW53D,CAAK,EACjD,MACF,IAAK,eACHsqC,GACEstB,EACA,+BACA,gBACA53D,CACD,EACD,MACF,IAAK,eACHsqC,GACEstB,EACA,+BACA,gBACA53D,CACD,EACD,MACF,IAAK,YACHsqC,GACEstB,EACA,+BACA,aACA53D,CACD,EACD,MACF,IAAK,YACHsqC,GACEstB,EACA,+BACA,aACA53D,CACD,EACD,MACF,IAAK,aACHsqC,GACEstB,EACA,+BACA,cACA53D,CACD,EACD,MACF,IAAK,YACHsqC,GACEstB,EACA,+BACA,aACA53D,CACD,EACD,MACF,IAAK,UACHsqC,GACEstB,EACA,uCACA,WACA53D,CACD,EACD,MACF,IAAK,UACHsqC,GACEstB,EACA,uCACA,WACA53D,CACD,EACD,MACF,IAAK,WACHsqC,GACEstB,EACA,uCACA,YACA53D,CACD,EACD,MACF,IAAK,KACHkqC,GAAqB0tB,EAAY,KAAM53D,CAAK,EAC5C,MACF,IAAK,YACL,IAAK,cACH,MACF,SAEI,EAAE,EAAIxB,EAAI,SACDA,EAAI,CAAC,IAAb,KAA0BA,EAAI,CAAC,IAAb,KACVA,EAAI,CAAC,IAAb,KAA0BA,EAAI,CAAC,IAAb,OAElBA,EAAMmwC,GAAQ,IAAInwC,CAAG,GAAKA,EACzB0rC,GAAqB0tB,EAAYp5D,EAAKwB,CAAK,EACrD,CACA,CACA,SAASmqE,GAAuBvS,EAAYt7B,EAAK99B,EAAKwB,EAAOomB,EAAO8jC,EAAW,CAC7E,OAAQ1rD,EAAG,CACT,IAAK,QACH4vC,GAAkBwpB,EAAY53D,EAAOkqD,CAAS,EAC9C,MACF,IAAK,0BACH,GAAYlqD,GAAR,KAAe,CACjB,GAAiB,OAAOA,GAApB,UAA6B,EAAE,WAAYA,GAC7C,MAAM,MAAM4vB,EAAuB,EAAE,CAAC,EAExC,GADApxB,EAAMwB,EAAM,OACAxB,GAAR,KAAa,CACf,GAAY4nB,EAAM,UAAd,KAAwB,MAAM,MAAMwJ,EAAuB,EAAE,CAAC,EAClEgoC,EAAW,UAAYp5D,CACjC,CACA,CACM,MACF,IAAK,WACU,OAAOwB,GAApB,SACI6tC,GAAe+pB,EAAY53D,CAAK,GAClB,OAAOA,GAApB,UAA0C,OAAOA,GAApB,WAC9B6tC,GAAe+pB,EAAY,GAAK53D,CAAK,EACzC,MACF,IAAK,WACKA,GAAR,MAAiB27C,GAA0B,SAAUic,CAAU,EAC/D,MACF,IAAK,cACK53D,GAAR,MAAiB27C,GAA0B,YAAaic,CAAU,EAClE,MACF,IAAK,UACK53D,GAAR,OAAkB43D,EAAW,QAAUlwC,IACvC,MACF,IAAK,iCACL,IAAK,2BACL,IAAK,YACL,IAAK,MACH,MACF,IAAK,YACL,IAAK,cACH,MACF,QACE,GAAI,CAAC8hB,GAA6B,eAAehrC,CAAG,EAClDiL,EAAG,CACD,GACUjL,EAAI,CAAC,IAAb,KACQA,EAAI,CAAC,IAAb,MACE4nB,EAAQ5nB,EAAI,SAAS,SAAS,EAC/B89B,EAAM99B,EAAI,MAAM,EAAG4nB,EAAQ5nB,EAAI,OAAS,EAAI,MAAM,EAClD0rD,EAAY0N,EAAWvvB,EAAgB,GAAK,KAC5C6hB,EAAoBA,GAAR,KAAoBA,EAAU1rD,CAAG,EAAI,KACnC,OAAO0rD,GAAtB,YACE0N,EAAW,oBAAoBt7B,EAAK4tB,EAAW9jC,CAAK,EACvC,OAAOpmB,GAAtB,YACA,CACe,OAAOkqD,GAAtB,YACWA,IAAT,OACC1rD,KAAOo5D,EACHA,EAAWp5D,CAAG,EAAI,KACnBo5D,EAAW,aAAap5D,CAAG,GAC3Bo5D,EAAW,gBAAgBp5D,CAAG,GACpCo5D,EAAW,iBAAiBt7B,EAAKt8B,EAAOomB,CAAK,EAC7C,MAAM3c,CAClB,CACUjL,KAAOo5D,EACFA,EAAWp5D,CAAG,EAAIwB,EACZA,IAAP,GACE43D,EAAW,aAAap5D,EAAK,EAAE,EAC/B0rC,GAAqB0tB,EAAYp5D,EAAKwB,CAAK,CAC3D,CACA,CACA,CACA,SAAS60D,GAAqB+C,EAAYt7B,EAAKlW,EAAO,CACpD,OAAQkW,EAAG,CACT,IAAK,MACL,IAAK,OACL,IAAK,MACL,IAAK,OACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACH,MACF,IAAK,MACHqf,GAA0B,QAASic,CAAU,EAC7Cjc,GAA0B,OAAQic,CAAU,EAC5C,IAAIwS,EAAS,GACXC,EAAY,GACZC,EACF,IAAKA,KAAWlkD,EACd,GAAIA,EAAM,eAAekkD,CAAO,EAAG,CACjC,IAAI78B,EAAYrnB,EAAMkkD,CAAO,EAC7B,GAAY78B,GAAR,KACF,OAAQ68B,EAAO,CACb,IAAK,MACHF,EAAS,GACT,MACF,IAAK,SACHC,EAAY,GACZ,MACF,IAAK,WACL,IAAK,0BACH,MAAM,MAAMz6C,EAAuB,IAAK0M,CAAG,CAAC,EAC9C,QACE4tC,GAAQtS,EAAYt7B,EAAKguC,EAAS78B,EAAWrnB,EAAO,IAAI,CACxE,CACA,CACMikD,GACEH,GAAQtS,EAAYt7B,EAAK,SAAUlW,EAAM,OAAQA,EAAO,IAAI,EAC9DgkD,GAAUF,GAAQtS,EAAYt7B,EAAK,MAAOlW,EAAM,IAAKA,EAAO,IAAI,EAChE,OACF,IAAK,QACHu1B,GAA0B,UAAWic,CAAU,EAC/C,IAAI5uC,EAAgBshD,EAAU78B,EAAY48B,EAAY,KACpDn9B,EAAU,KACVC,EAAiB,KACnB,IAAKi9B,KAAUhkD,EACb,GAAIA,EAAM,eAAegkD,CAAM,EAAG,CAChC,IAAIG,EAAgBnkD,EAAMgkD,CAAM,EAChC,GAAYG,GAAR,KACF,OAAQH,EAAM,CACZ,IAAK,OACHC,EAAYE,EACZ,MACF,IAAK,OACH98B,EAAY88B,EACZ,MACF,IAAK,UACHr9B,EAAUq9B,EACV,MACF,IAAK,iBACHp9B,EAAiBo9B,EACjB,MACF,IAAK,QACHD,EAAUC,EACV,MACF,IAAK,eACHvhD,EAAeuhD,EACf,MACF,IAAK,WACL,IAAK,0BACH,GAAYA,GAAR,KACF,MAAM,MAAM36C,EAAuB,IAAK0M,CAAG,CAAC,EAC9C,MACF,QACE4tC,GAAQtS,EAAYt7B,EAAK8tC,EAAQG,EAAenkD,EAAO,IAAI,CAC3E,CACA,CACMinB,GACEuqB,EACA0S,EACAthD,EACAkkB,EACAC,EACAM,EACA48B,EACA,EACD,EACD79B,GAAMorB,CAAU,EAChB,OACF,IAAK,SACHjc,GAA0B,UAAWic,CAAU,EAC/CwS,EAAS38B,EAAY68B,EAAU,KAC/B,IAAKD,KAAajkD,EAChB,GACEA,EAAM,eAAeikD,CAAS,IAC5BrhD,EAAe5C,EAAMikD,CAAS,EAAYrhD,GAAR,MAEpC,OAAQqhD,EAAS,CACf,IAAK,QACHC,EAAUthD,EACV,MACF,IAAK,eACHykB,EAAYzkB,EACZ,MACF,IAAK,WACHohD,EAASphD,EACX,QACEkhD,GAAQtS,EAAYt7B,EAAK+tC,EAAWrhD,EAAc5C,EAAO,IAAI,CAC3E,CACMkW,EAAMguC,EACNlkD,EAAQqnB,EACRmqB,EAAW,SAAW,CAAC,CAACwS,EAChB9tC,GAAR,KACIiR,GAAcqqB,EAAY,CAAC,CAACwS,EAAQ9tC,EAAK,EAAE,EACnClW,GAAR,MAAiBmnB,GAAcqqB,EAAY,CAAC,CAACwS,EAAQhkD,EAAO,EAAE,EAClE,OACF,IAAK,WACHu1B,GAA0B,UAAWic,CAAU,EAC/C0S,EAAUD,EAAYD,EAAS,KAC/B,IAAK38B,KAAarnB,EAChB,GACEA,EAAM,eAAeqnB,CAAS,IAC5BzkB,EAAe5C,EAAMqnB,CAAS,EAAYzkB,GAAR,MAEpC,OAAQykB,EAAS,CACf,IAAK,QACH28B,EAASphD,EACT,MACF,IAAK,eACHqhD,EAAYrhD,EACZ,MACF,IAAK,WACHshD,EAAUthD,EACV,MACF,IAAK,0BACH,GAAYA,GAAR,KAAsB,MAAM,MAAM4G,EAAuB,EAAE,CAAC,EAChE,MACF,QACEs6C,GAAQtS,EAAYt7B,EAAKmR,EAAWzkB,EAAc5C,EAAO,IAAI,CAC3E,CACMwnB,GAAagqB,EAAYwS,EAAQC,EAAWC,CAAO,EACnD99B,GAAMorB,CAAU,EAChB,OACF,IAAK,SACH,IAAK1qB,KAAW9mB,EACd,GACEA,EAAM,eAAe8mB,CAAO,IAC1Bk9B,EAAShkD,EAAM8mB,CAAO,EAAYk9B,GAAR,MAE5B,OAAQl9B,EAAO,CACb,IAAK,WACH0qB,EAAW,SACTwS,GACe,OAAOA,GAAtB,YACa,OAAOA,GAApB,SACF,MACF,QACEF,GAAQtS,EAAYt7B,EAAK4Q,EAASk9B,EAAQhkD,EAAO,IAAI,CACnE,CACM,OACF,IAAK,SACHu1B,GAA0B,eAAgBic,CAAU,EACpDjc,GAA0B,SAAUic,CAAU,EAC9Cjc,GAA0B,SAAUic,CAAU,EAC9Cjc,GAA0B,QAASic,CAAU,EAC7C,MACF,IAAK,SACL,IAAK,SACHjc,GAA0B,OAAQic,CAAU,EAC5C,MACF,IAAK,QACL,IAAK,QACH,IAAKwS,EAAS,EAAGA,EAASxuB,GAAgB,OAAQwuB,IAChDzuB,GAA0BC,GAAgBwuB,CAAM,EAAGxS,CAAU,EAC/D,MACF,IAAK,QACHjc,GAA0B,QAASic,CAAU,EAC7Cjc,GAA0B,OAAQic,CAAU,EAC5C,MACF,IAAK,UACHjc,GAA0B,SAAUic,CAAU,EAC9C,MACF,IAAK,QACL,IAAK,SACL,IAAK,OACHjc,GAA0B,QAASic,CAAU,EAC3Cjc,GAA0B,OAAQic,CAAU,EAChD,IAAK,OACL,IAAK,OACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,WACH,IAAKzqB,KAAkB/mB,EACrB,GACEA,EAAM,eAAe+mB,CAAc,IACjCi9B,EAAShkD,EAAM+mB,CAAc,EAAYi9B,GAAR,MAEnC,OAAQj9B,EAAc,CACpB,IAAK,WACL,IAAK,0BACH,MAAM,MAAMvd,EAAuB,IAAK0M,CAAG,CAAC,EAC9C,QACE4tC,GAAQtS,EAAYt7B,EAAK6Q,EAAgBi9B,EAAQhkD,EAAO,IAAI,CAC1E,CACM,OACF,QACE,GAAIqoB,GAAgBnS,CAAG,EAAG,CACxB,IAAKiuC,KAAiBnkD,EACpBA,EAAM,eAAemkD,CAAa,IAC9BH,EAAShkD,EAAMmkD,CAAa,EACnBH,IAAX,QACED,GACEvS,EACAt7B,EACAiuC,EACAH,EACAhkD,EACA,MAChB,GACQ,MACR,CACA,CACE,IAAK4C,KAAgB5C,EACnBA,EAAM,eAAe4C,CAAY,IAC7BohD,EAAShkD,EAAM4C,CAAY,EACrBohD,GAAR,MACEF,GAAQtS,EAAYt7B,EAAKtT,EAAcohD,EAAQhkD,EAAO,IAAI,EAClE,CACA,SAASyxC,GAAiBD,EAAYt7B,EAAKkuC,EAAWhb,EAAW,CAC/D,OAAQlzB,EAAG,CACT,IAAK,MACL,IAAK,OACL,IAAK,MACL,IAAK,OACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACH,MACF,IAAK,QACH,IAAI6N,EAAO,KACT9rC,EAAO,KACP2B,EAAQ,KACRgpB,EAAe,KACfikB,EAAmB,KACnBC,EAAU,KACVC,EAAiB,KACnB,IAAKm9B,KAAWE,EAAW,CACzB,IAAIC,EAAWD,EAAUF,CAAO,EAChC,GAAIE,EAAU,eAAeF,CAAO,GAAaG,GAAR,KACvC,OAAQH,EAAO,CACb,IAAK,UACH,MACF,IAAK,QACH,MACF,IAAK,eACHr9B,EAAmBw9B,EACrB,QACEjb,EAAU,eAAe8a,CAAO,GAC9BJ,GAAQtS,EAAYt7B,EAAKguC,EAAS,KAAM9a,EAAWib,CAAQ,CAC3E,CACA,CACM,QAASC,KAAelb,EAAW,CACjC,IAAI8a,EAAU9a,EAAUkb,CAAW,EAEnC,GADAD,EAAWD,EAAUE,CAAW,EAE9Blb,EAAU,eAAekb,CAAW,IAC3BJ,GAAR,MAA2BG,GAAR,MAEpB,OAAQC,EAAW,CACjB,IAAK,OACHrsE,EAAOisE,EACP,MACF,IAAK,OACHngC,EAAOmgC,EACP,MACF,IAAK,UACHp9B,EAAUo9B,EACV,MACF,IAAK,iBACHn9B,EAAiBm9B,EACjB,MACF,IAAK,QACHtqE,EAAQsqE,EACR,MACF,IAAK,eACHthD,EAAeshD,EACf,MACF,IAAK,WACL,IAAK,0BACH,GAAYA,GAAR,KACF,MAAM,MAAM16C,EAAuB,IAAK0M,CAAG,CAAC,EAC9C,MACF,QACEguC,IAAYG,GACVP,GACEtS,EACAt7B,EACAouC,EACAJ,EACA9a,EACAib,CACD,CACjB,CACA,CACMz9B,GACE4qB,EACA53D,EACAgpB,EACAikB,EACAC,EACAC,EACA9uC,EACA8rC,CACD,EACD,OACF,IAAK,SACHmgC,EAAUtqE,EAAQgpB,EAAe0hD,EAAc,KAC/C,IAAKrsE,KAAQmsE,EACX,GACIv9B,EAAmBu9B,EAAUnsE,CAAI,EACnCmsE,EAAU,eAAensE,CAAI,GAAa4uC,GAAR,KAElC,OAAQ5uC,EAAI,CACV,IAAK,QACH,MACF,IAAK,WACHisE,EAAUr9B,EACZ,QACEuiB,EAAU,eAAenxD,CAAI,GAC3B6rE,GACEtS,EACAt7B,EACAj+B,EACA,KACAmxD,EACAviB,CACD,CACjB,CACM,IAAK9C,KAAQqlB,EACX,GACInxD,EAAOmxD,EAAUrlB,CAAI,EACtB8C,EAAmBu9B,EAAUrgC,CAAI,EAClCqlB,EAAU,eAAerlB,CAAI,IAClB9rC,GAAR,MAAwB4uC,GAAR,MAEnB,OAAQ9C,EAAI,CACV,IAAK,QACHugC,EAAcrsE,EACd,MACF,IAAK,eACH2qB,EAAe3qB,EACf,MACF,IAAK,WACH2B,EAAQ3B,EACV,QACEA,IAAS4uC,GACPi9B,GACEtS,EACAt7B,EACA6N,EACA9rC,EACAmxD,EACAviB,CACD,CACjB,CACM3Q,EAAMtT,EACNwhD,EAAYxqE,EACZwvD,EAAY8a,EACJI,GAAR,KACIn9B,GAAcqqB,EAAY,CAAC,CAAC4S,EAAWE,EAAa,EAAE,EACtD,CAAC,CAAClb,GAAc,CAAC,CAACgb,IACTluC,GAAR,KACGiR,GAAcqqB,EAAY,CAAC,CAAC4S,EAAWluC,EAAK,EAAE,EAC9CiR,GAAcqqB,EAAY,CAAC,CAAC4S,EAAWA,EAAY,GAAK,GAAI,EAAE,GACtE,OACF,IAAK,WACHF,EAAUI,EAAc,KACxB,IAAK1hD,KAAgBwhD,EACnB,GACIrgC,EAAOqgC,EAAUxhD,CAAY,EAC/BwhD,EAAU,eAAexhD,CAAY,GAC3BmhB,GAAR,MACA,CAACqlB,EAAU,eAAexmC,CAAY,EAExC,OAAQA,EAAY,CAClB,IAAK,QACH,MACF,IAAK,WACH,MACF,QACEkhD,GAAQtS,EAAYt7B,EAAKtT,EAAc,KAAMwmC,EAAWrlB,CAAI,CAC1E,CACM,IAAKnqC,KAASwvD,EACZ,GACIrlB,EAAOqlB,EAAUxvD,CAAK,EACvB3B,EAAOmsE,EAAUxqE,CAAK,EACvBwvD,EAAU,eAAexvD,CAAK,IAAcmqC,GAAR,MAAwB9rC,GAAR,MAEpD,OAAQ2B,EAAK,CACX,IAAK,QACH0qE,EAAcvgC,EACd,MACF,IAAK,eACHmgC,EAAUngC,EACV,MACF,IAAK,WACH,MACF,IAAK,0BACH,GAAYA,GAAR,KAAc,MAAM,MAAMva,EAAuB,EAAE,CAAC,EACxD,MACF,QACEua,IAAS9rC,GACP6rE,GAAQtS,EAAYt7B,EAAKt8B,EAAOmqC,EAAMqlB,EAAWnxD,CAAI,CACrE,CACMsvC,GAAeiqB,EAAY8S,EAAaJ,CAAO,EAC/C,OACF,IAAK,SACH,QAASK,MAAeH,EACtB,GACIE,EAAcF,EAAUG,EAAW,EACrCH,EAAU,eAAeG,EAAW,GAC1BD,GAAR,MACA,CAAClb,EAAU,eAAemb,EAAW,EAEvC,OAAQA,GAAW,CACjB,IAAK,WACH/S,EAAW,SAAW,GACtB,MACF,QACEsS,GACEtS,EACAt7B,EACAquC,GACA,KACAnb,EACAkb,CACD,CACf,CACM,IAAKz9B,KAAoBuiB,EACvB,GACIkb,EAAclb,EAAUviB,CAAgB,EACzCq9B,EAAUE,EAAUv9B,CAAgB,EACrCuiB,EAAU,eAAeviB,CAAgB,GACvCy9B,IAAgBJ,IACPI,GAAR,MAA+BJ,GAAR,MAE1B,OAAQr9B,EAAgB,CACtB,IAAK,WACH2qB,EAAW,SACT8S,GACe,OAAOA,GAAtB,YACa,OAAOA,GAApB,SACF,MACF,QACER,GACEtS,EACAt7B,EACA2Q,EACAy9B,EACAlb,EACA8a,CACD,CACf,CACM,OACF,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,KACL,IAAK,MACL,IAAK,QACL,IAAK,KACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,MACL,IAAK,WACH,QAASM,MAAeJ,EACrBE,EAAcF,EAAUI,EAAW,EAClCJ,EAAU,eAAeI,EAAW,GAC1BF,GAAR,MACA,CAAClb,EAAU,eAAeob,EAAW,GACrCV,GAAQtS,EAAYt7B,EAAKsuC,GAAa,KAAMpb,EAAWkb,CAAW,EACxE,IAAKx9B,KAAWsiB,EACd,GACIkb,EAAclb,EAAUtiB,CAAO,EAChCo9B,EAAUE,EAAUt9B,CAAO,EAC5BsiB,EAAU,eAAetiB,CAAO,GAC9Bw9B,IAAgBJ,IACPI,GAAR,MAA+BJ,GAAR,MAE1B,OAAQp9B,EAAO,CACb,IAAK,WACL,IAAK,0BACH,GAAYw9B,GAAR,KACF,MAAM,MAAM96C,EAAuB,IAAK0M,CAAG,CAAC,EAC9C,MACF,QACE4tC,GACEtS,EACAt7B,EACA4Q,EACAw9B,EACAlb,EACA8a,CACD,CACf,CACM,OACF,QACE,GAAI77B,GAAgBnS,CAAG,EAAG,CACxB,QAASuuC,MAAeL,EACrBE,EAAcF,EAAUK,EAAW,EAClCL,EAAU,eAAeK,EAAW,GACvBH,IAAX,QACA,CAAClb,EAAU,eAAeqb,EAAW,GACrCV,GACEvS,EACAt7B,EACAuuC,GACA,OACArb,EACAkb,CACD,EACP,IAAKv9B,KAAkBqiB,EACpBkb,EAAclb,EAAUriB,CAAc,EACpCm9B,EAAUE,EAAUr9B,CAAc,EACnC,CAACqiB,EAAU,eAAeriB,CAAc,GACtCu9B,IAAgBJ,GACJI,IAAX,QAAqCJ,IAAX,QAC3BH,GACEvS,EACAt7B,EACA6Q,EACAu9B,EACAlb,EACA8a,CACD,EACP,MACR,CACA,CACE,QAASQ,KAAeN,EACrBE,EAAcF,EAAUM,CAAW,EAClCN,EAAU,eAAeM,CAAW,GAC1BJ,GAAR,MACA,CAAClb,EAAU,eAAesb,CAAW,GACrCZ,GAAQtS,EAAYt7B,EAAKwuC,EAAa,KAAMtb,EAAWkb,CAAW,EACxE,IAAKD,KAAYjb,EACdkb,EAAclb,EAAUib,CAAQ,EAC9BH,EAAUE,EAAUC,CAAQ,EAC7B,CAACjb,EAAU,eAAeib,CAAQ,GAChCC,IAAgBJ,GACPI,GAAR,MAA+BJ,GAAR,MACxBJ,GAAQtS,EAAYt7B,EAAKmuC,EAAUC,EAAalb,EAAW8a,CAAO,CAC1E,CACA,IAAI1R,GAAgB,KAClBO,GAAuB,KACzB,SAASvE,GAAkCmT,EAAsB,CAC/D,OAAaA,EAAqB,WAA3B,EACHA,EACAA,EAAqB,aAC3B,CACA,SAAS1kC,GAAkB0nC,EAAc,CACvC,OAAQA,EAAY,CAClB,IAAK,6BACH,MAAO,GACT,IAAK,qCACH,MAAO,GACT,QACE,MAAO,EACb,CACA,CACA,SAASznC,GAAwB0nC,EAAiB3sE,EAAM,CACtD,GAAU2sE,IAAN,EACF,OAAQ3sE,EAAI,CACV,IAAK,MACH,MAAO,GACT,IAAK,OACH,MAAO,GACT,QACE,MAAO,EACf,CACE,OAAa2sE,IAAN,GAA6C3sE,IAApB,gBAC5B,EACA2sE,CACN,CACA,SAAS/uB,GAAqB59C,EAAM+nB,EAAO,CACzC,OACiB/nB,IAAf,YACeA,IAAf,YACa,OAAO+nB,EAAM,UAA1B,UACa,OAAOA,EAAM,UAA1B,UACa,OAAOA,EAAM,UAA1B,UACc,OAAOA,EAAM,yBAA1B,UACUA,EAAM,0BAAf,MACQA,EAAM,wBAAwB,QAAtC,IAEN,CACA,IAAI6kD,GAAiC,KACrC,SAASnF,IAA+B,CACtC,IAAI/1D,EAAQ,OAAO,MACnB,OAAIA,GAAwBA,EAAM,OAArB,WACPA,IAAUk7D,GAAuC,IACrDA,GAAiCl7D,EAC1B,KAETk7D,GAAiC,KAC1B,GACT,CACA,IAAIzK,GAAiC,OAAO,YAAtB,WAAmC,WAAa,OACpEiB,GAA+B,OAAO,cAAtB,WAAqC,aAAe,OACpEyJ,GAA8B,OAAO,SAAtB,WAAgC,QAAU,OACzD5E,GACiB,OAAO,gBAAtB,WACI,eACgB,OAAO4E,GAAvB,IACE,SAAU5kD,EAAU,CAClB,OAAO4kD,GACJ,QAAQ,IAAI,EACZ,KAAK5kD,CAAQ,EACb,MAAM6kD,EAAqB,CAC1C,EACU3K,GACV,SAAS2K,GAAsBl8D,EAAO,CACpC,WAAW,UAAY,CACrB,MAAMA,CACV,CAAG,CACH,CACA,SAASktC,GAAiB99C,EAAM,CAC9B,OAAkBA,IAAX,MACT,CACA,SAASm8D,GAAsB4Q,EAAgBC,EAAkB,CAC/D,IAAIttC,EAAOstC,EACTC,EAA+B,EAC/BC,EAAQ,EACV,EAAG,CACD,IAAIC,EAAWztC,EAAK,YAEpB,GADAqtC,EAAe,YAAYrtC,CAAI,EAC3BytC,GAAkBA,EAAS,WAAf,EACd,GAAMztC,EAAOytC,EAAS,KAAgBztC,IAAT,KAAgB,CAC3C,GACE,EAAIutC,GACJ,EAAIA,EACJ,CACAvtC,EAAOutC,EACP,IAAItD,EAAgBoD,EAAe,cAGnC,GAFArtC,EAAO,GAAKw8B,GAAyByN,EAAc,eAAe,EAClEjqC,EAAO,GAAKw8B,GAAyByN,EAAc,IAAI,EACnDjqC,EAAO,EACT,IACEA,EAAOiqC,EAAc,KACnBzN,GAAyBx8B,CAAI,EAC7BiqC,EAAgBjqC,EAAK,WACvBiqC,GAEA,CACA,IAAIyD,EAAoBzD,EAAc,YACpC3zB,EAAW2zB,EAAc,SAC3BA,EAAcr/B,EAAuB,GACtB0L,IAAb,UACYA,IAAZ,SACYA,IAAX,QACkB2zB,EAAc,IAAI,gBAAnC,cACFjqC,EAAK,YAAYiqC,CAAa,EAChCA,EAAgByD,CAC9B,CACA,CACQ,GAAUF,IAAN,EAAa,CACfH,EAAe,YAAYI,CAAQ,EACnC/Q,GAAiB4Q,CAAgB,EACjC,MACV,CACQE,GACD,MACSxtC,IAAR,KAAyBA,IAAT,MAA0BA,IAAT,KAC7BwtC,IACCD,EAA+BvtC,EAAK,WAAW,CAAC,EAAI,QACxDutC,EAA+B,EACpCvtC,EAAOytC,CACX,OAAWztC,GACT08B,GAAiB4Q,CAAgB,CACnC,CACA,SAAShS,GAAwBhpC,EAAW,CAC1C,IAAIm7C,EAAWn7C,EAAU,WAEzB,IADAm7C,GAAmBA,EAAS,WAAhB,KAA6BA,EAAWA,EAAS,aACtDA,GAAY,CACjB,IAAIztC,EAAOytC,EAEX,OADAA,EAAWA,EAAS,YACZztC,EAAK,SAAQ,CACnB,IAAK,OACL,IAAK,OACL,IAAK,OACHs7B,GAAwBt7B,CAAI,EAC5B6K,GAAsB7K,CAAI,EAC1B,SACF,IAAK,SACL,IAAK,QACH,SACF,IAAK,OACH,GAAqBA,EAAK,IAAI,YAAW,IAArC,aAAyC,QACrD,CACI1N,EAAU,YAAY0N,CAAI,CAC9B,CACA,CACA,SAASg3B,GAAmBrZ,EAAUr9C,EAAM+nB,EAAOmiC,EAAmB,CACpE,KAAa7M,EAAS,WAAf,GAA2B,CAChC,IAAIgwB,EAAWtlD,EACf,GAAIs1B,EAAS,SAAS,YAAa,IAAKr9C,EAAK,YAAW,GACtD,GACE,CAACkqD,IACY7M,EAAS,WAArB,SAA8CA,EAAS,OAAtB,UAElC,cACQ6M,GASP,GAAI,CAAC7M,EAAS/S,EAAuB,EACxC,OAAQtqC,EAAI,CACV,IAAK,OACH,GAAI,CAACq9C,EAAS,aAAa,UAAU,EAAG,MACxC,OAAOA,EACT,IAAK,OAEH,GADAvR,EAAOuR,EAAS,aAAa,KAAK,EACbvR,IAAjB,cAAyBuR,EAAS,aAAa,iBAAiB,EAClE,MACG,GACHvR,IAASuhC,EAAS,KAClBhwB,EAAS,aAAa,MAAM,KACjBgwB,EAAS,MAAjB,MAAgCA,EAAS,OAAhB,GACtB,KACAA,EAAS,OACfhwB,EAAS,aAAa,aAAa,KACxBgwB,EAAS,aAAjB,KAA+B,KAAOA,EAAS,cAClDhwB,EAAS,aAAa,OAAO,KAClBgwB,EAAS,OAAjB,KAAyB,KAAOA,EAAS,OAE5C,MACF,OAAOhwB,EACT,IAAK,QACH,GAAIA,EAAS,aAAa,iBAAiB,EAAG,MAC9C,OAAOA,EACT,IAAK,SAEH,GADAvR,EAAOuR,EAAS,aAAa,KAAK,GAE/BvR,KAAkBuhC,EAAS,KAAjB,KAAuB,KAAOA,EAAS,MAChDhwB,EAAS,aAAa,MAAM,KACjBgwB,EAAS,MAAjB,KAAwB,KAAOA,EAAS,OAC3ChwB,EAAS,aAAa,aAAa,KACxBgwB,EAAS,aAAjB,KAA+B,KAAOA,EAAS,eACpDvhC,GACAuR,EAAS,aAAa,OAAO,GAC7B,CAACA,EAAS,aAAa,UAAU,EAEjC,MACF,OAAOA,EACT,QACE,OAAOA,CACjB,UAjDsBr9C,IAAZ,SAAiCq9C,EAAS,OAAtB,SAA4B,CAClD,IAAIvR,EAAeuhC,EAAS,MAAjB,KAAwB,KAAO,GAAKA,EAAS,KACxD,GACeA,EAAS,OAAtB,UACAhwB,EAAS,aAAa,MAAM,IAAMvR,EAElC,OAAOuR,CACV,KAAM,QAAOA,EA4ChB,GADAA,EAAWQ,GAAkBR,EAAS,WAAW,EACpCA,IAAT,KAAmB,KAC3B,CACE,OAAO,IACT,CACA,SAASsZ,GAAuBtZ,EAAU5N,EAAMya,EAAmB,CACjE,GAAWza,IAAP,GAAa,OAAO,KACxB,KAAa4N,EAAS,WAAf,GASL,IAPSA,EAAS,WAAf,GACaA,EAAS,WAArB,SACaA,EAAS,OAAtB,WACF,CAAC6M,IAGH7M,EAAWQ,GAAkBR,EAAS,WAAW,EACpCA,IAAT,MAAmB,OAAO,KAEhC,OAAOA,CACT,CACA,SAAS2T,GAA2B3T,EAAU,CAC5C,OACWA,EAAS,OAAlB,MACUA,EAAS,OAAlB,MAAyCA,EAAS,cAAc,aAAtC,UAE/B,CACA,SAASke,GAA8Ble,EAAUp1B,EAAU,CACzD,IAAI0hD,EAAgBtsB,EAAS,cAC7B,GAAaA,EAAS,OAAlB,MAAyCssB,EAAc,aAA7B,WAC5B1hD,EAAU,MACP,CACH,IAAInlB,EAAW,UAAY,CACzBmlB,EAAU,EACV0hD,EAAc,oBAAoB,mBAAoB7mE,CAAQ,CAC/D,EACD6mE,EAAc,iBAAiB,mBAAoB7mE,CAAQ,EAC3Du6C,EAAS,YAAcv6C,CAC3B,CACA,CACA,SAAS+6C,GAAkBne,EAAM,CAC/B,KAAeA,GAAR,KAAcA,EAAOA,EAAK,YAAa,CAC5C,IAAI4tC,EAAW5tC,EAAK,SACpB,GAAU4tC,IAAN,GAAwBA,IAAN,EAAgB,MACtC,GAAUA,IAAN,EAAgB,CAElB,GADAA,EAAW5tC,EAAK,KAEN4tC,IAAR,KACSA,IAAT,MACSA,IAAT,MACSA,IAAT,MACQA,IAAR,IAEA,MACF,GAAaA,IAAT,KAAmB,OAAO,IACpC,CACA,CACE,OAAO5tC,CACT,CACA,IAAIqe,GAA8C,KAClD,SAASnT,GAA0B2iC,EAAgB,CACjDA,EAAiBA,EAAe,gBAChC,QAASL,EAAQ,EAAGK,GAAkB,CACpC,GAAUA,EAAe,WAArB,EAA+B,CACjC,IAAIvrD,EAAOurD,EAAe,KAC1B,GAAYvrD,IAAR,KAAyBA,IAAT,MAA0BA,IAAT,KAAe,CAClD,GAAUkrD,IAAN,EAAa,OAAOK,EACxBL,GACR,MAAsBlrD,IAAT,MAAiBkrD,GAC9B,CACIK,EAAiBA,EAAe,eACpC,CACE,OAAO,IACT,CACA,SAAS9W,GAAyBz2D,EAAM+nB,EAAOylD,EAAuB,CAEpE,OADAzlD,EAAQwuC,GAAkCiX,CAAqB,EACvDxtE,EAAI,CACV,IAAK,OAEH,GADAA,EAAO+nB,EAAM,gBACT,CAAC/nB,EAAM,MAAM,MAAMuxB,EAAuB,GAAG,CAAC,EAClD,OAAOvxB,EACT,IAAK,OAEH,GADAA,EAAO+nB,EAAM,KACT,CAAC/nB,EAAM,MAAM,MAAMuxB,EAAuB,GAAG,CAAC,EAClD,OAAOvxB,EACT,IAAK,OAEH,GADAA,EAAO+nB,EAAM,KACT,CAAC/nB,EAAM,MAAM,MAAMuxB,EAAuB,GAAG,CAAC,EAClD,OAAOvxB,EACT,QACE,MAAM,MAAMuxB,EAAuB,GAAG,CAAC,CAC7C,CACA,CACA,SAAS2qC,GAAyB7e,EAAU,CAC1C,QAAS2c,EAAa3c,EAAS,WAAY2c,EAAW,QACpD3c,EAAS,oBAAoB2c,EAAW,CAAC,CAAC,EAC5CzvB,GAAsB8S,CAAQ,CAChC,CACA,IAAIowB,GAAkB,IAAI,IACxBC,GAAiB,IAAI,IACvB,SAASjQ,GAAiBzrC,EAAW,CACnC,OAAsB,OAAOA,EAAU,aAAhC,WACHA,EAAU,YAAW,EACfA,EAAU,WAAhB,EACEA,EACAA,EAAU,aAClB,CACA,IAAI27C,GAAqBtpC,EAAwB,EACjDA,EAAwB,EAAI,CAC1B,EAAGupC,GACH,EAAGC,GACH,EAAGC,GACH,EAAGC,GACH,EAAG7wD,GACH,EAAG8wD,GACH,EAAGC,GACH,EAAGC,GACH,EAAGC,EACJ,EACD,SAASP,IAAgB,CACvB,IAAIQ,EAAuBT,GAAmB,EAAG,EAC/CU,EAAej9B,GAAiB,EAClC,OAAOg9B,GAAwBC,CACjC,CACA,SAASR,GAAiBv7C,EAAM,CAC9B,IAAIg8C,EAAWzjC,GAAoBvY,CAAI,EAC9Bg8C,IAAT,MAA2BA,EAAS,MAAf,GAAiCA,EAAS,OAApB,OACvC/hB,GAAmB+hB,CAAQ,EAC3BX,GAAmB,EAAEr7C,CAAI,CAC/B,CACA,IAAIi8C,GAAiC,OAAO,SAAvB,IAAkC,KAAO,SAC9D,SAASC,GAAaC,EAAK5mE,EAAMsqB,EAAa,CAC5C,IAAIw3C,EAAgB4E,GACpB,GAAI5E,GAA8B,OAAO9hE,GAApB,UAA4BA,EAAM,CACrD,IAAI6mE,EACFhgC,GAA+C7mC,CAAI,EACrD6mE,EACE,aAAeD,EAAM,YAAcC,EAAqB,KAC7C,OAAOv8C,GAApB,WACGu8C,GAAsB,iBAAmBv8C,EAAc,MAC1Du7C,GAAe,IAAIgB,CAAkB,IAClChB,GAAe,IAAIgB,CAAkB,EACrCD,EAAM,CAAE,IAAKA,EAAK,YAAat8C,EAAa,KAAMtqB,CAAM,EAChD8hE,EAAc,cAAc+E,CAAkB,IAAvD,OACI7mE,EAAO8hE,EAAc,cAAc,MAAM,EAC3CnT,GAAqB3uD,EAAM,OAAQ4mE,CAAG,EACtCxjC,GAAoBpjC,CAAI,EACxB8hE,EAAc,KAAK,YAAY9hE,CAAI,GAC3C,CACA,CACA,SAASimE,GAAYjmE,EAAM,CACzB8lE,GAAmB,EAAE9lE,CAAI,EACzB2mE,GAAa,eAAgB3mE,EAAM,IAAI,CACzC,CACA,SAASkmE,GAAWlmE,EAAMsqB,EAAa,CACrCw7C,GAAmB,EAAE9lE,EAAMsqB,CAAW,EACtCq8C,GAAa,aAAc3mE,EAAMsqB,CAAW,CAC9C,CACA,SAASjV,GAAQrV,EAAMiqB,EAAIruB,EAAS,CAClCkqE,GAAmB,EAAE9lE,EAAMiqB,EAAIruB,CAAO,EACtC,IAAIkmE,EAAgB4E,GACpB,GAAI5E,GAAiB9hE,GAAQiqB,EAAI,CAC/B,IAAI68C,EACF,2BACAjgC,GAA+C5c,CAAE,EACjD,KACUA,IAAZ,SACIruB,GAAWA,EAAQ,aACfkrE,GACA,iBACAjgC,GACEjrC,EAAQ,WACT,EACD,KACW,OAAOA,EAAQ,YAA5B,WACGkrE,GACC,gBACAjgC,GACEjrC,EAAQ,UACT,EACD,OAKLkrE,GACC,UACAjgC,GAA+C7mC,CAAI,EACnD,KACN,IAAI1H,EAAMwuE,EACV,OAAQ78C,EAAE,CACR,IAAK,QACH3xB,EAAMyuE,GAAY/mE,CAAI,EACtB,MACF,IAAK,SACH1H,EAAM0uE,GAAahnE,CAAI,CAC/B,CACI4lE,GAAgB,IAAIttE,CAAG,IACnB0H,EAAO+f,EACP,CACE,IAAK,UACL,KACckK,IAAZ,SAAkBruB,GAAWA,EAAQ,YAAc,OAASoE,EAC9D,GAAIiqB,CACL,EACDruB,CACD,EACDgqE,GAAgB,IAAIttE,EAAK0H,CAAI,EACpB8hE,EAAc,cAAcgF,CAAe,IAApD,MACe78C,IAAZ,SACC63C,EAAc,cAAcmF,GAA6B3uE,CAAG,CAAC,GACjD2xB,IAAb,UACC63C,EAAc,cAAcoF,GAAyB5uE,CAAG,CAAC,IACzD2xB,EAAK63C,EAAc,cAAc,MAAM,EACzCnT,GAAqB1kC,EAAI,OAAQjqB,CAAI,EACrCojC,GAAoBnZ,CAAE,EACtB63C,EAAc,KAAK,YAAY73C,CAAE,GACzC,CACA,CACA,SAASk8C,GAAcnmE,EAAMpE,EAAS,CACpCkqE,GAAmB,EAAE9lE,EAAMpE,CAAO,EAClC,IAAIkmE,EAAgB4E,GACpB,GAAI5E,GAAiB9hE,EAAM,CACzB,IAAIiqB,EAAKruB,GAAwB,OAAOA,EAAQ,IAA5B,SAAiCA,EAAQ,GAAK,SAChEkrE,EACE,iCACAjgC,GAA+C5c,CAAE,EACjD,YACA4c,GAA+C7mC,CAAI,EACnD,KACF1H,EAAMwuE,EACR,OAAQ78C,EAAE,CACR,IAAK,eACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,SACL,IAAK,SACH3xB,EAAM0uE,GAAahnE,CAAI,CAC/B,CACI,GACE,CAAC4lE,GAAgB,IAAIttE,CAAG,IACtB0H,EAAO+f,EAAO,CAAE,IAAK,gBAAiB,KAAM/f,CAAM,EAAEpE,CAAO,EAC7DgqE,GAAgB,IAAIttE,EAAK0H,CAAI,EACpB8hE,EAAc,cAAcgF,CAAe,IAApD,MACA,CACA,OAAQ78C,EAAE,CACR,IAAK,eACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,SACL,IAAK,SACH,GAAI63C,EAAc,cAAcoF,GAAyB5uE,CAAG,CAAC,EAC3D,MACZ,CACM2xB,EAAK63C,EAAc,cAAc,MAAM,EACvCnT,GAAqB1kC,EAAI,OAAQjqB,CAAI,EACrCojC,GAAoBnZ,CAAE,EACtB63C,EAAc,KAAK,YAAY73C,CAAE,CACvC,CACA,CACA,CACA,SAASo8C,GAAarmE,EAAMmnE,EAAYvrE,EAAS,CAC/CkqE,GAAmB,EAAE9lE,EAAMmnE,EAAYvrE,CAAO,EAC9C,IAAIkmE,EAAgB4E,GACpB,GAAI5E,GAAiB9hE,EAAM,CACzB,IAAImoC,EAASjF,GAAqB4+B,CAAa,EAAE,gBAC/CxpE,EAAMyuE,GAAY/mE,CAAI,EACxBmnE,EAAaA,GAAc,UAC3B,IAAIlY,EAAW9mB,EAAO,IAAI7vC,CAAG,EAC7B,GAAI,CAAC22D,EAAU,CACb,IAAI/wD,EAAQ,CAAE,QAAS,EAAG,QAAS,IAAM,EACzC,GACG+wD,EAAW6S,EAAc,cACxBmF,GAA6B3uE,CAAG,CACjC,EAED4F,EAAM,QAAU,MACb,CACH8B,EAAO+f,EACL,CAAE,IAAK,aAAc,KAAM/f,EAAM,kBAAmBmnE,CAAY,EAChEvrE,CACD,GACAA,EAAUgqE,GAAgB,IAAIttE,CAAG,IAChC8uE,GAA+BpnE,EAAMpE,CAAO,EAC9C,IAAIi7B,EAAQo4B,EAAW6S,EAAc,cAAc,MAAM,EACzD1+B,GAAoBvM,CAAI,EACxB83B,GAAqB93B,EAAM,OAAQ72B,CAAI,EACvC62B,EAAK,GAAK,IAAI,QAAQ,SAAU7yB,EAASC,EAAQ,CAC/C4yB,EAAK,OAAS7yB,EACd6yB,EAAK,QAAU5yB,CACzB,CAAS,EACD4yB,EAAK,iBAAiB,OAAQ,UAAY,CACxC34B,EAAM,SAAW,CAC3B,CAAS,EACD24B,EAAK,iBAAiB,QAAS,UAAY,CACzC34B,EAAM,SAAW,CAC3B,CAAS,EACDA,EAAM,SAAW,EACjBmpE,GAAiBpY,EAAUkY,EAAYrF,CAAa,CAC5D,CACM7S,EAAW,CACT,KAAM,aACN,SAAUA,EACV,MAAO,EACP,MAAO/wD,CACR,EACDiqC,EAAO,IAAI7vC,EAAK22D,CAAQ,CAC9B,CACA,CACA,CACA,SAASmX,GAAckB,EAAK1rE,EAAS,CACnCkqE,GAAmB,EAAEwB,EAAK1rE,CAAO,EACjC,IAAIkmE,EAAgB4E,GACpB,GAAI5E,GAAiBwF,EAAK,CACxB,IAAIlwD,EAAU8rB,GAAqB4+B,CAAa,EAAE,iBAChDxpE,EAAM0uE,GAAaM,CAAG,EACtBrY,EAAW73C,EAAQ,IAAI9e,CAAG,EAC5B22D,IACIA,EAAW6S,EAAc,cAAcoF,GAAyB5uE,CAAG,CAAC,EACtE22D,IACIqY,EAAMvnD,EAAO,CAAE,IAAKunD,EAAK,MAAO,EAAI,EAAE1rE,CAAO,GAC9CA,EAAUgqE,GAAgB,IAAIttE,CAAG,IAChCivE,GAA2BD,EAAK1rE,CAAO,EACxCqzD,EAAW6S,EAAc,cAAc,QAAQ,EAChD1+B,GAAoB6rB,CAAQ,EAC5BN,GAAqBM,EAAU,OAAQqY,CAAG,EAC1CxF,EAAc,KAAK,YAAY7S,CAAQ,GACxCA,EAAW,CACV,KAAM,SACN,SAAUA,EACV,MAAO,EACP,MAAO,IACR,EACD73C,EAAQ,IAAI9e,EAAK22D,CAAQ,EAC/B,CACA,CACA,SAASqX,GAAoBgB,EAAK1rE,EAAS,CACzCkqE,GAAmB,EAAEwB,EAAK1rE,CAAO,EACjC,IAAIkmE,EAAgB4E,GACpB,GAAI5E,GAAiBwF,EAAK,CACxB,IAAIlwD,EAAU8rB,GAAqB4+B,CAAa,EAAE,iBAChDxpE,EAAM0uE,GAAaM,CAAG,EACtBrY,EAAW73C,EAAQ,IAAI9e,CAAG,EAC5B22D,IACIA,EAAW6S,EAAc,cAAcoF,GAAyB5uE,CAAG,CAAC,EACtE22D,IACIqY,EAAMvnD,EAAO,CAAE,IAAKunD,EAAK,MAAO,GAAI,KAAM,QAAU,EAAE1rE,CAAO,GAC9DA,EAAUgqE,GAAgB,IAAIttE,CAAG,IAChCivE,GAA2BD,EAAK1rE,CAAO,EACxCqzD,EAAW6S,EAAc,cAAc,QAAQ,EAChD1+B,GAAoB6rB,CAAQ,EAC5BN,GAAqBM,EAAU,OAAQqY,CAAG,EAC1CxF,EAAc,KAAK,YAAY7S,CAAQ,GACxCA,EAAW,CACV,KAAM,SACN,SAAUA,EACV,MAAO,EACP,MAAO,IACR,EACD73C,EAAQ,IAAI9e,EAAK22D,CAAQ,EAC/B,CACA,CACA,SAASR,GAAYt2D,EAAMqvE,EAAcx0B,EAAcsiB,EAAiB,CACtE,IAAI/3B,GAA4BA,EAC9BR,GAAwB,SACtB64B,GAAiBr4B,CAAwB,EACzC,KACJ,GAAI,CAACA,EAA0B,MAAM,MAAM7T,EAAuB,GAAG,CAAC,EACtE,OAAQvxB,EAAI,CACV,IAAK,OACL,IAAK,QACH,OAAO,KACT,IAAK,QACH,OAAoB,OAAO66C,EAAa,YAAjC,UACQ,OAAOA,EAAa,MAAjC,UACIw0B,EAAeT,GAAY/zB,EAAa,IAAI,EAC7CA,EAAe9P,GACd3F,CACZ,EAAY,gBACD+3B,EAAkBtiB,EAAa,IAAIw0B,CAAY,EAChDlS,IACIA,EAAkB,CAClB,KAAM,QACN,SAAU,KACV,MAAO,EACP,MAAO,IACR,EACDtiB,EAAa,IAAIw0B,EAAclS,CAAe,GAChDA,GACA,CAAE,KAAM,OAAQ,SAAU,KAAM,MAAO,EAAG,MAAO,IAAM,EAC7D,IAAK,OACH,GACmBtiB,EAAa,MAA9B,cACa,OAAOA,EAAa,MAAjC,UACa,OAAOA,EAAa,YAAjC,SACA,CACA76C,EAAO4uE,GAAY/zB,EAAa,IAAI,EACpC,IAAIy0B,EAAavkC,GACb3F,CACZ,EAAY,gBACFmqC,EAAeD,EAAW,IAAItvE,CAAI,EAoCpC,GAnCAuvE,IACInqC,EACAA,EAAyB,eAAiBA,EAC3CmqC,EAAe,CACd,KAAM,aACN,SAAU,KACV,MAAO,EACP,MAAO,CAAE,QAAS,EAAG,QAAS,IAAI,CACnC,EACDD,EAAW,IAAItvE,EAAMuvE,CAAY,GAChCD,EAAalqC,EAAyB,cACrC0pC,GAA6B9uE,CAAI,CAClC,IACC,CAACsvE,EAAW,KACVC,EAAa,SAAWD,EACzBC,EAAa,MAAM,QAAU,GAChC9B,GAAgB,IAAIztE,CAAI,IACpB66C,EAAe,CACf,IAAK,UACL,GAAI,QACJ,KAAMA,EAAa,KACnB,YAAaA,EAAa,YAC1B,UAAWA,EAAa,UACxB,MAAOA,EAAa,MACpB,SAAUA,EAAa,SACvB,eAAgBA,EAAa,cAC9B,EACD4yB,GAAgB,IAAIztE,EAAM66C,CAAY,EACtCy0B,GACEE,GACEpqC,EACAplC,EACA66C,EACA00B,EAAa,KAC7B,IACYF,GAAyBlS,IAAT,KAClB,MAAM,MAAM5rC,EAAuB,IAAK,EAAE,CAAC,EAC7C,OAAOg+C,CACf,CACM,GAAIF,GAAyBlS,IAAT,KAClB,MAAM,MAAM5rC,EAAuB,IAAK,EAAE,CAAC,EAC7C,OAAO,KACT,IAAK,SACH,OACG89C,EAAex0B,EAAa,MAC5BA,EAAeA,EAAa,IAChB,OAAOA,GAApB,UACAw0B,GACe,OAAOA,GAAtB,YACa,OAAOA,GAApB,UACMA,EAAeR,GAAah0B,CAAY,EACzCA,EAAe9P,GACd3F,CACd,EAAc,iBACD+3B,EAAkBtiB,EAAa,IAAIw0B,CAAY,EAChDlS,IACIA,EAAkB,CAClB,KAAM,SACN,SAAU,KACV,MAAO,EACP,MAAO,IACR,EACDtiB,EAAa,IAAIw0B,EAAclS,CAAe,GAChDA,GACA,CAAE,KAAM,OAAQ,SAAU,KAAM,MAAO,EAAG,MAAO,IAAI,EAE7D,QACE,MAAM,MAAM5rC,EAAuB,IAAKvxB,CAAI,CAAC,CACnD,CACA,CACA,SAAS4uE,GAAY/mE,EAAM,CACzB,MAAO,SAAW6mC,GAA+C7mC,CAAI,EAAI,GAC3E,CACA,SAASinE,GAA6B3uE,EAAK,CACzC,MAAO,0BAA4BA,EAAM,GAC3C,CACA,SAASsvE,GAA4BC,EAAU,CAC7C,OAAO9nD,EAAO,CAAE,EAAE8nD,EAAU,CAC1B,kBAAmBA,EAAS,WAC5B,WAAY,IAChB,CAAG,CACH,CACA,SAASF,GAAkB7F,EAAexpE,EAAKwvE,EAAc5pE,EAAO,CAClE4jE,EAAc,cAAc,mCAAqCxpE,EAAM,GAAG,EACrE4F,EAAM,QAAU,GACf5F,EAAMwpE,EAAc,cAAc,MAAM,EACzC5jE,EAAM,QAAU5F,EACjBA,EAAI,iBAAiB,OAAQ,UAAY,CACvC,OAAQ4F,EAAM,SAAW,CACjC,CAAO,EACD5F,EAAI,iBAAiB,QAAS,UAAY,CACxC,OAAQ4F,EAAM,SAAW,CACjC,CAAO,EACDywD,GAAqBr2D,EAAK,OAAQwvE,CAAY,EAC9C1kC,GAAoB9qC,CAAG,EACvBwpE,EAAc,KAAK,YAAYxpE,CAAG,EACxC,CACA,SAAS0uE,GAAaM,EAAK,CACzB,MAAO,SAAWzgC,GAA+CygC,CAAG,EAAI,IAC1E,CACA,SAASJ,GAAyB5uE,EAAK,CACrC,MAAO,gBAAkBA,CAC3B,CACA,SAASo9D,GAAgBL,EAAepG,EAAU/uC,EAAO,CAEvD,GADA+uC,EAAS,QACIA,EAAS,WAAlB,KACF,OAAQA,EAAS,KAAI,CACnB,IAAK,QACH,IAAIzZ,EAAW6f,EAAc,cAC3B,qBACExuB,GAA+C3mB,EAAM,IAAI,EACzD,IACH,EACD,GAAIs1B,EACF,OACGyZ,EAAS,SAAWzZ,EACrBpS,GAAoBoS,CAAQ,EAC5BA,EAEJ,IAAIuyB,EAAahoD,EAAO,CAAE,EAAEG,EAAO,CACjC,YAAaA,EAAM,KACnB,kBAAmBA,EAAM,WACzB,KAAM,KACN,WAAY,IACtB,CAAS,EACD,OAAAs1B,GAAY6f,EAAc,eAAiBA,GAAe,cACxD,OACD,EACDjyB,GAAoBoS,CAAQ,EAC5BmZ,GAAqBnZ,EAAU,QAASuyB,CAAU,EAClDV,GAAiB7xB,EAAUt1B,EAAM,WAAYm1C,CAAa,EAClDpG,EAAS,SAAWzZ,EAC9B,IAAK,aACHuyB,EAAahB,GAAY7mD,EAAM,IAAI,EACnC,IAAI8nD,EAAe3S,EAAc,cAC/B4R,GAA6Bc,CAAU,CACxC,EACD,GAAIC,EACF,OACG/Y,EAAS,MAAM,SAAW,EAC1BA,EAAS,SAAW+Y,EACrB5kC,GAAoB4kC,CAAY,EAChCA,EAEJxyB,EAAWoyB,GAA4B1nD,CAAK,GAC3C6nD,EAAanC,GAAgB,IAAImC,CAAU,IAC1CX,GAA+B5xB,EAAUuyB,CAAU,EACrDC,GACE3S,EAAc,eAAiBA,GAC/B,cAAc,MAAM,EACtBjyB,GAAoB4kC,CAAY,EAChC,IAAIC,EAAeD,EACnB,OAAAC,EAAa,GAAK,IAAI,QAAQ,SAAUjkE,EAASC,EAAQ,CACvDgkE,EAAa,OAASjkE,EACtBikE,EAAa,QAAUhkE,CACjC,CAAS,EACD0qD,GAAqBqZ,EAAc,OAAQxyB,CAAQ,EACnDyZ,EAAS,MAAM,SAAW,EAC1BoY,GAAiBW,EAAc9nD,EAAM,WAAYm1C,CAAa,EACtDpG,EAAS,SAAW+Y,EAC9B,IAAK,SAEH,OADAA,EAAehB,GAAa9mD,EAAM,GAAG,GAElC6nD,EAAa1S,EAAc,cAC1B6R,GAAyBc,CAAY,CACtC,IAGE/Y,EAAS,SAAW8Y,EACrB3kC,GAAoB2kC,CAAU,EAC9BA,IAEJvyB,EAAWt1B,GACN6nD,EAAanC,GAAgB,IAAIoC,CAAY,KAC/CxyB,EAAWz1B,EAAO,CAAE,EAAEG,CAAK,EAC1BqnD,GAA2B/xB,EAAUuyB,CAAU,GACnD1S,EAAgBA,EAAc,eAAiBA,EAC/C0S,EAAa1S,EAAc,cAAc,QAAQ,EACjDjyB,GAAoB2kC,CAAU,EAC9BpZ,GAAqBoZ,EAAY,OAAQvyB,CAAQ,EACjD6f,EAAc,KAAK,YAAY0S,CAAU,EACjC9Y,EAAS,SAAW8Y,GAC9B,IAAK,OACH,OAAO,KACT,QACE,MAAM,MAAMr+C,EAAuB,IAAKulC,EAAS,IAAI,CAAC,CAC9D,MAEqBA,EAAS,OAA1B,eACSA,EAAS,MAAM,QAAU,KAAhC,IACEzZ,EAAWyZ,EAAS,SACrBA,EAAS,MAAM,SAAW,EAC3BoY,GAAiB7xB,EAAUt1B,EAAM,WAAYm1C,CAAa,GAC9D,OAAOpG,EAAS,QAClB,CACA,SAASoY,GAAiB7xB,EAAU2xB,EAAY/nC,EAAM,CACpD,QACM8oC,EAAQ9oC,EAAK,iBACb,gEACD,EACD19B,EAAOwmE,EAAM,OAASA,EAAMA,EAAM,OAAS,CAAC,EAAI,KAChDC,EAAQzmE,EACRlF,EAAI,EACNA,EAAI0rE,EAAM,OACV1rE,IACA,CACA,IAAIq7B,EAAOqwC,EAAM1rE,CAAC,EAClB,GAAIq7B,EAAK,QAAQ,aAAesvC,EAAYgB,EAAQtwC,UAC3CswC,IAAUzmE,EAAM,KAC7B,CACEymE,EACIA,EAAM,WAAW,aAAa3yB,EAAU2yB,EAAM,WAAW,GACvDhB,EAAmB/nC,EAAK,WAAX,EAAsBA,EAAK,KAAOA,EACjD+nC,EAAW,aAAa3xB,EAAU2xB,EAAW,UAAU,EAC7D,CACA,SAASC,GAA+BgB,EAAiBN,EAAc,CAC7DM,EAAgB,aAAxB,OACGA,EAAgB,YAAcN,EAAa,aACtCM,EAAgB,gBAAxB,OACGA,EAAgB,eAAiBN,EAAa,gBACzCM,EAAgB,OAAxB,OAAkCA,EAAgB,MAAQN,EAAa,MACzE,CACA,SAASP,GAA2Bc,EAAaP,EAAc,CACrDO,EAAY,aAApB,OACGA,EAAY,YAAcP,EAAa,aAClCO,EAAY,gBAApB,OACGA,EAAY,eAAiBP,EAAa,gBACrCO,EAAY,WAApB,OACGA,EAAY,UAAYP,EAAa,UAC1C,CACA,IAAInS,GAAY,KAChB,SAASH,GAA4Br9D,EAAMmwE,EAAcxG,EAAe,CACtE,GAAanM,KAAT,KAAoB,CACtB,IAAIr4C,EAAQ,IAAI,IACZirD,EAAU5S,GAAY,IAAI,IAC9B4S,EAAO,IAAIzG,EAAexkD,CAAK,CAChC,MACEirD,EAAS5S,GACPr4C,EAAQirD,EAAO,IAAIzG,CAAa,EACjCxkD,IAAWA,EAAQ,IAAI,IAAQirD,EAAO,IAAIzG,EAAexkD,CAAK,GAClE,GAAIA,EAAM,IAAInlB,CAAI,EAAG,OAAOmlB,EAG5B,IAFAA,EAAM,IAAInlB,EAAM,IAAI,EACpB2pE,EAAgBA,EAAc,qBAAqB3pE,CAAI,EAClDowE,EAAS,EAAGA,EAASzG,EAAc,OAAQyG,IAAU,CACxD,IAAI1wC,EAAOiqC,EAAcyG,CAAM,EAC/B,GACE,EACE1wC,EAAK4K,EAAuB,GAC5B5K,EAAKqK,EAAmB,GACZ/pC,IAAX,QAAoC0/B,EAAK,aAAa,KAAK,IAAxC,eAEWA,EAAK,eAAtC,6BACA,CACA,IAAI2wC,EAAU3wC,EAAK,aAAaywC,CAAY,GAAK,GACjDE,EAAUrwE,EAAOqwE,EACjB,IAAI32B,EAAWv0B,EAAM,IAAIkrD,CAAO,EAChC32B,EAAWA,EAAS,KAAKha,CAAI,EAAIva,EAAM,IAAIkrD,EAAS,CAAC3wC,CAAI,CAAC,CAChE,CACA,CACE,OAAOva,CACT,CACA,SAASm4C,GAAeJ,EAAel9D,EAAMq9C,EAAU,CACrD6f,EAAgBA,EAAc,eAAiBA,EAC/CA,EAAc,KAAK,aACjB7f,EACYr9C,IAAZ,QAAmBk9D,EAAc,cAAc,cAAc,EAAI,IAClE,CACH,CACA,SAAS7hB,GAAoBr7C,EAAM+nB,EAAOuoD,EAAa,CACrD,GAAUA,IAAN,GAA6BvoD,EAAM,UAAd,KAAwB,MAAO,GACxD,OAAQ/nB,EAAI,CACV,IAAK,OACL,IAAK,QACH,MAAO,GACT,IAAK,QACH,GACe,OAAO+nB,EAAM,YAA1B,UACa,OAAOA,EAAM,MAA1B,UACOA,EAAM,OAAb,GAEA,MACF,MAAO,GACT,IAAK,OACH,GACe,OAAOA,EAAM,KAA1B,UACa,OAAOA,EAAM,MAA1B,UACOA,EAAM,OAAb,IACAA,EAAM,QACNA,EAAM,QAEN,MACF,OAAQA,EAAM,IAAG,CACf,IAAK,aACH,OACG/nB,EAAO+nB,EAAM,SACD,OAAOA,EAAM,YAA1B,UAAgD/nB,GAAR,KAE5C,QACE,MAAO,EACjB,CACI,IAAK,SACH,GACE+nB,EAAM,OACS,OAAOA,EAAM,OAA5B,YACa,OAAOA,EAAM,OAA1B,UACA,CAACA,EAAM,QACP,CAACA,EAAM,SACPA,EAAM,KACO,OAAOA,EAAM,KAA1B,SAEA,MAAO,EACf,CACE,MAAO,EACT,CACA,SAASgvC,GAAgBD,EAAU,CACjC,MAAO,EAAiBA,EAAS,OAA1B,eAAyCA,EAAS,MAAM,QAAU,KAAhC,EAG3C,CACA,IAAI8L,GAAiB,KACrB,SAASv4C,IAAO,EAChB,SAASk1C,GAAgBrC,EAAepG,EAAU/uC,EAAO,CACvD,GAAa66C,KAAT,KAAyB,MAAM,MAAMrxC,EAAuB,GAAG,CAAC,EACpE,IAAIxrB,EAAQ68D,GACZ,GACmB9L,EAAS,OAA1B,eACc,OAAO/uC,EAAM,OAA1B,UACQ,WAAWA,EAAM,KAAK,EAAE,UAA/B,MACK+uC,EAAS,MAAM,QAAU,KAAhC,EACA,CACA,GAAaA,EAAS,WAAlB,KAA4B,CAC9B,IAAI32D,EAAMyuE,GAAY7mD,EAAM,IAAI,EAC9Bs1B,EAAW6f,EAAc,cACvB4R,GAA6B3uE,CAAG,CACjC,EACH,GAAIk9C,EAAU,CACZ6f,EAAgB7f,EAAS,GAChB6f,IAAT,MACe,OAAOA,GAApB,UACe,OAAOA,EAAc,MAApC,aACCn3D,EAAM,QACNA,EAAQwqE,GAAY,KAAKxqE,CAAK,EAC/Bm3D,EAAc,KAAKn3D,EAAOA,CAAK,GACjC+wD,EAAS,MAAM,SAAW,EAC1BA,EAAS,SAAWzZ,EACpBpS,GAAoBoS,CAAQ,EAC5B,MACR,CACMA,EAAW6f,EAAc,eAAiBA,EAC1Cn1C,EAAQ0nD,GAA4B1nD,CAAK,GACxC5nB,EAAMstE,GAAgB,IAAIttE,CAAG,IAC5B8uE,GAA+BlnD,EAAO5nB,CAAG,EAC3Ck9C,EAAWA,EAAS,cAAc,MAAM,EACxCpS,GAAoBoS,CAAQ,EAC5B,IAAIyyB,EAAezyB,EACnByyB,EAAa,GAAK,IAAI,QAAQ,SAAUjkE,EAASC,EAAQ,CACvDgkE,EAAa,OAASjkE,EACtBikE,EAAa,QAAUhkE,CAC/B,CAAO,EACD0qD,GAAqBnZ,EAAU,OAAQt1B,CAAK,EAC5C+uC,EAAS,SAAWzZ,CAC1B,CACat3C,EAAM,cAAf,OAA+BA,EAAM,YAAc,IAAI,KACvDA,EAAM,YAAY,IAAI+wD,EAAUoG,CAAa,GAC5CA,EAAgBpG,EAAS,MAAM,WACvBA,EAAS,MAAM,QAAU,KAAhC,IACC/wD,EAAM,QACN+wD,EAAWyZ,GAAY,KAAKxqE,CAAK,EAClCm3D,EAAc,iBAAiB,OAAQpG,CAAQ,EAC/CoG,EAAc,iBAAiB,QAASpG,CAAQ,EACtD,CACA,CACA,SAAS+L,IAAyB,CAChC,GAAaD,KAAT,KAAyB,MAAM,MAAMrxC,EAAuB,GAAG,CAAC,EACpE,IAAIxrB,EAAQ68D,GACZ,OAAA78D,EAAM,aACEA,EAAM,QAAZ,GACAyqE,GAA2BzqE,EAAOA,EAAM,WAAW,EAC9C,EAAIA,EAAM,MACb,SAAU0qE,EAAQ,CAChB,IAAIC,EAAkB,WAAW,UAAY,CAG3C,GAFA3qE,EAAM,aACJyqE,GAA2BzqE,EAAOA,EAAM,WAAW,EACjDA,EAAM,UAAW,CACnB,IAAI4qE,EAAY5qE,EAAM,UACtBA,EAAM,UAAY,KAClB4qE,EAAW,CACvB,CACS,EAAE,GAAG,EACN,OAAA5qE,EAAM,UAAY0qE,EACX,UAAY,CACjB1qE,EAAM,UAAY,KAClB,aAAa2qE,CAAe,CAC7B,CACT,EACM,IACN,CACA,SAASH,IAAc,CAErB,GADA,KAAK,QACK,KAAK,QAAX,GACF,GAAI,KAAK,YAAaC,GAA2B,KAAM,KAAK,WAAW,UAC9D,KAAK,UAAW,CACvB,IAAIG,EAAY,KAAK,UACrB,KAAK,UAAY,KACjBA,EAAW,CACjB,EACA,CACA,IAAIC,GAAoB,KACxB,SAASJ,GAA2BzqE,EAAOilC,EAAW,CACpDjlC,EAAM,YAAc,KACXA,EAAM,YAAf,OACGA,EAAM,QACN6qE,GAAoB,IAAI,IACzB5lC,EAAU,QAAQ6lC,GAA0B9qE,CAAK,EAChD6qE,GAAoB,KACrBL,GAAY,KAAKxqE,CAAK,EAC1B,CACA,SAAS8qE,GAAyB5pC,EAAM6vB,EAAU,CAChD,GAAI,EAAEA,EAAS,MAAM,QAAU,GAAI,CACjC,IAAIga,EAAcF,GAAkB,IAAI3pC,CAAI,EAC5C,GAAI6pC,EAAa,IAAIvnE,EAAOunE,EAAY,IAAI,IAAI,MAC3C,CACHA,EAAc,IAAI,IAClBF,GAAkB,IAAI3pC,EAAM6pC,CAAW,EACvC,QACMf,EAAQ9oC,EAAK,iBACb,8CACD,EACD5iC,EAAI,EACNA,EAAI0rE,EAAM,OACV1rE,IACA,CACA,IAAIq7B,EAAOqwC,EAAM1rE,CAAC,GAELq7B,EAAK,WAAhB,QACcA,EAAK,aAAa,OAAO,IAAvC,aAEAoxC,EAAY,IAAIpxC,EAAK,QAAQ,WAAYA,CAAI,EAAIn2B,EAAOm2B,EAClE,CACMn2B,GAAQunE,EAAY,IAAI,KAAMvnE,CAAI,CACxC,CACIwmE,EAAQjZ,EAAS,SACjBp3B,EAAOqwC,EAAM,aAAa,iBAAiB,EAC3C1rE,EAAIysE,EAAY,IAAIpxC,CAAI,GAAKn2B,EAC7BlF,IAAMkF,GAAQunE,EAAY,IAAI,KAAMf,CAAK,EACzCe,EAAY,IAAIpxC,EAAMqwC,CAAK,EAC3B,KAAK,QACLxmE,EAAOgnE,GAAY,KAAK,IAAI,EAC5BR,EAAM,iBAAiB,OAAQxmE,CAAI,EACnCwmE,EAAM,iBAAiB,QAASxmE,CAAI,EACpClF,EACIA,EAAE,WAAW,aAAa0rE,EAAO1rE,EAAE,WAAW,GAC5C4iC,EAAaA,EAAK,WAAX,EAAsBA,EAAK,KAAOA,EAC3CA,EAAK,aAAa8oC,EAAO9oC,EAAK,UAAU,GAC5C6vB,EAAS,MAAM,SAAW,CAC9B,CACA,CACA,IAAIxxB,GAAwB,CAC1B,SAAUne,EACV,SAAU,KACV,SAAU,KACV,cAAemd,GACf,eAAgBA,GAChB,aAAc,CACf,EACD,SAASysC,GACPp/C,EACAsM,EACAhb,EACAqqC,EACA2E,EACAI,EACA0T,EACAiL,EACA,CACA,KAAK,IAAM,EACX,KAAK,cAAgBr/C,EACrB,KAAK,UAAY,KAAK,QAAU,KAAK,gBAAkB,KACvD,KAAK,cAAgB,GACrB,KAAK,aACH,KAAK,KACL,KAAK,eACL,KAAK,QACL,KAAK,oBACH,KACJ,KAAK,iBAAmB,EACxB,KAAK,gBAAkBoW,GAAc,EAAE,EACvC,KAAK,eACH,KAAK,oBACL,KAAK,2BACL,KAAK,aACL,KAAK,UACL,KAAK,YACL,KAAK,eACL,KAAK,aACH,EACJ,KAAK,cAAgBA,GAAc,CAAC,EACpC,KAAK,cAAgBA,GAAc,IAAI,EACvC,KAAK,iBAAmBulB,EACxB,KAAK,gBAAkB2E,EACvB,KAAK,cAAgBI,EACrB,KAAK,mBAAqB0T,EAC1B,KAAK,YAAc,KACnB,KAAK,iBAAmB,EACxB,KAAK,UAAYiL,EACjB,KAAK,sBAAwB,IAAI,GACnC,CACA,SAASC,GACPt/C,EACAsM,EACAhb,EACAiuD,EACAC,EACAC,EACA9jB,EACA2E,EACAI,EACA0T,EACAsL,EACAL,EACA,CACA,OAAAr/C,EAAgB,IAAIo/C,GAClBp/C,EACAsM,EACAhb,EACAqqC,EACA2E,EACAI,EACA0T,EACAiL,CACD,EACD/yC,EAAM,EACCmzC,IAAP,KAAwBnzC,GAAO,IAC/BmzC,EAAer2B,GAAqB,EAAG,KAAM,KAAM9c,CAAG,EACtDtM,EAAc,QAAUy/C,EACxBA,EAAa,UAAYz/C,EACzBsM,EAAMgiB,GAAa,EACnBhiB,EAAI,WACJtM,EAAc,YAAcsM,EAC5BA,EAAI,WACJmzC,EAAa,cAAgB,CAC3B,QAASF,EACT,aAAcjuD,EACd,MAAOgb,CACR,EACDskB,GAAsB6uB,CAAY,EAC3Bz/C,CACT,CACA,SAAS2/C,GAAqBC,EAAiB,CAC7C,OAAKA,GACLA,EAAkB52B,GACX42B,GAFsB52B,EAG/B,CACA,SAAS62B,GACPpL,EACAx+B,EACA32B,EACA+gB,EACAu/C,EACAtpD,EACA,CACAspD,EAAkBD,GAAqBC,CAAe,EAC7Cv/C,EAAU,UAAnB,KACKA,EAAU,QAAUu/C,EACpBv/C,EAAU,eAAiBu/C,EAChCv/C,EAAYywB,GAAa7a,CAAI,EAC7B5V,EAAU,QAAU,CAAE,QAAS/gB,CAAS,EACxCgX,EAAsBA,IAAX,OAAsB,KAAOA,EAC/BA,IAAT,OAAsB+J,EAAU,SAAW/J,GAC3ChX,EAAUyxC,GAAc0jB,EAAWp0C,EAAW4V,CAAI,EACzC32B,IAAT,OACG23C,GAAsB33C,EAASm1D,EAAWx+B,CAAI,EAC/Cib,GAAoB5xC,EAASm1D,EAAWx+B,CAAI,EAChD,CACA,SAAS6pC,GAAkBxuC,EAAOyjC,EAAW,CAE3C,GADAzjC,EAAQA,EAAM,cACDA,IAAT,MAA2BA,EAAM,aAAf,KAA2B,CAC/C,IAAI73B,EAAI63B,EAAM,UACdA,EAAM,UAAkB73B,IAAN,GAAWA,EAAIs7D,EAAYt7D,EAAIs7D,CACrD,CACA,CACA,SAASgL,GAA2BzuC,EAAOyjC,EAAW,CACpD+K,GAAkBxuC,EAAOyjC,CAAS,GACjCzjC,EAAQA,EAAM,YAAcwuC,GAAkBxuC,EAAOyjC,CAAS,CACjE,CACA,SAASiL,GAA2B1uC,EAAO,CACzC,GAAWA,EAAM,MAAb,GAAkB,CACpB,IAAIgE,EAAOqT,GAA+BrX,EAAO,QAAQ,EAChDgE,IAAT,MAAiB2hB,GAAsB3hB,EAAMhE,EAAO,QAAQ,EAC5DyuC,GAA2BzuC,EAAO,QAAQ,CAC9C,CACA,CACA,IAAIu3B,GAAW,GACf,SAASsP,GACPr0B,EACAqzB,EACA92C,EACA2e,EACA,CACA,IAAI3lB,EAAiB1C,EAAqB,EAC1CA,EAAqB,EAAI,KACzB,IAAIuhB,EAAmBxF,EAAwB,EAC/C,GAAI,CACDA,EAAwB,EAAI,EAC3B2lC,GAAcv0B,EAAcqzB,EAAkB92C,EAAW2e,CAAW,CAC1E,QAAY,CACPtM,EAAwB,EAAIwF,EAC1BvhB,EAAqB,EAAI0C,CAChC,CACA,CACA,SAAS++C,GACPt0B,EACAqzB,EACA92C,EACA2e,EACA,CACA,IAAI3lB,EAAiB1C,EAAqB,EAC1CA,EAAqB,EAAI,KACzB,IAAIuhB,EAAmBxF,EAAwB,EAC/C,GAAI,CACDA,EAAwB,EAAI,EAC3B2lC,GAAcv0B,EAAcqzB,EAAkB92C,EAAW2e,CAAW,CAC1E,QAAY,CACPtM,EAAwB,EAAIwF,EAC1BvhB,EAAqB,EAAI0C,CAChC,CACA,CACA,SAASg/C,GACPv0B,EACAqzB,EACAc,EACAj5B,EACA,CACA,GAAI6pB,GAAU,CACZ,IAAIoX,EAAYC,GAA0BlhC,CAAW,EACrD,GAAaihC,IAAT,KACF3H,GACEx0B,EACAqzB,EACAn4B,EACAmhC,GACAlI,CACD,EACCmI,GAAuBt8B,EAAc9E,CAAW,UAElDqhC,GACEJ,EACAn8B,EACAqzB,EACAc,EACAj5B,CACR,EAEMA,EAAY,gBAAiB,UAE5BohC,GAAuBt8B,EAAc9E,CAAW,EACjDm4B,EAAmB,GACjB,GAAKmJ,GAAyB,QAAQx8B,CAAY,EACpD,CACA,KAAgBm8B,IAAT,MAAsB,CAC3B,IAAI3uC,EAAQ4H,GAAoB+mC,CAAS,EACzC,GAAa3uC,IAAT,KACF,OAAQA,EAAM,IAAG,CACf,IAAK,GAEH,GADAA,EAAQA,EAAM,UACVA,EAAM,QAAQ,cAAc,aAAc,CAC5C,IAAI6D,EAAQD,GAAwB5D,EAAM,YAAY,EACtD,GAAU6D,IAAN,EAAa,CACf,IAAIG,EAAOhE,EAEX,IADAgE,EAAK,cAAgB,EAChBA,EAAK,gBAAkB,EAAGH,GAAS,CACtC,IAAIc,EAAO,GAAM,GAAKpB,GAAMM,CAAK,EACjCG,EAAK,cAAc,CAAC,GAAKW,EACzBd,GAAS,CAACc,CAC9B,CACkB65B,GAAsBx+B,CAAK,GACpB2f,GAAmB,KAA1B,IACIoV,GAAqCryB,GAAG,EAAK,IAC/Cs9B,GAA8B,CAAK,EACvD,CACA,CACc,MACF,IAAK,IACFh8B,EAAOqT,GAA+BrX,EAAO,CAAC,EACpCgE,IAAT,MAAiB2hB,GAAsB3hB,EAAMhE,EAAO,CAAC,EACrDmO,GAAiB,EACjBsgC,GAA2BzuC,EAAO,CAAC,CACnD,CAUQ,GATAA,EAAQ4uC,GAA0BlhC,CAAW,EACpC1N,IAAT,MACEgnC,GACEx0B,EACAqzB,EACAn4B,EACAmhC,GACAlI,CACD,EACC3mC,IAAU2uC,EAAW,MACzBA,EAAY3uC,CACpB,CACe2uC,IAAT,MAAsBjhC,EAAY,gBAAiB,CACpD,MACCs5B,GACEx0B,EACAqzB,EACAn4B,EACA,KACAi5B,CACD,CACP,CACA,CACA,SAASiI,GAA0BlhC,EAAa,CAC9C,OAAAA,EAAcD,GAAeC,CAAW,EACjCuhC,GAA2BvhC,CAAW,CAC/C,CACA,IAAImhC,GAAoB,KACxB,SAASI,GAA2BznC,EAAY,CAG9C,GAFAqnC,GAAoB,KACpBrnC,EAAaD,GAA2BC,CAAU,EACrCA,IAAT,KAAqB,CACvB,IAAIvH,EAAiBF,EAAuByH,CAAU,EACtD,GAAavH,IAAT,KAAyBuH,EAAa,SACrC,CACH,IAAIxM,EAAMiF,EAAe,IACzB,GAAWjF,IAAP,GAAY,CAEd,GADAwM,EAAatH,EAA6BD,CAAc,EAC3CuH,IAAT,KAAqB,OAAOA,EAChCA,EAAa,IACrB,SAAuBxM,IAAN,EAAW,CACpB,GAAIiF,EAAe,UAAU,QAAQ,cAAc,aACjD,OAAaA,EAAe,MAArB,EACHA,EAAe,UAAU,cACzB,KACNuH,EAAa,IACd,MAAMvH,IAAmBuH,IAAeA,EAAa,KAC5D,CACA,CACE,OAAAqnC,GAAoBrnC,EACb,IACT,CACA,SAASf,GAAiB+L,EAAc,CACtC,OAAQA,EAAY,CAClB,IAAK,eACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,cACL,IAAK,OACL,IAAK,MACL,IAAK,WACL,IAAK,WACL,IAAK,UACL,IAAK,YACL,IAAK,OACL,IAAK,UACL,IAAK,WACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,WACL,IAAK,QACL,IAAK,YACL,IAAK,UACL,IAAK,QACL,IAAK,QACL,IAAK,OACL,IAAK,gBACL,IAAK,cACL,IAAK,YACL,IAAK,aACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,cACL,IAAK,WACL,IAAK,aACL,IAAK,eACL,IAAK,SACL,IAAK,kBACL,IAAK,YACL,IAAK,mBACL,IAAK,iBACL,IAAK,oBACL,IAAK,aACL,IAAK,YACL,IAAK,cACL,IAAK,OACL,IAAK,mBACL,IAAK,QACL,IAAK,aACL,IAAK,WACL,IAAK,SACL,IAAK,cACH,MAAO,GACT,IAAK,OACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,cACL,IAAK,SACL,IAAK,YACL,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,eACH,MAAO,GACT,IAAK,UACH,OAAQ7P,GAAyB,GAC/B,KAAKC,GACH,MAAO,GACT,KAAKC,GACH,MAAO,GACT,KAAKC,GACL,KAAKC,GACH,MAAO,IACT,KAAKC,GACH,MAAO,WACT,QACE,MAAO,GACjB,CACI,QACE,MAAO,GACb,CACA,CACA,IAAIksC,GAA4B,GAC9BC,GAAc,KACdC,GAAa,KACbC,GAAc,KACdC,GAAiB,IAAI,IACrBC,GAAwB,IAAI,IAC5BC,GAAiC,CAAE,EACnCR,GACE,sPAAsP,MACpP,GACD,EACL,SAASF,GAAuBt8B,EAAc9E,EAAa,CACzD,OAAQ8E,EAAY,CAClB,IAAK,UACL,IAAK,WACH28B,GAAc,KACd,MACF,IAAK,YACL,IAAK,YACHC,GAAa,KACb,MACF,IAAK,YACL,IAAK,WACHC,GAAc,KACd,MACF,IAAK,cACL,IAAK,aACHC,GAAe,OAAO5hC,EAAY,SAAS,EAC3C,MACF,IAAK,oBACL,IAAK,qBACH6hC,GAAsB,OAAO7hC,EAAY,SAAS,CACxD,CACA,CACA,SAAS+hC,GACPC,EACAf,EACAn8B,EACAqzB,EACAc,EACAj5B,EACA,CACA,OACWgiC,IAAT,MACA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","names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","jsxRuntimeModule","require$$0","splitSetCookieString","cookiesString","c","cookiesStrings","pos","start","ch","lastComma","nextStart","cookiesSeparatorFound","skipWhitespace","notSpecialChar","toHeadersInstance","init","mergeHeaders","headers","acc","header","headersInstance","value","cookie","__storeToDerived","__derivedToStore","__depsThatHaveWrittenThisTick","__isFlushing","__batchDepth","__pendingUpdates","__initialBatchValues","__flush_internals","relatedVals","sorted","b","Derived","derived","stores","store","relatedLinkedDerivedVals","__notifyListeners","listener","__notifyDerivedListeners","__flush","store2","prevState","derivedVals","batch","fn","pendingUpdateToFlush","Store","initialState","options","_a","_b","unsub","updater","_c","prevDepVals","currDepVals","dep","prevVal","shouldRecompute","lastSeenDepValues","i","cleanup","deps","relatedStores","stateIndexKey","popStateEvent","beforeUnloadEvent","createHistory","opts","location","subscribers","notify","action","subscriber","handleIndexChange","tryNavigation","task","navigateOpts","actionInfo","blockers","isPushOrReplace","blocker","nextLocation","parseHref","cb","path","state","currentIndex","assignKeyAndIndex","index","str","_a2","blockers2","createRandomKey","createBrowserHistory","win","originalPushState","originalReplaceState","_getBlockers","_setBlockers","newBlockers","createHref","parseLocation","currentLocation","rollbackLocation","nextPopIsGo","ignoreNextPop","skipBlockerNextPop","ignoreNextBeforeUnload","getLocation","next","scheduled","flush","history","queueHistoryAction","destHref","href","onPushPop","onPushPopEvent","delta","isForward","isBack","isGo","onBeforeUnload","e","shouldBlock","shouldHaveBeforeUnload","ignoreBlocker","n","args","res","createMemoryHistory","entries","states","_entry","index2","hashIndex","searchIndex","prefix","invariant","condition","message","last","arr","isFunction","d","functionalUpdate","previous","pick","parent","keys","obj","replaceEqualDeep","prev","_next","array","isPlainArray","isPlainObject","prevItems","prevSize","nextItems","nextSize","copy","equalItems","o","hasObjectPrototype","ctor","prot","getObjectKeys","ignoreUndefined","deepEqual","a","aKeys","bKeys","item","createControlledPromise","onResolve","resolveLoadPromise","rejectLoadPromise","controlledPromise","resolve","reject","hasUriEncodedChars","inputString","joinPaths","paths","cleanPath","val","trimPathLeft","trimPathRight","trimPath","removeTrailingSlash","basepath","exactPathTest","pathName1","pathName2","resolvePath","base","to","trailingSlash","caseSensitive","removeBasepath","baseSegments","parsePathname","toSegments","toSegment","joined","pathname","segments","split","part","segment","interpolatePath","params","leaveWildcards","leaveParams","decodeCharMap","interpolatedPathSegments","encodeParam","isValueString","encodePathParam","isMissingParams","usedParams","interpolatedPath","encoded","encodedChar","char","matchPathname","currentPathname","matchLocation","pathParams","matchByPath","normalizedBasepath","normalizedPathname","from","routeSegments","baseSegment","routeSegment","isLastBaseSegment","isLastRouteSegment","_splat","notFound","isNotFound","storageKey","sessionsStorage","throttle","wait","timeout","scrollRestorationCache","defaultGetScrollRestorationKey","getCssSelector","el","ignoreScroll","restoreScroll","storageKey2","behavior","shouldScrollRestoration","scrollToTopSelectors","byKey","error","resolvedKey","elementEntries","elementSelector","entry","element","hash","hashScrollIntoViewOptions","selector","setupScrollRestoration","router","force","getKey","onScroll","event","attrId","restoreKey","keyEntry","elementEntry","cacheKey","handleHashScroll","encode","pfx","normalizedObject","v","toValue","mix","decode","searchParamsPart","previousValue","defaultParseSearch","parseSearchWith","defaultStringifySearch","stringifySearchWith","parser","searchStr","query","stringify","stringifyValue","search","rootRouteId","redirect","isRedirect","isResolvedRedirect","defaultSerializeError","err","getLocationChangeInfo","routerState","fromLocation","toLocation","pathChanged","hrefChanged","hashChanged","RouterCore","newOptions","previousOptions","getInitialRouterState","notFoundRoute","recurseRoutes","childRoutes","childRoute","existingRoute","trimmedFullPath","children","scoredRoutes","trimmed","parsed","scores","minLength","eventType","routerEvent","previousLocation","locationToParse","parse","parsedSearch","__tempLocation","__tempKey","parsedTempLocation","pathnameOrNext","locationSearchOrOpts","dest","routeParams","trimmedPath","getMatchedParams","route","foundRoute","matchedParams","routeCursor","matchedRoutes","id","match","build","matchedRoutesResult","_d","_e","_f","_g","fromMatches","fromMatch","fromPath","fromSearch","stayingMatches","resolvePathTo","fromRouteByFromPathRouteId","prevParams","nextParams","validatedSearch","validateSearch","search2","allMiddlewares","middlewares","legacyMiddleware","search3","nextSearch","next2","result","validate","final","applyNext","currentSearch","middleware","newSearch","hashStr","nextState","buildWithMatches","maskedDest","maskedNext","foundMask","_from","maskProps","nextMatches","maskedMatches","maskedFinal","viewTransition","isSameState","ignoredProps","prop","isEqual","isSameUrl","previousCommitPromise","maskedLocation","hashScrollIntoView","nextHistory","replace","resetScroll","rest","reloadDocument","loadPromise","prevLocation","pendingMatches","s","exitingMatches","enteringMatches","previousMatches","newMatches","matches","hook","shouldViewTransition","startViewTransitionParams","resolvedViewTransitionTypes","updated","isPending","isMatched","isCached","matchesKey","matchId","allPreload","onReady","updateMatch","sync","firstBadMatchIndex","rendered","triggerOnReady","resolvePreload","handleRedirectAndNotFound","resolveAll","rejectAll","handleSerialError","routerCode","_b2","routeId","errorHandlerErr","_a3","_b3","existingMatch","parentMatchId","pendingMs","shouldPending","routeNeedsPreload","executeBeforeLoad","prevLoadPromise","abortController","pendingTimeout","paramsError","searchError","getParentMatchContext","context","cause","preload","beforeLoadFnContext","beforeLoadContext","validResolvedMatches","matchPromises","prevLoaderPromise","loaderShouldRunAsync","loaderIsRunningAsync","parentMatchPromise","getLoaderContext","loaderDeps","preload2","age","staleAge","shouldReloadOption","shouldReload","runLoader","_c2","_d2","_h","_i","_j","_k","potentialPendingMinPromise","latestMatch","loaderData","assetContext","headFnContent","meta","links","headScripts","scripts","onErrorError","status","invalid","loaderPromise","invalidate","filter","m","gcTime","lazyRoute","_id","options2","componentTypes","component","activeMatchIds","loadedMatchIds","baseLocation","matchesByRouteId","matchForRoute","isGlobalNotFound","globalNotFoundRouteId","parseErrors","parsedParamsError","parseParams","parsedParams","PathParamError","getParentContext","parentMatch","preMatchSearch","strictMatchSearch","parentSearch","parentStrictSearch","strictSearch","searchParamError","SearchParamError","loaderDepsHash","previousMatch","parentContext","contextFnContext","opts2","validateSearch2","input","componentType","TSR_DEFERRED_PROMISE","defer","_promise","promise","data","preloadWarning","BaseRoute","isRoot","customId","fullPath","lazyFn","BaseRootRoute","startSerializer","ogVal","serializer","serializers","t","createSerializer","check","fromValue","formData","hydrate","manifest","dehydratedData","streamedValue","routeChunkPromise","dehydratedMatch","ex","deepMutableSetByPath","globalMiddleware","createServerFn","__opts","resolvedOptions","validator","extractedFn","serverFn","resolvedMiddleware","serverFnBaseToMiddleware","executeMiddleware","opts_","signal","extractFormDataContext","ctx","run","response","serverFnStaticCache","env","flattenedMiddlewares","flattenMiddlewares","nextMiddleware","execValidator","middlewareFn","applyMiddleware","newCtx","setServerFnStaticCache","cache","previousCache","sha1Hash","msgBuffer","hashBuffer","getStaticCacheUrl","jsonToFilenameSafeString","json","curr","staticClientCache","url","publicUrl","define_process_env_default","fs","__vitePreload","__viteBrowserExternal","filePath","cachedResult","readError","r","serializedContext","seen","flattened","recurse","nextFn","userCtx","sendContext","payload","REACT_PORTAL_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","MAYBE_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","ReactNoopUpdateQueue","assign","emptyObject","Component","props","partialState","callback","ComponentDummy","PureComponent","pureComponentPrototype","isArrayImpl","ReactSharedInternals","hasOwnProperty","ReactElement","self","source","owner","cloneAndReplaceKey","oldElement","newKey","isValidElement","object","escape","escaperLookup","userProvidedKeyEscapeRegex","getElementKey","noop$1","resolveThenable","thenable","fulfilledValue","mapIntoArray","escapedPrefix","nameSoFar","invokeCallback","nextNamePrefix","mapChildren","func","count","child","lazyInitializer","moduleObject","reportGlobalError","noop","react_production","forEachFunc","forEachContext","size","childArray","defaultValue","childrenLength","render","compare","scope","prevTransition","currentTransition","returnValue","onStartTransitionFinish","usable","permalink","Context","initialValue","create","createDeps","update","dispatcher","ref","passthrough","reducer","initialArg","subscribe","getSnapshot","getServerSnapshot","reactModule","useAwaited","Await","inner","jsx","AwaitInner","React.Suspense","CatchBoundary","errorComponent","ErrorComponent","CatchBoundaryImpl","reset","React.createElement","React.Component","prevProps","errorInfo","show","setShow","React.useState","jsxs","React","is","x","y","objectIs","useState","useEffect","useLayoutEffect","useDebugValue","useSyncExternalStore$2","_useState","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","nextValue","useSyncExternalStore$1","shim","useSyncExternalStoreShim_production","shimModule","require$$1","useSyncExternalStore","useRef","useMemo","withSelector_production","instRef","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","useStore","useSyncExternalStoreWithSelector","shallow","objA","objB","k","keysA","routerContext","React.createContext","getRouterContext","useRouter","React.useContext","useRouterState","contextRouter","previousResult","newSlice","matchContext","dummyMatchContext","useMatch","nearestMatchId","useLoaderData","useLoaderDeps","select","useParams","useSearch","useNavigate","_defaultOpts","navigate","React.useCallback","formatProdErrorMessage","code","Internals","createPortal$1","containerInfo","implementation","getCrossOriginStringAs","as","reactDom_production","container","previousTransition","previousUpdatePriority","crossOrigin","integrity","fetchPriority","form","checkDCE","reactDomModule","React.useLayoutEffect","React.useEffect","usePrevious","React.useRef","current","useIntersectionObserver","intersectionObserverOptions","isIntersectionObserverAvailable","observerRef","useForwardedRef","innerRef","React.useImperativeHandle","Transitioner","mountLoadForRouter","isLoading","isLoading2","isTransitioning","setIsTransitioning","hasPendingMatches","previousIsLoading","isAnyPending","previousIsAnyPending","isPagePending","previousIsPagePending","React.startTransition","CatchNotFound","resetKey","DefaultGlobalNotFound","SafeFragment","Fragment","renderRouteNotFound","forOwn","extend","destination","forEach","length","fourHexEscape","hex","hexadecimal","lowercase","toString","isArray","isBuffer","isObject","isString","isNumber","isBigInt","isMap","isSet","singleEscapes","regexSingleEscape","regexDigit","regexWhitespace","escapeEverythingRegex","escapeNonAsciiRegex","jsesc","argument","increaseIndentation","oldIndent","indent","defaults","quote","compact","lowercaseHex","inline1","inline2","newLine","isEmpty","useBinNumbers","useOctNumbers","useDecNumbers","useHexNumbers","regex","pair","lone","quoteChar","string","first","second","codePoint","jsesc_1","ScriptOnce","log","ScrollRestoration","userKey","Match","React.memo","PendingComponent","pendingElement","routeErrorComponent","routeOnCatch","routeNotFoundComponent","ResolvedSuspenseBoundary","ResolvedCatchBoundary","ResolvedNotFoundBoundary","parentRouteId","MatchInner","OnRendered","prevLocationRef","matchIndex","match2","routeId2","remountFn","remountDeps","out","React.useMemo","Comp","Outlet","RouteErrorComponent","pendingMinMs","minPendingPromise","parentGlobalNotFound","childMatchId","nextMatch","Matches","ResolvedSuspense","MatchesInner","useMatches","useLinkProps","forwardedRef","hasRenderFetched","activeProps","inactiveProps","activeOptions","userPreload","userPreloadDelay","startTransition","target","disabled","style","className","onClick","onFocus","onMouseEnter","onMouseLeave","onTouchStart","_params","_search","_hash","_state","_mask","_reloadDocument","propsSafeToSpread","_options","preloadDelay","isActive","currentPathSplit","doPreload","preloadViewportIoCallback","handleClick","isCtrlEvent","flushSync","handleFocus","_","handleTouchStart","handleEnter","eventTarget","handleLeave","composeHandlers","handlers","handler","resolvedActiveProps","resolvedInactiveProps","resolvedClassName","resolvedStyle","Link","React.forwardRef","_asChild","_type","linkProps","React__default","createRoute","Route","RootRoute","createRootRoute","createFileRoute","FileRoute","_opts","createRouter","Router","RouterContextProvider","provider","RouterProvider","Asset","tag","attrs","useTags","routeMeta","resultMeta","metaByAttribute","title","metas","attribute","link","preloadMeta","preloadMeta2","script","uniqBy","HeadContent","createElement","Scripts","assetScripts","assetScripts2","asset","allScripts","hydrationPromise","StartClient","push","heap","node","parentIndex","peek","pop","halfLength","leftIndex","left","rightIndex","right","diff","exports","localPerformance","localDate","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","needsPaint","localSetTimeout","localClearTimeout","localSetImmediate","advanceTimers","currentTime","timer","handleTimeout","isMessageLoopRunning","schedulePerformWorkUntilDeadline","firstTimer","requestHostTimeout","taskTimeoutID","frameInterval","startTime","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","continuationCallback","channel","port","ms","fps","eventHandler","priorityLevel","parentPriorityLevel","schedulerModule","Scheduler","ReactDOM","require$$2","isValidContainer","getNearestMountedFiber","fiber","nearestMounted","getSuspenseInstanceFromFiber","suspenseState","assertIsMounted","findCurrentFiberUsingSlowPath","alternate","parentA","parentB","didFindChild","child$0","findCurrentHostFiberImpl","REACT_LEGACY_ELEMENT_TYPE","REACT_PROVIDER_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_ACTIVITY_TYPE","REACT_MEMO_CACHE_SENTINEL","REACT_CLIENT_REFERENCE","getComponentNameFromType","innerType","ReactDOMSharedInternals","sharedNotPendingObject","valueStack","createCursor","cursor","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","hostTransitionProviderCursor","pushHostContainer","nextRootInstance","getOwnHostContext","getChildHostContextProd","popHostContainer","pushHostContext","JSCompiler_inline_result","popHostContext","HostTransitionContext","scheduleCallback$3","cancelCallback$1","shouldYield","requestPaint","now","getCurrentPriorityLevel","ImmediatePriority","UserBlockingPriority","NormalPriority$1","LowPriority","IdlePriority","log$1","unstable_setDisableYieldValue","rendererID","injectedHook","setIsStrictModeForDevtools","newIsStrictMode","clz32","clz32Fallback","LN2","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","rootHasPendingCommit","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","claimNextTransitionLane","claimNextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markRootFinished","finishedLanes","remainingLanes","spawnedLane","updatedLanes","suspendedRetryLanes","previouslyPendingLanes","entanglements","expirationTimes","hiddenUpdates","index$5","hiddenUpdatesForLane","markSpawnedDeferredLane","entangledLanes","spawnedLaneIndex","markRootEntangled","rootEntangledLanes","index$6","getBumpedLaneForHydrationByLane","lanesToEventPriority","resolveUpdatePriority","updatePriority","getEventPriority","runWithPriority","priority","previousPriority","randomKey","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","internalRootNodeResourcesKey","internalHoistableMarker","detachDeletedInstance","getClosestInstanceFromNode","targetNode","targetInst","parentNode","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","getResourcesFromRoot","resources","markNodeAsHoistable","allNativeEvents","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","VALID_ATTRIBUTE_NAME_REGEX","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","attributeName","setValueForAttribute","name","prefix$8","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","suffix","describeBuiltInComponentFrame","reentry","describeNativeComponentFrame","construct","previousPrepareStackTrace","RunInRootFrame","Fake","control","x$9","x$10","sample","namePropDescriptor","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","controlLines","frame","describeFiber","getStackByFiberInDevAndProd","workInProgress","info","getToStringValue","isCheckable","elem","trackValueOnNode","valueField","descriptor","currentValue","get","set","track","updateValueIfChanged","tracker","lastValue","getActiveElement","doc","escapeSelectorAttributeValueInsideDoubleQuotesRegex","escapeSelectorAttributeValueInsideDoubleQuotes","updateInput","lastDefaultValue","checked","defaultChecked","setDefaultValue","initInput","isHydrating","updateOptions","multiple","propValue","setDefaultSelected","updateTextarea","initTextarea","setTextContent","text","firstChild","unitlessNumbers","setValueForStyle","styleName","isCustomProperty","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","tagName","aliases","isJavaScriptProtocol","sanitizeURL","currentReplayingEvent","getEventTarget","nativeEvent","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","otherNode","otherProps","isInsideEventHandler","batchedUpdates$1","flushSyncWork$1","getListener","stateNode","canUseDOM","passiveBrowserEventsSupported","startText","fallbackText","getData","startValue","startLength","end","endValue","endLength","minEnd","getEventCharCode","keyCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","EventInterface","SyntheticEvent","UIEventInterface","SyntheticUIEvent","lastMovementX","lastMovementY","lastMouseEvent","MouseEventInterface","getEventModifierState","SyntheticMouseEvent","DragEventInterface","SyntheticDragEvent","FocusEventInterface","SyntheticFocusEvent","AnimationEventInterface","SyntheticAnimationEvent","ClipboardEventInterface","SyntheticClipboardEvent","CompositionEventInterface","SyntheticCompositionEvent","normalizeKey","translateToKey","modifierKeyToProp","modifierStateGetter","keyArg","KeyboardEventInterface","SyntheticKeyboardEvent","PointerEventInterface","SyntheticPointerEvent","TouchEventInterface","SyntheticTouchEvent","TransitionEventInterface","SyntheticTransitionEvent","WheelEventInterface","SyntheticWheelEvent","ToggleEventInterface","SyntheticToggleEvent","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","domEventName","getDataFromCustomEvent","isComposing","getNativeBeforeInputChars","getFallbackBeforeInputChars","supportedInputTypes","isTextInputElement","nodeName","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","activeElement$1","activeElementInst$1","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","JSCompiler_inline_result$jscomp$282","isSupported$jscomp$inline_417","element$jscomp$inline_418","stopWatchingForValueChange","handlePropertyChange","handleEventsForInputEventPolyfill","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","shallowEqual","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","containsNode","outerNode","innerNode","getActiveElementDeep","hasSelectionCapabilities","skipSelectionChangeEvent","activeElement","activeElementInst","lastSelection","mouseDown","constructSelectEvent","makePrefixMap","styleProp","eventName","prefixes","vendorPrefixes","prefixedEventNames","getVendorPrefixedEventName","prefixMap","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","CapturedStacks","createCapturedValueAtFiber","existing","concurrentQueues","concurrentQueuesIndex","concurrentlyUpdatedLanes","finishQueueingConcurrentUpdates","endIndex","queue","pending","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","nestedUpdateCount","rootWithNestedUpdates","emptyContextObject","FiberNode","pendingProps","mode","createFiberImplClass","shouldConstruct","createWorkInProgress","resetWorkInProgress","createFiberFromTypeAndProps","fiberTag","isHostHoistableType","createFiberFromFragment","elements","createFiberFromText","content","createFiberFromPortal","portal","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","hydrationParentFiber","nextHydratableInstance","hydrationErrors","rootOrSingletonContext","HydrationMismatchException","throwOnHydrationMismatch","queueHydrationError","prepareToHydrateHostInstance","instance","listenToNonDelegatedEvent","mediaEventTypes","checkForUnmatchedText","popToNextHostParent","popHydrationState","JSCompiler_temp","shouldSetTextContent","getNextHydratable","isSingletonScope","previousHydratableOnEnteringScopedSingleton","resetHydrationState","upgradeHydrationErrorsToRecoverable","queuedErrors","workInProgressRootRecoverableErrors","valueCursor","currentlyRenderingFiber$1","lastContextDependency","pushProvider","providerFiber","popProvider","scheduleContextWorkOnParentPath","propagationRoot","propagateContextChanges","contexts","forcePropagateEntireTree","list","nextFiber","dependency","propagateParentContextChanges","isInsidePropagationBailout","currentParent","checkIfContextChanged","currentDependencies","prepareToReadContext","readContext","readContextForConsumer","readContextDuringReconciliation","consumer","AbortControllerLocal","listeners","scheduleCallback$2","NormalPriority","CacheContext","createCache","releaseCache","currentEntangledListeners","currentEntangledPendingCount","currentEntangledLane","currentEntangledActionThenable","entangleAsyncAction","transition","entangledListeners","requestTransitionLane","pingEngtangledActionScope","chainThenableValue","thenableWithOverride","prevOnStartTransitionFinish","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","workInProgressRoot","pushTransition","offscreenWorkInProgress","prevCachePool","getSuspendedCache","cacheFromPool","SuspenseException","SuspenseyCommitException","SuspenseActionException","noopSuspenseyCommitThenable","isThenableResolved","noop$3","trackUsedThenable","thenableState","checkIfUseWrappedInAsyncCatch","fulfilledThenable","rejectedThenable","suspendedThenable","getSuspendedThenable","rejectedReason","hasForceUpdate","initializeUpdateQueue","cloneUpdateQueue","createUpdate","enqueueUpdate","updateQueue","executionContext","entangleTransitions","queueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","didReadFromEntangledAsyncAction","suspendIfUpdateReadFromEntangledAsyncAction","entangledActionThenable","processUpdateQueue","workInProgress$jscomp$0","instance$jscomp$0","firstBaseUpdate","lastBaseUpdate","pendingQueue","lastPendingUpdate","firstPendingUpdate","newState","isHiddenUpdate","workInProgressRootRenderLanes","workInProgressRootSkippedLanes","callCallback","commitCallbacks","callbacks","currentTreeHiddenStackCursor","prevEntangledRenderLanesCursor","pushHiddenContext","entangledRenderLanes","reuseHiddenContextOnStack","popHiddenContext","currentlyRenderingFiber","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","shouldDoubleInvokeUserFnsInHooksDEV","localIdCounter","thenableIndexCounter$1","thenableState$1","globalClientIdCounter","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","HooksDispatcherOnMount","HooksDispatcherOnUpdate","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","didReceiveUpdate","numberOfReRenders","HooksDispatcherOnRerender","TransitionAwareHostComponent","maybeThenable","useThenable","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","createFunctionComponentUpdateQueue","use","useMemoCache","memoCache","basicStateReducer","updateReducer","updateReducerImpl","baseQueue","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$32","revertLane","rerenderReducer","dispatch","lastRenderPhaseUpdate","updateSyncExternalStore","isHydrating$jscomp$0","snapshotChanged","subscribeToStore","updateEffectImpl","pushSimpleEffect","createEffectInstance","updateStoreInstance","pushStoreConsistencyCheck","renderedSnapshot","forceStoreRerender","scheduleUpdateOnFiber","mountStateImpl","initialStateInitializer","updateOptimisticImpl","dispatchActionState","actionQueue","setPendingState","setState","isRenderPhaseUpdate","actionNode","runActionStateAction","handleActionReturnValue","onActionError","error$38","onActionSuccess","notifyActionListeners","actionStateReducer","oldState","mountActionState","initialStateProp","ssrFormState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","stateHook","updateActionStateImpl","currentStateHook","actionStateActionEffect","rerenderActionState","updateRef","mountEffectImpl","fiberFlags","hookFlags","mountEffect","updateEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","refCleanup","updateImperativeHandle","mountDebugValue","updateCallback","updateMemo","nextCreate","mountDeferredValueImpl","requestDeferredLane","updateDeferredValueImpl","prevValue","pendingState","finishedState","thenableForFinishedState","dispatchSetStateInternal","requestUpdateLane","noop$2","startHostTransition","formFiber","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","resetStateQueue","useHostTransitionStatus","updateId","updateRefresh","refreshCache","root$41","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","eagerState","throwIfDuringRender","identifierPrefix","idWithLeadingBit","booleanOrThenable","thenableIndexCounter","unwrapThenable","coerceRef","throwOnInvalidObjectType","returnFiber","newChild","resolveLazy","lazyType","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","textContent","updateElement","elementType","updateFragment","updatePortal","fragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","reconcileChildrenIterator","step","reconcileChildFibersImpl","firstChildFiber","reconcileChildFibers","mountChildFibers","suspenseHandlerStackCursor","shellBoundary","pushPrimaryTreeSuspenseHandler","suspenseStackCursor","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","isSuspenseInstanceFallback","applyDerivedStateFromProps","getDerivedStateFromProps","nextProps","classComponentUpdater","checkShouldComponentUpdate","oldProps","newProps","nextContext","callComponentWillReceiveProps","resolveClassComponentProps","baseProps","propName$73","defaultOnUncaughtError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","onUncaughtError","e$74","logCaughtError","boundary","onCaughtError","e$75","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","legacyErrorBoundariesThatAlreadyFailed","stack","throwException","rootRenderLanes","renderDidSuspendDelayIfPossible","workInProgressRootExitStatus","attachPingListener","wrapperError","workInProgressRootConcurrentErrors","SelectiveHydrationException","reconcileChildren","nextChildren","updateForwardRef","propsWithoutRef","bailoutOnAlreadyFinishedWork","updateMemoComponent","updateSimpleMemoComponent","checkScheduledUpdateOrContext","updateFunctionComponent","updateOffscreenComponent","deferHiddenOffscreenComponent","nextBaseLanes","markRef","replayFunctionComponent","updateClassComponent","contextType","unresolvedOldProps","oldContext","contextType$jscomp$0","mountHostRootWithoutHydrating","SUSPENDED_MARKER","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","nextInstance","JSCompiler_temp$jscomp$0","mountWorkInProgressOffscreenFiber","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","digest","primaryChildren","offscreenProps","scheduleSuspenseWorkOnFiber","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","updateSuspenseListComponent","revealOrder","attemptEarlyBailoutIfNoScheduledUpdate","didSuspendBefore","beginWork","lazyComponent","getResource","getOwnerDocumentFromRootContainer","setInitialProperties","resolveSingletonInstance","canHydrateInstance","canHydrateTextInstance","markUpdate","preloadResourceAndSuspendIfNeeded","resource","preloadResource","scheduleRetryEffect","retryQueue","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$113","bubbleProperties","completedWork","didBailout","newChildLanes","subtreeFlags","child$114","completeWork","cache$127","listenToAllSupportedEvents","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","commitHookEffectListMount","flags","finishedWork","lastEffect","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","destroy","nearestMountedAncestor","destroy_","commitClassCallbacks","safelyCallComponentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$143","commitHostMount","commitHostUpdate","domElement","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertOrAppendPlacementNode","commitHostSingletonAcquisition","singleton","attributes","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","needsFormReset","PossiblyWeakSet","nextEffect","commitBeforeMutationEffects","eventsEnabled","_enabled","selection","anchorOffset","focusNode","indexWithinAnchor","indexWithinFocus","selectionInformation","resolvedPrevProps","clearContainerSparingly","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","error$142","commitSuspenseHydrationCallbacks","retryDehydratedSuspenseBoundary","registerSuspenseInstanceRetry","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","hostParent","hostParentIsContainer","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","prevHostParent","prevHostParentIsContainer","releaseSingletonInstance","clearSuspenseBoundary","retryIfBlockedOn","getRetryCache","retryCache","attachSuspenseRetryListeners","wakeables","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","currentHoistableRoot","commitReconciliationEffects","hoistableRoot","currentResource","maybeNodes","getHydratableHoistableCache","mountHoistable","acquireResource","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","wasHidden","prevOffscreenSubtreeIsHidden","recursivelyTraverseDisappearLayoutEffects","display","hostParentFiber","parent$144","before$145","parent$146","before$147","finishedRoot$jscomp$0","includeWorkInProgressEffects","hiddenCallbacks","commitOffscreenPassiveMountEffects","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","suspenseyCommitFlag","recursivelyAccumulateSuspenseyCommit","accumulateSuspenseyCommitOnFiber","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","sibling","DefaultAsyncDispatcher","resourceType","cacheForType","PossiblyWeakMap","workInProgressSuspendedReason","workInProgressThrownValue","workInProgressRootDidSkipSuspendedSiblings","workInProgressRootIsPrerendering","workInProgressRootDidAttachPingListener","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootDidIncludeRecursiveRenderUpdate","workInProgressTransitions","pendingEffectsStatus","pendingEffectsRoot","pendingFinishedWork","pendingEffectsLanes","pendingEffectsRemainingLanes","pendingPassiveTransitions","pendingRecoverableErrors","actionScopeLane","suspenseHandler","prepareFreshStack","markRootSuspended","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","exitStatus","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","wasRootDehydrated","scheduleTimeout","commitRootWhenReady","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","suspendedState","waitForCommitToBeReady","commitRoot","didAttemptEntireTree","index$4","flushSyncWorkAcrossRoots_impl","resetWorkInProgressStack","timeoutHandle","cancelTimeout","allEntangledLanes","index$2","handleThrow","thrownValue","pushDispatcher","prevDispatcher","pushAsyncDispatcher","prevAsyncDispatcher","shouldYieldForPrerendering","prevExecutionContext","unitOfWork","reason","throwAndUnwindWorkLoop","workLoopSync","thrownValue$167","performUnitOfWork","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","workLoopConcurrentByScheduler","thrownValue$169","suspendedReason","unwindUnitOfWork","skipSiblings","flushPendingEffects","scheduleCallback$1","flushPassiveEffects","flushMutationEffects","flushLayoutEffects","flushSpawnedWork","rootMutationHasEffect","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","start$jscomp$0","end$jscomp$0","startMarker","endMarker","range","rootHasLayoutEffect","releaseRootPooledCache","onRecoverableError","recoverableError","wasDelayedCommit","renderPriority","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","retryLane","firstScheduledRoot","lastScheduledRoot","didScheduleMicrotask","mightHavePendingSyncWork","isFlushingWork","currentEventTransitionLane","scheduleImmediateRootScheduleTask","syncTransitionLanes","onlyLegacy","didPerformSomeWork","root$174","performSyncWorkOnRoot","processRootScheduleInImmediateTask","processRootScheduleInMicrotask","shouldAttemptEagerTransition","scheduleTaskForRootDuringMicrotask","index$3","expirationTime","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","scheduleMicrotask","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","extractEvents$1","maybeTargetInst","i$jscomp$inline_1528","eventName$jscomp$inline_1529","domEventName$jscomp$inline_1530","capitalizedEvent$jscomp$inline_1531","nonDelegatedEvents","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","currentTarget","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","rootContainerElement","ownerDocument","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","dispatchEvent","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","grandTag","SyntheticEventCtor","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","handleEventFunc","fallbackData","targetFiber","captureName","_instance2","common","_instance3","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","serverText","clientText","setProp","setPropOnCustomElement","hasSrc","hasSrcSet","propKey","propValue$188","lastProps","lastProp","propKey$205","propKey$221","propKey$226","propKey$231","propKey$236","namespaceURI","parentNamespace","currentPopstateTransitionEvent","localPromise","handleErrorInNextTick","parentInstance","suspenseInstance","possiblePreambleContribution","depth","nextNode","nextNode$jscomp$0","anyProps","nodeType","targetInstance","rootContainerInstance","preloadPropsMap","preconnectsSet","previousDispatcher","flushSyncWork","requestFormReset","prefetchDNS","preconnect","preloadModule","preinitScript","preinitStyle","preinitModuleScript","previousWasRendering","wasRendering","formInst","globalDocument","preconnectAs","rel","limitedEscapedHref","preloadSelector","getStyleKey","getScriptKey","getStylesheetSelectorFromKey","getScriptSelectorFromKey","precedence","adoptPreloadPropsForStylesheet","insertStylesheet","src","adoptPreloadPropsForScript","currentProps","styles$244","resource$245","preloadStylesheet","stylesheetPropsFromRawProps","rawProps","preloadProps","styleProps","instance$250","linkInstance","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","hostContext","onUnsuspend","insertSuspendedStylesheets","commit","stylesheetTimer","unsuspend","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","formState","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","hasScheduledReplayAttempt","queuedFocus","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queuedExplicitHydrationTargets","accumulateOrCreateContinuousQueuedReplayableEvent","existingQueuedEvent","pointerId","attemptExplicitHydrationTarget","queuedTarget","attemptReplayContinuousQueuedEvent","queuedEvent","targetContainers","nextBlockedOn","nativeEventClone","attemptReplayContinuousQueuedEventInMap","map","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","lastScheduledReplayQueue","scheduleReplayQueueIfNeeded","formReplayingQueue","submitterOrAction","unblock","formProps","ReactDOMRoot","internalRoot","ReactDOMHydrationRoot","isomorphicReactPackageVersion$jscomp$inline_1785","componentOrElement","internals$jscomp$inline_2256","hook$jscomp$inline_2257","reactDomClient_production","clientModule","TanStackRouterDevtools","appCss","seo","description","keywords","image","RootComponent","RootDocument","BlogLayout","HomeComponent","dual","arity","body","identity","constant","constTrue","constFalse","constUndefined","constVoid","pipe","ab","bc","cd","de","ef","fg","gh","hi","ret","make","isEquivalent","that","isStrictEquivalent","strict","number","mapInput","f","Date","date","moduleVersion","getCurrentVersion","globalStoreId","version.getCurrentVersion","globalStore","globalValue","compute","isBoolean","isSymbol","isFunction_","isUndefined","isNotUndefined","isNotNull","isNever","isRecordOrArray","hasProperty","property","isTagged","isNullable","isNotNullable","isDate","isIterable","isRecord","isPromiseLike","getBugErrorMessage","SingleShotGen$1","SingleShotGen","__publicField","defaultIncHi","defaultIncLo","MUL_HI","MUL_LO","BIT_53","BIT_27","PCGRandom","seedHi","seedLo","incHi","incLo","add64","max","lo","oldHi","oldLo","mul64","xsHi","xsLo","xorshifted","rot","rot2","aHi","aLo","bHi","bLo","c1","c0","YieldWrapTypeId","YieldWrap","__privateAdd","_value","__privateSet","__privateGet","yieldWrapGet","structuralRegionState","standard","forced","isNotOptimizedAway","internalCall","randomHashCache","symbol","isHash","random","combine","optimize","u","h","structureKeys","structure","cached","equals","compareBoth","selfType","Hash.hash","keysSelf","keysThat","equivalence","NodeInspectSymbol","toJSON","redact","format","toStringUnknown","whitespace","stringifyCircular","retVal","_key","redactableState","isRedactable","symbolRedactable","withRedactableContext","pipeArguments","len","OP_ASYNC","OP_COMMIT","OP_FAILURE","OP_ON_FAILURE","OP_ON_SUCCESS","OP_ON_SUCCESS_AND_FAILURE","OP_SUCCESS","OP_SYNC","OP_TAG","OP_UPDATE_RUNTIME_FLAGS","OP_WHILE","OP_ITERATOR","OP_WITH_RUNTIME","OP_YIELD","OP_REVERT_FLAGS","EffectTypeId","StreamTypeId","SinkTypeId","ChannelTypeId","effectVariance","sinkVariance","channelVariance","EffectPrototype","Equal.symbol","Hash.symbol","Hash.cached","Hash.random","StructuralPrototype","Hash.structure","selfKeys","thatKeys","Equal.equals","CommitPrototype","OpCodes.OP_COMMIT","StructuralCommitPrototype","Base","TypeId","CommonProto","SomeProto","isOption","isSome","Hash.combine","NoneHash","NoneProto","isNone","fa","none","some","RightProto","isEither","isRight","LeftProto","isLeft","ma","either.right","either.left","either.isEither","either.isLeft","either.isRight","mapBoth","onLeft","onRight","mapLeft","merge","getOrThrowWith","getOrThrow","isNonEmptyArray","b1","b2","greaterThan","O","option.none","option.some","option.isOption","option.isNone","option.isSome","onNone","onSome","getOrElse","orElse","orElseSome","fromNullable","nullableValue","getOrUndefined","liftThrowable","flatMap","flatMapNullable","filterMap","predicate","getEquivalence","Equivalence.make","containsWith","_equivalence","Equal.equivalence","contains","exists","refinement","findFirst","O.some","O.isSome","O.none","allocate","makeBy","fromIterable","collection","ensure","matchLeft","onEmpty","onNonEmpty","isNonEmptyReadonlyArray","headNonEmpty","tailNonEmpty","prepend","head","append","appendAll","isEmptyArray","isEmptyReadonlyArray","internalArray.isNonEmptyArray","isOutOfBounds","clamp","Option.none","Option.some","unsafeGet","lastNonEmpty","spanIndex","span","splitAt","drop","moduleIterable.findFirst","reverse","sort","zip","zipWith","Tuple.make","bs","_n","splitNonEmptyAt","unionWith","dedupeWith","union","empty","of","j","flatten","Option.isSome","reduce","unfold","Equivalence.array","dedupe","join","sep","getKeysForIndexSignature","parameter","ownKeys","memoizeThunk","done","formatDate","formatUnknown","checkCircular","Predicate.isDate","Predicate.hasProperty","Predicate.isFunction","Predicate.isString","Predicate.isNumber","Predicate.isBoolean","Predicate.isSymbol","Predicate.isBigInt","Predicate.isIterable","pojo","formatPropertyKey","isNonEmpty","isSingle","formatPathKey","formatPath","getErrorMessage","details","ast","getASTUnsupportedKeySchemaErrorMessage","getASTUnsupportedLiteralErrorMessage","literal","util_.formatUnknown","getASTDuplicateIndexSignatureErrorMessage","getASTIndexSignatureParameterErrorMessage","getASTRequiredElementFollowinAnOptionalElementErrorMessage","getASTDuplicatePropertySignatureTransformationErrorMessage","getASTDuplicatePropertySignatureErrorMessage","DateFromSelfSchemaId","MinLengthSchemaId","Order","order.number","BrandAnnotationId","SchemaIdAnnotationId","MessageAnnotationId","MissingMessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","AutoTitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","ArbitraryAnnotationId","PrettyAnnotationId","EquivalenceAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","ParseIssueTitleAnnotationId","ParseOptionsAnnotationId","DecodingFallbackAnnotationId","SurrogateAnnotationId","StableFilterAnnotationId","getAnnotation","annotated","getBrandAnnotation","getMessageAnnotation","getMissingMessageAnnotation","getTitleAnnotation","getAutoTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","getParseIssueTitleAnnotation","getParseOptionsAnnotation","getDecodingFallbackAnnotation","getSurrogateAnnotation","getStableFilterAnnotation","hasStableFilter","Option.exists","JSONIdentifierAnnotationId","getJSONIdentifierAnnotation","getJSONIdentifier","Option.orElse","Declaration","typeParameters","decodeUnknown","encodeUnknown","annotations","Option.getOrElse","getExpected","toJSONAnnotations","createASTGuard","Literal","isLiteral","$null","UniqueSymbol","UndefinedKeyword","formatKeyword","undefinedKeyword","NeverKeyword","neverKeyword","UnknownKeyword","unknownKeyword","AnyKeyword","anyKeyword","StringKeyword","stringKeyword","isStringKeyword","NumberKeyword","numberKeyword","BooleanKeyword","booleanKeyword","isSymbolKeyword","Type$1","OptionalType","Type","isOptional","getRestASTs","annotatedAST","TupleType","isReadonly","hasOptionalElement","hasIllegalRequiredElement","errors_.getASTRequiredElementFollowinAnOptionalElementErrorMessage","formatTuple","formattedElements","Arr.matchLeft","formattedHead","wrappedHead","formattedTail","PropertySignature","isParameter","IndexSignature","errors_.getASTIndexSignatureParameterErrorMessage","TypeLiteral","propertySignatures","indexSignatures","errors_.getASTDuplicatePropertySignatureErrorMessage","parameters","encodedParameter","getEncodedParameter","errors_.getASTDuplicateIndexSignatureErrorMessage","formatTypeLiteral","ps","formatIndexSignatures","iss","pss","sortCandidates","Arr.sort","Order.mapInput","Number.Order","literalMap","candidates","Arr.flatMap","isUnion","unify","cs","uniques","literals","_tag","Union$1","types","isMembers","toJSONMemoMap","Suspend","util_.memoizeThunk","Option.flatMap","Option.liftThrowable","Refinement$1","Option.match","getOrElseExpected","expected","isRefinement","defaultParseOption","Transformation$1","transformation","FinalTransformation","PropertySignatureTransformation$1","TypeLiteralTransformation","propertySignatureTransformations","fromKeys","toKeys","pst","errors_.getASTDuplicatePropertySignatureTransformationErrorMessage","overrides","surrogate","STRING_KEYWORD_PATTERN","NUMBER_KEYWORD_PATTERN","getTemplateLiteralSpanTypePattern","capture","regexp.escape","getTemplateLiteralPattern","handleTemplateLiteralSpanTypeParens","top","pattern","spanPattern","getTemplateLiteralRegExp","record","go","errors_.getASTUnsupportedLiteralErrorMessage","errors_.getASTUnsupportedKeySchemaErrorMessage","pickAnnotations","annotationIds","preserveTransformationAnnotations","typeAST","changeMap","restASTs","p","Union","Refinement","preserve","createJSONIdentifierAnnotation","identifier","changed","Arr.allocate","encodedAST_","isBound","encodedAST","getBrands","brands","brand","Option.map","TagTypeId","ReferenceTypeId","STMSymbolKey","STMTypeId","TagProto","ReferenceProto","makeGenericTag","limit","creationError","Reference","ReferenceClass","ContextProto","isContext","Hash.number","makeContext","unsafeMap","serviceNotFoundError","lines","afterAt","isReference","_empty","service","add","defaultValueCache","getDefaultValue","unsafeGetReference","getOption","GenericTag","internal.makeGenericTag","internal.empty","internal.make","internal.add","internal.get","internal.unsafeGet","internal.getOption","internal.merge","internal.Reference","srcPos","destPos","emptyArray","toReadonlyArray","ChunkProto","isChunk","Hash.array","makeChunk","backing","chunk","unsafeFromNonEmptyArray","unsafeFromArray","RA.fromIterable","copyToArray","toReadonlyArray_","reverseChunk","RA.reverse","nr","nrr","nl","nll","unsafeHead","bigint0","bigint24","bigint60","bigint1e3","bigint1e6","bigint1e9","DURATION_REGEX","isDuration","millis","nanos","zero","infinity","valueStr","unit","micros","seconds","minutes","hours","days","weeks","zeroValue","infinityValue","DurationProto","toHrTime","duration","isZero","toMillis","unsafeToNanos","_self","matchWith","_that","selfNanos","thatNanos","Equivalence","lessThanOrEqualTo","greaterThanOrEqualTo","parts","sec","min","hr","fragments","pieces","SIZE","BUCKET_SIZE","MASK","MAX_INDEX_NODE","MIN_ARRAY_NODE","popcount","hashFragment","shift","toBitmap","fromBitmap","bitmap","bit","arrayUpdate","mutate","at","arraySpliceOut","newLen","g","arraySpliceIn","EmptyNode","edit","_shift","O.isNone","LeafNode","isEmptyNode","isLeafNode","canEditNode","mergeLeaves","CollisionNode","canEdit","newValue","IndexedNode","mask","frag","indx","_newChild","expand","ArrayNode","pack","removed","subNodes","mergeLeavesInner","h1","n1","h2","n2","subH1","subH2","currentShift","Stack.make","HashMapSymbolKey","HashMapTypeId","HashMapProto","HashMapIterator","isHashMap","getHash","Option.isNone","makeImpl","editable","visitLazy","v0","applyCont","cont","visitLazyChildren","Node.isEmptyNode","Node.EmptyNode","beginMutation","endMutation","Dual.dual","has","modifyAt","setTree","newRoot","newSize","modifyHash","remove","toVisit","HashSetSymbolKey","HashSetTypeId","HashSetProto","HM.keys","isHashSet","HM.size","keyMap","HM.empty","HM.has","HM.beginMutation","transient","HM.set","HM.remove","difference","HM.forEach","HM.reduce","z","HS.empty","HS.fromIterable","HS.make","HS.has","HS.size","HS.add","HS.remove","HS.difference","HS.union","HS.reduce","MutableRefProto","FiberIdSymbolKey","FiberIdTypeId","OP_NONE","OP_RUNTIME","OP_COMPOSITE","emptyHash","Hash.string","None$2","isFiberId","Runtime","startTimeMillis","None","ids","HashSet.empty","HashSet.make","HashSet.union","_fiberCounter","MutableRef.make","threadName","unsafeMake","MutableRef.get","MutableRef.set","internal.none","internal.threadName","internal.unsafeMake","HM.fromIterable","HM.isEmpty","HM.get","HM.modifyAt","HM.map","toArray","Arr.fromIterable","Equivalence.mapInput","Arr.getEquivalence","ConsProto","isList","makeCons","cons","NilHash","NilProto","_Nil","isNil","isCons","nil","prependAll","these","Structural","ContextPatchTypeId","variance","PatchProto","EmptyProto","AndThenProto","makeAndThen","AddServiceProto","makeAddService","RemoveServiceProto","makeRemoveService","UpdateServiceProto","makeUpdateService","oldValue","missingServices","patch","newService","old","wasServiceUpdated","patches","Chunk.of","updatedContext","Chunk.isNonEmpty","Chunk.headNonEmpty","Chunk.tailNonEmpty","Chunk.prepend","HashSetPatchTypeId","AddProto","makeAdd","RemoveProto","makeRemove","HashSet.reduce","HashSet.has","HashSet.remove","HashSet.add","ReadonlyArrayPatchTypeId","Data.Structural","AppendProto","makeAppend","values","SliceProto","makeSlice","until","UpdateProto","makeUpdate","newElement","valuePatch","Arr.drop","differ","readonlyArray","Arr.of","Arr.isNonEmptyArray","Arr.headNonEmpty","Arr.tailNonEmpty","DifferTypeId","DifferProto","environment","ContextPatch.empty","ContextPatch.combine","ContextPatch.diff","ContextPatch.patch","hashSet","HashSetPatch.empty","HashSetPatch.combine","HashSetPatch.diff","HashSetPatch.patch","ReadonlyArrayPatch.empty","ReadonlyArrayPatch.combine","ReadonlyArrayPatch.diff","ReadonlyArrayPatch.patch","updateWith","BIT_MASK","BIT_SHIFT","active","enabled","enable","flag","disable","exclude","andThen","invert","Interruption","OpSupervision","RuntimeMetrics","WindDown","CooperativeYielding","cooperativeYielding","isEnabled","interruptible","interruption","windDown","runtimeMetrics","runtimeFlagsPatch.make","runtimeFlagsPatch.invert","runtimeFlagsPatch.active","runtimeFlagsPatch.enabled","internalDiffer.make","runtimeFlagsPatch.empty","runtimeFlagsPatch.andThen","_patch","internal.enable","internal.disable","internal.exclude","par","seq","List.of","List.empty","parallel","sequential","List.reduce","parallelCollectionEmpty","blockedRequest","parallelCollectionCombine","List.appendAll","List.isNil","List.reverse","requests","List.cons","l","parallelCollectionAdd","parallelCollectionToSequentialCollection","parallelCollectionIsEmpty","seqHeadKeys","sequentialCollectionKeys","parKeys","parallelCollectionKeys","sequentialCollectionCombine","RequestBlockParallelTypeId","parallelVariance","ParallelImpl","HashMap.empty","HashMap.modifyAt","Option.orElseSome","Chunk.append","HashMap.reduce","HashMap.set","HashMap.get","other","Chunk.appendAll","HashMap.isEmpty","HashMap.keys","sequentialCollectionMake","HashMap.map","SequentialCollectionTypeId","sequentialVariance","SequentialImpl","Chunk.empty","sequentialCollectionToChunk","OP_DIE","OP_EMPTY","OP_FAIL","OP_INTERRUPT","OP_PARALLEL","OP_SEQUENTIAL","CauseSymbolKey","CauseTypeId","proto","flattenCause","isCause","causeEquals","pretty","OpCodes.OP_EMPTY","fail","OpCodes.OP_FAIL","die","defect","OpCodes.OP_DIE","interrupt","fiberId","OpCodes.OP_INTERRUPT","OpCodes.OP_PARALLEL","OpCodes.OP_SEQUENTIAL","isEmptyType","isFailType","isInterrupted","interruptOption","isInterruptedOnly","reduceWithContext","IsInterruptedOnlyCauseReducer","failures","Chunk.reverse","defects","interruptors","failureOption","find","failureOrCause","option","Either.right","Either.left","stripFailures","electFailures","leftStack","rightStack","leftParallel","leftSequential","evaluateCause","rightParallel","rightSequential","flattenCauseLoop","causes","Arr.reduce","HashSet.size","Chunk.isEmpty","pf","_parallel","_sequential","Chunk.make","OP_SEQUENTIAL_CASE","OP_PARALLEL_CASE","onDie","onFail","onInterrupt","onParallel","onSequential","accumulator","output","either","prettyErrors","renderErrorCause","PrettyError","originalError","originalErrorIsObject","prevLimit","prettyErrorMessage","spanSymbol","prettyErrorStack","locationRegex","spanToTrace","stackFn","locationMatchAll","Option.getOrUndefined","unknownError","OP_STATE_PENDING","OP_STATE_DONE","DeferredSymbolKey","DeferredTypeId","deferredVariance","joiners","OpCodes.OP_STATE_PENDING","effect","OpCodes.OP_STATE_DONE","blocked","blockedRequests","_continue","EffectPrimitive","runRequestBlock","RevertFlags","op","OpCodes.OP_REVERT_FLAGS","_op","EffectPrimitiveFailure","exitIsExit","EffectPrimitiveSuccess","isEffect","withFiberRuntime","withRuntime","OpCodes.OP_WITH_RUNTIME","acquireUseRelease","acquire","release","uninterruptibleMask","restore","exit","suspend","matchCauseEffect","OpCodes.OP_FAILURE","failCause","internalCause.sequential","OpCodes.OP_SUCCESS","succeed","asVoid","custom","wrapper","unsafeAsync","register","blockingOn","FiberId.none","OpCodes.OP_ASYNC","cancelerRef","resume","void_","asyncInterrupt","async_","backingResume","pendingEffect","proxyResume","controllerRef","catchAll","matchEffect","originalSymbol","internalCause.spanSymbol","internalCause.die","currentSpanFromFiber","dieMessage","failCauseSync","RuntimeException","matchCause","exitFailCause","exitSucceed","internalCause.fail","failSync","evaluate","fiberIdWith","OpCodes.OP_ON_SUCCESS","OpCodes.OP_ON_SUCCESS_AND_FAILURE","internalCause.defects","internalCause.electFailures","internalCause.failures","Chunk.unsafeHead","forEachSequential","whileLoop","forEachSequentialDiscard","OpCodes.OP_UPDATE_RUNTIME_FLAGS","RuntimeFlagsPatch.enable","runtimeFlags_.Interruption","mapError","internalCause.failureOrCause","onExit","cause1","cause2","success","zipRight","exitMatch","internalCause.isInterruptedOnly","internalCause.interruptors","thunk","OpCodes.OP_SYNC","tap","UnknownException","transplant","scopeOverride","currentForkScopeOverride","fiberRefLocally","uninterruptible","RuntimeFlagsPatch.disable","oldFlags","runtimeFlags_.interruption","updateRuntimeFlags","OpCodes.OP_WHILE","yieldNow","OpCodes.OP_YIELD","withSchedulingPriority","zipLeft","interruptFiber","interruptAsFiber","logLevelAll","logLevelFatal","logLevelError","logLevelWarning","logLevelInfo","logLevelDebug","logLevelTrace","logLevelNone","FiberRefSymbolKey","FiberRefTypeId","fiberRefVariance","fiberRefGet","fiberRefGetWith","fiberRefSet","fiberRefModify","fiberRefUnsafeMake","fiberRefUnsafeMakePatch","internalDiffer.update","fiberRefUnsafeMakeHashSet","internalDiffer.hashSet","fiberRefUnsafeMakeReadonlyArray","internalDiffer.readonlyArray","fiberRefUnsafeMakeContext","internalDiffer.environment","fiberRefUnsafeMakeRuntimeFlags","runtimeFlags_.differ","currentContext","Context.empty","currentSchedulingPriority","currentMaxOpsBeforeYield","currentLogAnnotations","currentLogLevel","currentLogSpan","scheduler","currentConcurrency","currentRequestBatching","currentUnhandledErrorLogLevel","currentMetricLabels","Arr.empty","currentInterruptedCause","internalCause.empty","scopeAddFinalizer","finalizer","scopeClose","scopeFork","strategy","YieldableError","internalCause.pretty","makeException","RuntimeExceptionTypeId","InterruptedExceptionTypeId","isInterruptedException","NoSuchElementExceptionTypeId","NoSuchElementException","UnknownExceptionTypeId","exitIsSuccess","exitCollectAll","exits","exitCollectAllInternal","internalCause.parallel","exitDie","exitFail","exitInterrupt","internalCause.interrupt","exitMap","onFailure","onSuccess","exitVoid","exitZipWith","combineCauses","Chunk.fromIterable","Chunk.toReadonlyArray","deferredUnsafeMake","deferred.DeferredTypeId","deferred.deferredVariance","deferred.pending","deferredAwait","DeferredOpCodes.OP_STATE_DONE","DeferredOpCodes.OP_STATE_PENDING","deferredInterruptJoiner","deferredUnsafeDone","deferred.done","joiner","constContext","contextWithEffect","provideContext","mapInputContext","isSuccess","core.exitIsSuccess","MutableHashMapProto","MutableHashMapIterator","BucketIterator","Equal.isEqual","bucket","getFromBucket","removeFromBucket","ClockSymbolKey","ClockTypeId","clockTag","Context.GenericTag","MAX_TIMER_MILLIS","globalClockScheduler","Duration.toMillis","completed","handle","performanceNowNanos","origin","processOrPerformanceNow","processHrtime","ClockImpl","core.sync","core.succeed","core.async","canceler","core.void","core.asVoid","OP_AND","OP_OR","OP_INVALID_DATA","OP_MISSING_DATA","OP_SOURCE_UNAVAILABLE","OP_UNSUPPORTED","ConfigErrorSymbolKey","ConfigErrorTypeId","And","OpCodes.OP_AND","Or","OpCodes.OP_OR","InvalidData","OpCodes.OP_INVALID_DATA","RA.join","MissingData","OpCodes.OP_MISSING_DATA","SourceUnavailable","OpCodes.OP_SOURCE_UNAVAILABLE","Unsupported","OpCodes.OP_UNSUPPORTED","prefixed","List.isCons","RA.map","RA.prepend","RA.head","Option.contains","RA.tailNonEmpty","configError.MissingData","OP_CONSTANT","OP_FALLBACK","OP_DESCRIBED","OP_LAZY","OP_MAP_OR_FAIL","OP_NESTED","OP_PRIMITIVE","OP_SEQUENCE","OP_HASHMAP","OP_ZIP_WITH","concat","ConfigProviderSymbolKey","ConfigProviderTypeId","configProviderTag","FlatConfigProviderSymbolKey","FlatConfigProviderTypeId","makeFlat","fromFlat","core.flatMap","fromFlatLoop","flat","Arr.head","core.fail","fromEnv","pathDelim","seqDelim","makePathString","Arr.join","unmakePathString","pathString","getEnv","primitive","valueOpt","core.mapError","parsePrimitive","filteredKeyPaths","keyPath","pathComponent","Arr.unsafeGet","currentElement","HashSet.fromIterable","pathPatch.empty","leftDef","rightDef","leftPad","Arr.unfold","rightPad","leftExtension","rightExtension","appendConfigPath","OpCodes.OP_CONSTANT","OpCodes.OP_DESCRIBED","core.suspend","OpCodes.OP_FALLBACK","core.catchAll","error1","error2","configError.Or","OpCodes.OP_LAZY","OpCodes.OP_MAP_OR_FAIL","core.forEachSequential","configError.prefixed","OpCodes.OP_NESTED","OpCodes.OP_PRIMITIVE","pathPatch.patch","Arr.last","OpCodes.OP_SEQUENCE","patchedPrefix","indicesFrom","indices","core.map","Arr.append","chunkChunk","Arr.flatten","OpCodes.OP_HASHMAP","matrix","transpose","Arr.map","HashMap.fromIterable","Arr.zip","OpCodes.OP_ZIP_WITH","core.either","Either.isLeft","configError.And","Either.isRight","fromFlatLoopFail","lefts","rights","core.zip","splitPathString","delim","delimiter","core.mapBoth","column","quotedIndices","parseQuotedIndex","number.Order","Either.merge","QUOTED_INDEX_REGEX","matchedIndex","parseInteger","parsedIndex","consoleTag","defaultConsole","label","tabularData","properties","RandomSymbolKey","RandomTypeId","randomTag","RandomImpl","seed","PCGRandom.PCGRandom","shuffleWith","nextIntBounded","buffer","numbers","core.forEachSequentialDiscard","swap","core.as","index1","tmp","TracerTypeId","tracerTag","spanTag","randomHexString","characters","charactersLength","NativeSpan","kind","endTime","nativeTracer","liveServices","Context.add","clock.clockTag","clock.make","console_.consoleTag","console_.defaultConsole","random.randomTag","random.make","configProvider.configProviderTag","configProvider.fromEnv","tracer.tracerTag","tracer.nativeTracer","currentServices","core.fiberRefUnsafeMakeContext","fiberRefLocals","FiberRefsImpl","FiberRefsSym","locals","findAncestor","_ref","_parentStack","_childStack","_childModified","parentStack","childStack","childModified","Arr.isNonEmptyReadonlyArray","parentFiberId","parentAncestors","childFiberId","childRefValue","childAncestors","joinAs","parentFiberRefs","fiberRef","childValue","ancestor","wasModified","newStack","forkAs","childId","unsafeForkAs","delete_","getOrDefault","updateAs","unsafeUpdateAs","oldStack","currentId","updateManyAs","internal.getOrDefault","internal.updateManyAs","All","core.logLevelAll","Fatal","core.logLevelFatal","Error","core.logLevelError","Warning","core.logLevelWarning","Info","core.logLevelInfo","Debug","core.logLevelDebug","Trace","core.logLevelTrace","core.logLevelNone","order.mapInput","level","order.greaterThan","fromLiteral","formatLabel","internal.EffectPrototype","internal.Base","Class","OP_ADD","OP_REMOVE","OP_UPDATE","OP_AND_THEN","missingLocals","pairs","fiberRefs","fiberRefs_.updateAs","fiberRefs_.delete_","fiberRefs_.getOrDefault","Arr.prepend","MetricLabelSymbolKey","MetricLabelTypeId","MetricLabelImpl","isMetricLabel","OP_PARALLEL_N","parallelN","parallelism","internal.sequential","internal.parallel","internal.parallelN","internal.diff","internal.patch","FiberStatusSymbolKey","FiberStatusTypeId","OP_DONE","OP_RUNNING","OP_SUSPENDED","DoneHash","Done","isFiberStatus","Running","runtimeFlags","Suspended","running","suspended","isDone","internal.done","internal.running","internal.suspended","internal.isDone","MicroExitTypeId","MicroCauseTypeId","microCauseVariance","MicroCauseImpl","traces","causeName","messageLines","Die","causeDie","Interrupt","causeInterrupt","causeIsInterrupt","MicroFiberTypeId","fiberVariance","MicroFiberImpl","InternalContext.unsafeGetReference","yielded","Yield","interruptChildren","fiberMiddleware","yielding","CurrentScheduler","ensureCont","successCont","failureCont","microVariance","MicroProto","Effectable.EffectPrototype","defaultEvaluate","_fiber","makePrimitiveProto","makePrimitive","Proto","makeExit","isMicroExit","yieldNowWith","resumed","withMicroFiber","OnSuccessProto","setImmediate","MicroSchedulerDefault","_priority","tasks","MaxOpsBeforeYield","updateContext","provided","Context.merge","Context.Reference","OnSuccessAndFailureProto","setInterruptible","runFork","PriorityBuckets","MixedScheduler","maxNextTickBeforeTimer","toRun","core.currentMaxOpsBeforeYield","core.currentSchedulingPriority","defaultScheduler","SyncScheduler","currentScheduler","core.fiberRefUnsafeMake","currentRequestMap","concurrency","unbounded","bounded","core.fiberRefGetWith","core.currentConcurrency","OP_INTERRUPT_SIGNAL","OP_STATEFUL","OP_RESUME","OP_YIELD_NOW","interruptSignal","stateful","onFiber","FiberScopeSymbolKey","FiberScopeTypeId","Global","_runtimeFlags","Local","FiberMessage.stateful","globalScope","FiberSymbolKey","FiberTypeId","RuntimeFiberSymbolKey","RuntimeFiberTypeId","core.zipLeft","core.flatten","effectable.CommitPrototype","currentFiberURI","LoggerSymbolKey","LoggerTypeId","loggerVariance","makeLogger","textOnly","quoteValue","logLevel","spans","formatValue","logSpan_.formatLabel","fiberId_.threadName","messages","Arr.ensure","Inspectable.toStringUnknown","Cause.isEmptyType","Cause.pretty","logSpan_.render","escapeDoubleQuotes","stringLogger","hasProcessStdout","MetricBoundariesSymbolKey","MetricBoundariesTypeId","MetricBoundariesImpl","isMetricBoundaries","iterable","Arr.appendAll","Arr.dedupe","exponential","Arr.makeBy","Chunk.unsafeFromArray","MetricKeyTypeSymbolKey","MetricKeyTypeTypeId","CounterKeyTypeSymbolKey","CounterKeyTypeTypeId","FrequencyKeyTypeSymbolKey","FrequencyKeyTypeTypeId","GaugeKeyTypeSymbolKey","GaugeKeyTypeTypeId","HistogramKeyTypeSymbolKey","HistogramKeyTypeTypeId","SummaryKeyTypeSymbolKey","SummaryKeyTypeTypeId","metricKeyTypeVariance","CounterKeyType","incremental","bigint","isCounterKey","HistogramKeyType","boundaries","isHistogramKey","counter","histogram","isFrequencyKey","isGaugeKey","isSummaryKey","MetricKeySymbolKey","MetricKeyTypeId","metricKeyVariance","arrayEquivilence","MetricKeyImpl","keyType","tags","isMetricKey","metricKeyType.counter","Option.fromNullable","metricKeyType.histogram","taggedWithLabels","extraTags","Arr.union","MetricStateSymbolKey","MetricStateTypeId","CounterStateSymbolKey","CounterStateTypeId","FrequencyStateSymbolKey","FrequencyStateTypeId","GaugeStateSymbolKey","GaugeStateTypeId","HistogramStateSymbolKey","HistogramStateTypeId","SummaryStateSymbolKey","SummaryStateTypeId","metricStateVariance","CounterState","isCounterState","arrayEquals","FrequencyState","occurrences","isFrequencyState","GaugeState","isGaugeState","HistogramState","buckets","sum","isHistogramState","SummaryState","quantiles","isSummaryState","frequency","gauge","summary","MetricHookSymbolKey","MetricHookTypeId","metricHookVariance","canUpdate","metricState.counter","word","slotCount","metricState.frequency","startAt","metricState.gauge","bounds","mid","getBuckets","builder","cumulated","metricState.histogram","maxAge","maxSize","sortedQuantiles","snapshot","Duration.millis","Duration.greaterThanOrEqualTo","Duration.zero","Duration.lessThanOrEqualTo","calculateQuantiles","observe","timestamp","metricState.summary","sortedSamples","sampleCount","resolvedHead","resolveQuantile","resolved","quantile","rq","consumed","error_1","sampleCount_1","current_1","consumed_1","quantile_1","rest_1","error_2","sampleCount_2","current_2","consumed_2","quantile_2","rest_2","Arr.lastNonEmpty","headValue","sameHead","Arr.span","desired","allowedError","candConsumed","candError","valueToReturn","prevError","MetricPairSymbolKey","MetricPairTypeId","metricPairVariance","metricKey","metricState","MetricRegistrySymbolKey","MetricRegistryTypeId","MetricRegistryImpl","MutableHashMap.empty","metricPair.unsafeMake","MutableHashMap.get","metricKeyType.isCounterKey","metricKeyType.isGaugeKey","metricKeyType.isFrequencyKey","metricKeyType.isHistogramKey","metricKeyType.isSummaryKey","metricHook.counter","MutableHashMap.has","MutableHashMap.set","metricHook.frequency","metricHook.gauge","metricHook.histogram","metricHook.summary","MetricSymbolKey","MetricTypeId","metricVariance","globalMetricRegistry","metricRegistry.make","unsafeUpdate","unsafeValue","unsafeModify","metric","core.tap","fromMetricKey","metricKey.counter","untaggedHook","hookCache","metricKey.taggedWithLabels","metricKey.histogram","tagged","metricLabel.make","extraTags1","core.currentMetricLabels","complete","completedRequestMap.currentRequestMap","core.deferredUnsafeDone","SupervisorSymbolKey","SupervisorTypeId","supervisorVariance","_ProxySupervisor","underlying","value0","Zip","ProxySupervisor","_Zip","isZip","Const","_context","_effect","_parent","execution","fromEffect","OP_ADD_SUPERVISOR","OP_REMOVE_SUPERVISOR","supervisor","patchLoop","_supervisor","_patches","removeSupervisor","supervisor.none","supervisor.isZip","toSet","oldSupervisors","newSupervisors","added","HashSet.difference","Differ.make","fiberStarted","metric.counter","fiberActive","fiberSuccesses","fiberFailures","fiberLifetimes","metric.tagged","metric.histogram","metricBoundaries.exponential","EvaluationSignalContinue","EvaluationSignalDone","EvaluationSignalYieldNow","runtimeFiberVariance","absurd","YieldedOp","yieldedOpChannel","contOpSuccess","_cont","core.exitSucceed","runtimeFlags_.interruptible","core.exitFailCause","OpCodes.OP_ITERATOR","drainQueueWhileRunningTable","FiberMessage.OP_INTERRUPT_SIGNAL","cur","FiberMessage.OP_RESUME","_cur","_message","FiberMessage.OP_STATEFUL","FiberStatus.running","FiberMessage.OP_YIELD_NOW","core.yieldNow","runBlockedRequests","RequestBlock_.flatten","requestsByRequestResolver","forEachConcurrentDiscard","RequestBlock_.sequentialCollectionToChunk","dataSource","block","core.fiberRefLocally","invokeWithInterrupt","_version","FiberRuntime","Effectable.Class","fiberRefs0","runtimeFlags0","internalFiber.FiberTypeId","internalFiber.fiberVariance","internalFiber.RuntimeFiberTypeId","runtimeFlags_.runtimeMetrics","internalFiber.join","FiberMessage.resume","FiberStatus.isDone","fiberScope.unsafeMake","core.currentInterruptedCause","deferred","core.deferredUnsafeMake","core.deferredAwait","core.withFiberRuntime","parentStatus","parentRuntimeFlags","childFiberRefs","updatedFiberRefs","fiberRefs.joinAs","updatedRuntimeFlags","currentRuntimeFlags","runtimeFlags_.diff","RuntimeFlagsPatch.exclude","runtimeFlags_.WindDown","core.updateRuntimeFlags","FiberMessage.interruptSignal","observer","fiberRefs.delete_","fiberRefs.updateAs","defaultServices.currentServices","currentSupervisor","core.currentContext","tracer.spanTag","evaluationSignal","internalFiber.currentFiberURI","cur0","internalCause.isEmpty","oldSC","told","it","core.whileLoop","endTimeMillis","core.currentUnhandledErrorLogLevel","currentLoggers","overrideLogLevel","core.currentLogLevel","minimumLogLevel","currentMinimumLogLevel","LogLevel.greaterThan","core.currentLogSpan","core.currentLogAnnotations","loggers","contextMap","clockService","Context.get","Inspectable.withRedactableContext","logger","FiberStatus.done","FiberStatus.suspended","effect0","eff","runtimeFlags_.cooperativeYielding","FiberMessage.yieldNow","core.exitVoid","runtimeFlags_.enable","oldRuntimeFlags","newRuntimeFlags","runtimeFlags_.patch","asyncRegister","alreadyCalled","core.failCause","OpCodes.OP_ON_FAILURE","OpCodes.OP_TAG","Context.unsafeGet","core.NoSuchElementException","core.unsafeAsync","microResume","Micro.runFork","Micro.provideContext","core.die","abortResume","oldCur","internalCause.stripFailures","refs","frames","snap","patchRefs","FiberRefsPatch.diff","patchFlags","core.blocked","FiberRefsPatch.patch","core.uninterruptibleMask","forkDaemon","core.runRequestBlock","updateFlags","revertFlags","core.RevertFlags","core.EffectTypeId","core.dieMessage","core.isInterruptedException","LogLevel.fromLiteral","loggerWithConsoleLog","internalLogger.makeLogger","services","FiberRefs.getOrDefault","defaultLogger","internalLogger.stringLogger","tracerLogger","Context.getOption","fiberRefs.getOrDefault","FiberId.threadName","core.fiberRefUnsafeMakeHashSet","isRequestBatchingEnabled","core.currentRequestBatching","concurrency.match","finalizersMaskInternal","ExecutionStrategy.sequential","ExecutionStrategy.parallel","ExecutionStrategy.parallelN","forEachParN","forEachParUnbounded","batching","core.zipRight","processAll","core.transplant","graft","todos","interrupted","fibersCount","fibers","results","interruptAll","startOrder","joinOrder","residual","collectExits","runFiber","interruptImmediately","runnable","core.uninterruptible","unsafeForkUnstarted","fiberScope.globalScope","onInterruptSignal","stepOrExit","core.step","core.exit","processingFiber","pushResult","returnNextElement","onRes","todo","wrapped","core.exitCollectAll","RequestBlock_.par","core.onExit","core.exitMatch","toPop","hitNext","forkWithScopeOverride","unsafeFork","overrideScope","childFiber","unsafeMakeChildFiber","FiberId.unsafeMake","fiberRefs.forkAs","childContext","core.currentForkScopeOverride","parallelFinalizers","core.contextWithEffect","scopeTag","core.scopeFork","scopeExtend","parallelNFinalizers","concurrentFinalizers","sequentialFinalizers","core.mapInputContext","Context.make","fiberRefUnsafeMakeSupervisor","core.fiberRefUnsafeMakePatch","SupervisorPatch.differ","SupervisorPatch.empty","core.fiberRefUnsafeMakeRuntimeFlags","runtimeFlags_.none","core.fiberIdWith","core.interruptible","processing","counts","checkDone","core.exitIsExit","internalCause.isInterrupted","core.interruptFiber","core.exitInterrupt","internal.isFailType","internal.pretty","close","core.scopeClose","fork","plainArgsSymbol","core.YieldableError","TaggedError","makeDual","runtime","fiberRefUpdates","scheduler_.currentScheduler","FiberRefs.updateManyAs","fiberRuntime","FiberRuntime.FiberRuntime","scope_.fork","executionStrategy.sequential","closeableScope","core.scopeAddFinalizer","core.interruptAsFiber","scope_.close","supervisor_.none","unsafeRunSync","unsafeRunSyncExit","fiberFailure","AsyncFiberExceptionImpl","asyncFiberException","FiberFailureId","FiberFailureCauseId","FiberFailureImpl","InternalCause.prettyErrors","InternalCause.pretty","Inspectable.NodeInspectSymbol","fastPath","core.exitFail","scheduler_.SyncScheduler","core.exitDie","core.capture","core.currentSpanFromFiber","RuntimeImpl","defaultRuntimeFlags","runtimeFlags.make","runtimeFlags.Interruption","runtimeFlags.CooperativeYielding","runtimeFlags.RuntimeMetrics","defaultRuntime","FiberRefs.empty","unsafeForkEffect","unsafeRunSyncEffect","core.isEffect","fiberRuntime.forEach","_void","runtime_.unsafeForkEffect","runSync","runtime_.unsafeRunSyncEffect","Pointer","actual","issue","Unexpected","Missing","Composite","issues","Transformation","Forbidden","ParseErrorTypeId","ParseError","TreeFormatter","parseError","Either.isEither","Either.match","Effect.flatMap","Either.map","Effect.map","Either.mapLeft","Effect.mapError","Either.mapBoth","Effect.mapBoth","Effect.catchAll","mergeInternalOptions","overrideOptions","getEither","isDecoding","goMemo","getSync","Either.getOrThrowWith","getEffect","decodeUnknownSync","schema","validateSync","AST.typeAST","decodeMemoMap","encodeMemoMap","memoMap","memo","raw","parseOptionsAnnotation","AST.getParseOptionsAnnotation","parserWithOptions","decodingFallbackAnnotation","AST.getDecodingFallbackAnnotation","handleForbidden","getConcurrency","AST.getConcurrencyAnnotation","getBatching","AST.getBatchingAnnotation","AST.defaultParseOption","allErrors","AST.hasStableFilter","isComposite","ep","dropRightRefinement","transform","getFinalTransformation","i2","fromRefinement","Predicate.isUndefined","Predicate.isNever","Predicate.isObject","AST.getTemplateLiteralRegExp","requiredTypes","requiredLen","expectedIndexes","Arr.isArray","es","stepKey","te","sortByIndex","nk","Effect.either","Effect.void","computeResult","cqueue","Effect.suspend","Arr.copy","Effect.forEach","Predicate.isNotNullable","expectedKeysMap","expectedKeys","expectedAST","AST.Union","AST.UniqueSymbol","AST.Literal","Predicate.isRecord","onExcessPropertyError","onExcessPropertyPreserve","inputKeys","util_.ownKeys","isExact","hasKey","indexSignature","util_.getKeysForIndexSignature","keu","vpr","tv","searchTree","getSearchTree","ownKeysLen","astTypesLen","Predicate.isRecordOrArray","literalsUnion","errorAst","AST.TypeLiteral","AST.PropertySignature","fakePropertySignature","candidate","pr","AST.annotations","getLiterals","annotation","AST.getSurrogateAnnotation","propertySignature","AST.encodedAST","AST.isLiteral","members","otherwise","member","AST.isRefinement","Scheduler.SyncScheduler","Effect.runFork","Exit.isSuccess","Cause.isFailType","makeTree","forest","formatTree","drawTree","Either.getOrThrow","Effect.runSync","tree","draw","indentation","isLast","formatTransformationKind","formatRefinementKind","getAnnotated","Either_void","getCurrentMessage","AST.getMessageAnnotation","messageAnnotation","Effect.isEffect","createParseIssueGuard","isTransformation","getMessage","currentMessage","AST.getParseIssueTitleAnnotation","Option.flatMapNullable","getRefinementExpected","AST.getDescriptionAnnotation","AST.getTitleAnnotation","AST.getAutoTitleAnnotation","AST.getIdentifierAnnotation","getDefaultTypeMessage","formatTypeMessage","getParseIssueTitle","formatForbiddenMessage","formatUnexpectedMessage","formatMissingMessage","missingMessageAnnotation","AST.getMissingMessageAnnotation","util_.formatPath","parseIssueTitle","util_.isNonEmpty","omit","mergeSchemaAnnotations","builtInAnnotations","AST.SchemaIdAnnotationId","AST.MessageAnnotationId","AST.MissingMessageAnnotationId","AST.IdentifierAnnotationId","AST.TitleAnnotationId","AST.DescriptionAnnotationId","AST.ExamplesAnnotationId","AST.DefaultAnnotationId","AST.DocumentationAnnotationId","AST.JSONSchemaAnnotationId","AST.ArbitraryAnnotationId","AST.PrettyAnnotationId","AST.EquivalenceAnnotationId","AST.ConcurrencyAnnotationId","AST.BatchingAnnotationId","AST.ParseIssueTitleAnnotationId","AST.ParseOptionsAnnotationId","AST.DecodingFallbackAnnotationId","toASTAnnotations","typeSchema","isSchema","declareConstructor","makeDeclareClass","AST.Declaration","tp","declarePrimitive","ParseResult.succeed","ParseResult.fail","ParseResult.Type","declare","Undefined","AST.undefinedKeyword","Null","AST.null","Never","AST.neverKeyword","Any","AST.anyKeyword","String$","AST.stringKeyword","Number$","AST.numberKeyword","Boolean$","AST.booleanKeyword","getDefaultUnionAST","makeUnionClass","AST.isMembers","array_.isNonEmptyReadonlyArray","NullOr","UndefinedOr","NullishOr","getDefaultTupleTypeAST","AST.TupleType","AST.OptionalType","AST.Type","makeTupleTypeClass","makeArrayClass","Array$","formatPropertySignatureToken","PropertySignatureDeclaration","token","FromPropertySignature","fromKey","ToPropertySignature","PropertySignatureTransformation","mergeSignatureAnnotations","PropertySignatureTypeId","isPropertySignature","_PropertySignatureImpl","PropertySignatureImpl","makePropertySignature","PropertySignatureWithFromImpl","withConstructorDefault","optionalToRequired","option_.some","option_.flatMap","optionalToOptional","optionalPropertySignatureAST","asOption","asOptionEncode","option_.orElse","option_.match","OptionFromSelf","option_.filter","Predicate.isNotNull","Predicate.isNotUndefined","optional","optionalWith","preserveMissingMessageAnnotation","AST.pickAnnotations","getDefaultTypeLiteralAST","fields","records","transformations","field","toAnnotations","AST.PropertySignatureTransformation","issFrom","issTo","AST.record","AST.IndexSignature","AST.Transformation","AST.AutoTitleAnnotationId","AST.TypeLiteralTransformation","lazilyMergeDefaults","makeTypeLiteralClass","Struct","struct_.pick","struct_.omit","propsWithDefaults","getDisableValidationMakeOption","ParseResult.validateSync","makeBrandClass","AST.getBrandAnnotation","AST.BrandAnnotationId","RefineSchemaId","makeRefineClass","fromFilterPredicateReturnTypeItem","option_.none","ParseResult.Pointer","toFilterParseIssue","util_.isSingle","array_.filterMap","ParseResult.Composite","AST.Refinement","makeTransformationClass","transformOrFail","AST.FinalTransformation","fromA","_ast","toA","toI","TrimmedSchemaId","schemaId_.MinLengthSchemaId","LowercasedSchemaId","lowercased","nonEmptyString","toComposite","ParseResult.mapBoth","schemaId_.DateFromSelfSchemaId","DateFromSelf","fc","Equivalence.Date","DateFromString","util_.formatDate","optionDecode","optionArbitrary","optionPretty","optionParse","option_.isOption","option_.isNone","ParseResult.decodeUnknown","ParseResult.encodeUnknown","option_.getEquivalence","defaultFullName","getLocalProfile","lang","AboutComponent","Option.getOrThrowWith","fullName","profileHeadingId","socialAccountsHeadingId","publishingPlatformsHeadingId","receivingSponsorshipHeadingId","givingSponsorshipHeadingId","websiteInfoHeadingId","nameOriginHeadingId","websitePurposeHeadingId","localizedInfoHeadingId","localSocialAccountsHeadingId","ArchiveLayout","LanguageIdSchema","Schema.String","Schema.filter","LanguagePropertiesSchema","Schema.Struct","Schema.optional","GenericSlugSchema","Schema.nonEmptyString","Schema.trimmed","Schema.lowercased","DateFromISOString","Schema.DateFromString","OptionalDateSchema","Schema.optionalWith","PostSlugSchema","Schema.brand","PostSchema","Schema.Boolean","Schema.Any","PostMetadataSchema","isRunningInDeno","isRunningInBrowser","getDataDir","path.join","path.dirname","url.fileURLToPath","readJsonDataFile","fs.existsSync","readJsonLinesDataFileFiltered","stream","fs.createReadStream","rl","readline","line","Schema.decodeUnknownSync","events","PostDir","PostSpec","getPostInternal","slug","getPostFn","getPost","DefaultLimit","PaginationSchema","Schema.Number","PostsIndexFile","PostFilterSchema","toPostFilter","DefaultPagination","PostListSpec","getPostListInternal","page","filters","getPostListFn","getPostList","Schema.Array","DateFormat","dateString","PostListTable","posts","post","PostArchiveComponent","settings","nameRe","nameReJsx","emptyOptions","re","thing","Schema","normal","space","definitions","definition","normalize","powers","boolean","increment","booleanish","overloadedBoolean","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","DefinedInfo","mark","normals","aria","caseSensitiveTransform","caseInsensitiveTransform","html","svg","xlink","xmlns","xml","hastToReact","cap","dash","valid","camelcase","dashes","kebab","$0","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","lineno","updatePosition","position","Position","msg","comments","rules","comment","declaration","trim","declarations","decls","decl","__importDefault","this","mod","cjs","StyleToObject","inline_style_parser_1","iterator","styleObject","hasIterator","utilities","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","skipCamelCase","capitalize","character","trimHyphen","camelCase","style_to_object_1","utilities_1","StyleToJS","pointStart","point","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","own","emptyMap","tableElements","tableCellElement","docs","toJsxRuntime","developmentCreate","productionCreate","one","mdxExpression","mdxJsxElement","mdxEsm","parentSchema","findComponentFromName","createElementProps","createChildren","addNode","addChildren","expression","assert","crashEstree","createJsxElementProps","jsxDEV","isStaticChildren","alignValue","createProperty","objectExpression","countsByName","commas","spaces","parseStyle","transformStylesToCssCasing","styleToJs","allowExpression","identifiers","isIdentifierName","place","domCasing","cssCasing","transformStyleToCssCasing","toDash","hastToJsx","hastTree","PostComponent","UsedLanguages","getLanguageById","Array.findFirst","language","BlogRouteRoute","BlogRouteImport","rootRoute","IndexRoute","IndexImport","AboutIndexRoute","AboutIndexImport","AboutLangRoute","AboutLangImport","BlogArchiveRouteRoute","BlogArchiveRouteImport","BlogArchivePostIndexRoute","BlogArchivePostIndexImport","BlogPostLangSlugRoute","BlogPostLangSlugImport","BlogArchivePostLangIndexRoute","BlogArchivePostLangIndexImport","BlogArchiveRouteRouteChildren","BlogArchiveRouteRouteWithChildren","BlogRouteRouteChildren","BlogRouteRouteWithChildren","rootRouteChildren","routeTree","createTanStackRouter","hydrateRoot"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"sources":["../../node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react-jsx-runtime.production.js","../../node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js","../../node_modules/.pnpm/cookie-es@1.2.2/node_modules/cookie-es/dist/index.mjs","../../node_modules/.pnpm/@tanstack+start-client-core@1.120.3/node_modules/@tanstack/start-client-core/dist/esm/headers.js","../../node_modules/.pnpm/@tanstack+store@0.7.0/node_modules/@tanstack/store/dist/esm/scheduler.js","../../node_modules/.pnpm/@tanstack+store@0.7.0/node_modules/@tanstack/store/dist/esm/store.js","../../node_modules/.pnpm/@tanstack+store@0.7.0/node_modules/@tanstack/store/dist/esm/derived.js","../../node_modules/.pnpm/@tanstack+history@1.115.0/node_modules/@tanstack/history/dist/esm/index.js","../../node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/utils.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/path.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/not-found.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/scroll-restoration.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/qss.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/searchParams.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/root.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/redirect.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/router.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/defer.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/link.js","../../node_modules/.pnpm/@tanstack+router-core@1.120.3/node_modules/@tanstack/router-core/dist/esm/route.js","../../node_modules/.pnpm/@tanstack+start-client-core@1.120.3/node_modules/@tanstack/start-client-core/dist/esm/serializer.js","../../node_modules/.pnpm/@tanstack+start-client-core@1.120.3/node_modules/@tanstack/start-client-core/dist/esm/ssr-client.js","../../node_modules/.pnpm/@tanstack+start-client-core@1.120.3/node_modules/@tanstack/start-client-core/dist/esm/registerGlobalMiddleware.js","../../node_modules/.pnpm/@tanstack+start-client-core@1.120.3/node_modules/@tanstack/start-client-core/dist/esm/createServerFn.js","../../node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react.production.js","../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/awaited.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/CatchBoundary.js","../../node_modules/.pnpm/use-sync-external-store@1.5.0_react@19.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/.pnpm/use-sync-external-store@1.5.0_react@19.1.0/node_modules/use-sync-external-store/shim/index.js","../../node_modules/.pnpm/use-sync-external-store@1.5.0_react@19.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/.pnpm/use-sync-external-store@1.5.0_react@19.1.0/node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/.pnpm/@tanstack+react-store@0.7.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-store/dist/esm/index.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/routerContext.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useRouter.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useRouterState.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/matchContext.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useMatch.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useLoaderData.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useLoaderDeps.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useParams.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useSearch.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/useNavigate.js","../../node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom.production.js","../../node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/index.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/utils.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/Transitioner.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/not-found.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/SafeFragment.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/renderRouteNotFound.js","../../node_modules/.pnpm/jsesc@3.1.0/node_modules/jsesc/jsesc.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/ScriptOnce.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/scroll-restoration.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/Match.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/Matches.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/link.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/route.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/fileRoute.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/router.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/RouterProvider.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/Asset.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/HeadContent.js","../../node_modules/.pnpm/@tanstack+react-router@1.120.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@tanstack/react-router/dist/esm/Scripts.js","../../node_modules/.pnpm/@tanstack+react-start-client@1.120.3_@netlify+blobs@8.2.0_@types+node@22.15.18_db0@0.3.2_iore_pnfxkwvfa6e6mfbq7qmmrflycu/node_modules/@tanstack/react-start-client/dist/esm/StartClient.js","../../node_modules/.pnpm/scheduler@0.26.0/node_modules/scheduler/cjs/scheduler.production.js","../../node_modules/.pnpm/scheduler@0.26.0/node_modules/scheduler/index.js","../../node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.production.js","../../node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/client.js","../../node_modules/.pnpm/@tanstack+react-router-devtools@1.120.3_@tanstack+react-router@1.120.3_react-dom@19.1.0_react_sfbz3zlsj2zy3v4b4pjyjypdu4/node_modules/@tanstack/react-router-devtools/dist/esm/index.js","../../src/styles/app.css?url","../../src/utils/seo.ts","../../app/routes/__root.tsx","../../app/routes/_blog/route.tsx","../../app/routes/index.tsx","../../app/routes/about.index.tsx","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Function.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Equivalence.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/version.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/GlobalValue.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Predicate.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/errors.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Utils.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Hash.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Equal.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Inspectable.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Pipeable.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/opCodes/effect.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/effectable.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/option.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/either.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Either.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/array.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Order.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Option.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Tuple.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Iterable.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Array.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/schema/util.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/schema/errors.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/schema/schemaId.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Number.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/RegExp.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/SchemaAST.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/context.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Context.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Chunk.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Duration.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/hashMap/config.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/hashMap/bitwise.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/stack.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/hashMap/array.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/hashMap/node.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/hashMap.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/hashSet.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/HashSet.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/MutableRef.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiberId.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/FiberId.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/HashMap.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/List.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/data.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/differ/contextPatch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/differ/hashSetPatch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/differ/readonlyArrayPatch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/differ.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/runtimeFlagsPatch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/runtimeFlags.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/RuntimeFlagsPatch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/blockedRequests.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/opCodes/cause.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/cause.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/opCodes/deferred.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/deferred.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/singleShotGen.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/core.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Exit.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/MutableHashMap.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/clock.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/opCodes/configError.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/configError.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/configProvider/pathPatch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/opCodes/config.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/configProvider.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/defaultServices/console.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/random.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/tracer.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/defaultServices.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiberRefs.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/FiberRefs.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/LogLevel.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/logSpan.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Effectable.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiberRefs/patch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/label.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/executionStrategy.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/ExecutionStrategy.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/FiberRefsPatch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiberStatus.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/FiberStatus.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Micro.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Scheduler.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/completedRequestMap.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/concurrency.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiberMessage.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiberScope.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiber.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/logger.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/boundaries.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/keyType.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/key.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/state.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/hook.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/pair.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric/registry.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/metric.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/request.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/supervisor.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Differ.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/supervisor/patch.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/fiberRuntime.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Cause.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Scope.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Data.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/internal/runtime.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Effect.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/ParseResult.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Struct.js","../../node_modules/.pnpm/effect@3.15.1/node_modules/effect/dist/esm/Schema.js","../../src/collections/about.ts","../../app/routes/about.$lang.tsx","../../app/routes/_blog/_archive.route.tsx","../../__vite-browser-external","../../src/schemas/common.ts","../../src/schemas/post.ts","../../src/utils/env.ts","../../src/utils/data.ts","../../src/collections/posts/item.ts","../../src/utils/pagination.ts","../../src/collections/posts/list.ts","../../src/components/inline/DateFormat.tsx","../../src/features/blog/components/PostListTable.tsx","../../app/routes/_blog/_archive.post.index.tsx","../../node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","../../node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js","../../node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/schema.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/merge.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/normalize.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/info.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/types.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/defined-info.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/create.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/aria.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/html.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/svg.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/xlink.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/xmlns.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/xml.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/hast-to-react.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/find.js","../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/index.js","../../node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","../../node_modules/.pnpm/inline-style-parser@0.2.4/node_modules/inline-style-parser/index.js","../../node_modules/.pnpm/style-to-object@1.0.8/node_modules/style-to-object/cjs/index.js","../../node_modules/.pnpm/style-to-js@1.1.16/node_modules/style-to-js/cjs/utilities.js","../../node_modules/.pnpm/style-to-js@1.1.16/node_modules/style-to-js/cjs/index.js","../../node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js","../../node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js","../../node_modules/.pnpm/hast-util-to-jsx-runtime@2.3.6/node_modules/hast-util-to-jsx-runtime/lib/index.js","../../src/utils/hast.ts","../../app/routes/_blog/post.$lang.$slug.tsx","../../src/collections/languages.ts","../../app/routes/_blog/_archive.post.$lang.index.tsx","../../app/routeTree.gen.ts","../../app/router.tsx","../../app/client.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","function parse(str, options) {\n  if (typeof str !== \"string\") {\n    throw new TypeError(\"argument str must be a string\");\n  }\n  const obj = {};\n  const opt = options || {};\n  const dec = opt.decode || decode;\n  let index = 0;\n  while (index < str.length) {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) {\n      break;\n    }\n    let endIdx = str.indexOf(\";\", index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n    const key = str.slice(index, eqIdx).trim();\n    if (opt?.filter && !opt?.filter(key)) {\n      index = endIdx + 1;\n      continue;\n    }\n    if (void 0 === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n      if (val.codePointAt(0) === 34) {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\nfunction decode(str) {\n  return str.includes(\"%\") ? decodeURIComponent(str) : str;\n}\nfunction tryDecode(str, decode2) {\n  try {\n    return decode2(str);\n  } catch {\n    return str;\n  }\n}\n\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007E\\u0080-\\u00FF]+$/;\nfunction serialize(name, value, options) {\n  const opt = options || {};\n  const enc = opt.encode || encodeURIComponent;\n  if (typeof enc !== \"function\") {\n    throw new TypeError(\"option encode is invalid\");\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError(\"argument name is invalid\");\n  }\n  const encodedValue = enc(value);\n  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {\n    throw new TypeError(\"argument val is invalid\");\n  }\n  let str = name + \"=\" + encodedValue;\n  if (void 0 !== opt.maxAge && opt.maxAge !== null) {\n    const maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge) || !Number.isFinite(maxAge)) {\n      throw new TypeError(\"option maxAge is invalid\");\n    }\n    str += \"; Max-Age=\" + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError(\"option domain is invalid\");\n    }\n    str += \"; Domain=\" + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError(\"option path is invalid\");\n    }\n    str += \"; Path=\" + opt.path;\n  }\n  if (opt.expires) {\n    if (!isDate(opt.expires) || Number.isNaN(opt.expires.valueOf())) {\n      throw new TypeError(\"option expires is invalid\");\n    }\n    str += \"; Expires=\" + opt.expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    str += \"; Secure\";\n  }\n  if (opt.priority) {\n    const priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case \"low\": {\n        str += \"; Priority=Low\";\n        break;\n      }\n      case \"medium\": {\n        str += \"; Priority=Medium\";\n        break;\n      }\n      case \"high\": {\n        str += \"; Priority=High\";\n        break;\n      }\n      default: {\n        throw new TypeError(\"option priority is invalid\");\n      }\n    }\n  }\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true: {\n        str += \"; SameSite=Strict\";\n        break;\n      }\n      case \"lax\": {\n        str += \"; SameSite=Lax\";\n        break;\n      }\n      case \"strict\": {\n        str += \"; SameSite=Strict\";\n        break;\n      }\n      case \"none\": {\n        str += \"; SameSite=None\";\n        break;\n      }\n      default: {\n        throw new TypeError(\"option sameSite is invalid\");\n      }\n    }\n  }\n  if (opt.partitioned) {\n    str += \"; Partitioned\";\n  }\n  return str;\n}\nfunction isDate(val) {\n  return Object.prototype.toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\n\nfunction parseSetCookie(setCookieValue, options) {\n  const parts = (setCookieValue || \"\").split(\";\").filter((str) => typeof str === \"string\" && !!str.trim());\n  const nameValuePairStr = parts.shift() || \"\";\n  const parsed = _parseNameValuePair(nameValuePairStr);\n  const name = parsed.name;\n  let value = parsed.value;\n  try {\n    value = options?.decode === false ? value : (options?.decode || decodeURIComponent)(value);\n  } catch {\n  }\n  const cookie = {\n    name,\n    value\n  };\n  for (const part of parts) {\n    const sides = part.split(\"=\");\n    const partKey = (sides.shift() || \"\").trimStart().toLowerCase();\n    const partValue = sides.join(\"=\");\n    switch (partKey) {\n      case \"expires\": {\n        cookie.expires = new Date(partValue);\n        break;\n      }\n      case \"max-age\": {\n        cookie.maxAge = Number.parseInt(partValue, 10);\n        break;\n      }\n      case \"secure\": {\n        cookie.secure = true;\n        break;\n      }\n      case \"httponly\": {\n        cookie.httpOnly = true;\n        break;\n      }\n      case \"samesite\": {\n        cookie.sameSite = partValue;\n        break;\n      }\n      default: {\n        cookie[partKey] = partValue;\n      }\n    }\n  }\n  return cookie;\n}\nfunction _parseNameValuePair(nameValuePairStr) {\n  let name = \"\";\n  let value = \"\";\n  const nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\");\n  } else {\n    value = nameValuePairStr;\n  }\n  return { name, value };\n}\n\nfunction splitSetCookieString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString.flatMap((c) => splitSetCookieString(c));\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n  const cookiesStrings = [];\n  let pos = 0;\n  let start;\n  let ch;\n  let lastComma;\n  let nextStart;\n  let cookiesSeparatorFound;\n  const skipWhitespace = () => {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  };\n  const notSpecialChar = () => {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  };\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.slice(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.slice(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\nexport { parse, parseSetCookie, serialize, splitSetCookieString };\n","import { splitSetCookieString } from \"cookie-es\";\nfunction toHeadersInstance(init) {\n  if (init instanceof Headers) {\n    return new Headers(init);\n  } else if (Array.isArray(init)) {\n    return new Headers(init);\n  } else if (typeof init === \"object\") {\n    return new Headers(init);\n  } else {\n    return new Headers();\n  }\n}\nfunction mergeHeaders(...headers) {\n  return headers.reduce((acc, header) => {\n    const headersInstance = toHeadersInstance(header);\n    for (const [key, value] of headersInstance.entries()) {\n      if (key === \"set-cookie\") {\n        const splitCookies = splitSetCookieString(value);\n        splitCookies.forEach((cookie) => acc.append(\"set-cookie\", cookie));\n      } else {\n        acc.set(key, value);\n      }\n    }\n    return acc;\n  }, new Headers());\n}\nexport {\n  mergeHeaders\n};\n//# sourceMappingURL=headers.js.map\n","import { Derived } from \"./derived.js\";\nconst __storeToDerived = /* @__PURE__ */ new WeakMap();\nconst __derivedToStore = /* @__PURE__ */ new WeakMap();\nconst __depsThatHaveWrittenThisTick = {\n  current: []\n};\nlet __isFlushing = false;\nlet __batchDepth = 0;\nconst __pendingUpdates = /* @__PURE__ */ new Set();\nconst __initialBatchValues = /* @__PURE__ */ new Map();\nfunction __flush_internals(relatedVals) {\n  const sorted = Array.from(relatedVals).sort((a, b) => {\n    if (a instanceof Derived && a.options.deps.includes(b)) return 1;\n    if (b instanceof Derived && b.options.deps.includes(a)) return -1;\n    return 0;\n  });\n  for (const derived of sorted) {\n    if (__depsThatHaveWrittenThisTick.current.includes(derived)) {\n      continue;\n    }\n    __depsThatHaveWrittenThisTick.current.push(derived);\n    derived.recompute();\n    const stores = __derivedToStore.get(derived);\n    if (stores) {\n      for (const store of stores) {\n        const relatedLinkedDerivedVals = __storeToDerived.get(store);\n        if (!relatedLinkedDerivedVals) continue;\n        __flush_internals(relatedLinkedDerivedVals);\n      }\n    }\n  }\n}\nfunction __notifyListeners(store) {\n  store.listeners.forEach(\n    (listener) => listener({\n      prevVal: store.prevState,\n      currentVal: store.state\n    })\n  );\n}\nfunction __notifyDerivedListeners(derived) {\n  derived.listeners.forEach(\n    (listener) => listener({\n      prevVal: derived.prevState,\n      currentVal: derived.state\n    })\n  );\n}\nfunction __flush(store) {\n  if (__batchDepth > 0 && !__initialBatchValues.has(store)) {\n    __initialBatchValues.set(store, store.prevState);\n  }\n  __pendingUpdates.add(store);\n  if (__batchDepth > 0) return;\n  if (__isFlushing) return;\n  try {\n    __isFlushing = true;\n    while (__pendingUpdates.size > 0) {\n      const stores = Array.from(__pendingUpdates);\n      __pendingUpdates.clear();\n      for (const store2 of stores) {\n        const prevState = __initialBatchValues.get(store2) ?? store2.prevState;\n        store2.prevState = prevState;\n        __notifyListeners(store2);\n      }\n      for (const store2 of stores) {\n        const derivedVals = __storeToDerived.get(store2);\n        if (!derivedVals) continue;\n        __depsThatHaveWrittenThisTick.current.push(store2);\n        __flush_internals(derivedVals);\n      }\n      for (const store2 of stores) {\n        const derivedVals = __storeToDerived.get(store2);\n        if (!derivedVals) continue;\n        for (const derived of derivedVals) {\n          __notifyDerivedListeners(derived);\n        }\n      }\n    }\n  } finally {\n    __isFlushing = false;\n    __depsThatHaveWrittenThisTick.current = [];\n    __initialBatchValues.clear();\n  }\n}\nfunction batch(fn) {\n  __batchDepth++;\n  try {\n    fn();\n  } finally {\n    __batchDepth--;\n    if (__batchDepth === 0) {\n      const pendingUpdateToFlush = Array.from(__pendingUpdates)[0];\n      if (pendingUpdateToFlush) {\n        __flush(pendingUpdateToFlush);\n      }\n    }\n  }\n}\nexport {\n  __depsThatHaveWrittenThisTick,\n  __derivedToStore,\n  __flush,\n  __storeToDerived,\n  batch\n};\n//# sourceMappingURL=scheduler.js.map\n","import { __flush } from \"./scheduler.js\";\nclass Store {\n  constructor(initialState, options) {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = (listener) => {\n      var _a, _b;\n      this.listeners.add(listener);\n      const unsub = (_b = (_a = this.options) == null ? void 0 : _a.onSubscribe) == null ? void 0 : _b.call(_a, listener, this);\n      return () => {\n        this.listeners.delete(listener);\n        unsub == null ? void 0 : unsub();\n      };\n    };\n    this.setState = (updater) => {\n      var _a, _b, _c;\n      this.prevState = this.state;\n      this.state = ((_a = this.options) == null ? void 0 : _a.updateFn) ? this.options.updateFn(this.prevState)(updater) : updater(this.prevState);\n      (_c = (_b = this.options) == null ? void 0 : _b.onUpdate) == null ? void 0 : _c.call(_b);\n      __flush(this);\n    };\n    this.prevState = initialState;\n    this.state = initialState;\n    this.options = options;\n  }\n}\nexport {\n  Store\n};\n//# sourceMappingURL=store.js.map\n","import { Store } from \"./store.js\";\nimport { __storeToDerived, __derivedToStore } from \"./scheduler.js\";\nclass Derived {\n  constructor(options) {\n    this.listeners = /* @__PURE__ */ new Set();\n    this._subscriptions = [];\n    this.lastSeenDepValues = [];\n    this.getDepVals = () => {\n      const prevDepVals = [];\n      const currDepVals = [];\n      for (const dep of this.options.deps) {\n        prevDepVals.push(dep.prevState);\n        currDepVals.push(dep.state);\n      }\n      this.lastSeenDepValues = currDepVals;\n      return {\n        prevDepVals,\n        currDepVals,\n        prevVal: this.prevState ?? void 0\n      };\n    };\n    this.recompute = () => {\n      var _a, _b;\n      this.prevState = this.state;\n      const { prevDepVals, currDepVals, prevVal } = this.getDepVals();\n      this.state = this.options.fn({\n        prevDepVals,\n        currDepVals,\n        prevVal\n      });\n      (_b = (_a = this.options).onUpdate) == null ? void 0 : _b.call(_a);\n    };\n    this.checkIfRecalculationNeededDeeply = () => {\n      for (const dep of this.options.deps) {\n        if (dep instanceof Derived) {\n          dep.checkIfRecalculationNeededDeeply();\n        }\n      }\n      let shouldRecompute = false;\n      const lastSeenDepValues = this.lastSeenDepValues;\n      const { currDepVals } = this.getDepVals();\n      for (let i = 0; i < currDepVals.length; i++) {\n        if (currDepVals[i] !== lastSeenDepValues[i]) {\n          shouldRecompute = true;\n          break;\n        }\n      }\n      if (shouldRecompute) {\n        this.recompute();\n      }\n    };\n    this.mount = () => {\n      this.registerOnGraph();\n      this.checkIfRecalculationNeededDeeply();\n      return () => {\n        this.unregisterFromGraph();\n        for (const cleanup of this._subscriptions) {\n          cleanup();\n        }\n      };\n    };\n    this.subscribe = (listener) => {\n      var _a, _b;\n      this.listeners.add(listener);\n      const unsub = (_b = (_a = this.options).onSubscribe) == null ? void 0 : _b.call(_a, listener, this);\n      return () => {\n        this.listeners.delete(listener);\n        unsub == null ? void 0 : unsub();\n      };\n    };\n    this.options = options;\n    this.state = options.fn({\n      prevDepVals: void 0,\n      prevVal: void 0,\n      currDepVals: this.getDepVals().currDepVals\n    });\n  }\n  registerOnGraph(deps = this.options.deps) {\n    for (const dep of deps) {\n      if (dep instanceof Derived) {\n        dep.registerOnGraph();\n        this.registerOnGraph(dep.options.deps);\n      } else if (dep instanceof Store) {\n        let relatedLinkedDerivedVals = __storeToDerived.get(dep);\n        if (!relatedLinkedDerivedVals) {\n          relatedLinkedDerivedVals = /* @__PURE__ */ new Set();\n          __storeToDerived.set(dep, relatedLinkedDerivedVals);\n        }\n        relatedLinkedDerivedVals.add(this);\n        let relatedStores = __derivedToStore.get(this);\n        if (!relatedStores) {\n          relatedStores = /* @__PURE__ */ new Set();\n          __derivedToStore.set(this, relatedStores);\n        }\n        relatedStores.add(dep);\n      }\n    }\n  }\n  unregisterFromGraph(deps = this.options.deps) {\n    for (const dep of deps) {\n      if (dep instanceof Derived) {\n        this.unregisterFromGraph(dep.options.deps);\n      } else if (dep instanceof Store) {\n        const relatedLinkedDerivedVals = __storeToDerived.get(dep);\n        if (relatedLinkedDerivedVals) {\n          relatedLinkedDerivedVals.delete(this);\n        }\n        const relatedStores = __derivedToStore.get(this);\n        if (relatedStores) {\n          relatedStores.delete(dep);\n        }\n      }\n    }\n  }\n}\nexport {\n  Derived\n};\n//# sourceMappingURL=derived.js.map\n","const stateIndexKey = \"__TSR_index\";\nconst popStateEvent = \"popstate\";\nconst beforeUnloadEvent = \"beforeunload\";\nfunction createHistory(opts) {\n  let location = opts.getLocation();\n  const subscribers = /* @__PURE__ */ new Set();\n  const notify = (action) => {\n    location = opts.getLocation();\n    subscribers.forEach((subscriber) => subscriber({ location, action }));\n  };\n  const handleIndexChange = (action) => {\n    if (opts.notifyOnIndexChange ?? true) notify(action);\n    else location = opts.getLocation();\n  };\n  const tryNavigation = async ({\n    task,\n    navigateOpts,\n    ...actionInfo\n  }) => {\n    var _a, _b;\n    const ignoreBlocker = (navigateOpts == null ? void 0 : navigateOpts.ignoreBlocker) ?? false;\n    if (ignoreBlocker) {\n      task();\n      return;\n    }\n    const blockers = ((_a = opts.getBlockers) == null ? void 0 : _a.call(opts)) ?? [];\n    const isPushOrReplace = actionInfo.type === \"PUSH\" || actionInfo.type === \"REPLACE\";\n    if (typeof document !== \"undefined\" && blockers.length && isPushOrReplace) {\n      for (const blocker of blockers) {\n        const nextLocation = parseHref(actionInfo.path, actionInfo.state);\n        const isBlocked = await blocker.blockerFn({\n          currentLocation: location,\n          nextLocation,\n          action: actionInfo.type\n        });\n        if (isBlocked) {\n          (_b = opts.onBlocked) == null ? void 0 : _b.call(opts);\n          return;\n        }\n      }\n    }\n    task();\n  };\n  return {\n    get location() {\n      return location;\n    },\n    get length() {\n      return opts.getLength();\n    },\n    subscribers,\n    subscribe: (cb) => {\n      subscribers.add(cb);\n      return () => {\n        subscribers.delete(cb);\n      };\n    },\n    push: (path, state, navigateOpts) => {\n      const currentIndex = location.state[stateIndexKey];\n      state = assignKeyAndIndex(currentIndex + 1, state);\n      tryNavigation({\n        task: () => {\n          opts.pushState(path, state);\n          notify({ type: \"PUSH\" });\n        },\n        navigateOpts,\n        type: \"PUSH\",\n        path,\n        state\n      });\n    },\n    replace: (path, state, navigateOpts) => {\n      const currentIndex = location.state[stateIndexKey];\n      state = assignKeyAndIndex(currentIndex, state);\n      tryNavigation({\n        task: () => {\n          opts.replaceState(path, state);\n          notify({ type: \"REPLACE\" });\n        },\n        navigateOpts,\n        type: \"REPLACE\",\n        path,\n        state\n      });\n    },\n    go: (index, navigateOpts) => {\n      tryNavigation({\n        task: () => {\n          opts.go(index);\n          handleIndexChange({ type: \"GO\", index });\n        },\n        navigateOpts,\n        type: \"GO\"\n      });\n    },\n    back: (navigateOpts) => {\n      tryNavigation({\n        task: () => {\n          opts.back((navigateOpts == null ? void 0 : navigateOpts.ignoreBlocker) ?? false);\n          handleIndexChange({ type: \"BACK\" });\n        },\n        navigateOpts,\n        type: \"BACK\"\n      });\n    },\n    forward: (navigateOpts) => {\n      tryNavigation({\n        task: () => {\n          opts.forward((navigateOpts == null ? void 0 : navigateOpts.ignoreBlocker) ?? false);\n          handleIndexChange({ type: \"FORWARD\" });\n        },\n        navigateOpts,\n        type: \"FORWARD\"\n      });\n    },\n    canGoBack: () => location.state[stateIndexKey] !== 0,\n    createHref: (str) => opts.createHref(str),\n    block: (blocker) => {\n      var _a;\n      if (!opts.setBlockers) return () => {\n      };\n      const blockers = ((_a = opts.getBlockers) == null ? void 0 : _a.call(opts)) ?? [];\n      opts.setBlockers([...blockers, blocker]);\n      return () => {\n        var _a2, _b;\n        const blockers2 = ((_a2 = opts.getBlockers) == null ? void 0 : _a2.call(opts)) ?? [];\n        (_b = opts.setBlockers) == null ? void 0 : _b.call(opts, blockers2.filter((b) => b !== blocker));\n      };\n    },\n    flush: () => {\n      var _a;\n      return (_a = opts.flush) == null ? void 0 : _a.call(opts);\n    },\n    destroy: () => {\n      var _a;\n      return (_a = opts.destroy) == null ? void 0 : _a.call(opts);\n    },\n    notify\n  };\n}\nfunction assignKeyAndIndex(index, state) {\n  if (!state) {\n    state = {};\n  }\n  return {\n    ...state,\n    key: createRandomKey(),\n    [stateIndexKey]: index\n  };\n}\nfunction createBrowserHistory(opts) {\n  var _a;\n  const win = (opts == null ? void 0 : opts.window) ?? (typeof document !== \"undefined\" ? window : void 0);\n  const originalPushState = win.history.pushState;\n  const originalReplaceState = win.history.replaceState;\n  let blockers = [];\n  const _getBlockers = () => blockers;\n  const _setBlockers = (newBlockers) => blockers = newBlockers;\n  const createHref = (opts == null ? void 0 : opts.createHref) ?? ((path) => path);\n  const parseLocation = (opts == null ? void 0 : opts.parseLocation) ?? (() => parseHref(\n    `${win.location.pathname}${win.location.search}${win.location.hash}`,\n    win.history.state\n  ));\n  if (!((_a = win.history.state) == null ? void 0 : _a.key)) {\n    win.history.replaceState(\n      {\n        [stateIndexKey]: 0,\n        key: createRandomKey()\n      },\n      \"\"\n    );\n  }\n  let currentLocation = parseLocation();\n  let rollbackLocation;\n  let nextPopIsGo = false;\n  let ignoreNextPop = false;\n  let skipBlockerNextPop = false;\n  let ignoreNextBeforeUnload = false;\n  const getLocation = () => currentLocation;\n  let next;\n  let scheduled;\n  const flush = () => {\n    if (!next) {\n      return;\n    }\n    history._ignoreSubscribers = true;\n    (next.isPush ? win.history.pushState : win.history.replaceState)(\n      next.state,\n      \"\",\n      next.href\n    );\n    history._ignoreSubscribers = false;\n    next = void 0;\n    scheduled = void 0;\n    rollbackLocation = void 0;\n  };\n  const queueHistoryAction = (type, destHref, state) => {\n    const href = createHref(destHref);\n    if (!scheduled) {\n      rollbackLocation = currentLocation;\n    }\n    currentLocation = parseHref(destHref, state);\n    next = {\n      href,\n      state,\n      isPush: (next == null ? void 0 : next.isPush) || type === \"push\"\n    };\n    if (!scheduled) {\n      scheduled = Promise.resolve().then(() => flush());\n    }\n  };\n  const onPushPop = (type) => {\n    currentLocation = parseLocation();\n    history.notify({ type });\n  };\n  const onPushPopEvent = async () => {\n    if (ignoreNextPop) {\n      ignoreNextPop = false;\n      return;\n    }\n    const nextLocation = parseLocation();\n    const delta = nextLocation.state[stateIndexKey] - currentLocation.state[stateIndexKey];\n    const isForward = delta === 1;\n    const isBack = delta === -1;\n    const isGo = !isForward && !isBack || nextPopIsGo;\n    nextPopIsGo = false;\n    const action = isGo ? \"GO\" : isBack ? \"BACK\" : \"FORWARD\";\n    const notify = isGo ? {\n      type: \"GO\",\n      index: delta\n    } : {\n      type: isBack ? \"BACK\" : \"FORWARD\"\n    };\n    if (skipBlockerNextPop) {\n      skipBlockerNextPop = false;\n    } else {\n      const blockers2 = _getBlockers();\n      if (typeof document !== \"undefined\" && blockers2.length) {\n        for (const blocker of blockers2) {\n          const isBlocked = await blocker.blockerFn({\n            currentLocation,\n            nextLocation,\n            action\n          });\n          if (isBlocked) {\n            ignoreNextPop = true;\n            win.history.go(1);\n            history.notify(notify);\n            return;\n          }\n        }\n      }\n    }\n    currentLocation = parseLocation();\n    history.notify(notify);\n  };\n  const onBeforeUnload = (e) => {\n    if (ignoreNextBeforeUnload) {\n      ignoreNextBeforeUnload = false;\n      return;\n    }\n    let shouldBlock = false;\n    const blockers2 = _getBlockers();\n    if (typeof document !== \"undefined\" && blockers2.length) {\n      for (const blocker of blockers2) {\n        const shouldHaveBeforeUnload = blocker.enableBeforeUnload ?? true;\n        if (shouldHaveBeforeUnload === true) {\n          shouldBlock = true;\n          break;\n        }\n        if (typeof shouldHaveBeforeUnload === \"function\" && shouldHaveBeforeUnload() === true) {\n          shouldBlock = true;\n          break;\n        }\n      }\n    }\n    if (shouldBlock) {\n      e.preventDefault();\n      return e.returnValue = \"\";\n    }\n    return;\n  };\n  const history = createHistory({\n    getLocation,\n    getLength: () => win.history.length,\n    pushState: (href, state) => queueHistoryAction(\"push\", href, state),\n    replaceState: (href, state) => queueHistoryAction(\"replace\", href, state),\n    back: (ignoreBlocker) => {\n      if (ignoreBlocker) skipBlockerNextPop = true;\n      ignoreNextBeforeUnload = true;\n      return win.history.back();\n    },\n    forward: (ignoreBlocker) => {\n      if (ignoreBlocker) skipBlockerNextPop = true;\n      ignoreNextBeforeUnload = true;\n      win.history.forward();\n    },\n    go: (n) => {\n      nextPopIsGo = true;\n      win.history.go(n);\n    },\n    createHref: (href) => createHref(href),\n    flush,\n    destroy: () => {\n      win.history.pushState = originalPushState;\n      win.history.replaceState = originalReplaceState;\n      win.removeEventListener(beforeUnloadEvent, onBeforeUnload, {\n        capture: true\n      });\n      win.removeEventListener(popStateEvent, onPushPopEvent);\n    },\n    onBlocked: () => {\n      if (rollbackLocation && currentLocation !== rollbackLocation) {\n        currentLocation = rollbackLocation;\n      }\n    },\n    getBlockers: _getBlockers,\n    setBlockers: _setBlockers,\n    notifyOnIndexChange: false\n  });\n  win.addEventListener(beforeUnloadEvent, onBeforeUnload, { capture: true });\n  win.addEventListener(popStateEvent, onPushPopEvent);\n  win.history.pushState = function(...args) {\n    const res = originalPushState.apply(win.history, args);\n    if (!history._ignoreSubscribers) onPushPop(\"PUSH\");\n    return res;\n  };\n  win.history.replaceState = function(...args) {\n    const res = originalReplaceState.apply(win.history, args);\n    if (!history._ignoreSubscribers) onPushPop(\"REPLACE\");\n    return res;\n  };\n  return history;\n}\nfunction createHashHistory(opts) {\n  const win = (opts == null ? void 0 : opts.window) ?? (typeof document !== \"undefined\" ? window : void 0);\n  return createBrowserHistory({\n    window: win,\n    parseLocation: () => {\n      const hashSplit = win.location.hash.split(\"#\").slice(1);\n      const pathPart = hashSplit[0] ?? \"/\";\n      const searchPart = win.location.search;\n      const hashEntries = hashSplit.slice(1);\n      const hashPart = hashEntries.length === 0 ? \"\" : `#${hashEntries.join(\"#\")}`;\n      const hashHref = `${pathPart}${searchPart}${hashPart}`;\n      return parseHref(hashHref, win.history.state);\n    },\n    createHref: (href) => `${win.location.pathname}${win.location.search}#${href}`\n  });\n}\nfunction createMemoryHistory(opts = {\n  initialEntries: [\"/\"]\n}) {\n  const entries = opts.initialEntries;\n  let index = opts.initialIndex ? Math.min(Math.max(opts.initialIndex, 0), entries.length - 1) : entries.length - 1;\n  const states = entries.map(\n    (_entry, index2) => assignKeyAndIndex(index2, void 0)\n  );\n  const getLocation = () => parseHref(entries[index], states[index]);\n  return createHistory({\n    getLocation,\n    getLength: () => entries.length,\n    pushState: (path, state) => {\n      if (index < entries.length - 1) {\n        entries.splice(index + 1);\n        states.splice(index + 1);\n      }\n      states.push(state);\n      entries.push(path);\n      index = Math.max(entries.length - 1, 0);\n    },\n    replaceState: (path, state) => {\n      states[index] = state;\n      entries[index] = path;\n    },\n    back: () => {\n      index = Math.max(index - 1, 0);\n    },\n    forward: () => {\n      index = Math.min(index + 1, entries.length - 1);\n    },\n    go: (n) => {\n      index = Math.min(Math.max(index + n, 0), entries.length - 1);\n    },\n    createHref: (path) => path\n  });\n}\nfunction parseHref(href, state) {\n  const hashIndex = href.indexOf(\"#\");\n  const searchIndex = href.indexOf(\"?\");\n  return {\n    href,\n    pathname: href.substring(\n      0,\n      hashIndex > 0 ? searchIndex > 0 ? Math.min(hashIndex, searchIndex) : hashIndex : searchIndex > 0 ? searchIndex : href.length\n    ),\n    hash: hashIndex > -1 ? href.substring(hashIndex) : \"\",\n    search: searchIndex > -1 ? href.slice(searchIndex, hashIndex === -1 ? void 0 : hashIndex) : \"\",\n    state: state || { [stateIndexKey]: 0, key: createRandomKey() }\n  };\n}\nfunction createRandomKey() {\n  return (Math.random() + 1).toString(36).substring(7);\n}\nexport {\n  createBrowserHistory,\n  createHashHistory,\n  createHistory,\n  createMemoryHistory,\n  parseHref\n};\n//# sourceMappingURL=index.js.map\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","function last(arr) {\n  return arr[arr.length - 1];\n}\nfunction isFunction(d) {\n  return typeof d === \"function\";\n}\nfunction functionalUpdate(updater, previous) {\n  if (isFunction(updater)) {\n    return updater(previous);\n  }\n  return updater;\n}\nfunction pick(parent, keys) {\n  return keys.reduce((obj, key) => {\n    obj[key] = parent[key];\n    return obj;\n  }, {});\n}\nfunction replaceEqualDeep(prev, _next) {\n  if (prev === _next) {\n    return prev;\n  }\n  const next = _next;\n  const array = isPlainArray(prev) && isPlainArray(next);\n  if (array || isPlainObject(prev) && isPlainObject(next)) {\n    const prevItems = array ? prev : Object.keys(prev);\n    const prevSize = prevItems.length;\n    const nextItems = array ? next : Object.keys(next);\n    const nextSize = nextItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < nextSize; i++) {\n      const key = array ? i : nextItems[i];\n      if ((!array && prevItems.includes(key) || array) && prev[key] === void 0 && next[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(prev[key], next[key]);\n        if (copy[key] === prev[key] && prev[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return prevSize === nextSize && equalItems === prevSize ? prev : copy;\n  }\n  return next;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (typeof ctor === \"undefined\") {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction getObjectKeys(obj, ignoreUndefined) {\n  let keys = Object.keys(obj);\n  if (ignoreUndefined) {\n    keys = keys.filter((key) => obj[key] !== void 0);\n  }\n  return keys;\n}\nfunction deepEqual(a, b, opts) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (isPlainObject(a) && isPlainObject(b)) {\n    const ignoreUndefined = (opts == null ? void 0 : opts.ignoreUndefined) ?? true;\n    const aKeys = getObjectKeys(a, ignoreUndefined);\n    const bKeys = getObjectKeys(b, ignoreUndefined);\n    if (!(opts == null ? void 0 : opts.partial) && aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return bKeys.every((key) => deepEqual(a[key], b[key], opts));\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    return !a.some((item, index) => !deepEqual(item, b[index], opts));\n  }\n  return false;\n}\nfunction createControlledPromise(onResolve) {\n  let resolveLoadPromise;\n  let rejectLoadPromise;\n  const controlledPromise = new Promise((resolve, reject) => {\n    resolveLoadPromise = resolve;\n    rejectLoadPromise = reject;\n  });\n  controlledPromise.status = \"pending\";\n  controlledPromise.resolve = (value) => {\n    controlledPromise.status = \"resolved\";\n    controlledPromise.value = value;\n    resolveLoadPromise(value);\n    onResolve == null ? void 0 : onResolve(value);\n  };\n  controlledPromise.reject = (e) => {\n    controlledPromise.status = \"rejected\";\n    rejectLoadPromise(e);\n  };\n  return controlledPromise;\n}\nfunction escapeJSON(jsonString) {\n  return jsonString.replace(/\\\\/g, \"\\\\\\\\\").replace(/'/g, \"\\\\'\").replace(/\"/g, '\\\\\"');\n}\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (const item of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(objB, item) || !Object.is(objA[item], objB[item])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasUriEncodedChars(inputString) {\n  const pattern = /%[0-9A-Fa-f]{2}/;\n  return pattern.test(inputString);\n}\nexport {\n  createControlledPromise,\n  deepEqual,\n  escapeJSON,\n  functionalUpdate,\n  hasUriEncodedChars,\n  isPlainArray,\n  isPlainObject,\n  last,\n  pick,\n  replaceEqualDeep,\n  shallow\n};\n//# sourceMappingURL=utils.js.map\n","import { last } from \"./utils.js\";\nfunction joinPaths(paths) {\n  return cleanPath(\n    paths.filter((val) => {\n      return val !== void 0;\n    }).join(\"/\")\n  );\n}\nfunction cleanPath(path) {\n  return path.replace(/\\/{2,}/g, \"/\");\n}\nfunction trimPathLeft(path) {\n  return path === \"/\" ? path : path.replace(/^\\/{1,}/, \"\");\n}\nfunction trimPathRight(path) {\n  return path === \"/\" ? path : path.replace(/\\/{1,}$/, \"\");\n}\nfunction trimPath(path) {\n  return trimPathRight(trimPathLeft(path));\n}\nfunction removeTrailingSlash(value, basepath) {\n  if ((value == null ? void 0 : value.endsWith(\"/\")) && value !== \"/\" && value !== `${basepath}/`) {\n    return value.slice(0, -1);\n  }\n  return value;\n}\nfunction exactPathTest(pathName1, pathName2, basepath) {\n  return removeTrailingSlash(pathName1, basepath) === removeTrailingSlash(pathName2, basepath);\n}\nfunction resolvePath({\n  basepath,\n  base,\n  to,\n  trailingSlash = \"never\",\n  caseSensitive\n}) {\n  var _a, _b;\n  base = removeBasepath(basepath, base, caseSensitive);\n  to = removeBasepath(basepath, to, caseSensitive);\n  let baseSegments = parsePathname(base);\n  const toSegments = parsePathname(to);\n  if (baseSegments.length > 1 && ((_a = last(baseSegments)) == null ? void 0 : _a.value) === \"/\") {\n    baseSegments.pop();\n  }\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === \"/\") {\n      if (!index) {\n        baseSegments = [toSegment];\n      } else if (index === toSegments.length - 1) {\n        baseSegments.push(toSegment);\n      } else ;\n    } else if (toSegment.value === \"..\") {\n      baseSegments.pop();\n    } else if (toSegment.value === \".\") ;\n    else {\n      baseSegments.push(toSegment);\n    }\n  });\n  if (baseSegments.length > 1) {\n    if (((_b = last(baseSegments)) == null ? void 0 : _b.value) === \"/\") {\n      if (trailingSlash === \"never\") {\n        baseSegments.pop();\n      }\n    } else if (trailingSlash === \"always\") {\n      baseSegments.push({ type: \"pathname\", value: \"/\" });\n    }\n  }\n  const joined = joinPaths([basepath, ...baseSegments.map((d) => d.value)]);\n  return cleanPath(joined);\n}\nfunction parsePathname(pathname) {\n  if (!pathname) {\n    return [];\n  }\n  pathname = cleanPath(pathname);\n  const segments = [];\n  if (pathname.slice(0, 1) === \"/\") {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: \"pathname\",\n      value: \"/\"\n    });\n  }\n  if (!pathname) {\n    return segments;\n  }\n  const split = pathname.split(\"/\").filter(Boolean);\n  segments.push(\n    ...split.map((part) => {\n      if (part === \"$\" || part === \"*\") {\n        return {\n          type: \"wildcard\",\n          value: part\n        };\n      }\n      if (part.charAt(0) === \"$\") {\n        return {\n          type: \"param\",\n          value: part\n        };\n      }\n      return {\n        type: \"pathname\",\n        value: part.includes(\"%25\") ? part.split(\"%25\").map((segment) => decodeURI(segment)).join(\"%25\") : decodeURI(part)\n      };\n    })\n  );\n  if (pathname.slice(-1) === \"/\") {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: \"pathname\",\n      value: \"/\"\n    });\n  }\n  return segments;\n}\nfunction interpolatePath({\n  path,\n  params,\n  leaveWildcards,\n  leaveParams,\n  decodeCharMap\n}) {\n  const interpolatedPathSegments = parsePathname(path);\n  function encodeParam(key) {\n    const value = params[key];\n    const isValueString = typeof value === \"string\";\n    if ([\"*\", \"_splat\"].includes(key)) {\n      return isValueString ? encodeURI(value) : value;\n    } else {\n      return isValueString ? encodePathParam(value, decodeCharMap) : value;\n    }\n  }\n  let isMissingParams = false;\n  const usedParams = {};\n  const interpolatedPath = joinPaths(\n    interpolatedPathSegments.map((segment) => {\n      if (segment.type === \"wildcard\") {\n        usedParams._splat = params._splat;\n        const value = encodeParam(\"_splat\");\n        if (leaveWildcards) return `${segment.value}${value ?? \"\"}`;\n        return value;\n      }\n      if (segment.type === \"param\") {\n        const key = segment.value.substring(1);\n        if (!isMissingParams && !(key in params)) {\n          isMissingParams = true;\n        }\n        usedParams[key] = params[key];\n        if (leaveParams) {\n          const value = encodeParam(segment.value);\n          return `${segment.value}${value ?? \"\"}`;\n        }\n        return encodeParam(key) ?? \"undefined\";\n      }\n      return segment.value;\n    })\n  );\n  return { usedParams, interpolatedPath, isMissingParams };\n}\nfunction encodePathParam(value, decodeCharMap) {\n  let encoded = encodeURIComponent(value);\n  if (decodeCharMap) {\n    for (const [encodedChar, char] of decodeCharMap) {\n      encoded = encoded.replaceAll(encodedChar, char);\n    }\n  }\n  return encoded;\n}\nfunction matchPathname(basepath, currentPathname, matchLocation) {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation);\n  if (matchLocation.to && !pathParams) {\n    return;\n  }\n  return pathParams ?? {};\n}\nfunction removeBasepath(basepath, pathname, caseSensitive = false) {\n  const normalizedBasepath = caseSensitive ? basepath : basepath.toLowerCase();\n  const normalizedPathname = caseSensitive ? pathname : pathname.toLowerCase();\n  switch (true) {\n    // default behaviour is to serve app from the root - pathname\n    // left untouched\n    case normalizedBasepath === \"/\":\n      return pathname;\n    // shortcut for removing the basepath if it matches the pathname\n    case normalizedPathname === normalizedBasepath:\n      return \"\";\n    // in case pathname is shorter than basepath - there is\n    // nothing to remove\n    case pathname.length < basepath.length:\n      return pathname;\n    // avoid matching partial segments - strict equality handled\n    // earlier, otherwise, basepath separated from pathname with\n    // separator, therefore lack of separator means partial\n    // segment match (`/app` should not match `/application`)\n    case normalizedPathname[normalizedBasepath.length] !== \"/\":\n      return pathname;\n    // remove the basepath from the pathname if it starts with it\n    case normalizedPathname.startsWith(normalizedBasepath):\n      return pathname.slice(basepath.length);\n    // otherwise, return the pathname as is\n    default:\n      return pathname;\n  }\n}\nfunction matchByPath(basepath, from, matchLocation) {\n  if (basepath !== \"/\" && !from.startsWith(basepath)) {\n    return void 0;\n  }\n  from = removeBasepath(basepath, from, matchLocation.caseSensitive);\n  const to = removeBasepath(\n    basepath,\n    `${matchLocation.to ?? \"$\"}`,\n    matchLocation.caseSensitive\n  );\n  const baseSegments = parsePathname(from);\n  const routeSegments = parsePathname(to);\n  if (!from.startsWith(\"/\")) {\n    baseSegments.unshift({\n      type: \"pathname\",\n      value: \"/\"\n    });\n  }\n  if (!to.startsWith(\"/\")) {\n    routeSegments.unshift({\n      type: \"pathname\",\n      value: \"/\"\n    });\n  }\n  const params = {};\n  const isMatch = (() => {\n    for (let i = 0; i < Math.max(baseSegments.length, routeSegments.length); i++) {\n      const baseSegment = baseSegments[i];\n      const routeSegment = routeSegments[i];\n      const isLastBaseSegment = i >= baseSegments.length - 1;\n      const isLastRouteSegment = i >= routeSegments.length - 1;\n      if (routeSegment) {\n        if (routeSegment.type === \"wildcard\") {\n          const _splat = decodeURI(\n            joinPaths(baseSegments.slice(i).map((d) => d.value))\n          );\n          params[\"*\"] = _splat;\n          params[\"_splat\"] = _splat;\n          return true;\n        }\n        if (routeSegment.type === \"pathname\") {\n          if (routeSegment.value === \"/\" && !(baseSegment == null ? void 0 : baseSegment.value)) {\n            return true;\n          }\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false;\n              }\n            } else if (routeSegment.value.toLowerCase() !== baseSegment.value.toLowerCase()) {\n              return false;\n            }\n          }\n        }\n        if (!baseSegment) {\n          return false;\n        }\n        if (routeSegment.type === \"param\") {\n          if (baseSegment.value === \"/\") {\n            return false;\n          }\n          if (baseSegment.value.charAt(0) !== \"$\") {\n            params[routeSegment.value.substring(1)] = decodeURIComponent(\n              baseSegment.value\n            );\n          }\n        }\n      }\n      if (!isLastBaseSegment && isLastRouteSegment) {\n        params[\"**\"] = joinPaths(baseSegments.slice(i + 1).map((d) => d.value));\n        return !!matchLocation.fuzzy && (routeSegment == null ? void 0 : routeSegment.value) !== \"/\";\n      }\n    }\n    return true;\n  })();\n  return isMatch ? params : void 0;\n}\nexport {\n  cleanPath,\n  exactPathTest,\n  interpolatePath,\n  joinPaths,\n  matchByPath,\n  matchPathname,\n  parsePathname,\n  removeBasepath,\n  removeTrailingSlash,\n  resolvePath,\n  trimPath,\n  trimPathLeft,\n  trimPathRight\n};\n//# sourceMappingURL=path.js.map\n","function notFound(options = {}) {\n  options.isNotFound = true;\n  if (options.throw) throw options;\n  return options;\n}\nfunction isNotFound(obj) {\n  return !!(obj == null ? void 0 : obj.isNotFound);\n}\nexport {\n  isNotFound,\n  notFound\n};\n//# sourceMappingURL=not-found.js.map\n","import { functionalUpdate } from \"./utils.js\";\nconst storageKey = \"tsr-scroll-restoration-v1_3\";\nlet sessionsStorage = false;\ntry {\n  sessionsStorage = typeof window !== \"undefined\" && typeof window.sessionStorage === \"object\";\n} catch {\n}\nconst throttle = (fn, wait) => {\n  let timeout;\n  return (...args) => {\n    if (!timeout) {\n      timeout = setTimeout(() => {\n        fn(...args);\n        timeout = null;\n      }, wait);\n    }\n  };\n};\nconst scrollRestorationCache = sessionsStorage ? (() => {\n  const state = JSON.parse(window.sessionStorage.getItem(storageKey) || \"null\") || {};\n  return {\n    state,\n    // This setter is simply to make sure that we set the sessionStorage right\n    // after the state is updated. It doesn't necessarily need to be a functional\n    // update.\n    set: (updater) => (scrollRestorationCache.state = functionalUpdate(updater, scrollRestorationCache.state) || scrollRestorationCache.state, window.sessionStorage.setItem(\n      storageKey,\n      JSON.stringify(scrollRestorationCache.state)\n    ))\n  };\n})() : void 0;\nconst defaultGetScrollRestorationKey = (location) => {\n  return location.state.key || location.href;\n};\nfunction getCssSelector(el) {\n  const path = [];\n  let parent;\n  while (parent = el.parentNode) {\n    path.unshift(\n      `${el.tagName}:nth-child(${[].indexOf.call(parent.children, el) + 1})`\n    );\n    el = parent;\n  }\n  return `${path.join(\" > \")}`.toLowerCase();\n}\nlet ignoreScroll = false;\nfunction restoreScroll(storageKey2, key, behavior, shouldScrollRestoration, scrollToTopSelectors) {\n  var _a;\n  let byKey;\n  try {\n    byKey = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n  } catch (error) {\n    console.error(error);\n    return;\n  }\n  const resolvedKey = key || ((_a = window.history.state) == null ? void 0 : _a.key);\n  const elementEntries = byKey[resolvedKey];\n  ignoreScroll = true;\n  (() => {\n    if (shouldScrollRestoration && elementEntries) {\n      for (const elementSelector in elementEntries) {\n        const entry = elementEntries[elementSelector];\n        if (elementSelector === \"window\") {\n          window.scrollTo({\n            top: entry.scrollY,\n            left: entry.scrollX,\n            behavior\n          });\n        } else if (elementSelector) {\n          const element = document.querySelector(elementSelector);\n          if (element) {\n            element.scrollLeft = entry.scrollX;\n            element.scrollTop = entry.scrollY;\n          }\n        }\n      }\n      return;\n    }\n    const hash = window.location.hash.split(\"#\")[1];\n    if (hash) {\n      const hashScrollIntoViewOptions = (window.history.state || {}).__hashScrollIntoViewOptions ?? true;\n      if (hashScrollIntoViewOptions) {\n        const el = document.getElementById(hash);\n        if (el) {\n          el.scrollIntoView(hashScrollIntoViewOptions);\n        }\n      }\n      return;\n    }\n    [\n      \"window\",\n      ...(scrollToTopSelectors == null ? void 0 : scrollToTopSelectors.filter((d) => d !== \"window\")) ?? []\n    ].forEach((selector) => {\n      const element = selector === \"window\" ? window : document.querySelector(selector);\n      if (element) {\n        element.scrollTo({\n          top: 0,\n          left: 0,\n          behavior\n        });\n      }\n    });\n  })();\n  ignoreScroll = false;\n}\nfunction setupScrollRestoration(router, force) {\n  const shouldScrollRestoration = force ?? router.options.scrollRestoration ?? false;\n  if (shouldScrollRestoration) {\n    router.isScrollRestoring = true;\n  }\n  if (typeof document === \"undefined\" || router.isScrollRestorationSetup) {\n    return;\n  }\n  router.isScrollRestorationSetup = true;\n  ignoreScroll = false;\n  const getKey = router.options.getScrollRestorationKey || defaultGetScrollRestorationKey;\n  window.history.scrollRestoration = \"manual\";\n  const onScroll = (event) => {\n    if (ignoreScroll || !router.isScrollRestoring) {\n      return;\n    }\n    let elementSelector = \"\";\n    if (event.target === document || event.target === window) {\n      elementSelector = \"window\";\n    } else {\n      const attrId = event.target.getAttribute(\n        \"data-scroll-restoration-id\"\n      );\n      if (attrId) {\n        elementSelector = `[data-scroll-restoration-id=\"${attrId}\"]`;\n      } else {\n        elementSelector = getCssSelector(event.target);\n      }\n    }\n    const restoreKey = getKey(router.state.location);\n    scrollRestorationCache.set((state) => {\n      const keyEntry = state[restoreKey] = state[restoreKey] || {};\n      const elementEntry = keyEntry[elementSelector] = keyEntry[elementSelector] || {};\n      if (elementSelector === \"window\") {\n        elementEntry.scrollX = window.scrollX || 0;\n        elementEntry.scrollY = window.scrollY || 0;\n      } else if (elementSelector) {\n        const element = document.querySelector(elementSelector);\n        if (element) {\n          elementEntry.scrollX = element.scrollLeft || 0;\n          elementEntry.scrollY = element.scrollTop || 0;\n        }\n      }\n      return state;\n    });\n  };\n  if (typeof document !== \"undefined\") {\n    document.addEventListener(\"scroll\", throttle(onScroll, 100), true);\n  }\n  router.subscribe(\"onRendered\", (event) => {\n    const cacheKey = getKey(event.toLocation);\n    if (!router.resetNextScroll) {\n      router.resetNextScroll = true;\n      return;\n    }\n    restoreScroll(\n      storageKey,\n      cacheKey,\n      router.options.scrollRestorationBehavior || void 0,\n      router.isScrollRestoring || void 0,\n      router.options.scrollToTopSelectors || void 0\n    );\n    if (router.isScrollRestoring) {\n      scrollRestorationCache.set((state) => {\n        state[cacheKey] = state[cacheKey] || {};\n        return state;\n      });\n    }\n  });\n}\nfunction handleHashScroll(router) {\n  if (typeof document !== \"undefined\" && document.querySelector) {\n    const hashScrollIntoViewOptions = router.state.location.state.__hashScrollIntoViewOptions ?? true;\n    if (hashScrollIntoViewOptions && router.state.location.hash !== \"\") {\n      const el = document.getElementById(router.state.location.hash);\n      if (el) {\n        el.scrollIntoView(hashScrollIntoViewOptions);\n      }\n    }\n  }\n}\nexport {\n  defaultGetScrollRestorationKey,\n  getCssSelector,\n  handleHashScroll,\n  restoreScroll,\n  scrollRestorationCache,\n  setupScrollRestoration,\n  storageKey\n};\n//# sourceMappingURL=scroll-restoration.js.map\n","import { hasUriEncodedChars } from \"./utils.js\";\nfunction encode(obj, pfx) {\n  const normalizedObject = Object.entries(obj).flatMap(([key, value]) => {\n    if (Array.isArray(value)) {\n      return value.map((v) => [key, String(v)]);\n    } else {\n      return [[key, String(value)]];\n    }\n  });\n  const searchParams = new URLSearchParams(normalizedObject);\n  return (pfx || \"\") + searchParams.toString();\n}\nfunction toValue(mix) {\n  if (!mix) return \"\";\n  const str = hasUriEncodedChars(mix) ? decodeURIComponent(mix) : decodeURIComponent(encodeURIComponent(mix));\n  if (str === \"false\") return false;\n  if (str === \"true\") return true;\n  return +str * 0 === 0 && +str + \"\" === str ? +str : str;\n}\nfunction decode(str, pfx) {\n  const searchParamsPart = pfx ? str.slice(pfx.length) : str;\n  const searchParams = new URLSearchParams(searchParamsPart);\n  const entries = [...searchParams.entries()];\n  return entries.reduce((acc, [key, value]) => {\n    const previousValue = acc[key];\n    if (previousValue == null) {\n      acc[key] = toValue(value);\n    } else {\n      acc[key] = Array.isArray(previousValue) ? [...previousValue, toValue(value)] : [previousValue, toValue(value)];\n    }\n    return acc;\n  }, {});\n}\nexport {\n  decode,\n  encode\n};\n//# sourceMappingURL=qss.js.map\n","import { decode, encode } from \"./qss.js\";\nconst defaultParseSearch = parseSearchWith(JSON.parse);\nconst defaultStringifySearch = stringifySearchWith(\n  JSON.stringify,\n  JSON.parse\n);\nfunction parseSearchWith(parser) {\n  return (searchStr) => {\n    if (searchStr.substring(0, 1) === \"?\") {\n      searchStr = searchStr.substring(1);\n    }\n    const query = decode(searchStr);\n    for (const key in query) {\n      const value = query[key];\n      if (typeof value === \"string\") {\n        try {\n          query[key] = parser(value);\n        } catch (err) {\n        }\n      }\n    }\n    return query;\n  };\n}\nfunction stringifySearchWith(stringify, parser) {\n  function stringifyValue(val) {\n    if (typeof val === \"object\" && val !== null) {\n      try {\n        return stringify(val);\n      } catch (err) {\n      }\n    } else if (typeof val === \"string\" && typeof parser === \"function\") {\n      try {\n        parser(val);\n        return stringify(val);\n      } catch (err) {\n      }\n    }\n    return val;\n  }\n  return (search) => {\n    search = { ...search };\n    Object.keys(search).forEach((key) => {\n      const val = search[key];\n      if (typeof val === \"undefined\" || val === void 0) {\n        delete search[key];\n      } else {\n        search[key] = stringifyValue(val);\n      }\n    });\n    const searchStr = encode(search).toString();\n    return searchStr ? `?${searchStr}` : \"\";\n  };\n}\nexport {\n  defaultParseSearch,\n  defaultStringifySearch,\n  parseSearchWith,\n  stringifySearchWith\n};\n//# sourceMappingURL=searchParams.js.map\n","const rootRouteId = \"__root__\";\nexport {\n  rootRouteId\n};\n//# sourceMappingURL=root.js.map\n","function redirect(opts) {\n  opts.isRedirect = true;\n  opts.statusCode = opts.statusCode || opts.code || 307;\n  opts.headers = opts.headers || {};\n  if (!opts.reloadDocument) {\n    opts.reloadDocument = false;\n    try {\n      new URL(`${opts.href}`);\n      opts.reloadDocument = true;\n    } catch {\n    }\n  }\n  if (opts.throw) {\n    throw opts;\n  }\n  return opts;\n}\nfunction isRedirect(obj) {\n  return !!(obj == null ? void 0 : obj.isRedirect);\n}\nfunction isResolvedRedirect(obj) {\n  return !!(obj == null ? void 0 : obj.isRedirect) && obj.href;\n}\nexport {\n  isRedirect,\n  isResolvedRedirect,\n  redirect\n};\n//# sourceMappingURL=redirect.js.map\n","import { Store, batch } from \"@tanstack/store\";\nimport { createMemoryHistory, createBrowserHistory, parseHref } from \"@tanstack/history\";\nimport invariant from \"tiny-invariant\";\nimport { pick, createControlledPromise, deepEqual, replaceEqualDeep, last, functionalUpdate } from \"./utils.js\";\nimport { trimPath, trimPathLeft, parsePathname, resolvePath, cleanPath, trimPathRight, matchPathname, interpolatePath, joinPaths } from \"./path.js\";\nimport { isNotFound } from \"./not-found.js\";\nimport { setupScrollRestoration } from \"./scroll-restoration.js\";\nimport { defaultParseSearch, defaultStringifySearch } from \"./searchParams.js\";\nimport { rootRouteId } from \"./root.js\";\nimport { isResolvedRedirect, isRedirect } from \"./redirect.js\";\nfunction defaultSerializeError(err) {\n  if (err instanceof Error) {\n    const obj = {\n      name: err.name,\n      message: err.message\n    };\n    if (process.env.NODE_ENV === \"development\") {\n      obj.stack = err.stack;\n    }\n    return obj;\n  }\n  return {\n    data: err\n  };\n}\nfunction getLocationChangeInfo(routerState) {\n  const fromLocation = routerState.resolvedLocation;\n  const toLocation = routerState.location;\n  const pathChanged = (fromLocation == null ? void 0 : fromLocation.pathname) !== toLocation.pathname;\n  const hrefChanged = (fromLocation == null ? void 0 : fromLocation.href) !== toLocation.href;\n  const hashChanged = (fromLocation == null ? void 0 : fromLocation.hash) !== toLocation.hash;\n  return { fromLocation, toLocation, pathChanged, hrefChanged, hashChanged };\n}\nclass RouterCore {\n  /**\n   * @deprecated Use the `createRouter` function instead\n   */\n  constructor(options) {\n    this.tempLocationKey = `${Math.round(\n      Math.random() * 1e7\n    )}`;\n    this.resetNextScroll = true;\n    this.shouldViewTransition = void 0;\n    this.isViewTransitionTypesSupported = void 0;\n    this.subscribers = /* @__PURE__ */ new Set();\n    this.isScrollRestoring = false;\n    this.isScrollRestorationSetup = false;\n    this.startTransition = (fn) => fn();\n    this.update = (newOptions) => {\n      var _a;\n      if (newOptions.notFoundRoute) {\n        console.warn(\n          \"The notFoundRoute API is deprecated and will be removed in the next major version. See https://tanstack.com/router/v1/docs/framework/react/guide/not-found-errors#migrating-from-notfoundroute for more info.\"\n        );\n      }\n      const previousOptions = this.options;\n      this.options = {\n        ...this.options,\n        ...newOptions\n      };\n      this.isServer = this.options.isServer ?? typeof document === \"undefined\";\n      this.pathParamsDecodeCharMap = this.options.pathParamsAllowedCharacters ? new Map(\n        this.options.pathParamsAllowedCharacters.map((char) => [\n          encodeURIComponent(char),\n          char\n        ])\n      ) : void 0;\n      if (!this.basepath || newOptions.basepath && newOptions.basepath !== previousOptions.basepath) {\n        if (newOptions.basepath === void 0 || newOptions.basepath === \"\" || newOptions.basepath === \"/\") {\n          this.basepath = \"/\";\n        } else {\n          this.basepath = `/${trimPath(newOptions.basepath)}`;\n        }\n      }\n      if (\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        !this.history || this.options.history && this.options.history !== this.history\n      ) {\n        this.history = this.options.history ?? (this.isServer ? createMemoryHistory({\n          initialEntries: [this.basepath || \"/\"]\n        }) : createBrowserHistory());\n        this.latestLocation = this.parseLocation();\n      }\n      if (this.options.routeTree !== this.routeTree) {\n        this.routeTree = this.options.routeTree;\n        this.buildRouteTree();\n      }\n      if (!this.__store) {\n        this.__store = new Store(getInitialRouterState(this.latestLocation), {\n          onUpdate: () => {\n            this.__store.state = {\n              ...this.state,\n              cachedMatches: this.state.cachedMatches.filter(\n                (d) => ![\"redirected\"].includes(d.status)\n              )\n            };\n          }\n        });\n        setupScrollRestoration(this);\n      }\n      if (typeof window !== \"undefined\" && \"CSS\" in window && // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      typeof ((_a = window.CSS) == null ? void 0 : _a.supports) === \"function\") {\n        this.isViewTransitionTypesSupported = window.CSS.supports(\n          \"selector(:active-view-transition-type(a)\"\n        );\n      }\n    };\n    this.buildRouteTree = () => {\n      this.routesById = {};\n      this.routesByPath = {};\n      const notFoundRoute = this.options.notFoundRoute;\n      if (notFoundRoute) {\n        notFoundRoute.init({\n          originalIndex: 99999999999,\n          defaultSsr: this.options.defaultSsr\n        });\n        this.routesById[notFoundRoute.id] = notFoundRoute;\n      }\n      const recurseRoutes = (childRoutes) => {\n        childRoutes.forEach((childRoute, i) => {\n          childRoute.init({\n            originalIndex: i,\n            defaultSsr: this.options.defaultSsr\n          });\n          const existingRoute = this.routesById[childRoute.id];\n          invariant(\n            !existingRoute,\n            `Duplicate routes found with id: ${String(childRoute.id)}`\n          );\n          this.routesById[childRoute.id] = childRoute;\n          if (!childRoute.isRoot && childRoute.path) {\n            const trimmedFullPath = trimPathRight(childRoute.fullPath);\n            if (!this.routesByPath[trimmedFullPath] || childRoute.fullPath.endsWith(\"/\")) {\n              this.routesByPath[trimmedFullPath] = childRoute;\n            }\n          }\n          const children = childRoute.children;\n          if (children == null ? void 0 : children.length) {\n            recurseRoutes(children);\n          }\n        });\n      };\n      recurseRoutes([this.routeTree]);\n      const scoredRoutes = [];\n      const routes = Object.values(this.routesById);\n      routes.forEach((d, i) => {\n        var _a;\n        if (d.isRoot || !d.path) {\n          return;\n        }\n        const trimmed = trimPathLeft(d.fullPath);\n        const parsed = parsePathname(trimmed);\n        while (parsed.length > 1 && ((_a = parsed[0]) == null ? void 0 : _a.value) === \"/\") {\n          parsed.shift();\n        }\n        const scores = parsed.map((segment) => {\n          if (segment.value === \"/\") {\n            return 0.75;\n          }\n          if (segment.type === \"param\") {\n            return 0.5;\n          }\n          if (segment.type === \"wildcard\") {\n            return 0.25;\n          }\n          return 1;\n        });\n        scoredRoutes.push({ child: d, trimmed, parsed, index: i, scores });\n      });\n      this.flatRoutes = scoredRoutes.sort((a, b) => {\n        const minLength = Math.min(a.scores.length, b.scores.length);\n        for (let i = 0; i < minLength; i++) {\n          if (a.scores[i] !== b.scores[i]) {\n            return b.scores[i] - a.scores[i];\n          }\n        }\n        if (a.scores.length !== b.scores.length) {\n          return b.scores.length - a.scores.length;\n        }\n        for (let i = 0; i < minLength; i++) {\n          if (a.parsed[i].value !== b.parsed[i].value) {\n            return a.parsed[i].value > b.parsed[i].value ? 1 : -1;\n          }\n        }\n        return a.index - b.index;\n      }).map((d, i) => {\n        d.child.rank = i;\n        return d.child;\n      });\n    };\n    this.subscribe = (eventType, fn) => {\n      const listener = {\n        eventType,\n        fn\n      };\n      this.subscribers.add(listener);\n      return () => {\n        this.subscribers.delete(listener);\n      };\n    };\n    this.emit = (routerEvent) => {\n      this.subscribers.forEach((listener) => {\n        if (listener.eventType === routerEvent.type) {\n          listener.fn(routerEvent);\n        }\n      });\n    };\n    this.parseLocation = (previousLocation, locationToParse) => {\n      const parse = ({\n        pathname,\n        search,\n        hash,\n        state\n      }) => {\n        const parsedSearch = this.options.parseSearch(search);\n        const searchStr = this.options.stringifySearch(parsedSearch);\n        return {\n          pathname,\n          searchStr,\n          search: replaceEqualDeep(previousLocation == null ? void 0 : previousLocation.search, parsedSearch),\n          hash: hash.split(\"#\").reverse()[0] ?? \"\",\n          href: `${pathname}${searchStr}${hash}`,\n          state: replaceEqualDeep(previousLocation == null ? void 0 : previousLocation.state, state)\n        };\n      };\n      const location = parse(locationToParse ?? this.history.location);\n      const { __tempLocation, __tempKey } = location.state;\n      if (__tempLocation && (!__tempKey || __tempKey === this.tempLocationKey)) {\n        const parsedTempLocation = parse(__tempLocation);\n        parsedTempLocation.state.key = location.state.key;\n        delete parsedTempLocation.state.__tempLocation;\n        return {\n          ...parsedTempLocation,\n          maskedLocation: location\n        };\n      }\n      return location;\n    };\n    this.resolvePathWithBase = (from, path) => {\n      const resolvedPath = resolvePath({\n        basepath: this.basepath,\n        base: from,\n        to: cleanPath(path),\n        trailingSlash: this.options.trailingSlash,\n        caseSensitive: this.options.caseSensitive\n      });\n      return resolvedPath;\n    };\n    this.matchRoutes = (pathnameOrNext, locationSearchOrOpts, opts) => {\n      if (typeof pathnameOrNext === \"string\") {\n        return this.matchRoutesInternal(\n          {\n            pathname: pathnameOrNext,\n            search: locationSearchOrOpts\n          },\n          opts\n        );\n      } else {\n        return this.matchRoutesInternal(pathnameOrNext, locationSearchOrOpts);\n      }\n    };\n    this.getMatchedRoutes = (next, dest) => {\n      let routeParams = {};\n      const trimmedPath = trimPathRight(next.pathname);\n      const getMatchedParams = (route) => {\n        const result = matchPathname(this.basepath, trimmedPath, {\n          to: route.fullPath,\n          caseSensitive: route.options.caseSensitive ?? this.options.caseSensitive,\n          fuzzy: true\n        });\n        return result;\n      };\n      let foundRoute = (dest == null ? void 0 : dest.to) !== void 0 ? this.routesByPath[dest.to] : void 0;\n      if (foundRoute) {\n        routeParams = getMatchedParams(foundRoute);\n      } else {\n        foundRoute = this.flatRoutes.find((route) => {\n          const matchedParams = getMatchedParams(route);\n          if (matchedParams) {\n            routeParams = matchedParams;\n            return true;\n          }\n          return false;\n        });\n      }\n      let routeCursor = foundRoute || this.routesById[rootRouteId];\n      const matchedRoutes = [routeCursor];\n      while (routeCursor.parentRoute) {\n        routeCursor = routeCursor.parentRoute;\n        matchedRoutes.unshift(routeCursor);\n      }\n      return { matchedRoutes, routeParams, foundRoute };\n    };\n    this.cancelMatch = (id) => {\n      const match = this.getMatch(id);\n      if (!match) return;\n      match.abortController.abort();\n      clearTimeout(match.pendingTimeout);\n    };\n    this.cancelMatches = () => {\n      var _a;\n      (_a = this.state.pendingMatches) == null ? void 0 : _a.forEach((match) => {\n        this.cancelMatch(match.id);\n      });\n    };\n    this.buildLocation = (opts) => {\n      const build = (dest = {}, matchedRoutesResult) => {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const fromMatches = dest._fromLocation ? this.matchRoutes(dest._fromLocation, { _buildLocation: true }) : this.state.matches;\n        const fromMatch = dest.from != null ? fromMatches.find(\n          (d) => matchPathname(this.basepath, trimPathRight(d.pathname), {\n            to: dest.from,\n            caseSensitive: false,\n            fuzzy: false\n          })\n        ) : void 0;\n        const fromPath = (fromMatch == null ? void 0 : fromMatch.pathname) || this.latestLocation.pathname;\n        invariant(\n          dest.from == null || fromMatch != null,\n          \"Could not find match for from: \" + dest.from\n        );\n        const fromSearch = ((_a = this.state.pendingMatches) == null ? void 0 : _a.length) ? (_b = last(this.state.pendingMatches)) == null ? void 0 : _b.search : ((_c = last(fromMatches)) == null ? void 0 : _c.search) || this.latestLocation.search;\n        const stayingMatches = matchedRoutesResult == null ? void 0 : matchedRoutesResult.matchedRoutes.filter(\n          (d) => fromMatches.find((e) => e.routeId === d.id)\n        );\n        let pathname;\n        if (dest.to) {\n          const resolvePathTo = (fromMatch == null ? void 0 : fromMatch.fullPath) || ((_d = last(fromMatches)) == null ? void 0 : _d.fullPath) || this.latestLocation.pathname;\n          pathname = this.resolvePathWithBase(resolvePathTo, `${dest.to}`);\n        } else {\n          const fromRouteByFromPathRouteId = this.routesById[(_e = stayingMatches == null ? void 0 : stayingMatches.find((route) => {\n            const interpolatedPath = interpolatePath({\n              path: route.fullPath,\n              params: (matchedRoutesResult == null ? void 0 : matchedRoutesResult.routeParams) ?? {},\n              decodeCharMap: this.pathParamsDecodeCharMap\n            }).interpolatedPath;\n            const pathname2 = joinPaths([this.basepath, interpolatedPath]);\n            return pathname2 === fromPath;\n          })) == null ? void 0 : _e.id];\n          pathname = this.resolvePathWithBase(\n            fromPath,\n            (fromRouteByFromPathRouteId == null ? void 0 : fromRouteByFromPathRouteId.to) ?? fromPath\n          );\n        }\n        const prevParams = { ...(_f = last(fromMatches)) == null ? void 0 : _f.params };\n        let nextParams = (dest.params ?? true) === true ? prevParams : {\n          ...prevParams,\n          ...functionalUpdate(dest.params, prevParams)\n        };\n        if (Object.keys(nextParams).length > 0) {\n          matchedRoutesResult == null ? void 0 : matchedRoutesResult.matchedRoutes.map((route) => {\n            var _a2;\n            return ((_a2 = route.options.params) == null ? void 0 : _a2.stringify) ?? route.options.stringifyParams;\n          }).filter(Boolean).forEach((fn) => {\n            nextParams = { ...nextParams, ...fn(nextParams) };\n          });\n        }\n        pathname = interpolatePath({\n          path: pathname,\n          params: nextParams ?? {},\n          leaveWildcards: false,\n          leaveParams: opts.leaveParams,\n          decodeCharMap: this.pathParamsDecodeCharMap\n        }).interpolatedPath;\n        let search = fromSearch;\n        if (opts._includeValidateSearch && ((_g = this.options.search) == null ? void 0 : _g.strict)) {\n          let validatedSearch = {};\n          matchedRoutesResult == null ? void 0 : matchedRoutesResult.matchedRoutes.forEach((route) => {\n            try {\n              if (route.options.validateSearch) {\n                validatedSearch = {\n                  ...validatedSearch,\n                  ...validateSearch(route.options.validateSearch, {\n                    ...validatedSearch,\n                    ...search\n                  }) ?? {}\n                };\n              }\n            } catch {\n            }\n          });\n          search = validatedSearch;\n        }\n        const applyMiddlewares = (search2) => {\n          const allMiddlewares = (matchedRoutesResult == null ? void 0 : matchedRoutesResult.matchedRoutes.reduce(\n            (acc, route) => {\n              var _a2;\n              const middlewares = [];\n              if (\"search\" in route.options) {\n                if ((_a2 = route.options.search) == null ? void 0 : _a2.middlewares) {\n                  middlewares.push(...route.options.search.middlewares);\n                }\n              } else if (route.options.preSearchFilters || route.options.postSearchFilters) {\n                const legacyMiddleware = ({\n                  search: search3,\n                  next\n                }) => {\n                  let nextSearch = search3;\n                  if (\"preSearchFilters\" in route.options && route.options.preSearchFilters) {\n                    nextSearch = route.options.preSearchFilters.reduce(\n                      (prev, next2) => next2(prev),\n                      search3\n                    );\n                  }\n                  const result = next(nextSearch);\n                  if (\"postSearchFilters\" in route.options && route.options.postSearchFilters) {\n                    return route.options.postSearchFilters.reduce(\n                      (prev, next2) => next2(prev),\n                      result\n                    );\n                  }\n                  return result;\n                };\n                middlewares.push(legacyMiddleware);\n              }\n              if (opts._includeValidateSearch && route.options.validateSearch) {\n                const validate = ({ search: search3, next }) => {\n                  const result = next(search3);\n                  try {\n                    const validatedSearch = {\n                      ...result,\n                      ...validateSearch(\n                        route.options.validateSearch,\n                        result\n                      ) ?? {}\n                    };\n                    return validatedSearch;\n                  } catch {\n                    return result;\n                  }\n                };\n                middlewares.push(validate);\n              }\n              return acc.concat(middlewares);\n            },\n            []\n          )) ?? [];\n          const final = ({ search: search3 }) => {\n            if (!dest.search) {\n              return {};\n            }\n            if (dest.search === true) {\n              return search3;\n            }\n            return functionalUpdate(dest.search, search3);\n          };\n          allMiddlewares.push(final);\n          const applyNext = (index, currentSearch) => {\n            if (index >= allMiddlewares.length) {\n              return currentSearch;\n            }\n            const middleware = allMiddlewares[index];\n            const next = (newSearch) => {\n              return applyNext(index + 1, newSearch);\n            };\n            return middleware({ search: currentSearch, next });\n          };\n          return applyNext(0, search2);\n        };\n        search = applyMiddlewares(search);\n        search = replaceEqualDeep(fromSearch, search);\n        const searchStr = this.options.stringifySearch(search);\n        const hash = dest.hash === true ? this.latestLocation.hash : dest.hash ? functionalUpdate(dest.hash, this.latestLocation.hash) : void 0;\n        const hashStr = hash ? `#${hash}` : \"\";\n        let nextState = dest.state === true ? this.latestLocation.state : dest.state ? functionalUpdate(dest.state, this.latestLocation.state) : {};\n        nextState = replaceEqualDeep(this.latestLocation.state, nextState);\n        return {\n          pathname,\n          search,\n          searchStr,\n          state: nextState,\n          hash: hash ?? \"\",\n          href: `${pathname}${searchStr}${hashStr}`,\n          unmaskOnReload: dest.unmaskOnReload\n        };\n      };\n      const buildWithMatches = (dest = {}, maskedDest) => {\n        var _a;\n        const next = build(dest);\n        let maskedNext = maskedDest ? build(maskedDest) : void 0;\n        if (!maskedNext) {\n          let params = {};\n          const foundMask = (_a = this.options.routeMasks) == null ? void 0 : _a.find((d) => {\n            const match = matchPathname(this.basepath, next.pathname, {\n              to: d.from,\n              caseSensitive: false,\n              fuzzy: false\n            });\n            if (match) {\n              params = match;\n              return true;\n            }\n            return false;\n          });\n          if (foundMask) {\n            const { from: _from, ...maskProps } = foundMask;\n            maskedDest = {\n              ...pick(opts, [\"from\"]),\n              ...maskProps,\n              params\n            };\n            maskedNext = build(maskedDest);\n          }\n        }\n        const nextMatches = this.getMatchedRoutes(next, dest);\n        const final = build(dest, nextMatches);\n        if (maskedNext) {\n          const maskedMatches = this.getMatchedRoutes(maskedNext, maskedDest);\n          const maskedFinal = build(maskedDest, maskedMatches);\n          final.maskedLocation = maskedFinal;\n        }\n        return final;\n      };\n      if (opts.mask) {\n        return buildWithMatches(opts, {\n          ...pick(opts, [\"from\"]),\n          ...opts.mask\n        });\n      }\n      return buildWithMatches(opts);\n    };\n    this.commitLocation = ({\n      viewTransition,\n      ignoreBlocker,\n      ...next\n    }) => {\n      const isSameState = () => {\n        const ignoredProps = [\n          \"key\",\n          \"__TSR_index\",\n          \"__hashScrollIntoViewOptions\"\n        ];\n        ignoredProps.forEach((prop) => {\n          next.state[prop] = this.latestLocation.state[prop];\n        });\n        const isEqual = deepEqual(next.state, this.latestLocation.state);\n        ignoredProps.forEach((prop) => {\n          delete next.state[prop];\n        });\n        return isEqual;\n      };\n      const isSameUrl = this.latestLocation.href === next.href;\n      const previousCommitPromise = this.commitLocationPromise;\n      this.commitLocationPromise = createControlledPromise(() => {\n        previousCommitPromise == null ? void 0 : previousCommitPromise.resolve();\n      });\n      if (isSameUrl && isSameState()) {\n        this.load();\n      } else {\n        let { maskedLocation, hashScrollIntoView, ...nextHistory } = next;\n        if (maskedLocation) {\n          nextHistory = {\n            ...maskedLocation,\n            state: {\n              ...maskedLocation.state,\n              __tempKey: void 0,\n              __tempLocation: {\n                ...nextHistory,\n                search: nextHistory.searchStr,\n                state: {\n                  ...nextHistory.state,\n                  __tempKey: void 0,\n                  __tempLocation: void 0,\n                  key: void 0\n                }\n              }\n            }\n          };\n          if (nextHistory.unmaskOnReload ?? this.options.unmaskOnReload ?? false) {\n            nextHistory.state.__tempKey = this.tempLocationKey;\n          }\n        }\n        nextHistory.state.__hashScrollIntoViewOptions = hashScrollIntoView ?? this.options.defaultHashScrollIntoView ?? true;\n        this.shouldViewTransition = viewTransition;\n        this.history[next.replace ? \"replace\" : \"push\"](\n          nextHistory.href,\n          nextHistory.state,\n          { ignoreBlocker }\n        );\n      }\n      this.resetNextScroll = next.resetScroll ?? true;\n      if (!this.history.subscribers.size) {\n        this.load();\n      }\n      return this.commitLocationPromise;\n    };\n    this.buildAndCommitLocation = ({\n      replace,\n      resetScroll,\n      hashScrollIntoView,\n      viewTransition,\n      ignoreBlocker,\n      href,\n      ...rest\n    } = {}) => {\n      if (href) {\n        const currentIndex = this.history.location.state.__TSR_index;\n        const parsed = parseHref(href, {\n          __TSR_index: replace ? currentIndex : currentIndex + 1\n        });\n        rest.to = parsed.pathname;\n        rest.search = this.options.parseSearch(parsed.search);\n        rest.hash = parsed.hash.slice(1);\n      }\n      const location = this.buildLocation({\n        ...rest,\n        _includeValidateSearch: true\n      });\n      return this.commitLocation({\n        ...location,\n        viewTransition,\n        replace,\n        resetScroll,\n        hashScrollIntoView,\n        ignoreBlocker\n      });\n    };\n    this.navigate = ({ to, reloadDocument, href, ...rest }) => {\n      if (reloadDocument) {\n        if (!href) {\n          const location = this.buildLocation({ to, ...rest });\n          href = this.history.createHref(location.href);\n        }\n        if (rest.replace) {\n          window.location.replace(href);\n        } else {\n          window.location.href = href;\n        }\n        return;\n      }\n      return this.buildAndCommitLocation({\n        ...rest,\n        href,\n        to\n      });\n    };\n    this.load = async (opts) => {\n      this.latestLocation = this.parseLocation(this.latestLocation);\n      let redirect;\n      let notFound;\n      let loadPromise;\n      loadPromise = new Promise((resolve) => {\n        this.startTransition(async () => {\n          var _a;\n          try {\n            const next = this.latestLocation;\n            const prevLocation = this.state.resolvedLocation;\n            this.cancelMatches();\n            let pendingMatches;\n            batch(() => {\n              pendingMatches = this.matchRoutes(next);\n              this.__store.setState((s) => ({\n                ...s,\n                status: \"pending\",\n                isLoading: true,\n                location: next,\n                pendingMatches,\n                // If a cached moved to pendingMatches, remove it from cachedMatches\n                cachedMatches: s.cachedMatches.filter((d) => {\n                  return !pendingMatches.find((e) => e.id === d.id);\n                })\n              }));\n            });\n            if (!this.state.redirect) {\n              this.emit({\n                type: \"onBeforeNavigate\",\n                ...getLocationChangeInfo({\n                  resolvedLocation: prevLocation,\n                  location: next\n                })\n              });\n            }\n            this.emit({\n              type: \"onBeforeLoad\",\n              ...getLocationChangeInfo({\n                resolvedLocation: prevLocation,\n                location: next\n              })\n            });\n            await this.loadMatches({\n              sync: opts == null ? void 0 : opts.sync,\n              matches: pendingMatches,\n              location: next,\n              // eslint-disable-next-line @typescript-eslint/require-await\n              onReady: async () => {\n                this.startViewTransition(async () => {\n                  let exitingMatches;\n                  let enteringMatches;\n                  let stayingMatches;\n                  batch(() => {\n                    this.__store.setState((s) => {\n                      const previousMatches = s.matches;\n                      const newMatches = s.pendingMatches || s.matches;\n                      exitingMatches = previousMatches.filter(\n                        (match) => !newMatches.find((d) => d.id === match.id)\n                      );\n                      enteringMatches = newMatches.filter(\n                        (match) => !previousMatches.find((d) => d.id === match.id)\n                      );\n                      stayingMatches = previousMatches.filter(\n                        (match) => newMatches.find((d) => d.id === match.id)\n                      );\n                      return {\n                        ...s,\n                        isLoading: false,\n                        loadedAt: Date.now(),\n                        matches: newMatches,\n                        pendingMatches: void 0,\n                        cachedMatches: [\n                          ...s.cachedMatches,\n                          ...exitingMatches.filter((d) => d.status !== \"error\")\n                        ]\n                      };\n                    });\n                    this.clearExpiredCache();\n                  });\n                  [\n                    [exitingMatches, \"onLeave\"],\n                    [enteringMatches, \"onEnter\"],\n                    [stayingMatches, \"onStay\"]\n                  ].forEach(([matches, hook]) => {\n                    matches.forEach((match) => {\n                      var _a2, _b;\n                      (_b = (_a2 = this.looseRoutesById[match.routeId].options)[hook]) == null ? void 0 : _b.call(_a2, match);\n                    });\n                  });\n                });\n              }\n            });\n          } catch (err) {\n            if (isResolvedRedirect(err)) {\n              redirect = err;\n              if (!this.isServer) {\n                this.navigate({\n                  ...redirect,\n                  replace: true,\n                  ignoreBlocker: true\n                });\n              }\n            } else if (isNotFound(err)) {\n              notFound = err;\n            }\n            this.__store.setState((s) => ({\n              ...s,\n              statusCode: redirect ? redirect.statusCode : notFound ? 404 : s.matches.some((d) => d.status === \"error\") ? 500 : 200,\n              redirect\n            }));\n          }\n          if (this.latestLoadPromise === loadPromise) {\n            (_a = this.commitLocationPromise) == null ? void 0 : _a.resolve();\n            this.latestLoadPromise = void 0;\n            this.commitLocationPromise = void 0;\n          }\n          resolve();\n        });\n      });\n      this.latestLoadPromise = loadPromise;\n      await loadPromise;\n      while (this.latestLoadPromise && loadPromise !== this.latestLoadPromise) {\n        await this.latestLoadPromise;\n      }\n      if (this.hasNotFoundMatch()) {\n        this.__store.setState((s) => ({\n          ...s,\n          statusCode: 404\n        }));\n      }\n    };\n    this.startViewTransition = (fn) => {\n      const shouldViewTransition = this.shouldViewTransition ?? this.options.defaultViewTransition;\n      delete this.shouldViewTransition;\n      if (shouldViewTransition && typeof document !== \"undefined\" && \"startViewTransition\" in document && typeof document.startViewTransition === \"function\") {\n        let startViewTransitionParams;\n        if (typeof shouldViewTransition === \"object\" && this.isViewTransitionTypesSupported) {\n          const next = this.latestLocation;\n          const prevLocation = this.state.resolvedLocation;\n          const resolvedViewTransitionTypes = typeof shouldViewTransition.types === \"function\" ? shouldViewTransition.types(\n            getLocationChangeInfo({\n              resolvedLocation: prevLocation,\n              location: next\n            })\n          ) : shouldViewTransition.types;\n          startViewTransitionParams = {\n            update: fn,\n            types: resolvedViewTransitionTypes\n          };\n        } else {\n          startViewTransitionParams = fn;\n        }\n        document.startViewTransition(startViewTransitionParams);\n      } else {\n        fn();\n      }\n    };\n    this.updateMatch = (id, updater) => {\n      var _a;\n      let updated;\n      const isPending = (_a = this.state.pendingMatches) == null ? void 0 : _a.find((d) => d.id === id);\n      const isMatched = this.state.matches.find((d) => d.id === id);\n      const isCached = this.state.cachedMatches.find((d) => d.id === id);\n      const matchesKey = isPending ? \"pendingMatches\" : isMatched ? \"matches\" : isCached ? \"cachedMatches\" : \"\";\n      if (matchesKey) {\n        this.__store.setState((s) => {\n          var _a2;\n          return {\n            ...s,\n            [matchesKey]: (_a2 = s[matchesKey]) == null ? void 0 : _a2.map(\n              (d) => d.id === id ? updated = updater(d) : d\n            )\n          };\n        });\n      }\n      return updated;\n    };\n    this.getMatch = (matchId) => {\n      return [\n        ...this.state.cachedMatches,\n        ...this.state.pendingMatches ?? [],\n        ...this.state.matches\n      ].find((d) => d.id === matchId);\n    };\n    this.loadMatches = async ({\n      location,\n      matches,\n      preload: allPreload,\n      onReady,\n      updateMatch = this.updateMatch,\n      sync\n    }) => {\n      let firstBadMatchIndex;\n      let rendered = false;\n      const triggerOnReady = async () => {\n        if (!rendered) {\n          rendered = true;\n          await (onReady == null ? void 0 : onReady());\n        }\n      };\n      const resolvePreload = (matchId) => {\n        return !!(allPreload && !this.state.matches.find((d) => d.id === matchId));\n      };\n      const handleRedirectAndNotFound = (match, err) => {\n        var _a, _b, _c, _d;\n        if (isResolvedRedirect(err)) {\n          if (!err.reloadDocument) {\n            throw err;\n          }\n        }\n        if (isRedirect(err) || isNotFound(err)) {\n          updateMatch(match.id, (prev) => ({\n            ...prev,\n            status: isRedirect(err) ? \"redirected\" : isNotFound(err) ? \"notFound\" : \"error\",\n            isFetching: false,\n            error: err,\n            beforeLoadPromise: void 0,\n            loaderPromise: void 0\n          }));\n          if (!err.routeId) {\n            err.routeId = match.routeId;\n          }\n          (_a = match.beforeLoadPromise) == null ? void 0 : _a.resolve();\n          (_b = match.loaderPromise) == null ? void 0 : _b.resolve();\n          (_c = match.loadPromise) == null ? void 0 : _c.resolve();\n          if (isRedirect(err)) {\n            rendered = true;\n            err = this.resolveRedirect({ ...err, _fromLocation: location });\n            throw err;\n          } else if (isNotFound(err)) {\n            this._handleNotFound(matches, err, {\n              updateMatch\n            });\n            (_d = this.serverSsr) == null ? void 0 : _d.onMatchSettled({\n              router: this,\n              match: this.getMatch(match.id)\n            });\n            throw err;\n          }\n        }\n      };\n      try {\n        await new Promise((resolveAll, rejectAll) => {\n          ;\n          (async () => {\n            var _a, _b, _c, _d;\n            try {\n              const handleSerialError = (index, err, routerCode) => {\n                var _a2, _b2;\n                const { id: matchId, routeId } = matches[index];\n                const route = this.looseRoutesById[routeId];\n                if (err instanceof Promise) {\n                  throw err;\n                }\n                err.routerCode = routerCode;\n                firstBadMatchIndex = firstBadMatchIndex ?? index;\n                handleRedirectAndNotFound(this.getMatch(matchId), err);\n                try {\n                  (_b2 = (_a2 = route.options).onError) == null ? void 0 : _b2.call(_a2, err);\n                } catch (errorHandlerErr) {\n                  err = errorHandlerErr;\n                  handleRedirectAndNotFound(this.getMatch(matchId), err);\n                }\n                updateMatch(matchId, (prev) => {\n                  var _a3, _b3;\n                  (_a3 = prev.beforeLoadPromise) == null ? void 0 : _a3.resolve();\n                  (_b3 = prev.loadPromise) == null ? void 0 : _b3.resolve();\n                  return {\n                    ...prev,\n                    error: err,\n                    status: \"error\",\n                    isFetching: false,\n                    updatedAt: Date.now(),\n                    abortController: new AbortController(),\n                    beforeLoadPromise: void 0\n                  };\n                });\n              };\n              for (const [index, { id: matchId, routeId }] of matches.entries()) {\n                const existingMatch = this.getMatch(matchId);\n                const parentMatchId = (_a = matches[index - 1]) == null ? void 0 : _a.id;\n                const route = this.looseRoutesById[routeId];\n                const pendingMs = route.options.pendingMs ?? this.options.defaultPendingMs;\n                const shouldPending = !!(onReady && !this.isServer && !resolvePreload(matchId) && (route.options.loader || route.options.beforeLoad || routeNeedsPreload(route)) && typeof pendingMs === \"number\" && pendingMs !== Infinity && (route.options.pendingComponent ?? ((_b = this.options) == null ? void 0 : _b.defaultPendingComponent)));\n                let executeBeforeLoad = true;\n                if (\n                  // If we are in the middle of a load, either of these will be present\n                  // (not to be confused with `loadPromise`, which is always defined)\n                  existingMatch.beforeLoadPromise || existingMatch.loaderPromise\n                ) {\n                  if (shouldPending) {\n                    setTimeout(() => {\n                      try {\n                        triggerOnReady();\n                      } catch {\n                      }\n                    }, pendingMs);\n                  }\n                  await existingMatch.beforeLoadPromise;\n                  executeBeforeLoad = this.getMatch(matchId).status !== \"success\";\n                }\n                if (executeBeforeLoad) {\n                  try {\n                    updateMatch(matchId, (prev) => {\n                      const prevLoadPromise = prev.loadPromise;\n                      return {\n                        ...prev,\n                        loadPromise: createControlledPromise(() => {\n                          prevLoadPromise == null ? void 0 : prevLoadPromise.resolve();\n                        }),\n                        beforeLoadPromise: createControlledPromise()\n                      };\n                    });\n                    const abortController = new AbortController();\n                    let pendingTimeout;\n                    if (shouldPending) {\n                      pendingTimeout = setTimeout(() => {\n                        try {\n                          triggerOnReady();\n                        } catch {\n                        }\n                      }, pendingMs);\n                    }\n                    const { paramsError, searchError } = this.getMatch(matchId);\n                    if (paramsError) {\n                      handleSerialError(index, paramsError, \"PARSE_PARAMS\");\n                    }\n                    if (searchError) {\n                      handleSerialError(index, searchError, \"VALIDATE_SEARCH\");\n                    }\n                    const getParentMatchContext = () => parentMatchId ? this.getMatch(parentMatchId).context : this.options.context ?? {};\n                    updateMatch(matchId, (prev) => ({\n                      ...prev,\n                      isFetching: \"beforeLoad\",\n                      fetchCount: prev.fetchCount + 1,\n                      abortController,\n                      pendingTimeout,\n                      context: {\n                        ...getParentMatchContext(),\n                        ...prev.__routeContext\n                      }\n                    }));\n                    const { search, params, context, cause } = this.getMatch(matchId);\n                    const preload = resolvePreload(matchId);\n                    const beforeLoadFnContext = {\n                      search,\n                      abortController,\n                      params,\n                      preload,\n                      context,\n                      location,\n                      navigate: (opts) => this.navigate({ ...opts, _fromLocation: location }),\n                      buildLocation: this.buildLocation,\n                      cause: preload ? \"preload\" : cause,\n                      matches\n                    };\n                    const beforeLoadContext = await ((_d = (_c = route.options).beforeLoad) == null ? void 0 : _d.call(_c, beforeLoadFnContext)) ?? {};\n                    if (isRedirect(beforeLoadContext) || isNotFound(beforeLoadContext)) {\n                      handleSerialError(index, beforeLoadContext, \"BEFORE_LOAD\");\n                    }\n                    updateMatch(matchId, (prev) => {\n                      return {\n                        ...prev,\n                        __beforeLoadContext: beforeLoadContext,\n                        context: {\n                          ...getParentMatchContext(),\n                          ...prev.__routeContext,\n                          ...beforeLoadContext\n                        },\n                        abortController\n                      };\n                    });\n                  } catch (err) {\n                    handleSerialError(index, err, \"BEFORE_LOAD\");\n                  }\n                  updateMatch(matchId, (prev) => {\n                    var _a2;\n                    (_a2 = prev.beforeLoadPromise) == null ? void 0 : _a2.resolve();\n                    return {\n                      ...prev,\n                      beforeLoadPromise: void 0,\n                      isFetching: false\n                    };\n                  });\n                }\n              }\n              const validResolvedMatches = matches.slice(0, firstBadMatchIndex);\n              const matchPromises = [];\n              validResolvedMatches.forEach(({ id: matchId, routeId }, index) => {\n                matchPromises.push(\n                  (async () => {\n                    const { loaderPromise: prevLoaderPromise } = this.getMatch(matchId);\n                    let loaderShouldRunAsync = false;\n                    let loaderIsRunningAsync = false;\n                    if (prevLoaderPromise) {\n                      await prevLoaderPromise;\n                      const match = this.getMatch(matchId);\n                      if (match.error) {\n                        handleRedirectAndNotFound(match, match.error);\n                      }\n                    } else {\n                      const parentMatchPromise = matchPromises[index - 1];\n                      const route = this.looseRoutesById[routeId];\n                      const getLoaderContext = () => {\n                        const {\n                          params,\n                          loaderDeps,\n                          abortController,\n                          context,\n                          cause\n                        } = this.getMatch(matchId);\n                        const preload2 = resolvePreload(matchId);\n                        return {\n                          params,\n                          deps: loaderDeps,\n                          preload: !!preload2,\n                          parentMatchPromise,\n                          abortController,\n                          context,\n                          location,\n                          navigate: (opts) => this.navigate({ ...opts, _fromLocation: location }),\n                          cause: preload2 ? \"preload\" : cause,\n                          route\n                        };\n                      };\n                      const age = Date.now() - this.getMatch(matchId).updatedAt;\n                      const preload = resolvePreload(matchId);\n                      const staleAge = preload ? route.options.preloadStaleTime ?? this.options.defaultPreloadStaleTime ?? 3e4 : route.options.staleTime ?? this.options.defaultStaleTime ?? 0;\n                      const shouldReloadOption = route.options.shouldReload;\n                      const shouldReload = typeof shouldReloadOption === \"function\" ? shouldReloadOption(getLoaderContext()) : shouldReloadOption;\n                      updateMatch(matchId, (prev) => ({\n                        ...prev,\n                        loaderPromise: createControlledPromise(),\n                        preload: !!preload && !this.state.matches.find((d) => d.id === matchId)\n                      }));\n                      const runLoader = async () => {\n                        var _a2, _b2, _c2, _d2, _e, _f, _g, _h, _i, _j, _k;\n                        try {\n                          const potentialPendingMinPromise = async () => {\n                            const latestMatch = this.getMatch(matchId);\n                            if (latestMatch.minPendingPromise) {\n                              await latestMatch.minPendingPromise;\n                            }\n                          };\n                          try {\n                            this.loadRouteChunk(route);\n                            updateMatch(matchId, (prev) => ({\n                              ...prev,\n                              isFetching: \"loader\"\n                            }));\n                            const loaderData = await ((_b2 = (_a2 = route.options).loader) == null ? void 0 : _b2.call(_a2, getLoaderContext()));\n                            handleRedirectAndNotFound(\n                              this.getMatch(matchId),\n                              loaderData\n                            );\n                            await route._lazyPromise;\n                            await potentialPendingMinPromise();\n                            const assetContext = {\n                              matches,\n                              match: this.getMatch(matchId),\n                              params: this.getMatch(matchId).params,\n                              loaderData\n                            };\n                            const headFnContent = (_d2 = (_c2 = route.options).head) == null ? void 0 : _d2.call(_c2, assetContext);\n                            const meta = headFnContent == null ? void 0 : headFnContent.meta;\n                            const links = headFnContent == null ? void 0 : headFnContent.links;\n                            const headScripts = headFnContent == null ? void 0 : headFnContent.scripts;\n                            const scripts = (_f = (_e = route.options).scripts) == null ? void 0 : _f.call(_e, assetContext);\n                            const headers = (_h = (_g = route.options).headers) == null ? void 0 : _h.call(_g, {\n                              loaderData\n                            });\n                            await route._componentsPromise;\n                            updateMatch(matchId, (prev) => ({\n                              ...prev,\n                              error: void 0,\n                              status: \"success\",\n                              isFetching: false,\n                              updatedAt: Date.now(),\n                              loaderData,\n                              meta,\n                              links,\n                              headScripts,\n                              headers,\n                              scripts\n                            }));\n                          } catch (e) {\n                            let error = e;\n                            await potentialPendingMinPromise();\n                            handleRedirectAndNotFound(this.getMatch(matchId), e);\n                            try {\n                              (_j = (_i = route.options).onError) == null ? void 0 : _j.call(_i, e);\n                            } catch (onErrorError) {\n                              error = onErrorError;\n                              handleRedirectAndNotFound(\n                                this.getMatch(matchId),\n                                onErrorError\n                              );\n                            }\n                            updateMatch(matchId, (prev) => ({\n                              ...prev,\n                              error,\n                              status: \"error\",\n                              isFetching: false\n                            }));\n                          }\n                          (_k = this.serverSsr) == null ? void 0 : _k.onMatchSettled({\n                            router: this,\n                            match: this.getMatch(matchId)\n                          });\n                        } catch (err) {\n                          updateMatch(matchId, (prev) => ({\n                            ...prev,\n                            loaderPromise: void 0\n                          }));\n                          handleRedirectAndNotFound(this.getMatch(matchId), err);\n                        }\n                      };\n                      const { status, invalid } = this.getMatch(matchId);\n                      loaderShouldRunAsync = status === \"success\" && (invalid || (shouldReload ?? age > staleAge));\n                      if (preload && route.options.preload === false) {\n                      } else if (loaderShouldRunAsync && !sync) {\n                        loaderIsRunningAsync = true;\n                        (async () => {\n                          try {\n                            await runLoader();\n                            const { loaderPromise, loadPromise } = this.getMatch(matchId);\n                            loaderPromise == null ? void 0 : loaderPromise.resolve();\n                            loadPromise == null ? void 0 : loadPromise.resolve();\n                            updateMatch(matchId, (prev) => ({\n                              ...prev,\n                              loaderPromise: void 0\n                            }));\n                          } catch (err) {\n                            if (isResolvedRedirect(err)) {\n                              await this.navigate(err);\n                            }\n                          }\n                        })();\n                      } else if (status !== \"success\" || loaderShouldRunAsync && sync) {\n                        await runLoader();\n                      }\n                    }\n                    if (!loaderIsRunningAsync) {\n                      const { loaderPromise, loadPromise } = this.getMatch(matchId);\n                      loaderPromise == null ? void 0 : loaderPromise.resolve();\n                      loadPromise == null ? void 0 : loadPromise.resolve();\n                    }\n                    updateMatch(matchId, (prev) => ({\n                      ...prev,\n                      isFetching: loaderIsRunningAsync ? prev.isFetching : false,\n                      loaderPromise: loaderIsRunningAsync ? prev.loaderPromise : void 0,\n                      invalid: false\n                    }));\n                    return this.getMatch(matchId);\n                  })()\n                );\n              });\n              await Promise.all(matchPromises);\n              resolveAll();\n            } catch (err) {\n              rejectAll(err);\n            }\n          })();\n        });\n        await triggerOnReady();\n      } catch (err) {\n        if (isRedirect(err) || isNotFound(err)) {\n          if (isNotFound(err) && !allPreload) {\n            await triggerOnReady();\n          }\n          throw err;\n        }\n      }\n      return matches;\n    };\n    this.invalidate = (opts) => {\n      const invalidate = (d) => {\n        var _a;\n        if (((_a = opts == null ? void 0 : opts.filter) == null ? void 0 : _a.call(opts, d)) ?? true) {\n          return {\n            ...d,\n            invalid: true,\n            ...d.status === \"error\" ? { status: \"pending\", error: void 0 } : {}\n          };\n        }\n        return d;\n      };\n      this.__store.setState((s) => {\n        var _a;\n        return {\n          ...s,\n          matches: s.matches.map(invalidate),\n          cachedMatches: s.cachedMatches.map(invalidate),\n          pendingMatches: (_a = s.pendingMatches) == null ? void 0 : _a.map(invalidate)\n        };\n      });\n      return this.load({ sync: opts == null ? void 0 : opts.sync });\n    };\n    this.resolveRedirect = (err) => {\n      const redirect = err;\n      if (!redirect.href) {\n        redirect.href = this.buildLocation(redirect).href;\n      }\n      return redirect;\n    };\n    this.clearCache = (opts) => {\n      const filter = opts == null ? void 0 : opts.filter;\n      if (filter !== void 0) {\n        this.__store.setState((s) => {\n          return {\n            ...s,\n            cachedMatches: s.cachedMatches.filter(\n              (m) => !filter(m)\n            )\n          };\n        });\n      } else {\n        this.__store.setState((s) => {\n          return {\n            ...s,\n            cachedMatches: []\n          };\n        });\n      }\n    };\n    this.clearExpiredCache = () => {\n      const filter = (d) => {\n        const route = this.looseRoutesById[d.routeId];\n        if (!route.options.loader) {\n          return true;\n        }\n        const gcTime = (d.preload ? route.options.preloadGcTime ?? this.options.defaultPreloadGcTime : route.options.gcTime ?? this.options.defaultGcTime) ?? 5 * 60 * 1e3;\n        return !(d.status !== \"error\" && Date.now() - d.updatedAt < gcTime);\n      };\n      this.clearCache({ filter });\n    };\n    this.loadRouteChunk = (route) => {\n      if (route._lazyPromise === void 0) {\n        if (route.lazyFn) {\n          route._lazyPromise = route.lazyFn().then((lazyRoute) => {\n            const { id: _id, ...options2 } = lazyRoute.options;\n            Object.assign(route.options, options2);\n          });\n        } else {\n          route._lazyPromise = Promise.resolve();\n        }\n      }\n      if (route._componentsPromise === void 0) {\n        route._componentsPromise = route._lazyPromise.then(\n          () => Promise.all(\n            componentTypes.map(async (type) => {\n              const component = route.options[type];\n              if (component == null ? void 0 : component.preload) {\n                await component.preload();\n              }\n            })\n          )\n        );\n      }\n      return route._componentsPromise;\n    };\n    this.preloadRoute = async (opts) => {\n      const next = this.buildLocation(opts);\n      let matches = this.matchRoutes(next, {\n        throwOnError: true,\n        preload: true,\n        dest: opts\n      });\n      const activeMatchIds = new Set(\n        [...this.state.matches, ...this.state.pendingMatches ?? []].map(\n          (d) => d.id\n        )\n      );\n      const loadedMatchIds = /* @__PURE__ */ new Set([\n        ...activeMatchIds,\n        ...this.state.cachedMatches.map((d) => d.id)\n      ]);\n      batch(() => {\n        matches.forEach((match) => {\n          if (!loadedMatchIds.has(match.id)) {\n            this.__store.setState((s) => ({\n              ...s,\n              cachedMatches: [...s.cachedMatches, match]\n            }));\n          }\n        });\n      });\n      try {\n        matches = await this.loadMatches({\n          matches,\n          location: next,\n          preload: true,\n          updateMatch: (id, updater) => {\n            if (activeMatchIds.has(id)) {\n              matches = matches.map((d) => d.id === id ? updater(d) : d);\n            } else {\n              this.updateMatch(id, updater);\n            }\n          }\n        });\n        return matches;\n      } catch (err) {\n        if (isRedirect(err)) {\n          if (err.reloadDocument) {\n            return void 0;\n          }\n          return await this.preloadRoute({\n            ...err,\n            _fromLocation: next\n          });\n        }\n        if (!isNotFound(err)) {\n          console.error(err);\n        }\n        return void 0;\n      }\n    };\n    this.matchRoute = (location, opts) => {\n      const matchLocation = {\n        ...location,\n        to: location.to ? this.resolvePathWithBase(\n          location.from || \"\",\n          location.to\n        ) : void 0,\n        params: location.params || {},\n        leaveParams: true\n      };\n      const next = this.buildLocation(matchLocation);\n      if ((opts == null ? void 0 : opts.pending) && this.state.status !== \"pending\") {\n        return false;\n      }\n      const pending = (opts == null ? void 0 : opts.pending) === void 0 ? !this.state.isLoading : opts.pending;\n      const baseLocation = pending ? this.latestLocation : this.state.resolvedLocation || this.state.location;\n      const match = matchPathname(this.basepath, baseLocation.pathname, {\n        ...opts,\n        to: next.pathname\n      });\n      if (!match) {\n        return false;\n      }\n      if (location.params) {\n        if (!deepEqual(match, location.params, { partial: true })) {\n          return false;\n        }\n      }\n      if (match && ((opts == null ? void 0 : opts.includeSearch) ?? true)) {\n        return deepEqual(baseLocation.search, next.search, { partial: true }) ? match : false;\n      }\n      return match;\n    };\n    this._handleNotFound = (matches, err, {\n      updateMatch = this.updateMatch\n    } = {}) => {\n      var _a;\n      const routeCursor = this.routesById[err.routeId ?? \"\"] ?? this.routeTree;\n      const matchesByRouteId = {};\n      for (const match of matches) {\n        matchesByRouteId[match.routeId] = match;\n      }\n      if (!routeCursor.options.notFoundComponent && ((_a = this.options) == null ? void 0 : _a.defaultNotFoundComponent)) {\n        routeCursor.options.notFoundComponent = this.options.defaultNotFoundComponent;\n      }\n      invariant(\n        routeCursor.options.notFoundComponent,\n        \"No notFoundComponent found. Please set a notFoundComponent on your route or provide a defaultNotFoundComponent to the router.\"\n      );\n      const matchForRoute = matchesByRouteId[routeCursor.id];\n      invariant(\n        matchForRoute,\n        \"Could not find match for route: \" + routeCursor.id\n      );\n      updateMatch(matchForRoute.id, (prev) => ({\n        ...prev,\n        status: \"notFound\",\n        error: err,\n        isFetching: false\n      }));\n      if (err.routerCode === \"BEFORE_LOAD\" && routeCursor.parentRoute) {\n        err.routeId = routeCursor.parentRoute.id;\n        this._handleNotFound(matches, err, {\n          updateMatch\n        });\n      }\n    };\n    this.hasNotFoundMatch = () => {\n      return this.__store.state.matches.some(\n        (d) => d.status === \"notFound\" || d.globalNotFound\n      );\n    };\n    this.update({\n      defaultPreloadDelay: 50,\n      defaultPendingMs: 1e3,\n      defaultPendingMinMs: 500,\n      context: void 0,\n      ...options,\n      caseSensitive: options.caseSensitive ?? false,\n      notFoundMode: options.notFoundMode ?? \"fuzzy\",\n      stringifySearch: options.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options.parseSearch ?? defaultParseSearch\n    });\n    if (typeof document !== \"undefined\") {\n      window.__TSR_ROUTER__ = this;\n    }\n  }\n  get state() {\n    return this.__store.state;\n  }\n  get looseRoutesById() {\n    return this.routesById;\n  }\n  matchRoutesInternal(next, opts) {\n    const { foundRoute, matchedRoutes, routeParams } = this.getMatchedRoutes(\n      next,\n      opts == null ? void 0 : opts.dest\n    );\n    let isGlobalNotFound = false;\n    if (\n      // If we found a route, and it's not an index route and we have left over path\n      foundRoute ? foundRoute.path !== \"/\" && routeParams[\"**\"] : (\n        // Or if we didn't find a route and we have left over path\n        trimPathRight(next.pathname)\n      )\n    ) {\n      if (this.options.notFoundRoute) {\n        matchedRoutes.push(this.options.notFoundRoute);\n      } else {\n        isGlobalNotFound = true;\n      }\n    }\n    const globalNotFoundRouteId = (() => {\n      if (!isGlobalNotFound) {\n        return void 0;\n      }\n      if (this.options.notFoundMode !== \"root\") {\n        for (let i = matchedRoutes.length - 1; i >= 0; i--) {\n          const route = matchedRoutes[i];\n          if (route.children) {\n            return route.id;\n          }\n        }\n      }\n      return rootRouteId;\n    })();\n    const parseErrors = matchedRoutes.map((route) => {\n      var _a;\n      let parsedParamsError;\n      const parseParams = ((_a = route.options.params) == null ? void 0 : _a.parse) ?? route.options.parseParams;\n      if (parseParams) {\n        try {\n          const parsedParams = parseParams(routeParams);\n          Object.assign(routeParams, parsedParams);\n        } catch (err) {\n          parsedParamsError = new PathParamError(err.message, {\n            cause: err\n          });\n          if (opts == null ? void 0 : opts.throwOnError) {\n            throw parsedParamsError;\n          }\n          return parsedParamsError;\n        }\n      }\n      return;\n    });\n    const matches = [];\n    const getParentContext = (parentMatch) => {\n      const parentMatchId = parentMatch == null ? void 0 : parentMatch.id;\n      const parentContext = !parentMatchId ? this.options.context ?? {} : parentMatch.context ?? this.options.context ?? {};\n      return parentContext;\n    };\n    matchedRoutes.forEach((route, index) => {\n      var _a, _b;\n      const parentMatch = matches[index - 1];\n      const [preMatchSearch, strictMatchSearch, searchError] = (() => {\n        const parentSearch = (parentMatch == null ? void 0 : parentMatch.search) ?? next.search;\n        const parentStrictSearch = (parentMatch == null ? void 0 : parentMatch._strictSearch) ?? {};\n        try {\n          const strictSearch = validateSearch(route.options.validateSearch, { ...parentSearch }) ?? {};\n          return [\n            {\n              ...parentSearch,\n              ...strictSearch\n            },\n            { ...parentStrictSearch, ...strictSearch },\n            void 0\n          ];\n        } catch (err) {\n          let searchParamError = err;\n          if (!(err instanceof SearchParamError)) {\n            searchParamError = new SearchParamError(err.message, {\n              cause: err\n            });\n          }\n          if (opts == null ? void 0 : opts.throwOnError) {\n            throw searchParamError;\n          }\n          return [parentSearch, {}, searchParamError];\n        }\n      })();\n      const loaderDeps = ((_b = (_a = route.options).loaderDeps) == null ? void 0 : _b.call(_a, {\n        search: preMatchSearch\n      })) ?? \"\";\n      const loaderDepsHash = loaderDeps ? JSON.stringify(loaderDeps) : \"\";\n      const { usedParams, interpolatedPath } = interpolatePath({\n        path: route.fullPath,\n        params: routeParams,\n        decodeCharMap: this.pathParamsDecodeCharMap\n      });\n      const matchId = interpolatePath({\n        path: route.id,\n        params: routeParams,\n        leaveWildcards: true,\n        decodeCharMap: this.pathParamsDecodeCharMap\n      }).interpolatedPath + loaderDepsHash;\n      const existingMatch = this.getMatch(matchId);\n      const previousMatch = this.state.matches.find(\n        (d) => d.routeId === route.id\n      );\n      const cause = previousMatch ? \"stay\" : \"enter\";\n      let match;\n      if (existingMatch) {\n        match = {\n          ...existingMatch,\n          cause,\n          params: previousMatch ? replaceEqualDeep(previousMatch.params, routeParams) : routeParams,\n          _strictParams: usedParams,\n          search: previousMatch ? replaceEqualDeep(previousMatch.search, preMatchSearch) : replaceEqualDeep(existingMatch.search, preMatchSearch),\n          _strictSearch: strictMatchSearch\n        };\n      } else {\n        const status = route.options.loader || route.options.beforeLoad || route.lazyFn || routeNeedsPreload(route) ? \"pending\" : \"success\";\n        match = {\n          id: matchId,\n          index,\n          routeId: route.id,\n          params: previousMatch ? replaceEqualDeep(previousMatch.params, routeParams) : routeParams,\n          _strictParams: usedParams,\n          pathname: joinPaths([this.basepath, interpolatedPath]),\n          updatedAt: Date.now(),\n          search: previousMatch ? replaceEqualDeep(previousMatch.search, preMatchSearch) : preMatchSearch,\n          _strictSearch: strictMatchSearch,\n          searchError: void 0,\n          status,\n          isFetching: false,\n          error: void 0,\n          paramsError: parseErrors[index],\n          __routeContext: {},\n          __beforeLoadContext: {},\n          context: {},\n          abortController: new AbortController(),\n          fetchCount: 0,\n          cause,\n          loaderDeps: previousMatch ? replaceEqualDeep(previousMatch.loaderDeps, loaderDeps) : loaderDeps,\n          invalid: false,\n          preload: false,\n          links: void 0,\n          scripts: void 0,\n          headScripts: void 0,\n          meta: void 0,\n          staticData: route.options.staticData || {},\n          loadPromise: createControlledPromise(),\n          fullPath: route.fullPath\n        };\n      }\n      if (!(opts == null ? void 0 : opts.preload)) {\n        match.globalNotFound = globalNotFoundRouteId === route.id;\n      }\n      match.searchError = searchError;\n      const parentContext = getParentContext(parentMatch);\n      match.context = {\n        ...parentContext,\n        ...match.__routeContext,\n        ...match.__beforeLoadContext\n      };\n      matches.push(match);\n    });\n    matches.forEach((match, index) => {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      const route = this.looseRoutesById[match.routeId];\n      const existingMatch = this.getMatch(match.id);\n      if (!existingMatch && (opts == null ? void 0 : opts._buildLocation) !== true) {\n        const parentMatch = matches[index - 1];\n        const parentContext = getParentContext(parentMatch);\n        const contextFnContext = {\n          deps: match.loaderDeps,\n          params: match.params,\n          context: parentContext,\n          location: next,\n          navigate: (opts2) => this.navigate({ ...opts2, _fromLocation: next }),\n          buildLocation: this.buildLocation,\n          cause: match.cause,\n          abortController: match.abortController,\n          preload: !!match.preload,\n          matches\n        };\n        match.__routeContext = ((_b = (_a = route.options).context) == null ? void 0 : _b.call(_a, contextFnContext)) ?? {};\n        match.context = {\n          ...parentContext,\n          ...match.__routeContext,\n          ...match.__beforeLoadContext\n        };\n      }\n      if (match.status === \"success\") {\n        match.headers = (_d = (_c = route.options).headers) == null ? void 0 : _d.call(_c, {\n          loaderData: match.loaderData\n        });\n        const assetContext = {\n          matches,\n          match,\n          params: match.params,\n          loaderData: match.loaderData\n        };\n        const headFnContent = (_f = (_e = route.options).head) == null ? void 0 : _f.call(_e, assetContext);\n        match.links = headFnContent == null ? void 0 : headFnContent.links;\n        match.headScripts = headFnContent == null ? void 0 : headFnContent.scripts;\n        match.meta = headFnContent == null ? void 0 : headFnContent.meta;\n        match.scripts = (_h = (_g = route.options).scripts) == null ? void 0 : _h.call(_g, assetContext);\n      }\n    });\n    return matches;\n  }\n}\nclass SearchParamError extends Error {\n}\nclass PathParamError extends Error {\n}\nfunction lazyFn(fn, key) {\n  return async (...args) => {\n    const imported = await fn();\n    return imported[key || \"default\"](...args);\n  };\n}\nfunction getInitialRouterState(location) {\n  return {\n    loadedAt: 0,\n    isLoading: false,\n    isTransitioning: false,\n    status: \"idle\",\n    resolvedLocation: void 0,\n    location,\n    matches: [],\n    pendingMatches: [],\n    cachedMatches: [],\n    statusCode: 200\n  };\n}\nfunction validateSearch(validateSearch2, input) {\n  if (validateSearch2 == null) return {};\n  if (\"~standard\" in validateSearch2) {\n    const result = validateSearch2[\"~standard\"].validate(input);\n    if (result instanceof Promise)\n      throw new SearchParamError(\"Async validation not supported\");\n    if (result.issues)\n      throw new SearchParamError(JSON.stringify(result.issues, void 0, 2), {\n        cause: result\n      });\n    return result.value;\n  }\n  if (\"parse\" in validateSearch2) {\n    return validateSearch2.parse(input);\n  }\n  if (typeof validateSearch2 === \"function\") {\n    return validateSearch2(input);\n  }\n  return {};\n}\nconst componentTypes = [\n  \"component\",\n  \"errorComponent\",\n  \"pendingComponent\",\n  \"notFoundComponent\"\n];\nfunction routeNeedsPreload(route) {\n  var _a;\n  for (const componentType of componentTypes) {\n    if ((_a = route.options[componentType]) == null ? void 0 : _a.preload) {\n      return true;\n    }\n  }\n  return false;\n}\nexport {\n  PathParamError,\n  RouterCore,\n  SearchParamError,\n  componentTypes,\n  defaultSerializeError,\n  getInitialRouterState,\n  getLocationChangeInfo,\n  lazyFn\n};\n//# sourceMappingURL=router.js.map\n","import { defaultSerializeError } from \"./router.js\";\nconst TSR_DEFERRED_PROMISE = Symbol.for(\"TSR_DEFERRED_PROMISE\");\nfunction defer(_promise, options) {\n  const promise = _promise;\n  if (promise[TSR_DEFERRED_PROMISE]) {\n    return promise;\n  }\n  promise[TSR_DEFERRED_PROMISE] = { status: \"pending\" };\n  promise.then((data) => {\n    promise[TSR_DEFERRED_PROMISE].status = \"success\";\n    promise[TSR_DEFERRED_PROMISE].data = data;\n  }).catch((error) => {\n    promise[TSR_DEFERRED_PROMISE].status = \"error\";\n    promise[TSR_DEFERRED_PROMISE].error = {\n      data: ((options == null ? void 0 : options.serializeError) ?? defaultSerializeError)(error),\n      __isServerError: true\n    };\n  });\n  return promise;\n}\nexport {\n  TSR_DEFERRED_PROMISE,\n  defer\n};\n//# sourceMappingURL=defer.js.map\n","const preloadWarning = \"Error preloading route! ☝️\";\nexport {\n  preloadWarning\n};\n//# sourceMappingURL=link.js.map\n","import { trimPathLeft, joinPaths } from \"./path.js\";\nimport { notFound } from \"./not-found.js\";\nimport { rootRouteId } from \"./root.js\";\nclass BaseRoute {\n  constructor(options) {\n    this.init = (opts) => {\n      var _a, _b;\n      this.originalIndex = opts.originalIndex;\n      const options2 = this.options;\n      const isRoot = !(options2 == null ? void 0 : options2.path) && !(options2 == null ? void 0 : options2.id);\n      this.parentRoute = (_b = (_a = this.options).getParentRoute) == null ? void 0 : _b.call(_a);\n      if (isRoot) {\n        this._path = rootRouteId;\n      } else if (!this.parentRoute) {\n        throw new Error(\n          `Child Route instances must pass a 'getParentRoute: () => ParentRoute' option that returns a Route instance.`\n        );\n      }\n      let path = isRoot ? rootRouteId : options2 == null ? void 0 : options2.path;\n      if (path && path !== \"/\") {\n        path = trimPathLeft(path);\n      }\n      const customId = (options2 == null ? void 0 : options2.id) || path;\n      let id = isRoot ? rootRouteId : joinPaths([\n        this.parentRoute.id === rootRouteId ? \"\" : this.parentRoute.id,\n        customId\n      ]);\n      if (path === rootRouteId) {\n        path = \"/\";\n      }\n      if (id !== rootRouteId) {\n        id = joinPaths([\"/\", id]);\n      }\n      const fullPath = id === rootRouteId ? \"/\" : joinPaths([this.parentRoute.fullPath, path]);\n      this._path = path;\n      this._id = id;\n      this._fullPath = fullPath;\n      this._to = fullPath;\n      this._ssr = (options2 == null ? void 0 : options2.ssr) ?? opts.defaultSsr ?? true;\n    };\n    this.addChildren = (children) => {\n      return this._addFileChildren(children);\n    };\n    this._addFileChildren = (children) => {\n      if (Array.isArray(children)) {\n        this.children = children;\n      }\n      if (typeof children === \"object\" && children !== null) {\n        this.children = Object.values(children);\n      }\n      return this;\n    };\n    this._addFileTypes = () => {\n      return this;\n    };\n    this.updateLoader = (options2) => {\n      Object.assign(this.options, options2);\n      return this;\n    };\n    this.update = (options2) => {\n      Object.assign(this.options, options2);\n      return this;\n    };\n    this.lazy = (lazyFn) => {\n      this.lazyFn = lazyFn;\n      return this;\n    };\n    this.options = options || {};\n    this.isRoot = !(options == null ? void 0 : options.getParentRoute);\n    if ((options == null ? void 0 : options.id) && (options == null ? void 0 : options.path)) {\n      throw new Error(`Route cannot have both an 'id' and a 'path' option.`);\n    }\n  }\n  get to() {\n    return this._to;\n  }\n  get id() {\n    return this._id;\n  }\n  get path() {\n    return this._path;\n  }\n  get fullPath() {\n    return this._fullPath;\n  }\n  get ssr() {\n    return this._ssr;\n  }\n}\nclass BaseRouteApi {\n  constructor({ id }) {\n    this.notFound = (opts) => {\n      return notFound({ routeId: this.id, ...opts });\n    };\n    this.id = id;\n  }\n}\nclass BaseRootRoute extends BaseRoute {\n  constructor(options) {\n    super(options);\n  }\n}\nexport {\n  BaseRootRoute,\n  BaseRoute,\n  BaseRouteApi\n};\n//# sourceMappingURL=route.js.map\n","import { isPlainObject } from \"@tanstack/router-core\";\nconst startSerializer = {\n  stringify: (value) => JSON.stringify(value, function replacer(key, val) {\n    const ogVal = this[key];\n    const serializer = serializers.find((t) => t.stringifyCondition(ogVal));\n    if (serializer) {\n      return serializer.stringify(ogVal);\n    }\n    return val;\n  }),\n  parse: (value) => JSON.parse(value, function parser(key, val) {\n    const ogVal = this[key];\n    if (isPlainObject(ogVal)) {\n      const serializer = serializers.find((t) => t.parseCondition(ogVal));\n      if (serializer) {\n        return serializer.parse(ogVal);\n      }\n    }\n    return val;\n  }),\n  encode: (value) => {\n    if (Array.isArray(value)) {\n      return value.map((v) => startSerializer.encode(v));\n    }\n    if (isPlainObject(value)) {\n      return Object.fromEntries(\n        Object.entries(value).map(([key, v]) => [\n          key,\n          startSerializer.encode(v)\n        ])\n      );\n    }\n    const serializer = serializers.find((t) => t.stringifyCondition(value));\n    if (serializer) {\n      return serializer.stringify(value);\n    }\n    return value;\n  },\n  decode: (value) => {\n    if (isPlainObject(value)) {\n      const serializer = serializers.find((t) => t.parseCondition(value));\n      if (serializer) {\n        return serializer.parse(value);\n      }\n    }\n    if (Array.isArray(value)) {\n      return value.map((v) => startSerializer.decode(v));\n    }\n    if (isPlainObject(value)) {\n      return Object.fromEntries(\n        Object.entries(value).map(([key, v]) => [\n          key,\n          startSerializer.decode(v)\n        ])\n      );\n    }\n    return value;\n  }\n};\nconst createSerializer = (key, check, toValue, fromValue) => ({\n  key,\n  stringifyCondition: check,\n  stringify: (value) => ({ [`$${key}`]: toValue(value) }),\n  parseCondition: (value) => Object.hasOwn(value, `$${key}`),\n  parse: (value) => fromValue(value[`$${key}`])\n});\nconst serializers = [\n  createSerializer(\n    // Key\n    \"undefined\",\n    // Check\n    (v) => v === void 0,\n    // To\n    () => 0,\n    // From\n    () => void 0\n  ),\n  createSerializer(\n    // Key\n    \"date\",\n    // Check\n    (v) => v instanceof Date,\n    // To\n    (v) => v.toISOString(),\n    // From\n    (v) => new Date(v)\n  ),\n  createSerializer(\n    // Key\n    \"error\",\n    // Check\n    (v) => v instanceof Error,\n    // To\n    (v) => ({\n      ...v,\n      message: v.message,\n      stack: process.env.NODE_ENV === \"development\" ? v.stack : void 0,\n      cause: v.cause\n    }),\n    // From\n    (v) => Object.assign(new Error(v.message), v)\n  ),\n  createSerializer(\n    // Key\n    \"formData\",\n    // Check\n    (v) => v instanceof FormData,\n    // To\n    (v) => {\n      const entries = {};\n      v.forEach((value, key) => {\n        const entry = entries[key];\n        if (entry !== void 0) {\n          if (Array.isArray(entry)) {\n            entry.push(value);\n          } else {\n            entries[key] = [entry, value];\n          }\n        } else {\n          entries[key] = value;\n        }\n      });\n      return entries;\n    },\n    // From\n    (v) => {\n      const formData = new FormData();\n      Object.entries(v).forEach(([key, value]) => {\n        if (Array.isArray(value)) {\n          value.forEach((val) => formData.append(key, val));\n        } else {\n          formData.append(key, value);\n        }\n      });\n      return formData;\n    }\n  ),\n  createSerializer(\n    // Key\n    \"bigint\",\n    // Check\n    (v) => typeof v === \"bigint\",\n    // To\n    (v) => v.toString(),\n    // From\n    (v) => BigInt(v)\n  )\n];\nexport {\n  startSerializer\n};\n//# sourceMappingURL=serializer.js.map\n","import { isPlainObject } from \"@tanstack/router-core\";\nimport invariant from \"tiny-invariant\";\nimport { startSerializer } from \"./serializer.js\";\nfunction hydrate(router) {\n  var _a, _b, _c;\n  invariant(\n    (_a = window.__TSR_SSR__) == null ? void 0 : _a.dehydrated,\n    \"Expected to find a dehydrated data on window.__TSR_SSR__.dehydrated... but we did not. Please file an issue!\"\n  );\n  const { manifest, dehydratedData } = startSerializer.parse(\n    window.__TSR_SSR__.dehydrated\n  );\n  router.ssr = {\n    manifest,\n    serializer: startSerializer\n  };\n  router.clientSsr = {\n    getStreamedValue: (key) => {\n      var _a2;\n      if (router.isServer) {\n        return void 0;\n      }\n      const streamedValue = (_a2 = window.__TSR_SSR__) == null ? void 0 : _a2.streamedValues[key];\n      if (!streamedValue) {\n        return;\n      }\n      if (!streamedValue.parsed) {\n        streamedValue.parsed = router.ssr.serializer.parse(streamedValue.value);\n      }\n      return streamedValue.parsed;\n    }\n  };\n  const matches = router.matchRoutes(router.state.location);\n  const routeChunkPromise = Promise.all(\n    matches.map((match) => {\n      const route = router.looseRoutesById[match.routeId];\n      return router.loadRouteChunk(route);\n    })\n  );\n  matches.forEach((match) => {\n    var _a2;\n    const dehydratedMatch = window.__TSR_SSR__.matches.find(\n      (d) => d.id === match.id\n    );\n    if (dehydratedMatch) {\n      Object.assign(match, dehydratedMatch);\n      if (dehydratedMatch.__beforeLoadContext) {\n        match.__beforeLoadContext = router.ssr.serializer.parse(\n          dehydratedMatch.__beforeLoadContext\n        );\n      }\n      if (dehydratedMatch.loaderData) {\n        match.loaderData = router.ssr.serializer.parse(\n          dehydratedMatch.loaderData\n        );\n      }\n      if (dehydratedMatch.error) {\n        match.error = router.ssr.serializer.parse(dehydratedMatch.error);\n      }\n      (_a2 = match.extracted) == null ? void 0 : _a2.forEach((ex) => {\n        deepMutableSetByPath(match, [\"loaderData\", ...ex.path], ex.value);\n      });\n    } else {\n      Object.assign(match, {\n        status: \"success\",\n        updatedAt: Date.now()\n      });\n    }\n    return match;\n  });\n  router.__store.setState((s) => {\n    return {\n      ...s,\n      matches\n    };\n  });\n  (_c = (_b = router.options).hydrate) == null ? void 0 : _c.call(_b, dehydratedData);\n  router.state.matches.forEach((match) => {\n    var _a2, _b2, _c2, _d, _e, _f;\n    const route = router.looseRoutesById[match.routeId];\n    const parentMatch = router.state.matches[match.index - 1];\n    const parentContext = (parentMatch == null ? void 0 : parentMatch.context) ?? router.options.context ?? {};\n    const contextFnContext = {\n      deps: match.loaderDeps,\n      params: match.params,\n      context: parentContext,\n      location: router.state.location,\n      navigate: (opts) => router.navigate({ ...opts, _fromLocation: router.state.location }),\n      buildLocation: router.buildLocation,\n      cause: match.cause,\n      abortController: match.abortController,\n      preload: false,\n      matches\n    };\n    match.__routeContext = ((_b2 = (_a2 = route.options).context) == null ? void 0 : _b2.call(_a2, contextFnContext)) ?? {};\n    match.context = {\n      ...parentContext,\n      ...match.__routeContext,\n      ...match.__beforeLoadContext\n    };\n    const assetContext = {\n      matches: router.state.matches,\n      match,\n      params: match.params,\n      loaderData: match.loaderData\n    };\n    const headFnContent = (_d = (_c2 = route.options).head) == null ? void 0 : _d.call(_c2, assetContext);\n    const scripts = (_f = (_e = route.options).scripts) == null ? void 0 : _f.call(_e, assetContext);\n    match.meta = headFnContent == null ? void 0 : headFnContent.meta;\n    match.links = headFnContent == null ? void 0 : headFnContent.links;\n    match.headScripts = headFnContent == null ? void 0 : headFnContent.scripts;\n    match.scripts = scripts;\n  });\n  return routeChunkPromise;\n}\nfunction deepMutableSetByPath(obj, path, value) {\n  if (path.length === 1) {\n    obj[path[0]] = value;\n  }\n  const [key, ...rest] = path;\n  if (Array.isArray(obj)) {\n    deepMutableSetByPath(obj[Number(key)], rest, value);\n  } else if (isPlainObject(obj)) {\n    deepMutableSetByPath(obj[key], rest, value);\n  }\n}\nexport {\n  hydrate\n};\n//# sourceMappingURL=ssr-client.js.map\n","const globalMiddleware = [];\nfunction registerGlobalMiddleware(options) {\n  globalMiddleware.push(...options.middleware);\n}\nexport {\n  globalMiddleware,\n  registerGlobalMiddleware\n};\n//# sourceMappingURL=registerGlobalMiddleware.js.map\n","import invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\nimport { isRedirect, isNotFound } from \"@tanstack/router-core\";\nimport { startSerializer } from \"./serializer.js\";\nimport { mergeHeaders } from \"./headers.js\";\nimport { globalMiddleware } from \"./registerGlobalMiddleware.js\";\nfunction createServerFn(options, __opts) {\n  const resolvedOptions = __opts || options || {};\n  if (typeof resolvedOptions.method === \"undefined\") {\n    resolvedOptions.method = \"GET\";\n  }\n  return {\n    options: resolvedOptions,\n    middleware: (middleware) => {\n      return createServerFn(void 0, Object.assign(resolvedOptions, { middleware }));\n    },\n    validator: (validator) => {\n      return createServerFn(void 0, Object.assign(resolvedOptions, { validator }));\n    },\n    type: (type) => {\n      return createServerFn(void 0, Object.assign(resolvedOptions, { type }));\n    },\n    handler: (...args) => {\n      const [extractedFn, serverFn] = args;\n      Object.assign(resolvedOptions, {\n        ...extractedFn,\n        extractedFn,\n        serverFn\n      });\n      const resolvedMiddleware = [\n        ...resolvedOptions.middleware || [],\n        serverFnBaseToMiddleware(resolvedOptions)\n      ];\n      return Object.assign(\n        async (opts) => {\n          return executeMiddleware(resolvedMiddleware, \"client\", {\n            ...extractedFn,\n            ...resolvedOptions,\n            data: opts == null ? void 0 : opts.data,\n            headers: opts == null ? void 0 : opts.headers,\n            signal: opts == null ? void 0 : opts.signal,\n            context: {}\n          }).then((d) => {\n            if (resolvedOptions.response === \"full\") {\n              return d;\n            }\n            if (d.error) throw d.error;\n            return d.result;\n          });\n        },\n        {\n          // This copies over the URL, function ID\n          ...extractedFn,\n          // The extracted function on the server-side calls\n          // this function\n          __executeServer: async (opts_, signal) => {\n            const opts = opts_ instanceof FormData ? extractFormDataContext(opts_) : opts_;\n            opts.type = typeof resolvedOptions.type === \"function\" ? resolvedOptions.type(opts) : resolvedOptions.type;\n            const ctx = {\n              ...extractedFn,\n              ...opts,\n              signal\n            };\n            const run = () => executeMiddleware(resolvedMiddleware, \"server\", ctx).then(\n              (d) => ({\n                // Only send the result and sendContext back to the client\n                result: d.result,\n                error: d.error,\n                context: d.sendContext\n              })\n            );\n            if (ctx.type === \"static\") {\n              let response;\n              if (serverFnStaticCache == null ? void 0 : serverFnStaticCache.getItem) {\n                response = await serverFnStaticCache.getItem(ctx);\n              }\n              if (!response) {\n                response = await run().then((d) => {\n                  return {\n                    ctx: d,\n                    error: null\n                  };\n                }).catch((e) => {\n                  return {\n                    ctx: void 0,\n                    error: e\n                  };\n                });\n                if (serverFnStaticCache == null ? void 0 : serverFnStaticCache.setItem) {\n                  await serverFnStaticCache.setItem(ctx, response);\n                }\n              }\n              invariant(\n                response,\n                \"No response from both server and static cache!\"\n              );\n              if (response.error) {\n                throw response.error;\n              }\n              return response.ctx;\n            }\n            return run();\n          }\n        }\n      );\n    }\n  };\n}\nasync function executeMiddleware(middlewares, env, opts) {\n  const flattenedMiddlewares = flattenMiddlewares([\n    ...globalMiddleware,\n    ...middlewares\n  ]);\n  const next = async (ctx) => {\n    const nextMiddleware = flattenedMiddlewares.shift();\n    if (!nextMiddleware) {\n      return ctx;\n    }\n    if (nextMiddleware.options.validator && (env === \"client\" ? nextMiddleware.options.validateClient : true)) {\n      ctx.data = await execValidator(nextMiddleware.options.validator, ctx.data);\n    }\n    const middlewareFn = env === \"client\" ? nextMiddleware.options.client : nextMiddleware.options.server;\n    if (middlewareFn) {\n      return applyMiddleware(middlewareFn, ctx, async (newCtx) => {\n        return next(newCtx).catch((error) => {\n          if (isRedirect(error) || isNotFound(error)) {\n            return {\n              ...newCtx,\n              error\n            };\n          }\n          throw error;\n        });\n      });\n    }\n    return next(ctx);\n  };\n  return next({\n    ...opts,\n    headers: opts.headers || {},\n    sendContext: opts.sendContext || {},\n    context: opts.context || {}\n  });\n}\nlet serverFnStaticCache;\nfunction setServerFnStaticCache(cache) {\n  const previousCache = serverFnStaticCache;\n  serverFnStaticCache = typeof cache === \"function\" ? cache() : cache;\n  return () => {\n    serverFnStaticCache = previousCache;\n  };\n}\nfunction createServerFnStaticCache(serverFnStaticCache2) {\n  return serverFnStaticCache2;\n}\nasync function sha1Hash(message) {\n  const msgBuffer = new TextEncoder().encode(message);\n  const hashBuffer = await crypto.subtle.digest(\"SHA-1\", msgBuffer);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  return hashHex;\n}\nsetServerFnStaticCache(() => {\n  const getStaticCacheUrl = async (options, hash) => {\n    const filename = await sha1Hash(`${options.functionId}__${hash}`);\n    return `/__tsr/staticServerFnCache/${filename}.json`;\n  };\n  const jsonToFilenameSafeString = (json) => {\n    const sortedKeysReplacer = (key, value) => value && typeof value === \"object\" && !Array.isArray(value) ? Object.keys(value).sort().reduce((acc, curr) => {\n      acc[curr] = value[curr];\n      return acc;\n    }, {}) : value;\n    const jsonString = JSON.stringify(json ?? \"\", sortedKeysReplacer);\n    return jsonString.replace(/[/\\\\?%*:|\"<>]/g, \"-\").replace(/\\s+/g, \"_\");\n  };\n  const staticClientCache = typeof document !== \"undefined\" ? /* @__PURE__ */ new Map() : null;\n  return createServerFnStaticCache({\n    getItem: async (ctx) => {\n      if (typeof document === \"undefined\") {\n        const hash = jsonToFilenameSafeString(ctx.data);\n        const url = await getStaticCacheUrl(ctx, hash);\n        const publicUrl = process.env.TSS_OUTPUT_PUBLIC_DIR;\n        const { promises: fs } = await import(\"node:fs\");\n        const path = await import(\"node:path\");\n        const filePath = path.join(publicUrl, url);\n        const [cachedResult, readError] = await fs.readFile(filePath, \"utf-8\").then((c) => [\n          startSerializer.parse(c),\n          null\n        ]).catch((e) => [null, e]);\n        if (readError && readError.code !== \"ENOENT\") {\n          throw readError;\n        }\n        return cachedResult;\n      }\n      return void 0;\n    },\n    setItem: async (ctx, response) => {\n      const { promises: fs } = await import(\"node:fs\");\n      const path = await import(\"node:path\");\n      const hash = jsonToFilenameSafeString(ctx.data);\n      const url = await getStaticCacheUrl(ctx, hash);\n      const publicUrl = process.env.TSS_OUTPUT_PUBLIC_DIR;\n      const filePath = path.join(publicUrl, url);\n      await fs.mkdir(path.dirname(filePath), { recursive: true });\n      await fs.writeFile(filePath, startSerializer.stringify(response));\n    },\n    fetchItem: async (ctx) => {\n      const hash = jsonToFilenameSafeString(ctx.data);\n      const url = await getStaticCacheUrl(ctx, hash);\n      let result = staticClientCache == null ? void 0 : staticClientCache.get(url);\n      if (!result) {\n        result = await fetch(url, {\n          method: \"GET\"\n        }).then((r) => r.text()).then((d) => startSerializer.parse(d));\n        staticClientCache == null ? void 0 : staticClientCache.set(url, result);\n      }\n      return result;\n    }\n  });\n});\nfunction extractFormDataContext(formData) {\n  const serializedContext = formData.get(\"__TSR_CONTEXT\");\n  formData.delete(\"__TSR_CONTEXT\");\n  if (typeof serializedContext !== \"string\") {\n    return {\n      context: {},\n      data: formData\n    };\n  }\n  try {\n    const context = startSerializer.parse(serializedContext);\n    return {\n      context,\n      data: formData\n    };\n  } catch {\n    return {\n      data: formData\n    };\n  }\n}\nfunction flattenMiddlewares(middlewares) {\n  const seen = /* @__PURE__ */ new Set();\n  const flattened = [];\n  const recurse = (middleware) => {\n    middleware.forEach((m) => {\n      if (m.options.middleware) {\n        recurse(m.options.middleware);\n      }\n      if (!seen.has(m)) {\n        seen.add(m);\n        flattened.push(m);\n      }\n    });\n  };\n  recurse(middlewares);\n  return flattened;\n}\nconst applyMiddleware = async (middlewareFn, ctx, nextFn) => {\n  return middlewareFn({\n    ...ctx,\n    next: async (userCtx = {}) => {\n      return nextFn({\n        ...ctx,\n        ...userCtx,\n        context: {\n          ...ctx.context,\n          ...userCtx.context\n        },\n        sendContext: {\n          ...ctx.sendContext,\n          ...userCtx.sendContext ?? {}\n        },\n        headers: mergeHeaders(ctx.headers, userCtx.headers),\n        result: userCtx.result !== void 0 ? userCtx.result : ctx.response === \"raw\" ? userCtx : ctx.result,\n        error: userCtx.error ?? ctx.error\n      });\n    }\n  });\n};\nfunction execValidator(validator, input) {\n  if (validator == null) return {};\n  if (\"~standard\" in validator) {\n    const result = validator[\"~standard\"].validate(input);\n    if (result instanceof Promise)\n      throw new Error(\"Async validation not supported\");\n    if (result.issues)\n      throw new Error(JSON.stringify(result.issues, void 0, 2));\n    return result.value;\n  }\n  if (\"parse\" in validator) {\n    return validator.parse(input);\n  }\n  if (typeof validator === \"function\") {\n    return validator(input);\n  }\n  throw new Error(\"Invalid validator type!\");\n}\nfunction serverFnBaseToMiddleware(options) {\n  return {\n    _types: void 0,\n    options: {\n      validator: options.validator,\n      validateClient: options.validateClient,\n      client: async ({ next, sendContext, ...ctx }) => {\n        var _a;\n        const payload = {\n          ...ctx,\n          // switch the sendContext over to context\n          context: sendContext,\n          type: typeof ctx.type === \"function\" ? ctx.type(ctx) : ctx.type\n        };\n        if (ctx.type === \"static\" && process.env.NODE_ENV === \"production\" && typeof document !== \"undefined\") {\n          invariant(\n            serverFnStaticCache,\n            \"serverFnStaticCache.fetchItem is not available!\"\n          );\n          const result = await serverFnStaticCache.fetchItem(payload);\n          if (result) {\n            if (result.error) {\n              throw result.error;\n            }\n            return next(result.ctx);\n          }\n          warning(\n            result,\n            `No static cache item found for ${payload.functionId}__${JSON.stringify(payload.data)}, falling back to server function...`\n          );\n        }\n        const res = await ((_a = options.extractedFn) == null ? void 0 : _a.call(options, payload));\n        return next(res);\n      },\n      server: async ({ next, ...ctx }) => {\n        var _a;\n        const result = await ((_a = options.serverFn) == null ? void 0 : _a.call(options, ctx));\n        return next({\n          ...ctx,\n          result\n        });\n      }\n    }\n  };\n}\nexport {\n  applyMiddleware,\n  createServerFn,\n  createServerFnStaticCache,\n  execValidator,\n  extractFormDataContext,\n  flattenMiddlewares,\n  serverFnBaseToMiddleware,\n  serverFnStaticCache,\n  setServerFnStaticCache\n};\n//# sourceMappingURL=createServerFn.js.map\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null, V: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, createDeps, update) {\n  var dispatcher = ReactSharedInternals.H;\n  if (\"function\" === typeof update)\n    throw Error(\n      \"useEffect CRUD overload is not enabled in this build of React.\"\n    );\n  return dispatcher.useEffect(create, createDeps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.1.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { defer, TSR_DEFERRED_PROMISE } from \"@tanstack/router-core\";\nfunction useAwaited({\n  promise: _promise\n}) {\n  const promise = defer(_promise);\n  if (promise[TSR_DEFERRED_PROMISE].status === \"pending\") {\n    throw promise;\n  }\n  if (promise[TSR_DEFERRED_PROMISE].status === \"error\") {\n    throw promise[TSR_DEFERRED_PROMISE].error;\n  }\n  return [promise[TSR_DEFERRED_PROMISE].data, promise];\n}\nfunction Await(props) {\n  const inner = /* @__PURE__ */ jsx(AwaitInner, { ...props });\n  if (props.fallback) {\n    return /* @__PURE__ */ jsx(React.Suspense, { fallback: props.fallback, children: inner });\n  }\n  return inner;\n}\nfunction AwaitInner(props) {\n  const [data] = useAwaited(props);\n  return props.children(data);\n}\nexport {\n  Await,\n  useAwaited\n};\n//# sourceMappingURL=awaited.js.map\n","import { jsx, jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nfunction CatchBoundary(props) {\n  const errorComponent = props.errorComponent ?? ErrorComponent;\n  return /* @__PURE__ */ jsx(\n    CatchBoundaryImpl,\n    {\n      getResetKey: props.getResetKey,\n      onCatch: props.onCatch,\n      children: ({ error, reset }) => {\n        if (error) {\n          return React.createElement(errorComponent, {\n            error,\n            reset\n          });\n        }\n        return props.children;\n      }\n    }\n  );\n}\nclass CatchBoundaryImpl extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromProps(props) {\n    return { resetKey: props.getResetKey() };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  reset() {\n    this.setState({ error: null });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.error && prevState.resetKey !== this.state.resetKey) {\n      this.reset();\n    }\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.onCatch) {\n      this.props.onCatch(error, errorInfo);\n    }\n  }\n  render() {\n    return this.props.children({\n      error: this.state.resetKey !== this.props.getResetKey() ? null : this.state.error,\n      reset: () => {\n        this.reset();\n      }\n    });\n  }\n}\nfunction ErrorComponent({ error }) {\n  const [show, setShow] = React.useState(process.env.NODE_ENV !== \"production\");\n  return /* @__PURE__ */ jsxs(\"div\", { style: { padding: \".5rem\", maxWidth: \"100%\" }, children: [\n    /* @__PURE__ */ jsxs(\"div\", { style: { display: \"flex\", alignItems: \"center\", gap: \".5rem\" }, children: [\n      /* @__PURE__ */ jsx(\"strong\", { style: { fontSize: \"1rem\" }, children: \"Something went wrong!\" }),\n      /* @__PURE__ */ jsx(\n        \"button\",\n        {\n          style: {\n            appearance: \"none\",\n            fontSize: \".6em\",\n            border: \"1px solid currentColor\",\n            padding: \".1rem .2rem\",\n            fontWeight: \"bold\",\n            borderRadius: \".25rem\"\n          },\n          onClick: () => setShow((d) => !d),\n          children: show ? \"Hide Error\" : \"Show Error\"\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsx(\"div\", { style: { height: \".25rem\" } }),\n    show ? /* @__PURE__ */ jsx(\"div\", { children: /* @__PURE__ */ jsx(\n      \"pre\",\n      {\n        style: {\n          fontSize: \".7em\",\n          border: \"1px solid red\",\n          borderRadius: \".25rem\",\n          padding: \".3rem\",\n          color: \"red\",\n          overflow: \"auto\"\n        },\n        children: error.message ? /* @__PURE__ */ jsx(\"code\", { children: error.message }) : null\n      }\n    ) }) : null\n  ] });\n}\nexport {\n  CatchBoundary,\n  ErrorComponent\n};\n//# sourceMappingURL=CatchBoundary.js.map\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { useSyncExternalStoreWithSelector } from \"use-sync-external-store/shim/with-selector.js\";\nexport * from \"@tanstack/store\";\nfunction useStore(store, selector = (d) => d) {\n  const slice = useSyncExternalStoreWithSelector(\n    store.subscribe,\n    () => store.state,\n    () => store.state,\n    selector,\n    shallow\n  );\n  return slice;\n}\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size) return false;\n    for (const [k, v] of objA) {\n      if (!objB.has(k) || !Object.is(v, objB.get(k))) return false;\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size) return false;\n    for (const v of objA) {\n      if (!objB.has(v)) return false;\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nexport {\n  shallow,\n  useStore\n};\n//# sourceMappingURL=index.js.map\n","import * as React from \"react\";\nconst routerContext = React.createContext(null);\nfunction getRouterContext() {\n  if (typeof document === \"undefined\") {\n    return routerContext;\n  }\n  if (window.__TSR_ROUTER_CONTEXT__) {\n    return window.__TSR_ROUTER_CONTEXT__;\n  }\n  window.__TSR_ROUTER_CONTEXT__ = routerContext;\n  return routerContext;\n}\nexport {\n  getRouterContext\n};\n//# sourceMappingURL=routerContext.js.map\n","import * as React from \"react\";\nimport warning from \"tiny-warning\";\nimport { getRouterContext } from \"./routerContext.js\";\nfunction useRouter(opts) {\n  const value = React.useContext(getRouterContext());\n  warning(\n    !(((opts == null ? void 0 : opts.warn) ?? true) && !value),\n    \"useRouter must be used inside a <RouterProvider> component!\"\n  );\n  return value;\n}\nexport {\n  useRouter\n};\n//# sourceMappingURL=useRouter.js.map\n","import { useStore } from \"@tanstack/react-store\";\nimport { useRef } from \"react\";\nimport { replaceEqualDeep } from \"@tanstack/router-core\";\nimport { useRouter } from \"./useRouter.js\";\nfunction useRouterState(opts) {\n  const contextRouter = useRouter({\n    warn: (opts == null ? void 0 : opts.router) === void 0\n  });\n  const router = (opts == null ? void 0 : opts.router) || contextRouter;\n  const previousResult = useRef(void 0);\n  return useStore(router.__store, (state) => {\n    if (opts == null ? void 0 : opts.select) {\n      if (opts.structuralSharing ?? router.options.defaultStructuralSharing) {\n        const newSlice = replaceEqualDeep(\n          previousResult.current,\n          opts.select(state)\n        );\n        previousResult.current = newSlice;\n        return newSlice;\n      }\n      return opts.select(state);\n    }\n    return state;\n  });\n}\nexport {\n  useRouterState\n};\n//# sourceMappingURL=useRouterState.js.map\n","import * as React from \"react\";\nconst matchContext = React.createContext(void 0);\nconst dummyMatchContext = React.createContext(\n  void 0\n);\nexport {\n  dummyMatchContext,\n  matchContext\n};\n//# sourceMappingURL=matchContext.js.map\n","import * as React from \"react\";\nimport invariant from \"tiny-invariant\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { dummyMatchContext, matchContext } from \"./matchContext.js\";\nfunction useMatch(opts) {\n  const nearestMatchId = React.useContext(\n    opts.from ? dummyMatchContext : matchContext\n  );\n  const matchSelection = useRouterState({\n    select: (state) => {\n      const match = state.matches.find(\n        (d) => opts.from ? opts.from === d.routeId : d.id === nearestMatchId\n      );\n      invariant(\n        !((opts.shouldThrow ?? true) && !match),\n        `Could not find ${opts.from ? `an active match from \"${opts.from}\"` : \"a nearest match!\"}`\n      );\n      if (match === void 0) {\n        return void 0;\n      }\n      return opts.select ? opts.select(match) : match;\n    },\n    structuralSharing: opts.structuralSharing\n  });\n  return matchSelection;\n}\nexport {\n  useMatch\n};\n//# sourceMappingURL=useMatch.js.map\n","import { useMatch } from \"./useMatch.js\";\nfunction useLoaderData(opts) {\n  return useMatch({\n    from: opts.from,\n    strict: opts.strict,\n    structuralSharing: opts.structuralSharing,\n    select: (s) => {\n      return opts.select ? opts.select(s.loaderData) : s.loaderData;\n    }\n  });\n}\nexport {\n  useLoaderData\n};\n//# sourceMappingURL=useLoaderData.js.map\n","import { useMatch } from \"./useMatch.js\";\nfunction useLoaderDeps(opts) {\n  const { select, ...rest } = opts;\n  return useMatch({\n    ...rest,\n    select: (s) => {\n      return select ? select(s.loaderDeps) : s.loaderDeps;\n    }\n  });\n}\nexport {\n  useLoaderDeps\n};\n//# sourceMappingURL=useLoaderDeps.js.map\n","import { useMatch } from \"./useMatch.js\";\nfunction useParams(opts) {\n  return useMatch({\n    from: opts.from,\n    strict: opts.strict,\n    shouldThrow: opts.shouldThrow,\n    structuralSharing: opts.structuralSharing,\n    select: (match) => {\n      return opts.select ? opts.select(match.params) : match.params;\n    }\n  });\n}\nexport {\n  useParams\n};\n//# sourceMappingURL=useParams.js.map\n","import { useMatch } from \"./useMatch.js\";\nfunction useSearch(opts) {\n  return useMatch({\n    from: opts.from,\n    strict: opts.strict,\n    shouldThrow: opts.shouldThrow,\n    structuralSharing: opts.structuralSharing,\n    select: (match) => {\n      return opts.select ? opts.select(match.search) : match.search;\n    }\n  });\n}\nexport {\n  useSearch\n};\n//# sourceMappingURL=useSearch.js.map\n","import * as React from \"react\";\nimport { useRouter } from \"./useRouter.js\";\nfunction useNavigate(_defaultOpts) {\n  const { navigate } = useRouter();\n  return React.useCallback(\n    (options) => {\n      return navigate({\n        from: _defaultOpts == null ? void 0 : _defaultOpts.from,\n        ...options\n      });\n    },\n    [_defaultOpts == null ? void 0 : _defaultOpts.from, navigate]\n  );\n}\nfunction Navigate(props) {\n  const router = useRouter();\n  const previousPropsRef = React.useRef(null);\n  React.useEffect(() => {\n    if (previousPropsRef.current !== props) {\n      router.navigate({\n        ...props\n      });\n      previousPropsRef.current = props;\n    }\n  }, [router, props]);\n  return null;\n}\nexport {\n  Navigate,\n  useNavigate\n};\n//# sourceMappingURL=useNavigate.js.map\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.1.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","import * as React from \"react\";\nfunction useStableCallback(fn) {\n  const fnRef = React.useRef(fn);\n  fnRef.current = fn;\n  const ref = React.useRef((...args) => fnRef.current(...args));\n  return ref.current;\n}\nconst useLayoutEffect = typeof window !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nfunction usePrevious(value) {\n  const ref = React.useRef({\n    value,\n    prev: null\n  });\n  const current = ref.current.value;\n  if (value !== current) {\n    ref.current = {\n      value,\n      prev: current\n    };\n  }\n  return ref.current.prev;\n}\nfunction useIntersectionObserver(ref, callback, intersectionObserverOptions = {}, options = {}) {\n  const isIntersectionObserverAvailable = React.useRef(\n    typeof IntersectionObserver === \"function\"\n  );\n  const observerRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!ref.current || !isIntersectionObserverAvailable.current || options.disabled) {\n      return;\n    }\n    observerRef.current = new IntersectionObserver(([entry]) => {\n      callback(entry);\n    }, intersectionObserverOptions);\n    observerRef.current.observe(ref.current);\n    return () => {\n      var _a;\n      (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n    };\n  }, [callback, intersectionObserverOptions, options.disabled, ref]);\n  return observerRef.current;\n}\nfunction useForwardedRef(ref) {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current, []);\n  return innerRef;\n}\nexport {\n  useForwardedRef,\n  useIntersectionObserver,\n  useLayoutEffect,\n  usePrevious,\n  useStableCallback\n};\n//# sourceMappingURL=utils.js.map\n","import * as React from \"react\";\nimport { trimPathRight, getLocationChangeInfo, handleHashScroll } from \"@tanstack/router-core\";\nimport { usePrevious, useLayoutEffect } from \"./utils.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nfunction Transitioner() {\n  const router = useRouter();\n  const mountLoadForRouter = React.useRef({ router, mounted: false });\n  const isLoading = useRouterState({\n    select: ({ isLoading: isLoading2 }) => isLoading2\n  });\n  const [isTransitioning, setIsTransitioning] = React.useState(false);\n  const hasPendingMatches = useRouterState({\n    select: (s) => s.matches.some((d) => d.status === \"pending\"),\n    structuralSharing: true\n  });\n  const previousIsLoading = usePrevious(isLoading);\n  const isAnyPending = isLoading || isTransitioning || hasPendingMatches;\n  const previousIsAnyPending = usePrevious(isAnyPending);\n  const isPagePending = isLoading || hasPendingMatches;\n  const previousIsPagePending = usePrevious(isPagePending);\n  if (!router.isServer) {\n    router.startTransition = (fn) => {\n      setIsTransitioning(true);\n      React.startTransition(() => {\n        fn();\n        setIsTransitioning(false);\n      });\n    };\n  }\n  React.useEffect(() => {\n    const unsub = router.history.subscribe(router.load);\n    const nextLocation = router.buildLocation({\n      to: router.latestLocation.pathname,\n      search: true,\n      params: true,\n      hash: true,\n      state: true,\n      _includeValidateSearch: true\n    });\n    if (trimPathRight(router.latestLocation.href) !== trimPathRight(nextLocation.href)) {\n      router.commitLocation({ ...nextLocation, replace: true });\n    }\n    return () => {\n      unsub();\n    };\n  }, [router, router.history]);\n  useLayoutEffect(() => {\n    if (typeof window !== \"undefined\" && router.clientSsr || mountLoadForRouter.current.router === router && mountLoadForRouter.current.mounted) {\n      return;\n    }\n    mountLoadForRouter.current = { router, mounted: true };\n    const tryLoad = async () => {\n      try {\n        await router.load();\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    tryLoad();\n  }, [router]);\n  useLayoutEffect(() => {\n    if (previousIsLoading && !isLoading) {\n      router.emit({\n        type: \"onLoad\",\n        // When the new URL has committed, when the new matches have been loaded into state.matches\n        ...getLocationChangeInfo(router.state)\n      });\n    }\n  }, [previousIsLoading, router, isLoading]);\n  useLayoutEffect(() => {\n    if (previousIsPagePending && !isPagePending) {\n      router.emit({\n        type: \"onBeforeRouteMount\",\n        ...getLocationChangeInfo(router.state)\n      });\n    }\n  }, [isPagePending, previousIsPagePending, router]);\n  useLayoutEffect(() => {\n    if (previousIsAnyPending && !isAnyPending) {\n      router.emit({\n        type: \"onResolved\",\n        ...getLocationChangeInfo(router.state)\n      });\n      router.__store.setState((s) => ({\n        ...s,\n        status: \"idle\",\n        resolvedLocation: s.location\n      }));\n      handleHashScroll(router);\n    }\n  }, [isAnyPending, previousIsAnyPending, router]);\n  return null;\n}\nexport {\n  Transitioner\n};\n//# sourceMappingURL=Transitioner.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport { isNotFound } from \"@tanstack/router-core\";\nimport { CatchBoundary } from \"./CatchBoundary.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nfunction CatchNotFound(props) {\n  const resetKey = useRouterState({\n    select: (s) => `not-found-${s.location.pathname}-${s.status}`\n  });\n  return /* @__PURE__ */ jsx(\n    CatchBoundary,\n    {\n      getResetKey: () => resetKey,\n      onCatch: (error, errorInfo) => {\n        var _a;\n        if (isNotFound(error)) {\n          (_a = props.onCatch) == null ? void 0 : _a.call(props, error, errorInfo);\n        } else {\n          throw error;\n        }\n      },\n      errorComponent: ({ error }) => {\n        var _a;\n        if (isNotFound(error)) {\n          return (_a = props.fallback) == null ? void 0 : _a.call(props, error);\n        } else {\n          throw error;\n        }\n      },\n      children: props.children\n    }\n  );\n}\nfunction DefaultGlobalNotFound() {\n  return /* @__PURE__ */ jsx(\"p\", { children: \"Not Found\" });\n}\nexport {\n  CatchNotFound,\n  DefaultGlobalNotFound\n};\n//# sourceMappingURL=not-found.js.map\n","import { jsx, Fragment } from \"react/jsx-runtime\";\nfunction SafeFragment(props) {\n  return /* @__PURE__ */ jsx(Fragment, { children: props.children });\n}\nexport {\n  SafeFragment\n};\n//# sourceMappingURL=SafeFragment.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport warning from \"tiny-warning\";\nimport { DefaultGlobalNotFound } from \"./not-found.js\";\nfunction renderRouteNotFound(router, route, data) {\n  if (!route.options.notFoundComponent) {\n    if (router.options.defaultNotFoundComponent) {\n      return /* @__PURE__ */ jsx(router.options.defaultNotFoundComponent, { data });\n    }\n    if (process.env.NODE_ENV === \"development\") {\n      warning(\n        route.options.notFoundComponent,\n        `A notFoundError was encountered on the route with ID \"${route.id}\", but a notFoundComponent option was not configured, nor was a router level defaultNotFoundComponent configured. Consider configuring at least one of these to avoid TanStack Router's overly generic defaultNotFoundComponent (<div>Not Found<div>)`\n      );\n    }\n    return /* @__PURE__ */ jsx(DefaultGlobalNotFound, {});\n  }\n  return /* @__PURE__ */ jsx(route.options.notFoundComponent, { data });\n}\nexport {\n  renderRouteNotFound\n};\n//# sourceMappingURL=renderRouteNotFound.js.map\n","'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst fourHexEscape = (hex) => {\n\treturn '\\\\u' + ('0000' + hex).slice(-4);\n}\n\nconst hexadecimal = (code, lowercase) => {\n\tlet hexadecimal = code.toString(16);\n\tif (lowercase) return hexadecimal;\n\treturn hexadecimal.toUpperCase();\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = (value) => {\n\treturn typeof Buffer === 'function' && Buffer.isBuffer(value);\n};\nconst isObject = (value) => {\n\t// This is a very simple check, but it’s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isBigInt = (value) => {\n  return typeof value == 'bigint';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitespace = /[\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n\nconst escapeEverythingRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^]/g;\nconst escapeNonAsciiRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^ !#-&\\(-\\[\\]-_a-~]/g;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument) || isBigInt(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\t// `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` cannot be represented in JSON so they will become\n        // `-Infinity` or `Infinity`, respectively, and then become `null` when\n        // stringified.\n\t\t\t\treturn JSON.stringify(Number(argument));\n\t\t\t}\n\n      let result;\n\t\t\tif (useDecNumbers) {\n\t\t\t\tresult = String(argument);\n\t\t\t} else if (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\tresult = '0x' + hexadecimal;\n\t\t\t} else if (useBinNumbers) {\n\t\t\t\tresult = '0b' + argument.toString(2);\n\t\t\t} else if (useOctNumbers) {\n\t\t\t\tresult = '0o' + argument.toString(8);\n\t\t\t}\n\n      if (isBigInt(argument)) {\n        return result + 'n';\n      }\n      return result;\n\t\t} else if (isBigInt(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` will become `-Infinity` or `Infinity`,\n        // respectively, and cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(Number(argument));\n\t\t\t}\n      return argument + 'n';\n    } else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it’s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst regex = options.escapeEverything ? escapeEverythingRegex : escapeNonAsciiRegex;\n\tresult = argument.replace(regex, (char, pair, lone, quoteChar, index, string) => {\n\t\tif (pair) {\n\t\t\tif (options.minimal) return pair;\n\t\t\tconst first = pair.charCodeAt(0);\n\t\t\tconst second = pair.charCodeAt(1);\n\t\t\tif (options.es6) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\tconst hex = hexadecimal(codePoint, lowercaseHex);\n\t\t\t\treturn '\\\\u{' + hex + '}';\n\t\t\t}\n\t\t\treturn fourHexEscape(hexadecimal(first, lowercaseHex)) + fourHexEscape(hexadecimal(second, lowercaseHex));\n\t\t}\n\n\t\tif (lone) {\n\t\t\treturn fourHexEscape(hexadecimal(lone.charCodeAt(0), lowercaseHex));\n\t\t}\n\n\t\tif (\n\t\t\tchar == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\treturn '\\\\0';\n\t\t}\n\n\t\tif (quoteChar) {\n\t\t\tif (quoteChar == quote || options.escapeEverything) {\n\t\t\t\treturn '\\\\' + quoteChar;\n\t\t\t}\n\t\t\treturn quoteChar;\n\t\t}\n\n\t\tif (regexSingleEscape.test(char)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\treturn singleEscapes[char];\n\t\t}\n\n\t\tif (options.minimal && !regexWhitespace.test(char)) {\n\t\t\treturn char;\n\t\t}\n\n\t\tconst hex = hexadecimal(char.charCodeAt(0), lowercaseHex);\n\t\tif (json || hex.length > 2) {\n\t\t\treturn fourHexEscape(hex);\n\t\t}\n\n\t\treturn '\\\\x' + ('00' + hex).slice(-2);\n\t});\n\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\${');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\tresult = result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\treturn result;\n};\n\njsesc.version = '3.0.2';\n\nmodule.exports = jsesc;\n","import { jsx } from \"react/jsx-runtime\";\nimport jsesc from \"jsesc\";\nfunction ScriptOnce({\n  children,\n  log\n}) {\n  if (typeof document !== \"undefined\") {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\n    \"script\",\n    {\n      className: \"tsr-once\",\n      dangerouslySetInnerHTML: {\n        __html: [\n          children,\n          (log ?? true) && process.env.NODE_ENV === \"development\" ? `console.info(\\`Injected From Server:\n${jsesc(children.toString(), { quotes: \"backtick\" })}\\`)` : \"\",\n          'if (typeof __TSR_SSR__ !== \"undefined\") __TSR_SSR__.cleanScripts()'\n        ].filter(Boolean).join(\"\\n\")\n      }\n    }\n  );\n}\nexport {\n  ScriptOnce\n};\n//# sourceMappingURL=ScriptOnce.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport { defaultGetScrollRestorationKey, restoreScroll, storageKey } from \"@tanstack/router-core\";\nimport { useRouter } from \"./useRouter.js\";\nimport { ScriptOnce } from \"./ScriptOnce.js\";\nfunction ScrollRestoration() {\n  const router = useRouter();\n  const getKey = router.options.getScrollRestorationKey || defaultGetScrollRestorationKey;\n  const userKey = getKey(router.latestLocation);\n  const resolvedKey = userKey !== defaultGetScrollRestorationKey(router.latestLocation) ? userKey : null;\n  if (!router.isScrollRestoring || !router.isServer) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\n    ScriptOnce,\n    {\n      children: `(${restoreScroll.toString()})(${JSON.stringify(storageKey)},${JSON.stringify(resolvedKey)}, undefined, true)`,\n      log: false\n    }\n  );\n}\nexport {\n  ScrollRestoration\n};\n//# sourceMappingURL=scroll-restoration.js.map\n","import { jsxs, Fragment, jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\nimport { isNotFound, rootRouteId, pick, isRedirect, createControlledPromise, getLocationChangeInfo } from \"@tanstack/router-core\";\nimport { CatchBoundary, ErrorComponent } from \"./CatchBoundary.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { CatchNotFound } from \"./not-found.js\";\nimport { matchContext } from \"./matchContext.js\";\nimport { SafeFragment } from \"./SafeFragment.js\";\nimport { renderRouteNotFound } from \"./renderRouteNotFound.js\";\nimport { ScrollRestoration } from \"./scroll-restoration.js\";\nconst Match = React.memo(function MatchImpl({\n  matchId\n}) {\n  var _a, _b;\n  const router = useRouter();\n  const routeId = useRouterState({\n    select: (s) => {\n      var _a2;\n      return (_a2 = s.matches.find((d) => d.id === matchId)) == null ? void 0 : _a2.routeId;\n    }\n  });\n  invariant(\n    routeId,\n    `Could not find routeId for matchId \"${matchId}\". Please file an issue!`\n  );\n  const route = router.routesById[routeId];\n  const PendingComponent = route.options.pendingComponent ?? router.options.defaultPendingComponent;\n  const pendingElement = PendingComponent ? /* @__PURE__ */ jsx(PendingComponent, {}) : null;\n  const routeErrorComponent = route.options.errorComponent ?? router.options.defaultErrorComponent;\n  const routeOnCatch = route.options.onCatch ?? router.options.defaultOnCatch;\n  const routeNotFoundComponent = route.isRoot ? (\n    // If it's the root route, use the globalNotFound option, with fallback to the notFoundRoute's component\n    route.options.notFoundComponent ?? ((_a = router.options.notFoundRoute) == null ? void 0 : _a.options.component)\n  ) : route.options.notFoundComponent;\n  const ResolvedSuspenseBoundary = (\n    // If we're on the root route, allow forcefully wrapping in suspense\n    (!route.isRoot || route.options.wrapInSuspense) && (route.options.wrapInSuspense ?? PendingComponent ?? ((_b = route.options.errorComponent) == null ? void 0 : _b.preload)) ? React.Suspense : SafeFragment\n  );\n  const ResolvedCatchBoundary = routeErrorComponent ? CatchBoundary : SafeFragment;\n  const ResolvedNotFoundBoundary = routeNotFoundComponent ? CatchNotFound : SafeFragment;\n  const resetKey = useRouterState({\n    select: (s) => s.loadedAt\n  });\n  const parentRouteId = useRouterState({\n    select: (s) => {\n      var _a2;\n      const index = s.matches.findIndex((d) => d.id === matchId);\n      return (_a2 = s.matches[index - 1]) == null ? void 0 : _a2.routeId;\n    }\n  });\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(matchContext.Provider, { value: matchId, children: /* @__PURE__ */ jsx(ResolvedSuspenseBoundary, { fallback: pendingElement, children: /* @__PURE__ */ jsx(\n      ResolvedCatchBoundary,\n      {\n        getResetKey: () => resetKey,\n        errorComponent: routeErrorComponent || ErrorComponent,\n        onCatch: (error, errorInfo) => {\n          if (isNotFound(error)) throw error;\n          warning(false, `Error in route match: ${matchId}`);\n          routeOnCatch == null ? void 0 : routeOnCatch(error, errorInfo);\n        },\n        children: /* @__PURE__ */ jsx(\n          ResolvedNotFoundBoundary,\n          {\n            fallback: (error) => {\n              if (!routeNotFoundComponent || error.routeId && error.routeId !== routeId || !error.routeId && !route.isRoot)\n                throw error;\n              return React.createElement(routeNotFoundComponent, error);\n            },\n            children: /* @__PURE__ */ jsx(MatchInner, { matchId })\n          }\n        )\n      }\n    ) }) }),\n    parentRouteId === rootRouteId && router.options.scrollRestoration ? /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(OnRendered, {}),\n      /* @__PURE__ */ jsx(ScrollRestoration, {})\n    ] }) : null\n  ] });\n});\nfunction OnRendered() {\n  const router = useRouter();\n  const prevLocationRef = React.useRef(\n    void 0\n  );\n  return /* @__PURE__ */ jsx(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      ref: (el) => {\n        if (el && (prevLocationRef.current === void 0 || prevLocationRef.current.href !== router.latestLocation.href)) {\n          router.emit({\n            type: \"onRendered\",\n            ...getLocationChangeInfo(router.state)\n          });\n          prevLocationRef.current = router.latestLocation;\n        }\n      }\n    },\n    router.latestLocation.state.key\n  );\n}\nconst MatchInner = React.memo(function MatchInnerImpl({\n  matchId\n}) {\n  var _a, _b, _c;\n  const router = useRouter();\n  const { match, key, routeId } = useRouterState({\n    select: (s) => {\n      const matchIndex = s.matches.findIndex((d) => d.id === matchId);\n      const match2 = s.matches[matchIndex];\n      const routeId2 = match2.routeId;\n      const remountFn = router.routesById[routeId2].options.remountDeps ?? router.options.defaultRemountDeps;\n      const remountDeps = remountFn == null ? void 0 : remountFn({\n        routeId: routeId2,\n        loaderDeps: match2.loaderDeps,\n        params: match2._strictParams,\n        search: match2._strictSearch\n      });\n      const key2 = remountDeps ? JSON.stringify(remountDeps) : void 0;\n      return {\n        key: key2,\n        routeId: routeId2,\n        match: pick(match2, [\"id\", \"status\", \"error\"])\n      };\n    },\n    structuralSharing: true\n  });\n  const route = router.routesById[routeId];\n  const out = React.useMemo(() => {\n    const Comp = route.options.component ?? router.options.defaultComponent;\n    if (Comp) {\n      return /* @__PURE__ */ jsx(Comp, {}, key);\n    }\n    return /* @__PURE__ */ jsx(Outlet, {});\n  }, [key, route.options.component, router.options.defaultComponent]);\n  const RouteErrorComponent = (route.options.errorComponent ?? router.options.defaultErrorComponent) || ErrorComponent;\n  if (match.status === \"notFound\") {\n    invariant(isNotFound(match.error), \"Expected a notFound error\");\n    return renderRouteNotFound(router, route, match.error);\n  }\n  if (match.status === \"redirected\") {\n    invariant(isRedirect(match.error), \"Expected a redirect error\");\n    throw (_a = router.getMatch(match.id)) == null ? void 0 : _a.loadPromise;\n  }\n  if (match.status === \"error\") {\n    if (router.isServer) {\n      return /* @__PURE__ */ jsx(\n        RouteErrorComponent,\n        {\n          error: match.error,\n          reset: void 0,\n          info: {\n            componentStack: \"\"\n          }\n        }\n      );\n    }\n    throw match.error;\n  }\n  if (match.status === \"pending\") {\n    const pendingMinMs = route.options.pendingMinMs ?? router.options.defaultPendingMinMs;\n    if (pendingMinMs && !((_b = router.getMatch(match.id)) == null ? void 0 : _b.minPendingPromise)) {\n      if (!router.isServer) {\n        const minPendingPromise = createControlledPromise();\n        Promise.resolve().then(() => {\n          router.updateMatch(match.id, (prev) => ({\n            ...prev,\n            minPendingPromise\n          }));\n        });\n        setTimeout(() => {\n          minPendingPromise.resolve();\n          router.updateMatch(match.id, (prev) => ({\n            ...prev,\n            minPendingPromise: void 0\n          }));\n        }, pendingMinMs);\n      }\n    }\n    throw (_c = router.getMatch(match.id)) == null ? void 0 : _c.loadPromise;\n  }\n  return out;\n});\nconst Outlet = React.memo(function OutletImpl() {\n  const router = useRouter();\n  const matchId = React.useContext(matchContext);\n  const routeId = useRouterState({\n    select: (s) => {\n      var _a;\n      return (_a = s.matches.find((d) => d.id === matchId)) == null ? void 0 : _a.routeId;\n    }\n  });\n  const route = router.routesById[routeId];\n  const parentGlobalNotFound = useRouterState({\n    select: (s) => {\n      const matches = s.matches;\n      const parentMatch = matches.find((d) => d.id === matchId);\n      invariant(\n        parentMatch,\n        `Could not find parent match for matchId \"${matchId}\"`\n      );\n      return parentMatch.globalNotFound;\n    }\n  });\n  const childMatchId = useRouterState({\n    select: (s) => {\n      var _a;\n      const matches = s.matches;\n      const index = matches.findIndex((d) => d.id === matchId);\n      return (_a = matches[index + 1]) == null ? void 0 : _a.id;\n    }\n  });\n  if (parentGlobalNotFound) {\n    return renderRouteNotFound(router, route, void 0);\n  }\n  if (!childMatchId) {\n    return null;\n  }\n  const nextMatch = /* @__PURE__ */ jsx(Match, { matchId: childMatchId });\n  const pendingElement = router.options.defaultPendingComponent ? /* @__PURE__ */ jsx(router.options.defaultPendingComponent, {}) : null;\n  if (matchId === rootRouteId) {\n    return /* @__PURE__ */ jsx(React.Suspense, { fallback: pendingElement, children: nextMatch });\n  }\n  return nextMatch;\n});\nexport {\n  Match,\n  MatchInner,\n  Outlet\n};\n//# sourceMappingURL=Match.js.map\n","import { jsx, jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport warning from \"tiny-warning\";\nimport { CatchBoundary, ErrorComponent } from \"./CatchBoundary.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { Transitioner } from \"./Transitioner.js\";\nimport { matchContext } from \"./matchContext.js\";\nimport { Match } from \"./Match.js\";\nimport { SafeFragment } from \"./SafeFragment.js\";\nfunction Matches() {\n  const router = useRouter();\n  const pendingElement = router.options.defaultPendingComponent ? /* @__PURE__ */ jsx(router.options.defaultPendingComponent, {}) : null;\n  const ResolvedSuspense = router.isServer || typeof document !== \"undefined\" && router.clientSsr ? SafeFragment : React.Suspense;\n  const inner = /* @__PURE__ */ jsxs(ResolvedSuspense, { fallback: pendingElement, children: [\n    /* @__PURE__ */ jsx(Transitioner, {}),\n    /* @__PURE__ */ jsx(MatchesInner, {})\n  ] });\n  return router.options.InnerWrap ? /* @__PURE__ */ jsx(router.options.InnerWrap, { children: inner }) : inner;\n}\nfunction MatchesInner() {\n  const matchId = useRouterState({\n    select: (s) => {\n      var _a;\n      return (_a = s.matches[0]) == null ? void 0 : _a.id;\n    }\n  });\n  const resetKey = useRouterState({\n    select: (s) => s.loadedAt\n  });\n  return /* @__PURE__ */ jsx(matchContext.Provider, { value: matchId, children: /* @__PURE__ */ jsx(\n    CatchBoundary,\n    {\n      getResetKey: () => resetKey,\n      errorComponent: ErrorComponent,\n      onCatch: (error) => {\n        warning(\n          false,\n          `The following error wasn't caught by any route! At the very least, consider setting an 'errorComponent' in your RootRoute!`\n        );\n        warning(false, error.message || error.toString());\n      },\n      children: matchId ? /* @__PURE__ */ jsx(Match, { matchId }) : null\n    }\n  ) });\n}\nfunction useMatchRoute() {\n  const router = useRouter();\n  useRouterState({\n    select: (s) => {\n      var _a;\n      return [s.location.href, (_a = s.resolvedLocation) == null ? void 0 : _a.href, s.status];\n    },\n    structuralSharing: true\n  });\n  return React.useCallback(\n    (opts) => {\n      const { pending, caseSensitive, fuzzy, includeSearch, ...rest } = opts;\n      return router.matchRoute(rest, {\n        pending,\n        caseSensitive,\n        fuzzy,\n        includeSearch\n      });\n    },\n    [router]\n  );\n}\nfunction MatchRoute(props) {\n  const matchRoute = useMatchRoute();\n  const params = matchRoute(props);\n  if (typeof props.children === \"function\") {\n    return props.children(params);\n  }\n  return params ? props.children : null;\n}\nfunction useMatches(opts) {\n  return useRouterState({\n    select: (state) => {\n      const matches = state.matches;\n      return (opts == null ? void 0 : opts.select) ? opts.select(matches) : matches;\n    },\n    structuralSharing: opts == null ? void 0 : opts.structuralSharing\n  });\n}\nfunction useParentMatches(opts) {\n  const contextMatchId = React.useContext(matchContext);\n  return useMatches({\n    select: (matches) => {\n      matches = matches.slice(\n        0,\n        matches.findIndex((d) => d.id === contextMatchId)\n      );\n      return (opts == null ? void 0 : opts.select) ? opts.select(matches) : matches;\n    },\n    structuralSharing: opts == null ? void 0 : opts.structuralSharing\n  });\n}\nfunction useChildMatches(opts) {\n  const contextMatchId = React.useContext(matchContext);\n  return useMatches({\n    select: (matches) => {\n      matches = matches.slice(\n        matches.findIndex((d) => d.id === contextMatchId) + 1\n      );\n      return (opts == null ? void 0 : opts.select) ? opts.select(matches) : matches;\n    },\n    structuralSharing: opts == null ? void 0 : opts.structuralSharing\n  });\n}\nexport {\n  MatchRoute,\n  Matches,\n  useChildMatches,\n  useMatchRoute,\n  useMatches,\n  useParentMatches\n};\n//# sourceMappingURL=Matches.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { flushSync } from \"react-dom\";\nimport { preloadWarning, functionalUpdate, exactPathTest, removeTrailingSlash, deepEqual } from \"@tanstack/router-core\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { useForwardedRef, useIntersectionObserver, useLayoutEffect } from \"./utils.js\";\nimport { useMatches } from \"./Matches.js\";\nfunction useLinkProps(options, forwardedRef) {\n  const router = useRouter();\n  const [isTransitioning, setIsTransitioning] = React.useState(false);\n  const hasRenderFetched = React.useRef(false);\n  const innerRef = useForwardedRef(forwardedRef);\n  const {\n    // custom props\n    activeProps = () => ({ className: \"active\" }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    to,\n    preload: userPreload,\n    preloadDelay: userPreloadDelay,\n    hashScrollIntoView,\n    replace,\n    startTransition,\n    resetScroll,\n    viewTransition,\n    // element props\n    children,\n    target,\n    disabled,\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ignoreBlocker,\n    ...rest\n  } = options;\n  const {\n    // prevent these from being returned\n    params: _params,\n    search: _search,\n    hash: _hash,\n    state: _state,\n    mask: _mask,\n    reloadDocument: _reloadDocument,\n    ...propsSafeToSpread\n  } = rest;\n  const type = React.useMemo(() => {\n    try {\n      new URL(`${to}`);\n      return \"external\";\n    } catch {\n    }\n    return \"internal\";\n  }, [to]);\n  const currentSearch = useRouterState({\n    select: (s) => s.location.search,\n    structuralSharing: true\n  });\n  const from = useMatches({\n    select: (matches) => {\n      var _a;\n      return options.from ?? ((_a = matches[matches.length - 1]) == null ? void 0 : _a.fullPath);\n    }\n  });\n  const _options = React.useMemo(() => ({ ...options, from }), [options, from]);\n  const next = React.useMemo(\n    () => router.buildLocation(_options),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [router, _options, currentSearch]\n  );\n  const preload = React.useMemo(() => {\n    if (_options.reloadDocument) {\n      return false;\n    }\n    return userPreload ?? router.options.defaultPreload;\n  }, [router.options.defaultPreload, userPreload, _options.reloadDocument]);\n  const preloadDelay = userPreloadDelay ?? router.options.defaultPreloadDelay ?? 0;\n  const isActive = useRouterState({\n    select: (s) => {\n      if (activeOptions == null ? void 0 : activeOptions.exact) {\n        const testExact = exactPathTest(\n          s.location.pathname,\n          next.pathname,\n          router.basepath\n        );\n        if (!testExact) {\n          return false;\n        }\n      } else {\n        const currentPathSplit = removeTrailingSlash(\n          s.location.pathname,\n          router.basepath\n        ).split(\"/\");\n        const nextPathSplit = removeTrailingSlash(\n          next.pathname,\n          router.basepath\n        ).split(\"/\");\n        const pathIsFuzzyEqual = nextPathSplit.every(\n          (d, i) => d === currentPathSplit[i]\n        );\n        if (!pathIsFuzzyEqual) {\n          return false;\n        }\n      }\n      if ((activeOptions == null ? void 0 : activeOptions.includeSearch) ?? true) {\n        const searchTest = deepEqual(s.location.search, next.search, {\n          partial: !(activeOptions == null ? void 0 : activeOptions.exact),\n          ignoreUndefined: !(activeOptions == null ? void 0 : activeOptions.explicitUndefined)\n        });\n        if (!searchTest) {\n          return false;\n        }\n      }\n      if (activeOptions == null ? void 0 : activeOptions.includeHash) {\n        return s.location.hash === next.hash;\n      }\n      return true;\n    }\n  });\n  const doPreload = React.useCallback(() => {\n    router.preloadRoute(_options).catch((err) => {\n      console.warn(err);\n      console.warn(preloadWarning);\n    });\n  }, [_options, router]);\n  const preloadViewportIoCallback = React.useCallback(\n    (entry) => {\n      if (entry == null ? void 0 : entry.isIntersecting) {\n        doPreload();\n      }\n    },\n    [doPreload]\n  );\n  useIntersectionObserver(\n    innerRef,\n    preloadViewportIoCallback,\n    { rootMargin: \"100px\" },\n    { disabled: !!disabled || !(preload === \"viewport\") }\n  );\n  useLayoutEffect(() => {\n    if (hasRenderFetched.current) {\n      return;\n    }\n    if (!disabled && preload === \"render\") {\n      doPreload();\n      hasRenderFetched.current = true;\n    }\n  }, [disabled, doPreload, preload]);\n  if (type === \"external\") {\n    return {\n      ...propsSafeToSpread,\n      ref: innerRef,\n      type,\n      href: to,\n      ...children && { children },\n      ...target && { target },\n      ...disabled && { disabled },\n      ...style && { style },\n      ...className && { className },\n      ...onClick && { onClick },\n      ...onFocus && { onFocus },\n      ...onMouseEnter && { onMouseEnter },\n      ...onMouseLeave && { onMouseLeave },\n      ...onTouchStart && { onTouchStart }\n    };\n  }\n  const handleClick = (e) => {\n    if (!disabled && !isCtrlEvent(e) && !e.defaultPrevented && (!target || target === \"_self\") && e.button === 0) {\n      e.preventDefault();\n      flushSync(() => {\n        setIsTransitioning(true);\n      });\n      const unsub = router.subscribe(\"onResolved\", () => {\n        unsub();\n        setIsTransitioning(false);\n      });\n      return router.navigate({\n        ..._options,\n        replace,\n        resetScroll,\n        hashScrollIntoView,\n        startTransition,\n        viewTransition,\n        ignoreBlocker\n      });\n    }\n  };\n  const handleFocus = (_) => {\n    if (disabled) return;\n    if (preload) {\n      doPreload();\n    }\n  };\n  const handleTouchStart = handleFocus;\n  const handleEnter = (e) => {\n    if (disabled) return;\n    const eventTarget = e.target || {};\n    if (preload) {\n      if (eventTarget.preloadTimeout) {\n        return;\n      }\n      eventTarget.preloadTimeout = setTimeout(() => {\n        eventTarget.preloadTimeout = null;\n        doPreload();\n      }, preloadDelay);\n    }\n  };\n  const handleLeave = (e) => {\n    if (disabled) return;\n    const eventTarget = e.target || {};\n    if (eventTarget.preloadTimeout) {\n      clearTimeout(eventTarget.preloadTimeout);\n      eventTarget.preloadTimeout = null;\n    }\n  };\n  const composeHandlers = (handlers) => (e) => {\n    var _a;\n    (_a = e.persist) == null ? void 0 : _a.call(e);\n    handlers.filter(Boolean).forEach((handler) => {\n      if (e.defaultPrevented) return;\n      handler(e);\n    });\n  };\n  const resolvedActiveProps = isActive ? functionalUpdate(activeProps, {}) ?? {} : {};\n  const resolvedInactiveProps = isActive ? {} : functionalUpdate(inactiveProps, {});\n  const resolvedClassName = [\n    className,\n    resolvedActiveProps.className,\n    resolvedInactiveProps.className\n  ].filter(Boolean).join(\" \");\n  const resolvedStyle = {\n    ...style,\n    ...resolvedActiveProps.style,\n    ...resolvedInactiveProps.style\n  };\n  return {\n    ...propsSafeToSpread,\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    href: disabled ? void 0 : next.maskedLocation ? router.history.createHref(next.maskedLocation.href) : router.history.createHref(next.href),\n    ref: innerRef,\n    onClick: composeHandlers([onClick, handleClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    disabled: !!disabled,\n    target,\n    ...Object.keys(resolvedStyle).length && { style: resolvedStyle },\n    ...resolvedClassName && { className: resolvedClassName },\n    ...disabled && {\n      role: \"link\",\n      \"aria-disabled\": true\n    },\n    ...isActive && { \"data-status\": \"active\", \"aria-current\": \"page\" },\n    ...isTransitioning && { \"data-transitioning\": \"transitioning\" }\n  };\n}\nfunction createLink(Comp) {\n  return React.forwardRef(function CreatedLink(props, ref) {\n    return /* @__PURE__ */ jsx(Link, { ...props, _asChild: Comp, ref });\n  });\n}\nconst Link = React.forwardRef(\n  (props, ref) => {\n    const { _asChild, ...rest } = props;\n    const {\n      type: _type,\n      ref: innerRef,\n      ...linkProps\n    } = useLinkProps(rest, ref);\n    const children = typeof rest.children === \"function\" ? rest.children({\n      isActive: linkProps[\"data-status\"] === \"active\"\n    }) : rest.children;\n    if (typeof _asChild === \"undefined\") {\n      delete linkProps.disabled;\n    }\n    return React.createElement(\n      _asChild ? _asChild : \"a\",\n      {\n        ...linkProps,\n        ref: innerRef\n      },\n      children\n    );\n  }\n);\nfunction isCtrlEvent(e) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n}\nconst linkOptions = (options) => {\n  return options;\n};\nexport {\n  Link,\n  createLink,\n  linkOptions,\n  useLinkProps\n};\n//# sourceMappingURL=link.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport { BaseRouteApi, notFound, BaseRoute, BaseRootRoute } from \"@tanstack/router-core\";\nimport React__default from \"react\";\nimport { useLoaderData } from \"./useLoaderData.js\";\nimport { useLoaderDeps } from \"./useLoaderDeps.js\";\nimport { useParams } from \"./useParams.js\";\nimport { useSearch } from \"./useSearch.js\";\nimport { useNavigate } from \"./useNavigate.js\";\nimport { useMatch } from \"./useMatch.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { Link } from \"./link.js\";\nfunction getRouteApi(id) {\n  return new RouteApi({ id });\n}\nclass RouteApi extends BaseRouteApi {\n  /**\n   * @deprecated Use the `getRouteApi` function instead.\n   */\n  constructor({ id }) {\n    super({ id });\n    this.useMatch = (opts) => {\n      return useMatch({\n        select: opts == null ? void 0 : opts.select,\n        from: this.id,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing\n      });\n    };\n    this.useRouteContext = (opts) => {\n      return useMatch({\n        from: this.id,\n        select: (d) => (opts == null ? void 0 : opts.select) ? opts.select(d.context) : d.context\n      });\n    };\n    this.useSearch = (opts) => {\n      return useSearch({\n        select: opts == null ? void 0 : opts.select,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing,\n        from: this.id\n      });\n    };\n    this.useParams = (opts) => {\n      return useParams({\n        select: opts == null ? void 0 : opts.select,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing,\n        from: this.id\n      });\n    };\n    this.useLoaderDeps = (opts) => {\n      return useLoaderDeps({ ...opts, from: this.id, strict: false });\n    };\n    this.useLoaderData = (opts) => {\n      return useLoaderData({ ...opts, from: this.id, strict: false });\n    };\n    this.useNavigate = () => {\n      const router = useRouter();\n      return useNavigate({ from: router.routesById[this.id].fullPath });\n    };\n    this.notFound = (opts) => {\n      return notFound({ routeId: this.id, ...opts });\n    };\n    this.Link = React__default.forwardRef((props, ref) => {\n      const router = useRouter();\n      const fullPath = router.routesById[this.id].fullPath;\n      return /* @__PURE__ */ jsx(Link, { ref, from: fullPath, ...props });\n    });\n  }\n}\nclass Route extends BaseRoute {\n  /**\n   * @deprecated Use the `createRoute` function instead.\n   */\n  constructor(options) {\n    super(options);\n    this.useMatch = (opts) => {\n      return useMatch({\n        select: opts == null ? void 0 : opts.select,\n        from: this.id,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing\n      });\n    };\n    this.useRouteContext = (opts) => {\n      return useMatch({\n        ...opts,\n        from: this.id,\n        select: (d) => (opts == null ? void 0 : opts.select) ? opts.select(d.context) : d.context\n      });\n    };\n    this.useSearch = (opts) => {\n      return useSearch({\n        select: opts == null ? void 0 : opts.select,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing,\n        from: this.id\n      });\n    };\n    this.useParams = (opts) => {\n      return useParams({\n        select: opts == null ? void 0 : opts.select,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing,\n        from: this.id\n      });\n    };\n    this.useLoaderDeps = (opts) => {\n      return useLoaderDeps({ ...opts, from: this.id });\n    };\n    this.useLoaderData = (opts) => {\n      return useLoaderData({ ...opts, from: this.id });\n    };\n    this.useNavigate = () => {\n      return useNavigate({ from: this.fullPath });\n    };\n    this.Link = React__default.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ jsx(Link, { ref, from: this.fullPath, ...props });\n      }\n    );\n    this.$$typeof = Symbol.for(\"react.memo\");\n  }\n}\nfunction createRoute(options) {\n  return new Route(options);\n}\nfunction createRootRouteWithContext() {\n  return (options) => {\n    return createRootRoute(options);\n  };\n}\nconst rootRouteWithContext = createRootRouteWithContext;\nclass RootRoute extends BaseRootRoute {\n  /**\n   * @deprecated `RootRoute` is now an internal implementation detail. Use `createRootRoute()` instead.\n   */\n  constructor(options) {\n    super(options);\n    this.useMatch = (opts) => {\n      return useMatch({\n        select: opts == null ? void 0 : opts.select,\n        from: this.id,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing\n      });\n    };\n    this.useRouteContext = (opts) => {\n      return useMatch({\n        ...opts,\n        from: this.id,\n        select: (d) => (opts == null ? void 0 : opts.select) ? opts.select(d.context) : d.context\n      });\n    };\n    this.useSearch = (opts) => {\n      return useSearch({\n        select: opts == null ? void 0 : opts.select,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing,\n        from: this.id\n      });\n    };\n    this.useParams = (opts) => {\n      return useParams({\n        select: opts == null ? void 0 : opts.select,\n        structuralSharing: opts == null ? void 0 : opts.structuralSharing,\n        from: this.id\n      });\n    };\n    this.useLoaderDeps = (opts) => {\n      return useLoaderDeps({ ...opts, from: this.id });\n    };\n    this.useLoaderData = (opts) => {\n      return useLoaderData({ ...opts, from: this.id });\n    };\n    this.useNavigate = () => {\n      return useNavigate({ from: this.fullPath });\n    };\n    this.Link = React__default.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ jsx(Link, { ref, from: this.fullPath, ...props });\n      }\n    );\n    this.$$typeof = Symbol.for(\"react.memo\");\n  }\n}\nfunction createRootRoute(options) {\n  return new RootRoute(options);\n}\nfunction createRouteMask(opts) {\n  return opts;\n}\nclass NotFoundRoute extends Route {\n  constructor(options) {\n    super({\n      ...options,\n      id: \"404\"\n    });\n  }\n}\nexport {\n  NotFoundRoute,\n  RootRoute,\n  Route,\n  RouteApi,\n  createRootRoute,\n  createRootRouteWithContext,\n  createRoute,\n  createRouteMask,\n  getRouteApi,\n  rootRouteWithContext\n};\n//# sourceMappingURL=route.js.map\n","import warning from \"tiny-warning\";\nimport { createRoute } from \"./route.js\";\nimport { useMatch } from \"./useMatch.js\";\nimport { useLoaderDeps } from \"./useLoaderDeps.js\";\nimport { useLoaderData } from \"./useLoaderData.js\";\nimport { useSearch } from \"./useSearch.js\";\nimport { useParams } from \"./useParams.js\";\nimport { useNavigate } from \"./useNavigate.js\";\nimport { useRouter } from \"./useRouter.js\";\nfunction createFileRoute(path) {\n  return new FileRoute(path, {\n    silent: true\n  }).createRoute;\n}\nclass FileRoute {\n  constructor(path, _opts) {\n    this.path = path;\n    this.createRoute = (options) => {\n      warning(\n        this.silent,\n        \"FileRoute is deprecated and will be removed in the next major version. Use the createFileRoute(path)(options) function instead.\"\n      );\n      const route = createRoute(options);\n      route.isRoot = false;\n      return route;\n    };\n    this.silent = _opts == null ? void 0 : _opts.silent;\n  }\n}\nfunction FileRouteLoader(_path) {\n  warning(\n    false,\n    `FileRouteLoader is deprecated and will be removed in the next major version. Please place the loader function in the the main route file, inside the \\`createFileRoute('/path/to/file')(options)\\` options`\n  );\n  return (loaderFn) => loaderFn;\n}\nclass LazyRoute {\n  constructor(opts) {\n    this.useMatch = (opts2) => {\n      return useMatch({\n        select: opts2 == null ? void 0 : opts2.select,\n        from: this.options.id,\n        structuralSharing: opts2 == null ? void 0 : opts2.structuralSharing\n      });\n    };\n    this.useRouteContext = (opts2) => {\n      return useMatch({\n        from: this.options.id,\n        select: (d) => (opts2 == null ? void 0 : opts2.select) ? opts2.select(d.context) : d.context\n      });\n    };\n    this.useSearch = (opts2) => {\n      return useSearch({\n        select: opts2 == null ? void 0 : opts2.select,\n        structuralSharing: opts2 == null ? void 0 : opts2.structuralSharing,\n        from: this.options.id\n      });\n    };\n    this.useParams = (opts2) => {\n      return useParams({\n        select: opts2 == null ? void 0 : opts2.select,\n        structuralSharing: opts2 == null ? void 0 : opts2.structuralSharing,\n        from: this.options.id\n      });\n    };\n    this.useLoaderDeps = (opts2) => {\n      return useLoaderDeps({ ...opts2, from: this.options.id });\n    };\n    this.useLoaderData = (opts2) => {\n      return useLoaderData({ ...opts2, from: this.options.id });\n    };\n    this.useNavigate = () => {\n      const router = useRouter();\n      return useNavigate({ from: router.routesById[this.options.id].fullPath });\n    };\n    this.options = opts;\n    this.$$typeof = Symbol.for(\"react.memo\");\n  }\n}\nfunction createLazyRoute(id) {\n  return (opts) => {\n    return new LazyRoute({\n      id,\n      ...opts\n    });\n  };\n}\nfunction createLazyFileRoute(id) {\n  return (opts) => new LazyRoute({ id, ...opts });\n}\nexport {\n  FileRoute,\n  FileRouteLoader,\n  LazyRoute,\n  createFileRoute,\n  createLazyFileRoute,\n  createLazyRoute\n};\n//# sourceMappingURL=fileRoute.js.map\n","import { RouterCore } from \"@tanstack/router-core\";\nconst createRouter = (options) => {\n  return new Router(options);\n};\nclass Router extends RouterCore {\n  constructor(options) {\n    super(options);\n  }\n}\nexport {\n  Router,\n  createRouter\n};\n//# sourceMappingURL=router.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport { Matches } from \"./Matches.js\";\nimport { getRouterContext } from \"./routerContext.js\";\nfunction RouterContextProvider({\n  router,\n  children,\n  ...rest\n}) {\n  router.update({\n    ...router.options,\n    ...rest,\n    context: {\n      ...router.options.context,\n      ...rest.context\n    }\n  });\n  const routerContext = getRouterContext();\n  const provider = /* @__PURE__ */ jsx(routerContext.Provider, { value: router, children });\n  if (router.options.Wrap) {\n    return /* @__PURE__ */ jsx(router.options.Wrap, { children: provider });\n  }\n  return provider;\n}\nfunction RouterProvider({ router, ...rest }) {\n  return /* @__PURE__ */ jsx(RouterContextProvider, { router, ...rest, children: /* @__PURE__ */ jsx(Matches, {}) });\n}\nexport {\n  RouterContextProvider,\n  RouterProvider\n};\n//# sourceMappingURL=RouterProvider.js.map\n","import { jsx } from \"react/jsx-runtime\";\nfunction Asset({ tag, attrs, children }) {\n  switch (tag) {\n    case \"title\":\n      return /* @__PURE__ */ jsx(\"title\", { ...attrs, suppressHydrationWarning: true, children });\n    case \"meta\":\n      return /* @__PURE__ */ jsx(\"meta\", { ...attrs, suppressHydrationWarning: true });\n    case \"link\":\n      return /* @__PURE__ */ jsx(\"link\", { ...attrs, suppressHydrationWarning: true });\n    case \"style\":\n      return /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          ...attrs,\n          dangerouslySetInnerHTML: { __html: children }\n        }\n      );\n    case \"script\":\n      if (attrs && attrs.src) {\n        return /* @__PURE__ */ jsx(\"script\", { ...attrs, suppressHydrationWarning: true });\n      }\n      if (typeof children === \"string\")\n        return /* @__PURE__ */ jsx(\n          \"script\",\n          {\n            ...attrs,\n            dangerouslySetInnerHTML: {\n              __html: children\n            },\n            suppressHydrationWarning: true\n          }\n        );\n      return null;\n    default:\n      return null;\n  }\n}\nexport {\n  Asset\n};\n//# sourceMappingURL=Asset.js.map\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { Asset } from \"./Asset.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nconst useTags = () => {\n  const router = useRouter();\n  const routeMeta = useRouterState({\n    select: (state) => {\n      return state.matches.map((match) => match.meta).filter(Boolean);\n    }\n  });\n  const meta = React.useMemo(() => {\n    const resultMeta = [];\n    const metaByAttribute = {};\n    let title;\n    [...routeMeta].reverse().forEach((metas) => {\n      [...metas].reverse().forEach((m) => {\n        if (!m) return;\n        if (m.title) {\n          if (!title) {\n            title = {\n              tag: \"title\",\n              children: m.title\n            };\n          }\n        } else {\n          const attribute = m.name ?? m.property;\n          if (attribute) {\n            if (metaByAttribute[attribute]) {\n              return;\n            } else {\n              metaByAttribute[attribute] = true;\n            }\n          }\n          resultMeta.push({\n            tag: \"meta\",\n            attrs: {\n              ...m\n            }\n          });\n        }\n      });\n    });\n    if (title) {\n      resultMeta.push(title);\n    }\n    resultMeta.reverse();\n    return resultMeta;\n  }, [routeMeta]);\n  const links = useRouterState({\n    select: (state) => state.matches.map((match) => match.links).filter(Boolean).flat(1).map((link) => ({\n      tag: \"link\",\n      attrs: {\n        ...link\n      }\n    })),\n    structuralSharing: true\n  });\n  const preloadMeta = useRouterState({\n    select: (state) => {\n      const preloadMeta2 = [];\n      state.matches.map((match) => router.looseRoutesById[match.routeId]).forEach(\n        (route) => {\n          var _a, _b, _c, _d;\n          return (_d = (_c = (_b = (_a = router.ssr) == null ? void 0 : _a.manifest) == null ? void 0 : _b.routes[route.id]) == null ? void 0 : _c.preloads) == null ? void 0 : _d.filter(Boolean).forEach((preload) => {\n            preloadMeta2.push({\n              tag: \"link\",\n              attrs: {\n                rel: \"modulepreload\",\n                href: preload\n              }\n            });\n          });\n        }\n      );\n      return preloadMeta2;\n    },\n    structuralSharing: true\n  });\n  const headScripts = useRouterState({\n    select: (state) => state.matches.map((match) => match.headScripts).flat(1).filter(Boolean).map(({ children, ...script }) => ({\n      tag: \"script\",\n      attrs: {\n        ...script\n      },\n      children\n    })),\n    structuralSharing: true\n  });\n  return uniqBy(\n    [\n      ...meta,\n      ...preloadMeta,\n      ...links,\n      ...headScripts\n    ],\n    (d) => {\n      return JSON.stringify(d);\n    }\n  );\n};\nfunction HeadContent() {\n  const tags = useTags();\n  return tags.map((tag) => /* @__PURE__ */ createElement(Asset, { ...tag, key: `tsr-meta-${JSON.stringify(tag)}` }));\n}\nfunction uniqBy(arr, fn) {\n  const seen = /* @__PURE__ */ new Set();\n  return arr.filter((item) => {\n    const key = fn(item);\n    if (seen.has(key)) {\n      return false;\n    }\n    seen.add(key);\n    return true;\n  });\n}\nexport {\n  HeadContent,\n  useTags\n};\n//# sourceMappingURL=HeadContent.js.map\n","import { jsx, Fragment } from \"react/jsx-runtime\";\nimport { createElement } from \"react\";\nimport { Asset } from \"./Asset.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useRouter } from \"./useRouter.js\";\nconst Scripts = () => {\n  const router = useRouter();\n  const assetScripts = useRouterState({\n    select: (state) => {\n      var _a;\n      const assetScripts2 = [];\n      const manifest = (_a = router.ssr) == null ? void 0 : _a.manifest;\n      if (!manifest) {\n        return [];\n      }\n      state.matches.map((match) => router.looseRoutesById[match.routeId]).forEach(\n        (route) => {\n          var _a2, _b;\n          return (_b = (_a2 = manifest.routes[route.id]) == null ? void 0 : _a2.assets) == null ? void 0 : _b.filter((d) => d.tag === \"script\").forEach((asset) => {\n            assetScripts2.push({\n              tag: \"script\",\n              attrs: asset.attrs,\n              children: asset.children\n            });\n          });\n        }\n      );\n      return assetScripts2;\n    },\n    structuralSharing: true\n  });\n  const { scripts } = useRouterState({\n    select: (state) => ({\n      scripts: state.matches.map((match) => match.scripts).flat(1).filter(Boolean).map(({ children, ...script }) => ({\n        tag: \"script\",\n        attrs: {\n          ...script,\n          suppressHydrationWarning: true\n        },\n        children\n      }))\n    })\n  });\n  const allScripts = [...scripts, ...assetScripts];\n  return /* @__PURE__ */ jsx(Fragment, { children: allScripts.map((asset, i) => /* @__PURE__ */ createElement(Asset, { ...asset, key: `tsr-scripts-${asset.tag}-${i}` })) });\n};\nexport {\n  Scripts\n};\n//# sourceMappingURL=Scripts.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport { Await, RouterProvider } from \"@tanstack/react-router\";\nimport { hydrate } from \"@tanstack/start-client-core\";\nlet hydrationPromise;\nfunction StartClient(props) {\n  if (!hydrationPromise) {\n    if (!props.router.state.matches.length) {\n      hydrationPromise = hydrate(props.router);\n    } else {\n      hydrationPromise = Promise.resolve();\n    }\n  }\n  return /* @__PURE__ */ jsx(\n    Await,\n    {\n      promise: hydrationPromise,\n      children: () => /* @__PURE__ */ jsx(RouterProvider, { router: props.router })\n    }\n  );\n}\nexport {\n  StartClient\n};\n//# sourceMappingURL=StartClient.js.map\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  needsPaint = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return needsPaint\n    ? !0\n    : exports.unstable_now() - startTime < frameInterval\n      ? !1\n      : !0;\n}\nfunction performWorkUntilDeadline() {\n  needsPaint = !1;\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_requestPaint = function () {\n  needsPaint = !0;\n};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline())));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$0 = parentA.child; child$0; ) {\n        if (child$0 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$0 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$0 = child$0.sibling;\n      }\n      if (!didFindChild) {\n        for (child$0 = parentB.child; child$0; ) {\n          if (child$0 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$0 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$0 = child$0.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar assign = Object.assign,\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nvar REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.view_transition\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n    case REACT_ACTIVITY_TYPE:\n      return \"Activity\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  switch (nextRootInstance.nodeType) {\n    case 9:\n    case 11:\n      fiber = (fiber = nextRootInstance.documentElement)\n        ? (fiber = fiber.namespaceURI)\n          ? getOwnHostContext(fiber)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = nextRootInstance.tagName),\n        (nextRootInstance = nextRootInstance.namespaceURI))\n      )\n        (nextRootInstance = getOwnHostContext(nextRootInstance)),\n          (fiber = getChildHostContextProd(nextRootInstance, fiber));\n      else\n        switch (fiber) {\n          case \"svg\":\n            fiber = 1;\n            break;\n          case \"math\":\n            fiber = 2;\n            break;\n          default:\n            fiber = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, fiber);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 256,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n      return 128;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194048;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes, rootHasPendingCommit) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes;\n  root = root.warmLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : rootHasPendingCommit ||\n              ((rootHasPendingCommit = nonIdlePendingLanes & ~root),\n              0 !== rootHasPendingCommit &&\n                (nextLanes = getHighestPriorityLanes(rootHasPendingCommit)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : rootHasPendingCommit ||\n            ((rootHasPendingCommit = pendingLanes & ~root),\n            0 !== rootHasPendingCommit &&\n              (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (rootHasPendingCommit = wipLanes & -wipLanes),\n        suspendedLanes >= rootHasPendingCommit ||\n          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n    case 64:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$5 = 31 - clz32(remainingLanes),\n      lane = 1 << index$5;\n    entanglements[index$5] = 0;\n    expirationTimes[index$5] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$5];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$5] = null, index$5 = 0;\n        index$5 < hiddenUpdatesForLane.length;\n        index$5++\n      ) {\n        var update = hiddenUpdatesForLane[index$5];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194090);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$6 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$6;\n    (lane & entangledLanes) | (root[index$6] & entangledLanes) &&\n      (root[index$6] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydrationByLane(lane) {\n  switch (lane) {\n    case 2:\n      lane = 1;\n      break;\n    case 8:\n      lane = 4;\n      break;\n    case 32:\n      lane = 16;\n      break;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      lane = 128;\n      break;\n    case 268435456:\n      lane = 134217728;\n      break;\n    default:\n      lane = 0;\n  }\n  return lane;\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$8 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nvar prefix, suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$9) {\n                control = x$9;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$10) {\n              control = x$10;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return describeNativeComponentFrame(fiber.type, !1);\n    case 11:\n      return describeNativeComponentFrame(fiber.type.render, !1);\n    case 1:\n      return describeNativeComponentFrame(fiber.type, !0);\n    case 31:\n      return describeBuiltInComponentFrame(\"Activity\");\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$282;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_417 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_417) {\n      var element$jscomp$inline_418 = document.createElement(\"div\");\n      element$jscomp$inline_418.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_417 =\n        \"function\" === typeof element$jscomp$inline_418.oninput;\n    }\n    JSCompiler_inline_result$jscomp$282 = isSupported$jscomp$inline_417;\n  } else JSCompiler_inline_result$jscomp$282 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$282 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nsimpleEventPluginEvents.push(\"scrollEnd\");\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  return 3 === sourceFiber.tag\n    ? ((parent = sourceFiber.stateNode),\n      isHidden &&\n        null !== update &&\n        ((isHidden = 31 - clz32(lane)),\n        (sourceFiber = parent.hiddenUpdates),\n        (alternate = sourceFiber[isHidden]),\n        null === alternate\n          ? (sourceFiber[isHidden] = [update])\n          : alternate.push(update),\n        (update.lane = lane | 536870912)),\n      parent)\n    : null;\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {};\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 65011712;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 65011714;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_ACTIVITY_TYPE:\n        return (\n          (type = createFiberImplClass(31, pendingProps, key, mode)),\n          (type.elementType = REACT_ACTIVITY_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      case 27:\n      case 3:\n        rootOrSingletonContext = !0;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var tag = fiber.tag,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {\n    if ((JSCompiler_temp = 5 === tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (tag = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === tag) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            tag--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              tag++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    27 === tag\n      ? ((tag = nextHydratableInstance),\n        isSingletonScope(fiber.type)\n          ? ((fiber = previousHydratableOnEnteringScopedSingleton),\n            (previousHydratableOnEnteringScopedSingleton = null),\n            (nextHydratableInstance = fiber))\n          : (nextHydratableInstance = tag))\n      : (nextHydratableInstance = hydrationParentFiber\n          ? getNextHydratable(fiber.stateNode.nextSibling)\n          : null);\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction upgradeHydrationErrorsToRecoverable() {\n  var queuedErrors = hydrationErrors;\n  null !== queuedErrors &&\n    (null === workInProgressRootRecoverableErrors\n      ? (workInProgressRootRecoverableErrors = queuedErrors)\n      : workInProgressRootRecoverableErrors.push.apply(\n          workInProgressRootRecoverableErrors,\n          queuedErrors\n        ),\n    (hydrationErrors = null));\n  return queuedErrors;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber$1 = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber$1 = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber$1, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  SuspenseActionException = Error(formatProdErrorMessage(542)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw (\n        ((thenableState = thenable.reason),\n        checkIfUseWrappedInAsyncCatch(thenableState),\n        thenableState)\n      );\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw (\n            ((thenableState = thenable.reason),\n            checkIfUseWrappedInAsyncCatch(thenableState),\n            thenableState)\n          );\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction checkIfUseWrappedInAsyncCatch(rejectedReason) {\n  if (\n    rejectedReason === SuspenseException ||\n    rejectedReason === SuspenseActionException\n  )\n    throw Error(formatProdErrorMessage(483));\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nvar currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter$1 = 0,\n  thenableState$1 = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter$1 = 0;\n  thenableState$1 = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);\n    thenableIndexCounter$1 = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter$1 = localIdCounter = 0;\n  thenableState$1 = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nfunction createFunctionComponentUpdateQueue() {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n}\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  thenable = trackUsedThenable(thenableState$1, thenable, index);\n  index = currentlyRenderingFiber;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$32 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$32 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$32 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$32 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  var create = subscribeToStore.bind(null, fiber, hook, subscribe);\n  updateEffectImpl(2048, 8, create, [subscribe]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 124) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$38) {\n      onActionError(actionQueue, node, error$38);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  if (\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n  )\n    try {\n      var state = useThenable(currentStateHook);\n    } catch (x) {\n      if (x === SuspenseException) throw SuspenseActionException;\n      throw x;\n    }\n  else state = currentStateHook;\n  currentStateHook = updateWorkInProgressHook();\n  var actionQueue = currentStateHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== currentStateHook.memoizedState &&\n    ((currentlyRenderingFiber.flags |= 2048),\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      actionStateActionEffect.bind(null, actionQueue, action),\n      null\n    ));\n  return [state, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushSimpleEffect(tag, inst, create, createDeps) {\n  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };\n  inst = currentlyRenderingFiber.updateQueue;\n  null === inst &&\n    ((inst = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = inst));\n  create = inst.lastEffect;\n  null === create\n    ? (inst.lastEffect = tag.next = tag)\n    : ((createDeps = create.next),\n      (create.next = tag),\n      (tag.next = createDeps),\n      (inst.lastEffect = tag));\n  return tag;\n}\nfunction createEffectInstance() {\n  return { destroy: void 0, resource: void 0 };\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {\n  var hook = mountWorkInProgressHook();\n  createDeps = void 0 === createDeps ? null : createDeps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushSimpleEffect(\n    1 | hookFlags,\n    createEffectInstance(),\n    create,\n    createDeps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))\n    : ((currentlyRenderingFiber.flags |= fiberFlags),\n      (hook.memoizedState = pushSimpleEffect(\n        1 | hookFlags,\n        inst,\n        create,\n        deps\n      )));\n}\nfunction mountEffect(create, createDeps) {\n  mountEffectImpl(8390656, 8, create, createDeps);\n}\nfunction updateEffect(create, createDeps) {\n  updateEffectImpl(2048, 8, create, createDeps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$41 = enqueueUpdate(provider, fiber, lane);\n        null !== root$41 &&\n          (scheduleUpdateOnFiber(root$41, provider, lane),\n          entangleTransitions(root$41, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber ||\n    (null !== alternate && alternate === currentlyRenderingFiber)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194048)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n    readContext: readContext,\n    use: use,\n    useCallback: throwInvalidHookError,\n    useContext: throwInvalidHookError,\n    useEffect: throwInvalidHookError,\n    useImperativeHandle: throwInvalidHookError,\n    useLayoutEffect: throwInvalidHookError,\n    useInsertionEffect: throwInvalidHookError,\n    useMemo: throwInvalidHookError,\n    useReducer: throwInvalidHookError,\n    useRef: throwInvalidHookError,\n    useState: throwInvalidHookError,\n    useDebugValue: throwInvalidHookError,\n    useDeferredValue: throwInvalidHookError,\n    useTransition: throwInvalidHookError,\n    useSyncExternalStore: throwInvalidHookError,\n    useId: throwInvalidHookError,\n    useHostTransitionStatus: throwInvalidHookError,\n    useFormState: throwInvalidHookError,\n    useActionState: throwInvalidHookError,\n    useOptimistic: throwInvalidHookError,\n    useMemoCache: throwInvalidHookError,\n    useCacheRefresh: throwInvalidHookError\n  },\n  HooksDispatcherOnMount = {\n    readContext: readContext,\n    use: use,\n    useCallback: function (callback, deps) {\n      mountWorkInProgressHook().memoizedState = [\n        callback,\n        void 0 === deps ? null : deps\n      ];\n      return callback;\n    },\n    useContext: readContext,\n    useEffect: mountEffect,\n    useImperativeHandle: function (ref, create, deps) {\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n      mountEffectImpl(\n        4194308,\n        4,\n        imperativeHandleEffect.bind(null, create, ref),\n        deps\n      );\n    },\n    useLayoutEffect: function (create, deps) {\n      return mountEffectImpl(4194308, 4, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      mountEffectImpl(4, 2, create, deps);\n    },\n    useMemo: function (nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var nextValue = nextCreate();\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          nextCreate();\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      hook.memoizedState = [nextValue, deps];\n      return nextValue;\n    },\n    useReducer: function (reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      if (void 0 !== init) {\n        var initialState = init(initialArg);\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            init(initialArg);\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n      } else initialState = initialArg;\n      hook.memoizedState = hook.baseState = initialState;\n      reducer = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = reducer;\n      reducer = reducer.dispatch = dispatchReducerAction.bind(\n        null,\n        currentlyRenderingFiber,\n        reducer\n      );\n      return [hook.memoizedState, reducer];\n    },\n    useRef: function (initialValue) {\n      var hook = mountWorkInProgressHook();\n      initialValue = { current: initialValue };\n      return (hook.memoizedState = initialValue);\n    },\n    useState: function (initialState) {\n      initialState = mountStateImpl(initialState);\n      var queue = initialState.queue,\n        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);\n      queue.dispatch = dispatch;\n      return [initialState.memoizedState, dispatch];\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = mountWorkInProgressHook();\n      return mountDeferredValueImpl(hook, value, initialValue);\n    },\n    useTransition: function () {\n      var stateHook = mountStateImpl(!1);\n      stateHook = startTransition.bind(\n        null,\n        currentlyRenderingFiber,\n        stateHook.queue,\n        !0,\n        !1\n      );\n      mountWorkInProgressHook().memoizedState = stateHook;\n      return [!1, stateHook];\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber,\n        hook = mountWorkInProgressHook();\n      if (isHydrating) {\n        if (void 0 === getServerSnapshot)\n          throw Error(formatProdErrorMessage(407));\n        getServerSnapshot = getServerSnapshot();\n      } else {\n        getServerSnapshot = getSnapshot();\n        if (null === workInProgressRoot)\n          throw Error(formatProdErrorMessage(349));\n        0 !== (workInProgressRootRenderLanes & 124) ||\n          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n      }\n      hook.memoizedState = getServerSnapshot;\n      var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n        subscribe\n      ]);\n      fiber.flags |= 2048;\n      pushSimpleEffect(\n        9,\n        createEffectInstance(),\n        updateStoreInstance.bind(\n          null,\n          fiber,\n          inst,\n          getServerSnapshot,\n          getSnapshot\n        ),\n        null\n      );\n      return getServerSnapshot;\n    },\n    useId: function () {\n      var hook = mountWorkInProgressHook(),\n        identifierPrefix = workInProgressRoot.identifierPrefix;\n      if (isHydrating) {\n        var JSCompiler_inline_result = treeContextOverflow;\n        var idWithLeadingBit = treeContextId;\n        JSCompiler_inline_result =\n          (\n            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n          ).toString(32) + JSCompiler_inline_result;\n        identifierPrefix =\n          \"\\u00ab\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n        JSCompiler_inline_result = localIdCounter++;\n        0 < JSCompiler_inline_result &&\n          (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n        identifierPrefix += \"\\u00bb\";\n      } else\n        (JSCompiler_inline_result = globalClientIdCounter++),\n          (identifierPrefix =\n            \"\\u00ab\" +\n            identifierPrefix +\n            \"r\" +\n            JSCompiler_inline_result.toString(32) +\n            \"\\u00bb\");\n      return (hook.memoizedState = identifierPrefix);\n    },\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: mountActionState,\n    useActionState: mountActionState,\n    useOptimistic: function (passthrough) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = hook.baseState = passthrough;\n      var queue = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: null,\n        lastRenderedState: null\n      };\n      hook.queue = queue;\n      hook = dispatchOptimisticSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        !0,\n        queue\n      );\n      queue.dispatch = hook;\n      return [passthrough, hook];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: function () {\n      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n        null,\n        currentlyRenderingFiber\n      ));\n    }\n  },\n  HooksDispatcherOnUpdate = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: updateReducer,\n    useRef: updateRef,\n    useState: function () {\n      return updateReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return updateDeferredValueImpl(\n        hook,\n        currentHook.memoizedState,\n        value,\n        initialValue\n      );\n    },\n    useTransition: function () {\n      var booleanOrThenable = updateReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: updateActionState,\n    useActionState: updateActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  HooksDispatcherOnRerender = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: rerenderReducer,\n    useRef: updateRef,\n    useState: function () {\n      return rerenderReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return null === currentHook\n        ? mountDeferredValueImpl(hook, value, initialValue)\n        : updateDeferredValueImpl(\n            hook,\n            currentHook.memoizedState,\n            value,\n            initialValue\n          );\n    },\n    useTransition: function () {\n      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: rerenderActionState,\n    useActionState: rerenderActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      if (null !== currentHook)\n        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n      hook.baseState = passthrough;\n      return [passthrough, hook.queue.dispatch];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  thenableState = null,\n  thenableIndexCounter = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 67108866), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 67108866;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 67108866);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException || x === SuspenseActionException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state ||\n          \"$?\" === state.data ||\n          isSuspenseInstanceFallback(state))\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$73 in Component)\n      void 0 === newProps[propName$73] &&\n        (newProps[propName$73] = Component[propName$73]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$74) {\n    setTimeout(function () {\n      throw e$74;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$75) {\n    setTimeout(function () {\n      throw e$75;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    prevState = null !== current ? current.memoizedState : null;\n  if (\"hidden\" === nextProps.mode) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (prevState = 0; null !== nextChildren; )\n          (prevState =\n            prevState | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = prevState & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 4194816);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 4194816;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: 0,\n  hydrationErrors: null\n};\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912,\n                hydrationErrors: null\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          isSuspenseInstanceFallback(nextInstance)\n            ? (workInProgress.lanes = 32)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      isSuspenseInstanceFallback(nextInstance))\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (\n        null !== JSCompiler_temp &&\n        ((nextProps = renderLanes & -renderLanes),\n        (nextProps =\n          0 !== (nextProps & 42)\n            ? 1\n            : getBumpedLaneForHydrationByLane(nextProps)),\n        (nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps),\n        0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n      )\n        throw (\n          ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n          enqueueConcurrentRenderForLane(current, nextProps),\n          scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n          SelectiveHydrationException)\n        );\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 192),\n          (workInProgress.child = current.child),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 65011712),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  offscreenProps = createFiberImplClass(22, offscreenProps, null, mode);\n  offscreenProps.lanes = 0;\n  offscreenProps.stateNode = {\n    _visibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null\n  };\n  return offscreenProps;\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        lazyComponent = workInProgress.pendingProps;\n        var prevState = workInProgress.memoizedState;\n        init = prevState.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        lazyComponent = nextState.cache;\n        pushProvider(workInProgress, CacheContext, lazyComponent);\n        lazyComponent !== prevState.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        lazyComponent = nextState.element;\n        if (prevState.isDehydrated)\n          if (\n            ((prevState = {\n              element: lazyComponent,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = prevState),\n            (workInProgress.memoizedState = prevState),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else if (lazyComponent !== init) {\n            init = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(init);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else {\n            current = workInProgress.stateNode.containerInfo;\n            switch (current.nodeType) {\n              case 9:\n                current = current.body;\n                break;\n              default:\n                current =\n                  \"HTML\" === current.nodeName\n                    ? current.ownerDocument.body\n                    : current;\n            }\n            nextHydratableInstance = getNextHydratable(current.firstChild);\n            hydrationParentFiber = workInProgress;\n            isHydrating = !0;\n            hydrationErrors = null;\n            rootOrSingletonContext = !0;\n            renderLanes = mountChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            );\n            for (workInProgress.child = renderLanes; renderLanes; )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n          }\n        else {\n          resetHydrationState();\n          if (lazyComponent === init) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(\n            current,\n            workInProgress,\n            lazyComponent,\n            renderLanes\n          );\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (init = nextHydratableInstance),\n          isSingletonScope(workInProgress.type)\n            ? ((previousHydratableOnEnteringScopedSingleton = init),\n              (nextHydratableInstance = getNextHydratable(\n                lazyComponent.firstChild\n              )))\n            : (nextHydratableInstance = init)),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        markRef(current, workInProgress),\n        null === current && (workInProgress.flags |= 4194304),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      prevState = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = prevState.children;\n      shouldSetTextContent(init, prevState)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 31:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        (renderLanes = workInProgress.mode),\n        (lazyComponent = {\n          mode: lazyComponent.mode,\n          children: lazyComponent.children\n        }),\n        null === current\n          ? ((renderLanes = mountWorkInProgressOffscreenFiber(\n              lazyComponent,\n              renderLanes\n            )),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes))\n          : ((renderLanes = createWorkInProgress(current.child, lazyComponent)),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes)),\n        workInProgress\n      );\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (prevState = createCache()),\n              (init.pooledCache = prevState),\n              prevState.refCount++,\n              null !== prevState && (init.pooledCacheLanes |= renderLanes),\n              (init = prevState)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (prevState = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = prevState.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194048) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$113 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$113 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$113\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$113.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags & 65011712),\n        (subtreeFlags |= child$114.flags & 65011712),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  else\n    for (child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags),\n        (subtreeFlags |= child$114.flags),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 31:\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            upgradeHydrationErrorsToRecoverable());\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          (type = upgradeHydrationErrorsToRecoverable()),\n            null !== current &&\n              null !== current.memoizedState &&\n              (current.memoizedState.hydrationErrors = type),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$127 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$127 = newProps.memoizedState.cachePool.pool);\n        cache$127 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$127 = type.rendering;\n      if (null === cache$127)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$127 = findFirstSuspended(current);\n              if (null !== cache$127) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$127.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$127)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$127.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$127.sibling = workInProgress.child),\n            (workInProgress.child = cache$127))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$127)\n              : (workInProgress.child = cache$127),\n            (type.last = cache$127));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n    case 30:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,\n              destroy_ = destroy;\n            try {\n              destroy_();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = current.stateNode;\n          break;\n        case 30:\n          instanceToUse = current.stateNode;\n          break;\n        default:\n          instanceToUse = current.stateNode;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$143) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$143);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    (27 === fiber.tag && isSingletonScope(fiber.type)) ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;\n\n    ) {\n      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? (9 === parent.nodeType\n            ? parent.body\n            : \"HTML\" === parent.nodeName\n              ? parent.ownerDocument.body\n              : parent\n          ).insertBefore(node, before)\n        : ((before =\n            9 === parent.nodeType\n              ? parent.body\n              : \"HTML\" === parent.nodeName\n                ? parent.ownerDocument.body\n                : parent),\n          before.appendChild(node),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (\n    4 !== tag &&\n    (27 === tag &&\n      isSingletonScope(node.type) &&\n      ((parent = node.stateNode), (before = null)),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (\n    4 !== tag &&\n    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nfunction commitHostSingletonAcquisition(finishedWork) {\n  var singleton = finishedWork.stateNode,\n    props = finishedWork.memoizedProps;\n  try {\n    for (\n      var type = finishedWork.type, attributes = singleton.attributes;\n      attributes.length;\n\n    )\n      singleton.removeAttributeNode(attributes[0]);\n    setInitialProperties(singleton, type, props);\n    singleton[internalInstanceKey] = finishedWork;\n    singleton[internalPropsKey] = props;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1024) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$142) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$142\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (\n        flags & 64 &&\n        ((finishedRoot = finishedWork.updateQueue), null !== finishedRoot)\n      ) {\n        current = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              current = finishedWork.child.stateNode;\n              break;\n            case 1:\n              current = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(finishedRoot, current);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 27:\n      null === current &&\n        flags & 4 &&\n        commitHostSingletonAcquisition(finishedWork);\n    case 26:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      flags & 64 &&\n        ((finishedRoot = finishedWork.memoizedState),\n        null !== finishedRoot &&\n          ((finishedRoot = finishedRoot.dehydrated),\n          null !== finishedRoot &&\n            ((finishedWork = retryDehydratedSuspenseBoundary.bind(\n              null,\n              finishedWork\n            )),\n            registerSuspenseInstanceRetry(finishedRoot, finishedWork))));\n      break;\n    case 22:\n      flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!flags) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        prevProps = offscreenSubtreeIsHidden;\n        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = flags;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevProps;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      break;\n    case 30:\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      isSingletonScope(deletedFiber.type) &&\n        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      releaseSingletonInstance(deletedFiber.stateNode);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (9 === hostParent.nodeType\n              ? hostParent.body\n              : \"HTML\" === hostParent.nodeName\n                ? hostParent.ownerDocument.body\n                : hostParent\n            ).removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((finishedRoot = hostParent),\n            clearSuspenseBoundary(\n              9 === finishedRoot.nodeType\n                ? finishedRoot.body\n                : \"HTML\" === finishedRoot.nodeName\n                  ? finishedRoot.ownerDocument.body\n                  : finishedRoot,\n              deletedFiber.stateNode\n            ),\n            retryIfBlockedOn(finishedRoot))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n            if (isSingletonScope(parent.type)) {\n              hostParent = parent.stateNode;\n              hostParentIsContainer = !1;\n              break a;\n            }\n            break;\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href || \"\" === current.href\n                              ? null\n                              : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      null !== current &&\n        flags & 4 &&\n        commitHostUpdate(\n          finishedWork,\n          finishedWork.memoizedProps,\n          current.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      hoistableRoot = null !== finishedWork.memoizedState;\n      var wasHidden = null !== current && null !== current.memoizedState,\n        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 8192)\n        a: for (\n          root = finishedWork.stateNode,\n            root._visibility = hoistableRoot\n              ? root._visibility & -2\n              : root._visibility | 1,\n            hoistableRoot &&\n              (null === current ||\n                wasHidden ||\n                offscreenSubtreeIsHidden ||\n                offscreenSubtreeWasHidden ||\n                recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n            current = null,\n            root = finishedWork;\n          ;\n\n        ) {\n          if (5 === root.tag || 26 === root.tag) {\n            if (null === current) {\n              wasHidden = current = root;\n              try {\n                if (((currentResource = wasHidden.stateNode), hoistableRoot))\n                  (maybeNodes = currentResource.style),\n                    \"function\" === typeof maybeNodes.setProperty\n                      ? maybeNodes.setProperty(\"display\", \"none\", \"important\")\n                      : (maybeNodes.display = \"none\");\n                else {\n                  i = wasHidden.stateNode;\n                  var styleProp = wasHidden.memoizedProps.style,\n                    display =\n                      void 0 !== styleProp &&\n                      null !== styleProp &&\n                      styleProp.hasOwnProperty(\"display\")\n                        ? styleProp.display\n                        : null;\n                  i.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              wasHidden = root;\n              try {\n                wasHidden.stateNode.nodeValue = hoistableRoot\n                  ? \"\"\n                  : wasHidden.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 30:\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      for (\n        var hostParentFiber, parentFiber = finishedWork.return;\n        null !== parentFiber;\n\n      ) {\n        if (isHostParent(parentFiber)) {\n          hostParentFiber = parentFiber;\n          break;\n        }\n        parentFiber = parentFiber.return;\n      }\n      if (null == hostParentFiber) throw Error(formatProdErrorMessage(160));\n      switch (hostParentFiber.tag) {\n        case 27:\n          var parent = hostParentFiber.stateNode,\n            before = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before, parent);\n          break;\n        case 5:\n          var parent$144 = hostParentFiber.stateNode;\n          hostParentFiber.flags & 32 &&\n            (setTextContent(parent$144, \"\"), (hostParentFiber.flags &= -33));\n          var before$145 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before$145, parent$144);\n          break;\n        case 3:\n        case 4:\n          var parent$146 = hostParentFiber.stateNode.containerInfo,\n            before$147 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNodeIntoContainer(\n            finishedWork,\n            before$147,\n            parent$146\n          );\n          break;\n        default:\n          throw Error(formatProdErrorMessage(161));\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 27:\n        releaseSingletonInstance(finishedWork.stateNode);\n      case 26:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 30:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 27:\n        commitHostSingletonAcquisition(finishedWork);\n      case 26:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 30:\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 1:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 13:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      id = finishedWork.alternate;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 && commitOffscreenPassiveMountEffects(id, finishedWork);\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 2\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 2 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 2 &&\n          ((i._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  pendingEffectsStatus = 0,\n  pendingEffectsRoot = null,\n  pendingFinishedWork = null,\n  pendingEffectsLanes = 0,\n  pendingEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  pendingRecoverableErrors = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 124) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                (null === workInProgressRootRecoverableErrors\n                  ? (workInProgressRootRecoverableErrors = renderWasConcurrent)\n                  : workInProgressRootRecoverableErrors.push.apply(\n                      workInProgressRootRecoverableErrors,\n                      renderWasConcurrent\n                    ));\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        renderWasConcurrent = exitStatus;\n        switch (renderWasConcurrent) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194048) !== lanes) break;\n          case 6:\n            markRootSuspended(\n              shouldTimeSlice,\n              lanes,\n              workInProgressDeferredLane,\n              !workInProgressRootDidSkipSuspendedSiblings\n            );\n            break a;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        if (\n          (lanes & 62914560) === lanes &&\n          ((exitStatus = globalMostRecentFallbackTime + 300 - now()),\n          10 < exitStatus)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              renderWasConcurrent,\n              2,\n              -0,\n              0\n            ),\n            exitStatus\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          renderWasConcurrent,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  exitStatus,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  root.timeoutHandle = -1;\n  suspendedCommitReason = finishedWork.subtreeFlags;\n  if (\n    suspendedCommitReason & 8192 ||\n    16785408 === (suspendedCommitReason & 16785408)\n  )\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (suspendedCommitReason = waitForCommitToBeReady()),\n      null !== suspendedCommitReason)\n    ) {\n      root.cancelPendingCommit = suspendedCommitReason(\n        commitRoot.bind(\n          null,\n          root,\n          finishedWork,\n          lanes,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          exitStatus,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    finishedWork,\n    lanes,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$4 = 31 - clz32(lanes),\n      lane = 1 << index$4;\n    didAttemptEntireTree[index$4] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber$1 = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState = null),\n        (thenableIndexCounter = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$2 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$2;\n      lanes |= root[index$2];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException || thrownValue === SuspenseActionException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194048) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 9:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$167) {\n      handleThrow(root, thrownValue$167);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n          case 9:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              (2 !== workInProgressSuspendedReason &&\n                9 !== workInProgressSuspendedReason) ||\n                workInProgressRoot !== root ||\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrentByScheduler();\n      break;\n    } catch (thrownValue$169) {\n      handleThrow(root, thrownValue$169);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrentByScheduler() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState = null;\n  thenableIndexCounter = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason ||\n        9 === suspendedReason ||\n        3 === suspendedReason ||\n        6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  finishedWork,\n  lanes,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  root.cancelPendingCommit = null;\n  do flushPendingEffects();\n  while (0 !== pendingEffectsStatus);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  if (null !== finishedWork) {\n    if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n    didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;\n    didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;\n    markRootFinished(\n      root,\n      lanes,\n      didIncludeRenderPhaseUpdate,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes\n    );\n    root === workInProgressRoot &&\n      ((workInProgress = workInProgressRoot = null),\n      (workInProgressRootRenderLanes = 0));\n    pendingFinishedWork = finishedWork;\n    pendingEffectsRoot = root;\n    pendingEffectsLanes = lanes;\n    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;\n    pendingPassiveTransitions = transitions;\n    pendingRecoverableErrors = recoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? ((root.callbackNode = null),\n        (root.callbackPriority = 0),\n        scheduleCallback$1(NormalPriority$1, function () {\n          flushPassiveEffects(!0);\n          return null;\n        }))\n      : ((root.callbackNode = null), (root.callbackPriority = 0));\n    recoverableErrors = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {\n      recoverableErrors = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      transitions = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      spawnedLane = executionContext;\n      executionContext |= 4;\n      try {\n        commitBeforeMutationEffects(root, finishedWork, lanes);\n      } finally {\n        (executionContext = spawnedLane),\n          (ReactDOMSharedInternals.p = transitions),\n          (ReactSharedInternals.T = recoverableErrors);\n      }\n    }\n    pendingEffectsStatus = 1;\n    flushMutationEffects();\n    flushLayoutEffects();\n    flushSpawnedWork();\n  }\n}\nfunction flushMutationEffects() {\n  if (1 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {\n      rootMutationHasEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitMutationEffectsOnFiber(finishedWork, root);\n        var priorSelectionInformation = selectionInformation,\n          curFocusedElem = getActiveElementDeep(root.containerInfo),\n          priorFocusedElem = priorSelectionInformation.focusedElem,\n          priorSelectionRange = priorSelectionInformation.selectionRange;\n        if (\n          curFocusedElem !== priorFocusedElem &&\n          priorFocusedElem &&\n          priorFocusedElem.ownerDocument &&\n          containsNode(\n            priorFocusedElem.ownerDocument.documentElement,\n            priorFocusedElem\n          )\n        ) {\n          if (\n            null !== priorSelectionRange &&\n            hasSelectionCapabilities(priorFocusedElem)\n          ) {\n            var start = priorSelectionRange.start,\n              end = priorSelectionRange.end;\n            void 0 === end && (end = start);\n            if (\"selectionStart\" in priorFocusedElem)\n              (priorFocusedElem.selectionStart = start),\n                (priorFocusedElem.selectionEnd = Math.min(\n                  end,\n                  priorFocusedElem.value.length\n                ));\n            else {\n              var doc = priorFocusedElem.ownerDocument || document,\n                win = (doc && doc.defaultView) || window;\n              if (win.getSelection) {\n                var selection = win.getSelection(),\n                  length = priorFocusedElem.textContent.length,\n                  start$jscomp$0 = Math.min(priorSelectionRange.start, length),\n                  end$jscomp$0 =\n                    void 0 === priorSelectionRange.end\n                      ? start$jscomp$0\n                      : Math.min(priorSelectionRange.end, length);\n                !selection.extend &&\n                  start$jscomp$0 > end$jscomp$0 &&\n                  ((curFocusedElem = end$jscomp$0),\n                  (end$jscomp$0 = start$jscomp$0),\n                  (start$jscomp$0 = curFocusedElem));\n                var startMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    start$jscomp$0\n                  ),\n                  endMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    end$jscomp$0\n                  );\n                if (\n                  startMarker &&\n                  endMarker &&\n                  (1 !== selection.rangeCount ||\n                    selection.anchorNode !== startMarker.node ||\n                    selection.anchorOffset !== startMarker.offset ||\n                    selection.focusNode !== endMarker.node ||\n                    selection.focusOffset !== endMarker.offset)\n                ) {\n                  var range = doc.createRange();\n                  range.setStart(startMarker.node, startMarker.offset);\n                  selection.removeAllRanges();\n                  start$jscomp$0 > end$jscomp$0\n                    ? (selection.addRange(range),\n                      selection.extend(endMarker.node, endMarker.offset))\n                    : (range.setEnd(endMarker.node, endMarker.offset),\n                      selection.addRange(range));\n                }\n              }\n            }\n          }\n          doc = [];\n          for (\n            selection = priorFocusedElem;\n            (selection = selection.parentNode);\n\n          )\n            1 === selection.nodeType &&\n              doc.push({\n                element: selection,\n                left: selection.scrollLeft,\n                top: selection.scrollTop\n              });\n          \"function\" === typeof priorFocusedElem.focus &&\n            priorFocusedElem.focus();\n          for (\n            priorFocusedElem = 0;\n            priorFocusedElem < doc.length;\n            priorFocusedElem++\n          ) {\n            var info = doc[priorFocusedElem];\n            info.element.scrollLeft = info.left;\n            info.element.scrollTop = info.top;\n          }\n        }\n        _enabled = !!eventsEnabled;\n        selectionInformation = eventsEnabled = null;\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootMutationHasEffect);\n      }\n    }\n    root.current = finishedWork;\n    pendingEffectsStatus = 2;\n  }\n}\nfunction flushLayoutEffects() {\n  if (2 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);\n    if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {\n      rootHasLayoutEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork);\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootHasLayoutEffect);\n      }\n    }\n    pendingEffectsStatus = 3;\n  }\n}\nfunction flushSpawnedWork() {\n  if (4 === pendingEffectsStatus || 3 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    requestPaint();\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      lanes = pendingEffectsLanes,\n      recoverableErrors = pendingRecoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? (pendingEffectsStatus = 5)\n      : ((pendingEffectsStatus = 0),\n        (pendingFinishedWork = pendingEffectsRoot = null),\n        releaseRootPooledCache(root, root.pendingLanes));\n    var remainingLanes = root.pendingLanes;\n    0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n    lanesToEventPriority(lanes);\n    finishedWork = finishedWork.stateNode;\n    if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n      try {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          finishedWork,\n          void 0,\n          128 === (finishedWork.current.flags & 128)\n        );\n      } catch (err) {}\n    if (null !== recoverableErrors) {\n      finishedWork = ReactSharedInternals.T;\n      remainingLanes = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      ReactSharedInternals.T = null;\n      try {\n        for (\n          var onRecoverableError = root.onRecoverableError, i = 0;\n          i < recoverableErrors.length;\n          i++\n        ) {\n          var recoverableError = recoverableErrors[i];\n          onRecoverableError(recoverableError.value, {\n            componentStack: recoverableError.stack\n          });\n        }\n      } finally {\n        (ReactSharedInternals.T = finishedWork),\n          (ReactDOMSharedInternals.p = remainingLanes);\n      }\n    }\n    0 !== (pendingEffectsLanes & 3) && flushPendingEffects();\n    ensureRootIsScheduled(root);\n    remainingLanes = root.pendingLanes;\n    0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42)\n      ? root === rootWithNestedUpdates\n        ? nestedUpdateCount++\n        : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n      : (nestedUpdateCount = 0);\n    flushSyncWorkAcrossRoots_impl(0, !1);\n  }\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPendingEffects(wasDelayedCommit) {\n  flushMutationEffects();\n  flushLayoutEffects();\n  flushSpawnedWork();\n  return flushPassiveEffects(wasDelayedCommit);\n}\nfunction flushPassiveEffects() {\n  if (5 !== pendingEffectsStatus) return !1;\n  var root = pendingEffectsRoot,\n    remainingLanes = pendingEffectsRemainingLanes;\n  pendingEffectsRemainingLanes = 0;\n  var renderPriority = lanesToEventPriority(pendingEffectsLanes),\n    prevTransition = ReactSharedInternals.T,\n    previousPriority = ReactDOMSharedInternals.p;\n  try {\n    ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n    ReactSharedInternals.T = null;\n    renderPriority = pendingPassiveTransitions;\n    pendingPassiveTransitions = null;\n    var root$jscomp$0 = pendingEffectsRoot,\n      lanes = pendingEffectsLanes;\n    pendingEffectsStatus = 0;\n    pendingFinishedWork = pendingEffectsRoot = null;\n    pendingEffectsLanes = 0;\n    if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(331));\n    var prevExecutionContext = executionContext;\n    executionContext |= 4;\n    commitPassiveUnmountOnFiber(root$jscomp$0.current);\n    commitPassiveMountOnFiber(\n      root$jscomp$0,\n      root$jscomp$0.current,\n      lanes,\n      renderPriority\n    );\n    executionContext = prevExecutionContext;\n    flushSyncWorkAcrossRoots_impl(0, !1);\n    if (\n      injectedHook &&\n      \"function\" === typeof injectedHook.onPostCommitFiberRoot\n    )\n      try {\n        injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);\n      } catch (err) {}\n    return !0;\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition),\n      releaseRootPooledCache(root, remainingLanes);\n  }\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$174 = firstScheduledRoot; null !== root$174; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$174.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$174.suspendedLanes,\n                pingedLanes = root$174.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326741\n                  ? (JSCompiler_inline_result & 201326741) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$174,\n                root$174 === workInProgressRoot ? JSCompiler_inline_result : 0,\n                null !== root$174.cancelPendingCommit ||\n                  -1 !== root$174.timeoutHandle\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$174, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n        root$174 = root$174.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInImmediateTask() {\n  processRootScheduleInMicrotask();\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$3 = 31 - clz32(lanes),\n      lane = 1 << index$3,\n      expirationTime = expirationTimes[index$3];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$3] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  if (0 !== pendingEffectsStatus && 5 !== pendingEffectsStatus)\n    return (root.callbackNode = null), (root.callbackPriority = 0), null;\n  var originalCallbackNode = root.callbackNode;\n  if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPendingEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateRootScheduleTask() {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(\n          ImmediatePriority,\n          processRootScheduleInImmediateTask\n        )\n      : processRootScheduleInMicrotask();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1528 = 0;\n  i$jscomp$inline_1528 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1528++\n) {\n  var eventName$jscomp$inline_1529 =\n      simpleEventPluginEvents[i$jscomp$inline_1528],\n    domEventName$jscomp$inline_1530 =\n      eventName$jscomp$inline_1529.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1531 =\n      eventName$jscomp$inline_1529[0].toUpperCase() +\n      eventName$jscomp$inline_1529.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1530,\n    \"on\" + capitalizedEvent$jscomp$inline_1531\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (container === targetContainer) break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (\n              (3 === grandTag || 4 === grandTag) &&\n              nodeTag.stateNode.containerInfo === targetContainer\n            )\n              return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    if (3 === targetFiber.tag) return listeners;\n    targetFiber = targetFiber.return;\n  }\n  return [];\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$188 = props[hasSrc];\n          if (null != propValue$188)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$188;\n                break;\n              case \"type\":\n                propValue = propValue$188;\n                break;\n              case \"checked\":\n                checked = propValue$188;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$188;\n                break;\n              case \"value\":\n                propKey = propValue$188;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$188;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$188)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$188, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$188 in props)\n          props.hasOwnProperty(propValue$188) &&\n            ((hasSrc = props[propValue$188]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$188,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$205 in nextProps) {\n        var propKey = nextProps[propKey$205];\n        lastProp = lastProps[propKey$205];\n        if (\n          nextProps.hasOwnProperty(propKey$205) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$205) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$205,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$205 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$205 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$205\n        ? updateOptions(domElement, !!lastProps, propKey$205, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$205 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$205 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$205, propKey);\n      return;\n    case \"option\":\n      for (var propKey$221 in lastProps)\n        if (\n          ((propKey$205 = lastProps[propKey$221]),\n          lastProps.hasOwnProperty(propKey$221) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$221))\n        )\n          switch (propKey$221) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$221,\n                null,\n                nextProps,\n                propKey$205\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$205 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$205 &&\n                \"function\" !== typeof propKey$205 &&\n                \"symbol\" !== typeof propKey$205;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$226 in lastProps)\n        (propKey$205 = lastProps[propKey$226]),\n          lastProps.hasOwnProperty(propKey$226) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$226) &&\n            setProp(domElement, tag, propKey$226, null, nextProps, propKey$205);\n      for (checked in nextProps)\n        if (\n          ((propKey$205 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$205)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$231 in lastProps)\n          (propKey$205 = lastProps[propKey$231]),\n            lastProps.hasOwnProperty(propKey$231) &&\n              void 0 !== propKey$205 &&\n              !nextProps.hasOwnProperty(propKey$231) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$231,\n                void 0,\n                nextProps,\n                propKey$205\n              );\n        for (defaultChecked in nextProps)\n          (propKey$205 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$205 === propKey ||\n              (void 0 === propKey$205 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$236 in lastProps)\n    (propKey$205 = lastProps[propKey$236]),\n      lastProps.hasOwnProperty(propKey$236) &&\n        null != propKey$205 &&\n        !nextProps.hasOwnProperty(propKey$236) &&\n        setProp(domElement, tag, propKey$236, null, nextProps, propKey$205);\n  for (lastProp in nextProps)\n    (propKey$205 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$205 === propKey ||\n        (null == propKey$205 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$205, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction isSingletonScope(type) {\n  return \"head\" === type;\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    possiblePreambleContribution = 0,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (\n          0 < possiblePreambleContribution &&\n          8 > possiblePreambleContribution\n        ) {\n          node = possiblePreambleContribution;\n          var ownerDocument = parentInstance.ownerDocument;\n          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);\n          node & 2 && releaseSingletonInstance(ownerDocument.body);\n          if (node & 4)\n            for (\n              node = ownerDocument.head,\n                releaseSingletonInstance(node),\n                ownerDocument = node.firstChild;\n              ownerDocument;\n\n            ) {\n              var nextNode$jscomp$0 = ownerDocument.nextSibling,\n                nodeName = ownerDocument.nodeName;\n              ownerDocument[internalHoistableMarker] ||\n                \"SCRIPT\" === nodeName ||\n                \"STYLE\" === nodeName ||\n                (\"LINK\" === nodeName &&\n                  \"stylesheet\" === ownerDocument.rel.toLowerCase()) ||\n                node.removeChild(ownerDocument);\n              ownerDocument = nextNode$jscomp$0;\n            }\n        }\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else\n        \"$\" === node || \"$?\" === node || \"$!\" === node\n          ? depth++\n          : (possiblePreambleContribution = node.charCodeAt(0) - 48);\n    else possiblePreambleContribution = 0;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href || \"\" === anyProps.href\n                ? null\n                : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction isSuspenseInstanceFallback(instance) {\n  return (\n    \"$!\" === instance.data ||\n    (\"$?\" === instance.data && \"complete\" === instance.ownerDocument.readyState)\n  );\n}\nfunction registerSuspenseInstanceRetry(instance, callback) {\n  var ownerDocument = instance.ownerDocument;\n  if (\"$?\" !== instance.data || \"complete\" === ownerDocument.readyState)\n    callback();\n  else {\n    var listener = function () {\n      callback();\n      ownerDocument.removeEventListener(\"DOMContentLoaded\", listener);\n    };\n    ownerDocument.addEventListener(\"DOMContentLoaded\", listener);\n    instance._reactRetry = listener;\n  }\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nvar previousHydratableOnEnteringScopedSingleton = null;\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nfunction releaseSingletonInstance(instance) {\n  for (var attributes = instance.attributes; attributes.length; )\n    instance.removeAttributeNode(attributes[0]);\n  detachDeletedInstance(instance);\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : 9 === container.nodeType\n      ? container\n      : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$244 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$245 = styles$244.get(type);\n        resource$245 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$245 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$244.set(type, resource$245),\n          (styles$244 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$244._p &&\n            ((resource$245.instance = styles$244),\n            (resource$245.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$244 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$245.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$245;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$250 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$250)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$250),\n            markNodeAsHoistable(instance$250),\n            instance$250\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$250 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$250);\n        var linkInstance = instance$250;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$250, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$250, props.precedence, hoistableRoot);\n        return (resource.instance = instance$250);\n      case \"script\":\n        instance$250 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$250)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$250)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.pingCache = this.current = this.pendingChildren = null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane();\n              lane = getBumpedLaneForHydrationByLane(lane);\n              var root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1785 = React.version;\nif (\n  \"19.1.0\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1785\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1785,\n      \"19.1.0\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2256 = {\n  bundleType: 0,\n  version: \"19.1.0\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  reconcilerVersion: \"19.1.0\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2257 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2257.isDisabled &&\n    hook$jscomp$inline_2257.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2257.inject(\n        internals$jscomp$inline_2256\n      )),\n        (injectedHook = hook$jscomp$inline_2257);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  options = isStrictMode;\n  initialChildren.current.lanes = options;\n  markRootUpdated$1(initialChildren, options);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.1.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","import { TanStackRouterDevtools as TanStackRouterDevtools$1 } from \"./TanStackRouterDevtools.js\";\nimport { TanStackRouterDevtoolsPanel as TanStackRouterDevtoolsPanel$1 } from \"./TanStackRouterDevtoolsPanel.js\";\nconst TanStackRouterDevtools = process.env.NODE_ENV !== \"development\" ? function() {\n  return null;\n} : TanStackRouterDevtools$1;\nconst TanStackRouterDevtoolsInProd = TanStackRouterDevtools$1;\nconst TanStackRouterDevtoolsPanel = process.env.NODE_ENV !== \"development\" ? function() {\n  return null;\n} : TanStackRouterDevtoolsPanel$1;\nconst TanStackRouterDevtoolsPanelInProd = TanStackRouterDevtoolsPanel$1;\nexport {\n  TanStackRouterDevtools,\n  TanStackRouterDevtoolsInProd,\n  TanStackRouterDevtoolsPanel,\n  TanStackRouterDevtoolsPanelInProd\n};\n//# sourceMappingURL=index.js.map\n","import \"/home/ubuntu/repos/tanstack-blog/src/styles/app.css?transform-only\";export default \"__VITE_CSS_URL__2f686f6d652f7562756e74752f7265706f732f74616e737461636b2d626c6f672f7372632f7374796c65732f6170702e6373733f7472616e73666f726d2d6f6e6c79__\"","export function seo({\n  title,\n  description,\n  keywords,\n  image,\n}: {\n  title: string\n  description?: string\n  image?: string\n  keywords?: string\n}) {\n  const tags = [\n    { title },\n    { name: \"description\", content: description },\n    { name: \"keywords\", content: keywords },\n    { name: \"twitter:title\", content: title },\n    { name: \"twitter:description\", content: description },\n    { name: \"twitter:creator\", content: \"@tannerlinsley\" },\n    { name: \"twitter:site\", content: \"@tannerlinsley\" },\n    { name: \"og:type\", content: \"website\" },\n    { name: \"og:title\", content: title },\n    { name: \"og:description\", content: description },\n    ...(image\n      ? [\n          { name: \"twitter:image\", content: image },\n          { name: \"twitter:card\", content: \"summary_large_image\" },\n          { name: \"og:image\", content: image },\n        ]\n      : []),\n  ]\n\n  return tags\n}\n","import {\n  createRootRoute,\n  HeadContent,\n  Outlet,\n  Scripts,\n} from \"@tanstack/react-router\"\nimport { TanStackRouterDevtools } from \"@tanstack/react-router-devtools\"\nimport * as React from \"react\"\nimport appCss from \"@/styles/app.css?url\"\nimport { seo } from \"@/utils/seo\"\nimport \"@/types/css\"\n\nexport const Route = createRootRoute({\n  head: () => ({\n    meta: [\n      {\n        charSet: \"utf-8\",\n      },\n      {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\",\n      },\n      ...seo({\n        title: \"jingsi.space\",\n        description: `Akira Komamura (@akirak)'s personal blog`,\n      }),\n    ],\n    links: [{ rel: \"stylesheet\", href: appCss }],\n  }),\n  component: RootComponent,\n})\n\nfunction RootComponent() {\n  return (\n    <RootDocument>\n      <Outlet />\n    </RootDocument>\n  )\n}\n\nfunction RootDocument({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <HeadContent />\n      </head>\n      <body>\n        <header>\n\n        </header>\n\n        {children}\n        <TanStackRouterDevtools position=\"bottom-right\" />\n        <Scripts />\n      </body>\n    </html>\n  )\n}\n","import { createFileRoute, Outlet } from \"@tanstack/react-router\"\n\nexport const Route = createFileRoute(\"/_blog\")({\n  component: BlogLayout,\n})\n\nfunction BlogLayout() {\n  return (\n    <div>\n      <Outlet />\n    </div>\n  )\n}\n","import { createFileRoute } from \"@tanstack/react-router\"\n\nexport const Route = createFileRoute(\"/\")({\n  component: HomeComponent,\n})\n\nfunction HomeComponent() {\n  return (\n    <main>\n      <h1>Hello world!</h1>\n    </main>\n  )\n}\n","import { createFileRoute, redirect } from \"@tanstack/react-router\"\n\nexport const Route = createFileRoute(\"/about/\")({\n  beforeLoad: () => {\n    throw redirect({\n      to: \"/about/$lang\",\n      params: {\n        lang: \"en\",\n      },\n    })\n  },\n  component: () => null,\n})\n","/**\n * Tests if a value is a `function`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isFunction } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isFunction(isFunction), true)\n * assert.deepStrictEqual(isFunction(\"function\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isFunction = input => typeof input === \"function\";\n/**\n * Creates a function that can be used in a data-last (aka `pipe`able) or\n * data-first style.\n *\n * The first parameter to `dual` is either the arity of the uncurried function\n * or a predicate that determines if the function is being used in a data-first\n * or data-last style.\n *\n * Using the arity is the most common use case, but there are some cases where\n * you may want to use a predicate. For example, if you have a function that\n * takes an optional argument, you can use a predicate to determine if the\n * function is being used in a data-first or data-last style.\n *\n * You can pass either the arity of the uncurried function or a predicate\n * which determines if the function is being used in a data-first or\n * data-last style.\n *\n * **Example** (Using arity to determine data-first or data-last style)\n *\n * ```ts\n * import { dual, pipe } from \"effect/Function\"\n *\n * const sum = dual<\n *   (that: number) => (self: number) => number,\n *   (self: number, that: number) => number\n * >(2, (self, that) => self + that)\n *\n * console.log(sum(2, 3)) // 5\n * console.log(pipe(2, sum(3))) // 5\n * ```\n *\n * **Example** (Using call signatures to define the overloads)\n *\n * ```ts\n * import { dual, pipe } from \"effect/Function\"\n *\n * const sum: {\n *   (that: number): (self: number) => number\n *   (self: number, that: number): number\n * } = dual(2, (self: number, that: number): number => self + that)\n *\n * console.log(sum(2, 3)) // 5\n * console.log(pipe(2, sum(3))) // 5\n * ```\n *\n * **Example** (Using a predicate to determine data-first or data-last style)\n *\n * ```ts\n * import { dual, pipe } from \"effect/Function\"\n *\n * const sum = dual<\n *   (that: number) => (self: number) => number,\n *   (self: number, that: number) => number\n * >(\n *   (args) => args.length === 2,\n *   (self, that) => self + that\n * )\n *\n * console.log(sum(2, 3)) // 5\n * console.log(pipe(2, sum(3))) // 5\n * ```\n *\n * @since 2.0.0\n */\nexport const dual = function (arity, body) {\n  if (typeof arity === \"function\") {\n    return function () {\n      if (arity(arguments)) {\n        // @ts-expect-error\n        return body.apply(this, arguments);\n      }\n      return self => body(self, ...arguments);\n    };\n  }\n  switch (arity) {\n    case 0:\n    case 1:\n      throw new RangeError(`Invalid arity ${arity}`);\n    case 2:\n      return function (a, b) {\n        if (arguments.length >= 2) {\n          return body(a, b);\n        }\n        return function (self) {\n          return body(self, a);\n        };\n      };\n    case 3:\n      return function (a, b, c) {\n        if (arguments.length >= 3) {\n          return body(a, b, c);\n        }\n        return function (self) {\n          return body(self, a, b);\n        };\n      };\n    case 4:\n      return function (a, b, c, d) {\n        if (arguments.length >= 4) {\n          return body(a, b, c, d);\n        }\n        return function (self) {\n          return body(self, a, b, c);\n        };\n      };\n    case 5:\n      return function (a, b, c, d, e) {\n        if (arguments.length >= 5) {\n          return body(a, b, c, d, e);\n        }\n        return function (self) {\n          return body(self, a, b, c, d);\n        };\n      };\n    default:\n      return function () {\n        if (arguments.length >= arity) {\n          // @ts-expect-error\n          return body.apply(this, arguments);\n        }\n        const args = arguments;\n        return function (self) {\n          return body(self, ...args);\n        };\n      };\n  }\n};\n/**\n * Apply a function to given values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, apply } from \"effect/Function\"\n * import { length } from \"effect/String\"\n *\n * assert.deepStrictEqual(pipe(length, apply(\"hello\")), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const apply = (...a) => self => self(...a);\n/**\n * The identity function, i.e. A function that returns its input argument.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { identity } from \"effect/Function\"\n *\n * assert.deepStrictEqual(identity(5), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const identity = a => a;\n/**\n * A function that ensures that the type of an expression matches some type,\n * without changing the resulting type of that expression.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { satisfies } from \"effect/Function\"\n *\n * const test1 = satisfies<number>()(5 as const)\n *     //^? const test: 5\n *     // @ts-expect-error\n * const test2 = satisfies<string>()(5)\n *     //^? Argument of type 'number' is not assignable to parameter of type 'string'\n *\n * assert.deepStrictEqual(satisfies<number>()(5), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const satisfies = () => b => b;\n/**\n * Casts the result to the specified type.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeCoerce, identity } from \"effect/Function\"\n *\n * assert.deepStrictEqual(unsafeCoerce, identity)\n * ```\n *\n * @since 2.0.0\n */\nexport const unsafeCoerce = identity;\n/**\n * Creates a constant value that never changes.\n *\n * This is useful when you want to pass a value to a higher-order function (a function that takes another function as its argument)\n * and want that inner function to always use the same value, no matter how many times it is called.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constant } from \"effect/Function\"\n *\n * const constNull = constant(null)\n *\n * assert.deepStrictEqual(constNull(), null)\n * assert.deepStrictEqual(constNull(), null)\n * ```\n *\n * @since 2.0.0\n */\nexport const constant = value => () => value;\n/**\n * A thunk that returns always `true`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constTrue } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constTrue(), true)\n * ```\n *\n * @since 2.0.0\n */\nexport const constTrue = /*#__PURE__*/constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constFalse } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constFalse(), false)\n * ```\n *\n * @since 2.0.0\n */\nexport const constFalse = /*#__PURE__*/constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constNull } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constNull(), null)\n * ```\n *\n * @since 2.0.0\n */\nexport const constNull = /*#__PURE__*/constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constUndefined } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constUndefined(), undefined)\n * ```\n *\n * @since 2.0.0\n */\nexport const constUndefined = /*#__PURE__*/constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constVoid } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constVoid(), undefined)\n * ```\n *\n * @since 2.0.0\n */\nexport const constVoid = constUndefined;\n/**\n * Reverses the order of arguments for a curried function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { flip } from \"effect/Function\"\n *\n * const f = (a: number) => (b: string) => a - b.length\n *\n * assert.deepStrictEqual(flip(f)('aaa')(2), -1)\n * ```\n *\n * @since 2.0.0\n */\nexport const flip = f => (...b) => (...a) => f(...a)(...b);\n/**\n * Composes two functions, `ab` and `bc` into a single function that takes in an argument `a` of type `A` and returns a result of type `C`.\n * The result is obtained by first applying the `ab` function to `a` and then applying the `bc` function to the result of `ab`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { compose } from \"effect/Function\"\n *\n * const increment = (n: number) => n + 1;\n * const square = (n: number) => n * n;\n *\n * assert.strictEqual(compose(increment, square)(2), 9);\n * ```\n *\n * @since 2.0.0\n */\nexport const compose = /*#__PURE__*/dual(2, (ab, bc) => a => bc(ab(a)));\n/**\n * The `absurd` function is a stub for cases where a value of type `never` is encountered in your code,\n * meaning that it should be impossible for this code to be executed.\n *\n * This function is particularly useful when it's necessary to specify that certain cases are impossible.\n *\n * @since 2.0.0\n */\nexport const absurd = _ => {\n  throw new Error(\"Called `absurd` function which should be uncallable\");\n};\n/**\n * Creates a   version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { tupled } from \"effect/Function\"\n *\n * const sumTupled = tupled((x: number, y: number): number => x + y)\n *\n * assert.deepStrictEqual(sumTupled([1, 2]), 3)\n * ```\n *\n * @since 2.0.0\n */\nexport const tupled = f => a => f(...a);\n/**\n * Inverse function of `tupled`\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { untupled } from \"effect/Function\"\n *\n * const getFirst = untupled(<A, B>(tuple: [A, B]): A => tuple[0])\n *\n * assert.deepStrictEqual(getFirst(1, 2), 1)\n * ```\n *\n * @since 2.0.0\n */\nexport const untupled = f => (...a) => f(a);\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n  switch (arguments.length) {\n    case 1:\n      return a;\n    case 2:\n      return ab(a);\n    case 3:\n      return bc(ab(a));\n    case 4:\n      return cd(bc(ab(a)));\n    case 5:\n      return de(cd(bc(ab(a))));\n    case 6:\n      return ef(de(cd(bc(ab(a)))));\n    case 7:\n      return fg(ef(de(cd(bc(ab(a))))));\n    case 8:\n      return gh(fg(ef(de(cd(bc(ab(a)))))));\n    case 9:\n      return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n    default:\n      {\n        let ret = arguments[0];\n        for (let i = 1; i < arguments.length; i++) {\n          ret = arguments[i](ret);\n        }\n        return ret;\n      }\n  }\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n  switch (arguments.length) {\n    case 1:\n      return ab;\n    case 2:\n      return function () {\n        return bc(ab.apply(this, arguments));\n      };\n    case 3:\n      return function () {\n        return cd(bc(ab.apply(this, arguments)));\n      };\n    case 4:\n      return function () {\n        return de(cd(bc(ab.apply(this, arguments))));\n      };\n    case 5:\n      return function () {\n        return ef(de(cd(bc(ab.apply(this, arguments)))));\n      };\n    case 6:\n      return function () {\n        return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n      };\n    case 7:\n      return function () {\n        return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n      };\n    case 8:\n      return function () {\n        return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n      };\n    case 9:\n      return function () {\n        return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n      };\n  }\n  return;\n}\n/**\n * Type hole simulation.\n *\n * @since 2.0.0\n */\nexport const hole = /*#__PURE__*/unsafeCoerce(absurd);\n/**\n * The SK combinator, also known as the \"S-K combinator\" or \"S-combinator\", is a fundamental combinator in the\n * lambda calculus and the SKI combinator calculus.\n *\n * This function is useful for discarding the first argument passed to it and returning the second argument.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { SK } from \"effect/Function\";\n *\n * assert.deepStrictEqual(SK(0, \"hello\"), \"hello\")\n * ```\n *\n * @since 2.0.0\n */\nexport const SK = (_, b) => b;\n//# sourceMappingURL=Function.js.map","/**\n * This module provides an implementation of the `Equivalence` type class, which defines a binary relation\n * that is reflexive, symmetric, and transitive. In other words, it defines a notion of equivalence between values of a certain type.\n * These properties are also known in mathematics as an \"equivalence relation\".\n *\n * @since 2.0.0\n */\nimport { dual } from \"./Function.js\";\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const make = isEquivalent => (self, that) => self === that || isEquivalent(self, that);\nconst isStrictEquivalent = (x, y) => x === y;\n/**\n * Return an `Equivalence` that uses strict equality (===) to compare values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const strict = () => isStrictEquivalent;\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const string = /*#__PURE__*/strict();\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const number = /*#__PURE__*/strict();\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const boolean = /*#__PURE__*/strict();\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const bigint = /*#__PURE__*/strict();\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const symbol = /*#__PURE__*/strict();\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combine = /*#__PURE__*/dual(2, (self, that) => make((x, y) => self(x, y) && that(x, y)));\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineMany = /*#__PURE__*/dual(2, (self, collection) => make((x, y) => {\n  if (!self(x, y)) {\n    return false;\n  }\n  for (const equivalence of collection) {\n    if (!equivalence(x, y)) {\n      return false;\n    }\n  }\n  return true;\n}));\nconst isAlwaysEquivalent = (_x, _y) => true;\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineAll = collection => combineMany(isAlwaysEquivalent, collection);\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const mapInput = /*#__PURE__*/dual(2, (self, f) => make((x, y) => self(f(x), f(y))));\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Date = /*#__PURE__*/mapInput(number, date => date.getTime());\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const product = /*#__PURE__*/dual(2, (self, that) => make(([xa, xb], [ya, yb]) => self(xa, ya) && that(xb, yb)));\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const all = collection => {\n  return make((x, y) => {\n    const len = Math.min(x.length, y.length);\n    let collectionLength = 0;\n    for (const equivalence of collection) {\n      if (collectionLength >= len) {\n        break;\n      }\n      if (!equivalence(x[collectionLength], y[collectionLength])) {\n        return false;\n      }\n      collectionLength++;\n    }\n    return true;\n  });\n};\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const productMany = (self, collection) => {\n  const equivalence = all(collection);\n  return make((x, y) => !self(x[0], y[0]) ? false : equivalence(x.slice(1), y.slice(1)));\n};\n/**\n * Similar to `Promise.all` but operates on `Equivalence`s.\n *\n * ```ts skip-type-checking\n * [Equivalence<A>, Equivalence<B>, ...] -> Equivalence<[A, B, ...]>\n * ```\n *\n * Given a tuple of `Equivalence`s returns a new `Equivalence` that compares values of a tuple\n * by applying each `Equivalence` to the corresponding element of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const tuple = (...elements) => all(elements);\n/**\n * Creates a new `Equivalence` for an array of values based on a given `Equivalence` for the elements of the array.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const array = item => make((self, that) => {\n  if (self.length !== that.length) {\n    return false;\n  }\n  for (let i = 0; i < self.length; i++) {\n    const isEq = item(self[i], that[i]);\n    if (!isEq) {\n      return false;\n    }\n  }\n  return true;\n});\n/**\n * Given a struct of `Equivalence`s returns a new `Equivalence` that compares values of a struct\n * by applying each `Equivalence` to the corresponding property of the struct.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const struct = fields => {\n  const keys = Object.keys(fields);\n  return make((self, that) => {\n    for (const key of keys) {\n      if (!fields[key](self[key], that[key])) {\n        return false;\n      }\n    }\n    return true;\n  });\n};\n//# sourceMappingURL=Equivalence.js.map","let moduleVersion = \"3.15.1\";\nexport const getCurrentVersion = () => moduleVersion;\nexport const setCurrentVersion = version => {\n  moduleVersion = version;\n};\n//# sourceMappingURL=version.js.map","/**\n * The `GlobalValue` module ensures that a single instance of a value is created globally,\n * even when modules are imported multiple times (e.g., due to mixing CommonJS and ESM builds)\n * or during hot-reloading in development environments like Next.js or Remix.\n *\n * It achieves this by using a versioned global store, identified by a unique `Symbol` tied to\n * the current version of the `effect` library. The store holds values that are keyed by an identifier,\n * allowing the reuse of previously computed instances across imports or reloads.\n *\n * This pattern is particularly useful in scenarios where frequent reloading can cause services or\n * single-instance objects to be recreated unnecessarily, such as in development environments with hot-reloading.\n *\n * @since 2.0.0\n */\nimport * as version from \"./internal/version.js\";\nconst globalStoreId = `effect/GlobalValue/globalStoreId/${/*#__PURE__*/version.getCurrentVersion()}`;\nlet globalStore;\n/**\n * Retrieves or computes a global value associated with the given `id`. If the value for this `id`\n * has already been computed, it will be returned from the global store. If it does not exist yet,\n * the provided `compute` function will be executed to compute the value, store it, and then return it.\n *\n * This ensures that even in cases where the module is imported multiple times (e.g., in mixed environments\n * like CommonJS and ESM, or during hot-reloading in development), the value is computed only once and reused\n * thereafter.\n *\n * @example\n * ```ts\n * import { globalValue } from \"effect/GlobalValue\"\n *\n * // This cache will persist as long as the module is running,\n * // even if reloaded or imported elsewhere\n * const myCache = globalValue(\n *   Symbol.for(\"myCache\"),\n *   () => new WeakMap<object, number>()\n * )\n * ```\n *\n * @since 2.0.0\n */\nexport const globalValue = (id, compute) => {\n  if (!globalStore) {\n    // @ts-expect-error\n    globalThis[globalStoreId] ??= new Map();\n    // @ts-expect-error\n    globalStore = globalThis[globalStoreId];\n  }\n  if (!globalStore.has(id)) {\n    globalStore.set(id, compute());\n  }\n  return globalStore.get(id);\n};\n//# sourceMappingURL=GlobalValue.js.map","/**\n * @since 2.0.0\n */\nimport { dual, isFunction as isFunction_ } from \"./Function.js\";\n/**\n * Given a `Predicate<A>` returns a `Predicate<B>`\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate, Number } from \"effect\"\n *\n * const minLength3 = Predicate.mapInput(Number.greaterThan(2), (s: string) => s.length)\n *\n * assert.deepStrictEqual(minLength3(\"a\"), false)\n * assert.deepStrictEqual(minLength3(\"aa\"), false)\n * assert.deepStrictEqual(minLength3(\"aaa\"), true)\n * assert.deepStrictEqual(minLength3(\"aaaa\"), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const mapInput = /*#__PURE__*/dual(2, (self, f) => b => self(f(b)));\n/**\n * Determine if an `Array` is a tuple with exactly `N` elements, narrowing down the type to `TupleOf`.\n *\n * An `Array` is considered to be a `TupleOf` if its length is exactly `N`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTupleOf } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 3), true);\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 2), false);\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 4), false);\n *\n * const arr: number[] = [1, 2, 3];\n * if (isTupleOf(arr, 3)) {\n *   console.log(arr);\n *   // ^? [number, number, number]\n * }\n * ```\n *\n * @category guards\n * @since 3.3.0\n */\nexport const isTupleOf = /*#__PURE__*/dual(2, (self, n) => self.length === n);\n/**\n * Determine if an `Array` is a tuple with at least `N` elements, narrowing down the type to `TupleOfAtLeast`.\n *\n * An `Array` is considered to be a `TupleOfAtLeast` if its length is at least `N`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTupleOfAtLeast } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 3), true);\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 2), true);\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 4), false);\n *\n * const arr: number[] = [1, 2, 3, 4];\n * if (isTupleOfAtLeast(arr, 3)) {\n *   console.log(arr);\n *   // ^? [number, number, number, ...number[]]\n * }\n * ```\n *\n * @category guards\n * @since 3.3.0\n */\nexport const isTupleOfAtLeast = /*#__PURE__*/dual(2, (self, n) => self.length >= n);\n/**\n * Tests if a value is `truthy`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTruthy } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTruthy(1), true)\n * assert.deepStrictEqual(isTruthy(0), false)\n * assert.deepStrictEqual(isTruthy(\"\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isTruthy = input => !!input;\n/**\n * Tests if a value is a `Set`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isSet } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isSet(new Set([1, 2])), true)\n * assert.deepStrictEqual(isSet(new Set()), true)\n * assert.deepStrictEqual(isSet({}), false)\n * assert.deepStrictEqual(isSet(null), false)\n * assert.deepStrictEqual(isSet(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isSet = input => input instanceof Set;\n/**\n * Tests if a value is a `Map`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isMap } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isMap(new Map()), true)\n * assert.deepStrictEqual(isMap({}), false)\n * assert.deepStrictEqual(isMap(null), false)\n * assert.deepStrictEqual(isMap(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isMap = input => input instanceof Map;\n/**\n * Tests if a value is a `string`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isString } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isString(\"a\"), true)\n *\n * assert.deepStrictEqual(isString(1), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isString = input => typeof input === \"string\";\n/**\n * Tests if a value is a `number`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNumber } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNumber(2), true)\n *\n * assert.deepStrictEqual(isNumber(\"2\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNumber = input => typeof input === \"number\";\n/**\n * Tests if a value is a `boolean`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isBoolean } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isBoolean(true), true)\n *\n * assert.deepStrictEqual(isBoolean(\"true\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isBoolean = input => typeof input === \"boolean\";\n/**\n * Tests if a value is a `bigint`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isBigInt } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isBigInt(1n), true)\n *\n * assert.deepStrictEqual(isBigInt(1), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isBigInt = input => typeof input === \"bigint\";\n/**\n * Tests if a value is a `symbol`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isSymbol } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isSymbol(Symbol.for(\"a\")), true)\n *\n * assert.deepStrictEqual(isSymbol(\"a\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isSymbol = input => typeof input === \"symbol\";\n// TODO: make public\n/** @internal */\nexport const isPropertyKey = u => isString(u) || isNumber(u) || isSymbol(u);\n/**\n * Tests if a value is a `function`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isFunction } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isFunction(isFunction), true)\n *\n * assert.deepStrictEqual(isFunction(\"function\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isFunction = isFunction_;\n/**\n * Tests if a value is `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isUndefined } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUndefined(undefined), true)\n *\n * assert.deepStrictEqual(isUndefined(null), false)\n * assert.deepStrictEqual(isUndefined(\"undefined\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isUndefined = input => input === undefined;\n/**\n * Tests if a value is not `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNotUndefined } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotUndefined(null), true)\n * assert.deepStrictEqual(isNotUndefined(\"undefined\"), true)\n *\n * assert.deepStrictEqual(isNotUndefined(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNotUndefined = input => input !== undefined;\n/**\n * Tests if a value is `null`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNull } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNull(null), true)\n *\n * assert.deepStrictEqual(isNull(undefined), false)\n * assert.deepStrictEqual(isNull(\"null\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNull = input => input === null;\n/**\n * Tests if a value is not `null`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNotNull } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotNull(undefined), true)\n * assert.deepStrictEqual(isNotNull(\"null\"), true)\n *\n * assert.deepStrictEqual(isNotNull(null), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNotNull = input => input !== null;\n/**\n * A guard that always fails.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNever } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNever(null), false)\n * assert.deepStrictEqual(isNever(undefined), false)\n * assert.deepStrictEqual(isNever({}), false)\n * assert.deepStrictEqual(isNever([]), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNever = _ => false;\n/**\n * A guard that always succeeds.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isUnknown } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUnknown(null), true)\n * assert.deepStrictEqual(isUnknown(undefined), true)\n *\n * assert.deepStrictEqual(isUnknown({}), true)\n * assert.deepStrictEqual(isUnknown([]), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isUnknown = _ => true;\n/** @internal */\nexport const isRecordOrArray = input => typeof input === \"object\" && input !== null;\n/**\n * Tests if a value is an `object`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isObject } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isObject({}), true)\n * assert.deepStrictEqual(isObject([]), true)\n *\n * assert.deepStrictEqual(isObject(null), false)\n * assert.deepStrictEqual(isObject(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isObject = input => isRecordOrArray(input) || isFunction(input);\n/**\n * Checks whether a value is an `object` containing a specified property key.\n *\n * @category guards\n * @since 2.0.0\n */\nexport const hasProperty = /*#__PURE__*/dual(2, (self, property) => isObject(self) && property in self);\n/**\n * Tests if a value is an `object` with a property `_tag` that matches the given tag.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTagged } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTagged(1, \"a\"), false)\n * assert.deepStrictEqual(isTagged(null, \"a\"), false)\n * assert.deepStrictEqual(isTagged({}, \"a\"), false)\n * assert.deepStrictEqual(isTagged({ a: \"a\" }, \"a\"), false)\n * assert.deepStrictEqual(isTagged({ _tag: \"a\" }, \"a\"), true)\n * assert.deepStrictEqual(isTagged(\"a\")({ _tag: \"a\" }), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isTagged = /*#__PURE__*/dual(2, (self, tag) => hasProperty(self, \"_tag\") && self[\"_tag\"] === tag);\n/**\n * A guard that succeeds when the input is `null` or `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNullable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNullable(null), true)\n * assert.deepStrictEqual(isNullable(undefined), true)\n *\n * assert.deepStrictEqual(isNullable({}), false)\n * assert.deepStrictEqual(isNullable([]), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNullable = input => input === null || input === undefined;\n/**\n * A guard that succeeds when the input is not `null` or `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNotNullable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotNullable({}), true)\n * assert.deepStrictEqual(isNotNullable([]), true)\n *\n * assert.deepStrictEqual(isNotNullable(null), false)\n * assert.deepStrictEqual(isNotNullable(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNotNullable = input => input !== null && input !== undefined;\n/**\n * A guard that succeeds when the input is an `Error`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isError } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isError(new Error()), true)\n *\n * assert.deepStrictEqual(isError(null), false)\n * assert.deepStrictEqual(isError({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isError = input => input instanceof Error;\n/**\n * A guard that succeeds when the input is a `Uint8Array`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isUint8Array } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUint8Array(new Uint8Array()), true)\n *\n * assert.deepStrictEqual(isUint8Array(null), false)\n * assert.deepStrictEqual(isUint8Array({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isUint8Array = input => input instanceof Uint8Array;\n/**\n * A guard that succeeds when the input is a `Date`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isDate } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isDate(new Date()), true)\n *\n * assert.deepStrictEqual(isDate(null), false)\n * assert.deepStrictEqual(isDate({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isDate = input => input instanceof Date;\n/**\n * A guard that succeeds when the input is an `Iterable`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isIterable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isIterable([]), true)\n * assert.deepStrictEqual(isIterable(new Set()), true)\n *\n * assert.deepStrictEqual(isIterable(null), false)\n * assert.deepStrictEqual(isIterable({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isIterable = input => hasProperty(input, Symbol.iterator);\n/**\n * A guard that succeeds when the input is a record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isRecord } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isRecord({}), true)\n * assert.deepStrictEqual(isRecord({ a: 1 }), true)\n *\n * assert.deepStrictEqual(isRecord([]), false)\n * assert.deepStrictEqual(isRecord([1, 2, 3]), false)\n * assert.deepStrictEqual(isRecord(null), false)\n * assert.deepStrictEqual(isRecord(undefined), false)\n * assert.deepStrictEqual(isRecord(() => null), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isRecord = input => isRecordOrArray(input) && !Array.isArray(input);\n/**\n * A guard that succeeds when the input is a readonly record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isReadonlyRecord } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isReadonlyRecord({}), true)\n * assert.deepStrictEqual(isReadonlyRecord({ a: 1 }), true)\n *\n * assert.deepStrictEqual(isReadonlyRecord([]), false)\n * assert.deepStrictEqual(isReadonlyRecord([1, 2, 3]), false)\n * assert.deepStrictEqual(isReadonlyRecord(null), false)\n * assert.deepStrictEqual(isReadonlyRecord(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isReadonlyRecord = isRecord;\n/**\n * A guard that succeeds when the input is a Promise.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isPromise } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isPromise({}), false)\n * assert.deepStrictEqual(isPromise(Promise.resolve(\"hello\")), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isPromise = input => hasProperty(input, \"then\") && \"catch\" in input && isFunction(input.then) && isFunction(input.catch);\n/**\n * @category guards\n * @since 2.0.0\n */\nexport const isPromiseLike = input => hasProperty(input, \"then\") && isFunction(input.then);\n/**\n * Tests if a value is a `RegExp`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate } from \"effect\"\n *\n * assert.deepStrictEqual(Predicate.isRegExp(/a/), true)\n * assert.deepStrictEqual(Predicate.isRegExp(\"a\"), false)\n * ```\n *\n * @category guards\n * @since 3.9.0\n */\nexport const isRegExp = input => input instanceof RegExp;\n/**\n * @since 2.0.0\n */\nexport const compose = /*#__PURE__*/dual(2, (ab, bc) => a => ab(a) && bc(a));\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const product = (self, that) => ([a, b]) => self(a) && that(b);\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const all = collection => {\n  return as => {\n    let collectionIndex = 0;\n    for (const p of collection) {\n      if (collectionIndex >= as.length) {\n        break;\n      }\n      if (p(as[collectionIndex]) === false) {\n        return false;\n      }\n      collectionIndex++;\n    }\n    return true;\n  };\n};\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const productMany = (self, collection) => {\n  const rest = all(collection);\n  return ([head, ...tail]) => self(head) === false ? false : rest(tail);\n};\n/**\n * Similar to `Promise.all` but operates on `Predicate`s.\n *\n * ```ts skip-type-checking\n * [Refinement<A, B>, Refinement<C, D>, ...] -> Refinement<[A, C, ...], [B, D, ...]>\n * [Predicate<A>, Predicate<B>, ...] -> Predicate<[A, B, ...]>\n * [Refinement<A, B>, Predicate<C>, ...] -> Refinement<[A, C, ...], [B, C, ...]>\n * ```\n *\n * @since 2.0.0\n */\nexport const tuple = (...elements) => all(elements);\n/**\n * ```ts skip-type-checking\n * { ab: Refinement<A, B>; cd: Refinement<C, D>, ... } -> Refinement<{ ab: A; cd: C; ... }, { ab: B; cd: D; ... }>\n * { a: Predicate<A, B>; b: Predicate<B>, ... } -> Predicate<{ a: A; b: B; ... }>\n * { ab: Refinement<A, B>; c: Predicate<C>, ... } -> Refinement<{ ab: A; c: C; ... }, { ab: B; c: С; ... }>\n * ```\n *\n * @since 2.0.0\n */\nexport const struct = fields => {\n  const keys = Object.keys(fields);\n  return a => {\n    for (const key of keys) {\n      if (!fields[key](a[key])) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\n/**\n * Negates the result of a given predicate.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate, Number } from \"effect\"\n *\n * const isPositive = Predicate.not(Number.lessThan(0))\n *\n * assert.deepStrictEqual(isPositive(-1), false)\n * assert.deepStrictEqual(isPositive(0), true)\n * assert.deepStrictEqual(isPositive(1), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const not = self => a => !self(a);\n/**\n * Combines two predicates into a new predicate that returns `true` if at least one of the predicates returns `true`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate, Number } from \"effect\"\n *\n * const nonZero = Predicate.or(Number.lessThan(0), Number.greaterThan(0))\n *\n * assert.deepStrictEqual(nonZero(-1), true)\n * assert.deepStrictEqual(nonZero(0), false)\n * assert.deepStrictEqual(nonZero(1), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const or = /*#__PURE__*/dual(2, (self, that) => a => self(a) || that(a));\n/**\n * Combines two predicates into a new predicate that returns `true` if both of the predicates returns `true`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate } from \"effect\"\n *\n * const minLength = (n: number) => (s: string) => s.length >= n\n * const maxLength = (n: number) => (s: string) => s.length <= n\n *\n * const length = (n: number) => Predicate.and(minLength(n), maxLength(n))\n *\n * assert.deepStrictEqual(length(2)(\"aa\"), true)\n * assert.deepStrictEqual(length(2)(\"a\"), false)\n * assert.deepStrictEqual(length(2)(\"aaa\"), false)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const and = /*#__PURE__*/dual(2, (self, that) => a => self(a) && that(a));\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const xor = /*#__PURE__*/dual(2, (self, that) => a => self(a) !== that(a));\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const eqv = /*#__PURE__*/dual(2, (self, that) => a => self(a) === that(a));\n/**\n * Represents the logical implication combinator for predicates. In formal\n * logic, the implication operator `->` denotes that if the first proposition\n * (antecedent) is true, then the second proposition (consequent) must also be\n * true. In simpler terms, `p implies q` can be interpreted as \"if p then q\". If\n * the first predicate holds, then the second predicate must hold\n * for the given context.\n *\n * In practical terms within TypeScript, `p implies q` is equivalent to `!p || (p && q)`.\n *\n * Note that if the antecedent is `false`, the result is `true` by default\n * because the outcome of the consequent cannot be determined.\n *\n * This function is useful in situations where you need to enforce rules or\n * constraints that are contingent on certain conditions.\n * It proves especially helpful in defining property tests.\n *\n * The example below illustrates the transitive property of order using the\n * `implies` function. In simple terms, if `a <= b` and `b <= c`, then `a <= c`\n * must be true.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate } from \"effect\"\n *\n * type Triple = {\n *   readonly a: number\n *   readonly b: number\n *   readonly c: number\n * }\n *\n * const transitivity = Predicate.implies(\n *   // antecedent\n *   (input: Triple) => input.a <= input.b && input.b <= input.c,\n *   // consequent\n *   (input: Triple) => input.a <= input.c\n * )\n *\n * assert.equal(transitivity({ a: 1, b: 2, c: 3 }), true)\n * // antecedent is `false`, so the result is `true`\n * assert.equal(transitivity({ a: 1, b: 0, c: 0 }), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const implies = /*#__PURE__*/dual(2, (antecedent, consequent) => a => antecedent(a) ? consequent(a) : true);\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const nor = /*#__PURE__*/dual(2, (self, that) => a => !(self(a) || that(a)));\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const nand = /*#__PURE__*/dual(2, (self, that) => a => !(self(a) && that(a)));\n/**\n * @category elements\n * @since 2.0.0\n */\nexport const every = collection => a => {\n  for (const p of collection) {\n    if (!p(a)) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * @category elements\n * @since 2.0.0\n */\nexport const some = collection => a => {\n  for (const p of collection) {\n    if (p(a)) {\n      return true;\n    }\n  }\n  return false;\n};\n//# sourceMappingURL=Predicate.js.map","/**\n * @since 2.0.0\n */\n/** @internal */\nexport const getBugErrorMessage = message => `BUG: ${message} - please report an issue at https://github.com/Effect-TS/effect/issues`;\n//# sourceMappingURL=errors.js.map","/**\n * @since 2.0.0\n */\nimport { identity } from \"./Function.js\";\nimport { globalValue } from \"./GlobalValue.js\";\nimport { getBugErrorMessage } from \"./internal/errors.js\";\nimport { isNullable, isObject } from \"./Predicate.js\";\n/*\n * Copyright 2014 Thom Chiovoloni, released under the MIT license.\n *\n * A random number generator based on the basic implementation of the PCG algorithm,\n * as described here: http://www.pcg-random.org/\n *\n * Adapted for TypeScript from Thom's original code at https://github.com/thomcc/pcg-random\n *\n * forked from https://github.com/frptools\n *\n * @since 2.0.0\n */\n/**\n * @category symbols\n * @since 2.0.0\n */\nexport const GenKindTypeId = /*#__PURE__*/Symbol.for(\"effect/Gen/GenKind\");\n/**\n * @category predicates\n * @since 3.0.6\n */\nexport const isGenKind = u => isObject(u) && GenKindTypeId in u;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport class GenKindImpl {\n  value;\n  constructor(\n  /**\n   * @since 2.0.0\n   */\n  value) {\n    this.value = value;\n  }\n  /**\n   * @since 2.0.0\n   */\n  get _F() {\n    return identity;\n  }\n  /**\n   * @since 2.0.0\n   */\n  get _R() {\n    return _ => _;\n  }\n  /**\n   * @since 2.0.0\n   */\n  get _O() {\n    return _ => _;\n  }\n  /**\n   * @since 2.0.0\n   */\n  get _E() {\n    return _ => _;\n  }\n  /**\n   * @since 2.0.0\n   */\n  [GenKindTypeId] = GenKindTypeId;\n  /**\n   * @since 2.0.0\n   */\n  [Symbol.iterator]() {\n    return new SingleShotGen(this);\n  }\n}\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport class SingleShotGen {\n  self;\n  called = false;\n  constructor(self) {\n    this.self = self;\n  }\n  /**\n   * @since 2.0.0\n   */\n  next(a) {\n    return this.called ? {\n      value: a,\n      done: true\n    } : (this.called = true, {\n      value: this.self,\n      done: false\n    });\n  }\n  /**\n   * @since 2.0.0\n   */\n  return(a) {\n    return {\n      value: a,\n      done: true\n    };\n  }\n  /**\n   * @since 2.0.0\n   */\n  throw(e) {\n    throw e;\n  }\n  /**\n   * @since 2.0.0\n   */\n  [Symbol.iterator]() {\n    return new SingleShotGen(this.self);\n  }\n}\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const makeGenKind = kind => new GenKindImpl(kind);\n/**\n * @category adapters\n * @since 2.0.0\n */\nexport const adapter = () => function () {\n  let x = arguments[0];\n  for (let i = 1; i < arguments.length; i++) {\n    x = arguments[i](x);\n  }\n  return new GenKindImpl(x);\n};\nconst defaultIncHi = 0x14057b7e;\nconst defaultIncLo = 0xf767814f;\nconst MUL_HI = 0x5851f42d >>> 0;\nconst MUL_LO = 0x4c957f2d >>> 0;\nconst BIT_53 = 9007199254740992.0;\nconst BIT_27 = 134217728.0;\n/**\n * PCG is a family of simple fast space-efficient statistically good algorithms\n * for random number generation. Unlike many general-purpose RNGs, they are also\n * hard to predict.\n *\n * @category model\n * @since 2.0.0\n */\nexport class PCGRandom {\n  _state;\n  constructor(seedHi, seedLo, incHi, incLo) {\n    if (isNullable(seedLo) && isNullable(seedHi)) {\n      seedLo = Math.random() * 0xffffffff >>> 0;\n      seedHi = 0;\n    } else if (isNullable(seedLo)) {\n      seedLo = seedHi;\n      seedHi = 0;\n    }\n    if (isNullable(incLo) && isNullable(incHi)) {\n      incLo = this._state ? this._state[3] : defaultIncLo;\n      incHi = this._state ? this._state[2] : defaultIncHi;\n    } else if (isNullable(incLo)) {\n      incLo = incHi;\n      incHi = 0;\n    }\n    this._state = new Int32Array([0, 0, incHi >>> 0, ((incLo || 0) | 1) >>> 0]);\n    this._next();\n    add64(this._state, this._state[0], this._state[1], seedHi >>> 0, seedLo >>> 0);\n    this._next();\n    return this;\n  }\n  /**\n   * Returns a copy of the internal state of this random number generator as a\n   * JavaScript Array.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  getState() {\n    return [this._state[0], this._state[1], this._state[2], this._state[3]];\n  }\n  /**\n   * Restore state previously retrieved using `getState()`.\n   *\n   * @since 2.0.0\n   */\n  setState(state) {\n    this._state[0] = state[0];\n    this._state[1] = state[1];\n    this._state[2] = state[2];\n    this._state[3] = state[3] | 1;\n  }\n  /**\n   * Get a uniformly distributed 32 bit integer between [0, max).\n   *\n   * @category getter\n   * @since 2.0.0\n   */\n  integer(max) {\n    return Math.round(this.number() * Number.MAX_SAFE_INTEGER) % max;\n  }\n  /**\n   * Get a uniformly distributed IEEE-754 double between 0.0 and 1.0, with\n   * 53 bits of precision (every bit of the mantissa is randomized).\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  number() {\n    const hi = (this._next() & 0x03ffffff) * 1.0;\n    const lo = (this._next() & 0x07ffffff) * 1.0;\n    return (hi * BIT_27 + lo) / BIT_53;\n  }\n  /** @internal */\n  _next() {\n    // save current state (what we'll use for this number)\n    const oldHi = this._state[0] >>> 0;\n    const oldLo = this._state[1] >>> 0;\n    // churn LCG.\n    mul64(this._state, oldHi, oldLo, MUL_HI, MUL_LO);\n    add64(this._state, this._state[0], this._state[1], this._state[2], this._state[3]);\n    // get least sig. 32 bits of ((oldstate >> 18) ^ oldstate) >> 27\n    let xsHi = oldHi >>> 18;\n    let xsLo = (oldLo >>> 18 | oldHi << 14) >>> 0;\n    xsHi = (xsHi ^ oldHi) >>> 0;\n    xsLo = (xsLo ^ oldLo) >>> 0;\n    const xorshifted = (xsLo >>> 27 | xsHi << 5) >>> 0;\n    // rotate xorshifted right a random amount, based on the most sig. 5 bits\n    // bits of the old state.\n    const rot = oldHi >>> 27;\n    const rot2 = (-rot >>> 0 & 31) >>> 0;\n    return (xorshifted >>> rot | xorshifted << rot2) >>> 0;\n  }\n}\nfunction mul64(out, aHi, aLo, bHi, bLo) {\n  let c1 = (aLo >>> 16) * (bLo & 0xffff) >>> 0;\n  let c0 = (aLo & 0xffff) * (bLo >>> 16) >>> 0;\n  let lo = (aLo & 0xffff) * (bLo & 0xffff) >>> 0;\n  let hi = (aLo >>> 16) * (bLo >>> 16) + ((c0 >>> 16) + (c1 >>> 16)) >>> 0;\n  c0 = c0 << 16 >>> 0;\n  lo = lo + c0 >>> 0;\n  if (lo >>> 0 < c0 >>> 0) {\n    hi = hi + 1 >>> 0;\n  }\n  c1 = c1 << 16 >>> 0;\n  lo = lo + c1 >>> 0;\n  if (lo >>> 0 < c1 >>> 0) {\n    hi = hi + 1 >>> 0;\n  }\n  hi = hi + Math.imul(aLo, bHi) >>> 0;\n  hi = hi + Math.imul(aHi, bLo) >>> 0;\n  out[0] = hi;\n  out[1] = lo;\n}\n// add two 64 bit numbers (given in parts), and store the result in `out`.\nfunction add64(out, aHi, aLo, bHi, bLo) {\n  let hi = aHi + bHi >>> 0;\n  const lo = aLo + bLo >>> 0;\n  if (lo >>> 0 < aLo >>> 0) {\n    hi = hi + 1 | 0;\n  }\n  out[0] = hi;\n  out[1] = lo;\n}\n/**\n * @since 3.0.6\n */\nexport const YieldWrapTypeId = /*#__PURE__*/Symbol.for(\"effect/Utils/YieldWrap\");\n/**\n * @since 3.0.6\n */\nexport class YieldWrap {\n  /**\n   * @since 3.0.6\n   */\n  #value;\n  constructor(value) {\n    this.#value = value;\n  }\n  /**\n   * @since 3.0.6\n   */\n  [YieldWrapTypeId]() {\n    return this.#value;\n  }\n}\n/**\n * @since 3.0.6\n */\nexport function yieldWrapGet(self) {\n  if (typeof self === \"object\" && self !== null && YieldWrapTypeId in self) {\n    return self[YieldWrapTypeId]();\n  }\n  throw new Error(getBugErrorMessage(\"yieldWrapGet\"));\n}\n/**\n * Note: this is an experimental feature made available to allow custom matchers in tests, not to be directly used yet in user code\n *\n * @since 3.1.1\n * @status experimental\n * @category modifiers\n */\nexport const structuralRegionState = /*#__PURE__*/globalValue(\"effect/Utils/isStructuralRegion\", () => ({\n  enabled: false,\n  tester: undefined\n}));\n/**\n * Note: this is an experimental feature made available to allow custom matchers in tests, not to be directly used yet in user code\n *\n * @since 3.1.1\n * @status experimental\n * @category modifiers\n */\nexport const structuralRegion = (body, tester) => {\n  const current = structuralRegionState.enabled;\n  const currentTester = structuralRegionState.tester;\n  structuralRegionState.enabled = true;\n  if (tester) {\n    structuralRegionState.tester = tester;\n  }\n  try {\n    return body();\n  } finally {\n    structuralRegionState.enabled = current;\n    structuralRegionState.tester = currentTester;\n  }\n};\nconst standard = {\n  effect_internal_function: body => {\n    return body();\n  }\n};\nconst forced = {\n  effect_internal_function: body => {\n    try {\n      return body();\n    } finally {\n      //\n    }\n  }\n};\nconst isNotOptimizedAway = /*#__PURE__*/standard.effect_internal_function(() => new Error().stack)?.includes(\"effect_internal_function\") === true;\n/**\n * @since 3.2.2\n * @status experimental\n * @category tracing\n */\nexport const internalCall = isNotOptimizedAway ? standard.effect_internal_function : forced.effect_internal_function;\nconst genConstructor = function* () {}.constructor;\n/**\n * @since 3.11.0\n */\nexport const isGeneratorFunction = u => isObject(u) && u.constructor === genConstructor;\n//# sourceMappingURL=Utils.js.map","/**\n * @since 2.0.0\n */\nimport { pipe } from \"./Function.js\";\nimport { globalValue } from \"./GlobalValue.js\";\nimport { hasProperty } from \"./Predicate.js\";\nimport { structuralRegionState } from \"./Utils.js\";\n/** @internal */\nconst randomHashCache = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Hash/randomHashCache\"), () => new WeakMap());\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const symbol = /*#__PURE__*/Symbol.for(\"effect/Hash\");\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const hash = self => {\n  if (structuralRegionState.enabled === true) {\n    return 0;\n  }\n  switch (typeof self) {\n    case \"number\":\n      return number(self);\n    case \"bigint\":\n      return string(self.toString(10));\n    case \"boolean\":\n      return string(String(self));\n    case \"symbol\":\n      return string(String(self));\n    case \"string\":\n      return string(self);\n    case \"undefined\":\n      return string(\"undefined\");\n    case \"function\":\n    case \"object\":\n      {\n        if (self === null) {\n          return string(\"null\");\n        } else if (self instanceof Date) {\n          return hash(self.toISOString());\n        } else if (self instanceof URL) {\n          return hash(self.href);\n        } else if (isHash(self)) {\n          return self[symbol]();\n        } else {\n          return random(self);\n        }\n      }\n    default:\n      throw new Error(`BUG: unhandled typeof ${typeof self} - please report an issue at https://github.com/Effect-TS/effect/issues`);\n  }\n};\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const random = self => {\n  if (!randomHashCache.has(self)) {\n    randomHashCache.set(self, number(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)));\n  }\n  return randomHashCache.get(self);\n};\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const combine = b => self => self * 53 ^ b;\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const optimize = n => n & 0xbfffffff | n >>> 1 & 0x40000000;\n/**\n * @since 2.0.0\n * @category guards\n */\nexport const isHash = u => hasProperty(u, symbol);\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const number = n => {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n  let h = n | 0;\n  if (h !== n) {\n    h ^= n * 0xffffffff;\n  }\n  while (n > 0xffffffff) {\n    h ^= n /= 0xffffffff;\n  }\n  return optimize(h);\n};\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const string = str => {\n  let h = 5381,\n    i = str.length;\n  while (i) {\n    h = h * 33 ^ str.charCodeAt(--i);\n  }\n  return optimize(h);\n};\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const structureKeys = (o, keys) => {\n  let h = 12289;\n  for (let i = 0; i < keys.length; i++) {\n    h ^= pipe(string(keys[i]), combine(hash(o[keys[i]])));\n  }\n  return optimize(h);\n};\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const structure = o => structureKeys(o, Object.keys(o));\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const array = arr => {\n  let h = 6151;\n  for (let i = 0; i < arr.length; i++) {\n    h = pipe(h, combine(hash(arr[i])));\n  }\n  return optimize(h);\n};\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const cached = function () {\n  if (arguments.length === 1) {\n    const self = arguments[0];\n    return function (hash) {\n      Object.defineProperty(self, symbol, {\n        value() {\n          return hash;\n        },\n        enumerable: false\n      });\n      return hash;\n    };\n  }\n  const self = arguments[0];\n  const hash = arguments[1];\n  Object.defineProperty(self, symbol, {\n    value() {\n      return hash;\n    },\n    enumerable: false\n  });\n  return hash;\n};\n//# sourceMappingURL=Hash.js.map","import * as Hash from \"./Hash.js\";\nimport { hasProperty } from \"./Predicate.js\";\nimport { structuralRegionState } from \"./Utils.js\";\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const symbol = /*#__PURE__*/Symbol.for(\"effect/Equal\");\nexport function equals() {\n  if (arguments.length === 1) {\n    return self => compareBoth(self, arguments[0]);\n  }\n  return compareBoth(arguments[0], arguments[1]);\n}\nfunction compareBoth(self, that) {\n  if (self === that) {\n    return true;\n  }\n  const selfType = typeof self;\n  if (selfType !== typeof that) {\n    return false;\n  }\n  if (selfType === \"object\" || selfType === \"function\") {\n    if (self !== null && that !== null) {\n      if (isEqual(self) && isEqual(that)) {\n        if (Hash.hash(self) === Hash.hash(that) && self[symbol](that)) {\n          return true;\n        } else {\n          return structuralRegionState.enabled && structuralRegionState.tester ? structuralRegionState.tester(self, that) : false;\n        }\n      } else if (self instanceof Date && that instanceof Date) {\n        return self.toISOString() === that.toISOString();\n      } else if (self instanceof URL && that instanceof URL) {\n        return self.href === that.href;\n      }\n    }\n    if (structuralRegionState.enabled) {\n      if (Array.isArray(self) && Array.isArray(that)) {\n        return self.length === that.length && self.every((v, i) => compareBoth(v, that[i]));\n      }\n      if (Object.getPrototypeOf(self) === Object.prototype && Object.getPrototypeOf(self) === Object.prototype) {\n        const keysSelf = Object.keys(self);\n        const keysThat = Object.keys(that);\n        if (keysSelf.length === keysThat.length) {\n          for (const key of keysSelf) {\n            // @ts-expect-error\n            if (!(key in that && compareBoth(self[key], that[key]))) {\n              return structuralRegionState.tester ? structuralRegionState.tester(self, that) : false;\n            }\n          }\n          return true;\n        }\n      }\n      return structuralRegionState.tester ? structuralRegionState.tester(self, that) : false;\n    }\n  }\n  return structuralRegionState.enabled && structuralRegionState.tester ? structuralRegionState.tester(self, that) : false;\n}\n/**\n * @since 2.0.0\n * @category guards\n */\nexport const isEqual = u => hasProperty(u, symbol);\n/**\n * @since 2.0.0\n * @category instances\n */\nexport const equivalence = () => equals;\n//# sourceMappingURL=Equal.js.map","import { globalValue } from \"./GlobalValue.js\";\nimport { hasProperty, isFunction } from \"./Predicate.js\";\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const NodeInspectSymbol = /*#__PURE__*/Symbol.for(\"nodejs.util.inspect.custom\");\n/**\n * @since 2.0.0\n */\nexport const toJSON = x => {\n  try {\n    if (hasProperty(x, \"toJSON\") && isFunction(x[\"toJSON\"]) && x[\"toJSON\"].length === 0) {\n      return x.toJSON();\n    } else if (Array.isArray(x)) {\n      return x.map(toJSON);\n    }\n  } catch (_) {\n    return {};\n  }\n  return redact(x);\n};\n/**\n * @since 2.0.0\n */\nexport const format = x => JSON.stringify(x, null, 2);\n/**\n * @since 2.0.0\n */\nexport const BaseProto = {\n  toJSON() {\n    return toJSON(this);\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  toString() {\n    return format(this.toJSON());\n  }\n};\n/**\n * @since 2.0.0\n */\nexport class Class {\n  /**\n   * @since 2.0.0\n   */\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n  /**\n   * @since 2.0.0\n   */\n  toString() {\n    return format(this.toJSON());\n  }\n}\n/**\n * @since 2.0.0\n */\nexport const toStringUnknown = (u, whitespace = 2) => {\n  if (typeof u === \"string\") {\n    return u;\n  }\n  try {\n    return typeof u === \"object\" ? stringifyCircular(u, whitespace) : String(u);\n  } catch (_) {\n    return String(u);\n  }\n};\n/**\n * @since 2.0.0\n */\nexport const stringifyCircular = (obj, whitespace) => {\n  let cache = [];\n  const retVal = JSON.stringify(obj, (_key, value) => typeof value === \"object\" && value !== null ? cache.includes(value) ? undefined // circular reference\n  : cache.push(value) && (redactableState.fiberRefs !== undefined && isRedactable(value) ? value[symbolRedactable](redactableState.fiberRefs) : value) : value, whitespace);\n  cache = undefined;\n  return retVal;\n};\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const symbolRedactable = /*#__PURE__*/Symbol.for(\"effect/Inspectable/Redactable\");\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const isRedactable = u => typeof u === \"object\" && u !== null && symbolRedactable in u;\nconst redactableState = /*#__PURE__*/globalValue(\"effect/Inspectable/redactableState\", () => ({\n  fiberRefs: undefined\n}));\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const withRedactableContext = (context, f) => {\n  const prev = redactableState.fiberRefs;\n  redactableState.fiberRefs = context;\n  try {\n    return f();\n  } finally {\n    redactableState.fiberRefs = prev;\n  }\n};\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const redact = u => {\n  if (isRedactable(u) && redactableState.fiberRefs !== undefined) {\n    return u[symbolRedactable](redactableState.fiberRefs);\n  }\n  return u;\n};\n//# sourceMappingURL=Inspectable.js.map","/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n */\nexport const pipeArguments = (self, args) => {\n  switch (args.length) {\n    case 0:\n      return self;\n    case 1:\n      return args[0](self);\n    case 2:\n      return args[1](args[0](self));\n    case 3:\n      return args[2](args[1](args[0](self)));\n    case 4:\n      return args[3](args[2](args[1](args[0](self))));\n    case 5:\n      return args[4](args[3](args[2](args[1](args[0](self)))));\n    case 6:\n      return args[5](args[4](args[3](args[2](args[1](args[0](self))))));\n    case 7:\n      return args[6](args[5](args[4](args[3](args[2](args[1](args[0](self)))))));\n    case 8:\n      return args[7](args[6](args[5](args[4](args[3](args[2](args[1](args[0](self))))))));\n    case 9:\n      return args[8](args[7](args[6](args[5](args[4](args[3](args[2](args[1](args[0](self)))))))));\n    default:\n      {\n        let ret = self;\n        for (let i = 0, len = args.length; i < len; i++) {\n          ret = args[i](ret);\n        }\n        return ret;\n      }\n  }\n};\n/**\n * @since 3.15.0\n * @category Prototypes\n */\nexport const Prototype = {\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst Base = /*#__PURE__*/function () {\n  function PipeableBase() {}\n  PipeableBase.prototype = Prototype;\n  return PipeableBase;\n}();\n/**\n * @since 3.15.0\n * @category Constructors\n */\nexport const Class = klass => klass ? class extends klass {\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n} : Base;\n//# sourceMappingURL=Pipeable.js.map","/** @internal */\nexport const OP_ASYNC = \"Async\";\n/** @internal */\nexport const OP_COMMIT = \"Commit\";\n/** @internal */\nexport const OP_FAILURE = \"Failure\";\n/** @internal */\nexport const OP_ON_FAILURE = \"OnFailure\";\n/** @internal */\nexport const OP_ON_SUCCESS = \"OnSuccess\";\n/** @internal */\nexport const OP_ON_SUCCESS_AND_FAILURE = \"OnSuccessAndFailure\";\n/** @internal */\nexport const OP_SUCCESS = \"Success\";\n/** @internal */\nexport const OP_SYNC = \"Sync\";\n/** @internal */\nexport const OP_TAG = \"Tag\";\n/** @internal */\nexport const OP_UPDATE_RUNTIME_FLAGS = \"UpdateRuntimeFlags\";\n/** @internal */\nexport const OP_WHILE = \"While\";\n/** @internal */\nexport const OP_ITERATOR = \"Iterator\";\n/** @internal */\nexport const OP_WITH_RUNTIME = \"WithRuntime\";\n/** @internal */\nexport const OP_YIELD = \"Yield\";\n/** @internal */\nexport const OP_REVERT_FLAGS = \"RevertFlags\";\n//# sourceMappingURL=effect.js.map","import * as Equal from \"../Equal.js\";\nimport * as Hash from \"../Hash.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport { SingleShotGen, YieldWrap } from \"../Utils.js\";\nimport * as OpCodes from \"./opCodes/effect.js\";\nimport * as version from \"./version.js\";\n/** @internal */\nexport const EffectTypeId = /*#__PURE__*/Symbol.for(\"effect/Effect\");\n/** @internal */\nexport const StreamTypeId = /*#__PURE__*/Symbol.for(\"effect/Stream\");\n/** @internal */\nexport const SinkTypeId = /*#__PURE__*/Symbol.for(\"effect/Sink\");\n/** @internal */\nexport const ChannelTypeId = /*#__PURE__*/Symbol.for(\"effect/Channel\");\n/** @internal */\nexport const effectVariance = {\n  /* c8 ignore next */\n  _R: _ => _,\n  /* c8 ignore next */\n  _E: _ => _,\n  /* c8 ignore next */\n  _A: _ => _,\n  _V: /*#__PURE__*/version.getCurrentVersion()\n};\nconst sinkVariance = {\n  /* c8 ignore next */\n  _A: _ => _,\n  /* c8 ignore next */\n  _In: _ => _,\n  /* c8 ignore next */\n  _L: _ => _,\n  /* c8 ignore next */\n  _E: _ => _,\n  /* c8 ignore next */\n  _R: _ => _\n};\nconst channelVariance = {\n  /* c8 ignore next */\n  _Env: _ => _,\n  /* c8 ignore next */\n  _InErr: _ => _,\n  /* c8 ignore next */\n  _InElem: _ => _,\n  /* c8 ignore next */\n  _InDone: _ => _,\n  /* c8 ignore next */\n  _OutErr: _ => _,\n  /* c8 ignore next */\n  _OutElem: _ => _,\n  /* c8 ignore next */\n  _OutDone: _ => _\n};\n/** @internal */\nexport const EffectPrototype = {\n  [EffectTypeId]: effectVariance,\n  [StreamTypeId]: effectVariance,\n  [SinkTypeId]: sinkVariance,\n  [ChannelTypeId]: channelVariance,\n  [Equal.symbol](that) {\n    return this === that;\n  },\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.random(this));\n  },\n  [Symbol.iterator]() {\n    return new SingleShotGen(new YieldWrap(this));\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const StructuralPrototype = {\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.structure(this));\n  },\n  [Equal.symbol](that) {\n    const selfKeys = Object.keys(this);\n    const thatKeys = Object.keys(that);\n    if (selfKeys.length !== thatKeys.length) {\n      return false;\n    }\n    for (const key of selfKeys) {\n      if (!(key in that && Equal.equals(this[key], that[key]))) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n/** @internal */\nexport const CommitPrototype = {\n  ...EffectPrototype,\n  _op: OpCodes.OP_COMMIT\n};\n/** @internal */\nexport const StructuralCommitPrototype = {\n  ...CommitPrototype,\n  ...StructuralPrototype\n};\n/** @internal */\nexport const Base = /*#__PURE__*/function () {\n  function Base() {}\n  Base.prototype = CommitPrototype;\n  return Base;\n}();\n/** @internal */\nexport const StructuralBase = /*#__PURE__*/function () {\n  function Base() {}\n  Base.prototype = StructuralCommitPrototype;\n  return Base;\n}();\n//# sourceMappingURL=effectable.js.map","/**\n * @since 2.0.0\n */\nimport * as Equal from \"../Equal.js\";\nimport * as Hash from \"../Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport { EffectPrototype } from \"./effectable.js\";\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Option\");\nconst CommonProto = {\n  ...EffectPrototype,\n  [TypeId]: {\n    _A: _ => _\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  toString() {\n    return format(this.toJSON());\n  }\n};\nconst SomeProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"Some\",\n  _op: \"Some\",\n  [Equal.symbol](that) {\n    return isOption(that) && isSome(that) && Equal.equals(this.value, that.value);\n  },\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.combine(Hash.hash(this._tag))(Hash.hash(this.value)));\n  },\n  toJSON() {\n    return {\n      _id: \"Option\",\n      _tag: this._tag,\n      value: toJSON(this.value)\n    };\n  }\n});\nconst NoneHash = /*#__PURE__*/Hash.hash(\"None\");\nconst NoneProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"None\",\n  _op: \"None\",\n  [Equal.symbol](that) {\n    return isOption(that) && isNone(that);\n  },\n  [Hash.symbol]() {\n    return NoneHash;\n  },\n  toJSON() {\n    return {\n      _id: \"Option\",\n      _tag: this._tag\n    };\n  }\n});\n/** @internal */\nexport const isOption = input => hasProperty(input, TypeId);\n/** @internal */\nexport const isNone = fa => fa._tag === \"None\";\n/** @internal */\nexport const isSome = fa => fa._tag === \"Some\";\n/** @internal */\nexport const none = /*#__PURE__*/Object.create(NoneProto);\n/** @internal */\nexport const some = value => {\n  const a = Object.create(SomeProto);\n  a.value = value;\n  return a;\n};\n//# sourceMappingURL=option.js.map","/**\n * @since 2.0.0\n */\nimport * as Equal from \"../Equal.js\";\nimport { dual } from \"../Function.js\";\nimport * as Hash from \"../Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport { EffectPrototype } from \"./effectable.js\";\nimport * as option from \"./option.js\";\n/**\n * @internal\n */\nexport const TypeId = /*#__PURE__*/Symbol.for(\"effect/Either\");\nconst CommonProto = {\n  ...EffectPrototype,\n  [TypeId]: {\n    _R: _ => _\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  toString() {\n    return format(this.toJSON());\n  }\n};\nconst RightProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"Right\",\n  _op: \"Right\",\n  [Equal.symbol](that) {\n    return isEither(that) && isRight(that) && Equal.equals(this.right, that.right);\n  },\n  [Hash.symbol]() {\n    return Hash.combine(Hash.hash(this._tag))(Hash.hash(this.right));\n  },\n  toJSON() {\n    return {\n      _id: \"Either\",\n      _tag: this._tag,\n      right: toJSON(this.right)\n    };\n  }\n});\nconst LeftProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"Left\",\n  _op: \"Left\",\n  [Equal.symbol](that) {\n    return isEither(that) && isLeft(that) && Equal.equals(this.left, that.left);\n  },\n  [Hash.symbol]() {\n    return Hash.combine(Hash.hash(this._tag))(Hash.hash(this.left));\n  },\n  toJSON() {\n    return {\n      _id: \"Either\",\n      _tag: this._tag,\n      left: toJSON(this.left)\n    };\n  }\n});\n/** @internal */\nexport const isEither = input => hasProperty(input, TypeId);\n/** @internal */\nexport const isLeft = ma => ma._tag === \"Left\";\n/** @internal */\nexport const isRight = ma => ma._tag === \"Right\";\n/** @internal */\nexport const left = left => {\n  const a = Object.create(LeftProto);\n  a.left = left;\n  return a;\n};\n/** @internal */\nexport const right = right => {\n  const a = Object.create(RightProto);\n  a.right = right;\n  return a;\n};\n/** @internal */\nexport const getLeft = self => isRight(self) ? option.none : option.some(self.left);\n/** @internal */\nexport const getRight = self => isLeft(self) ? option.none : option.some(self.right);\n/** @internal */\nexport const fromOption = /*#__PURE__*/dual(2, (self, onNone) => option.isNone(self) ? left(onNone()) : right(self.value));\n//# sourceMappingURL=either.js.map","/**\n * @since 2.0.0\n */\nimport * as Equivalence from \"./Equivalence.js\";\nimport { constNull, constUndefined, dual, identity } from \"./Function.js\";\nimport * as doNotation from \"./internal/doNotation.js\";\nimport * as either from \"./internal/either.js\";\nimport * as option_ from \"./internal/option.js\";\nimport { isFunction } from \"./Predicate.js\";\nimport * as Gen from \"./Utils.js\";\n/**\n * @category symbols\n * @since 2.0.0\n */\nexport const TypeId = either.TypeId;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const right = either.right;\nconst void_ = /*#__PURE__*/right(void 0);\nexport {\n/**\n * @category constructors\n * @since 3.13.0\n */\nvoid_ as void };\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const left = either.left;\n/**\n * Takes a lazy default and a nullable value, if the value is not nully (`null` or `undefined`), turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.fromNullable(1, () => 'fallback'), Either.right(1))\n * assert.deepStrictEqual(Either.fromNullable(null, () => 'fallback'), Either.left('fallback'))\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromNullable = /*#__PURE__*/dual(2, (self, onNullable) => self == null ? left(onNullable(self)) : right(self));\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Option } from \"effect\"\n *\n * assert.deepStrictEqual(Either.fromOption(Option.some(1), () => 'error'), Either.right(1))\n * assert.deepStrictEqual(Either.fromOption(Option.none(), () => 'error'), Either.left('error'))\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromOption = either.fromOption;\nconst try_ = evaluate => {\n  if (isFunction(evaluate)) {\n    try {\n      return right(evaluate());\n    } catch (e) {\n      return left(e);\n    }\n  } else {\n    try {\n      return right(evaluate.try());\n    } catch (e) {\n      return left(evaluate.catch(e));\n    }\n  }\n};\nexport {\n/**\n * Imports a synchronous side-effect into a pure `Either` value, translating any\n * thrown exceptions into typed failed eithers creating with `Either.left`.\n *\n * @category constructors\n * @since 2.0.0\n */\ntry_ as try };\n/**\n * Tests if a value is a `Either`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.isEither(Either.right(1)), true)\n * assert.deepStrictEqual(Either.isEither(Either.left(\"a\")), true)\n * assert.deepStrictEqual(Either.isEither({ right: 1 }), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEither = either.isEither;\n/**\n * Determine if a `Either` is a `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.isLeft(Either.right(1)), false)\n * assert.deepStrictEqual(Either.isLeft(Either.left(\"a\")), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isLeft = either.isLeft;\n/**\n * Determine if a `Either` is a `Right`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.isRight(Either.right(1)), true)\n * assert.deepStrictEqual(Either.isRight(Either.left(\"a\")), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isRight = either.isRight;\n/**\n * Converts a `Either` to an `Option` discarding the `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Option } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getRight(Either.right('ok')), Option.some('ok'))\n * assert.deepStrictEqual(Either.getRight(Either.left('err')), Option.none())\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getRight = either.getRight;\n/**\n * Converts a `Either` to an `Option` discarding the value.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Option } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getLeft(Either.right('ok')), Option.none())\n * assert.deepStrictEqual(Either.getLeft(Either.left('err')), Option.some('err'))\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getLeft = either.getLeft;\n/**\n * @category equivalence\n * @since 2.0.0\n */\nexport const getEquivalence = ({\n  left,\n  right\n}) => Equivalence.make((x, y) => isLeft(x) ? isLeft(y) && left(x.left, y.left) : isRight(y) && right(x.right, y.right));\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const mapBoth = /*#__PURE__*/dual(2, (self, {\n  onLeft,\n  onRight\n}) => isLeft(self) ? left(onLeft(self.left)) : right(onRight(self.right)));\n/**\n * Maps the `Left` side of an `Either` value to a new `Either` value.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapLeft = /*#__PURE__*/dual(2, (self, f) => isLeft(self) ? left(f(self.left)) : right(self.right));\n/**\n * Maps the `Right` side of an `Either` value to a new `Either` value.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => isRight(self) ? right(f(self.right)) : left(self.left));\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the `onLeft function,\n * if the value is a `Right` the inner value is applied to the `onRight` function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Either } from \"effect\"\n *\n * const onLeft  = (strings: ReadonlyArray<string>): string => `strings: ${strings.join(', ')}`\n *\n * const onRight = (value: number): string => `Ok: ${value}`\n *\n * assert.deepStrictEqual(pipe(Either.right(1), Either.match({ onLeft, onRight })), 'Ok: 1')\n * assert.deepStrictEqual(\n *   pipe(Either.left(['string 1', 'string 2']), Either.match({ onLeft, onRight })),\n *   'strings: string 1, string 2'\n * )\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const match = /*#__PURE__*/dual(2, (self, {\n  onLeft,\n  onRight\n}) => isLeft(self) ? onLeft(self.left) : onRight(self.right));\n/**\n * Transforms a `Predicate` function into a `Right` of the input value if the predicate returns `true`\n * or `Left` of the result of the provided function if the predicate returns false\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Either } from \"effect\"\n *\n * const isPositive = (n: number): boolean => n > 0\n * const isPositiveEither = Either.liftPredicate(isPositive, n => `${n} is not positive`)\n *\n * assert.deepStrictEqual(\n *   isPositiveEither(1),\n *   Either.right(1)\n * )\n * assert.deepStrictEqual(\n *   isPositiveEither(0),\n *   Either.left(\"0 is not positive\")\n * )\n * ```\n *\n * @category lifting\n * @since 3.4.0\n */\nexport const liftPredicate = /*#__PURE__*/dual(3, (a, predicate, orLeftWith) => predicate(a) ? right(a) : left(orLeftWith(a)));\n/**\n * Filter the right value with the provided function.\n * If the predicate fails, set the left value with the result of the provided function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Either } from \"effect\"\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     Either.right(1),\n *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n *   ),\n *   Either.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     Either.right(0),\n *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n *   ),\n *   Either.left(\"0 is not positive\")\n * )\n * ```\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nexport const filterOrLeft = /*#__PURE__*/dual(3, (self, predicate, orLeftWith) => flatMap(self, r => predicate(r) ? right(r) : left(orLeftWith(r))));\n/**\n * @category getters\n * @since 2.0.0\n */\nexport const merge = /*#__PURE__*/match({\n  onLeft: identity,\n  onRight: identity\n});\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrElse(Either.right(1), (error) => error + \"!\"), 1)\n * assert.deepStrictEqual(Either.getOrElse(Either.left(\"not a number\"), (error) => error + \"!\"), \"not a number!\")\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrElse = /*#__PURE__*/dual(2, (self, onLeft) => isLeft(self) ? onLeft(self.left) : self.right);\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrNull(Either.right(1)), 1)\n * assert.deepStrictEqual(Either.getOrNull(Either.left(\"a\")), null)\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrNull = /*#__PURE__*/getOrElse(constNull);\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrUndefined(Either.right(1)), 1)\n * assert.deepStrictEqual(Either.getOrUndefined(Either.left(\"a\")), undefined)\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrUndefined = /*#__PURE__*/getOrElse(constUndefined);\n/**\n * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n *\n * If a default error is sufficient for your use case and you don't need to configure the thrown error, see {@link getOrThrow}.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Either.getOrThrowWith(Either.right(1), () => new Error('Unexpected Left')),\n *   1\n * )\n * assert.throws(() => Either.getOrThrowWith(Either.left(\"error\"), () => new Error('Unexpected Left')))\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrThrowWith = /*#__PURE__*/dual(2, (self, onLeft) => {\n  if (isRight(self)) {\n    return self.right;\n  }\n  throw onLeft(self.left);\n});\n// TODO(4.0): by default should throw `L` (i.e getOrThrowWith with the identity function)\n/**\n * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n *\n * The thrown error is a default error. To configure the error thrown, see  {@link getOrThrowWith}.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrThrow(Either.right(1)), 1)\n * assert.throws(() => Either.getOrThrow(Either.left(\"error\")))\n * ```\n *\n * @throws `Error(\"getOrThrow called on a Left\")`\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrThrow = /*#__PURE__*/getOrThrowWith(() => new Error(\"getOrThrow called on a Left\"));\n/**\n * Returns `self` if it is a `Right` or `that` otherwise.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport const orElse = /*#__PURE__*/dual(2, (self, that) => isLeft(self) ? that(self.left) : right(self.right));\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => isLeft(self) ? left(self.left) : f(self.right));\n/**\n * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const andThen = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => {\n  const b = isFunction(f) ? f(a) : f;\n  return isEither(b) ? b : right(b);\n}));\n/**\n * @category zipping\n * @since 2.0.0\n */\nexport const zipWith = /*#__PURE__*/dual(3, (self, that, f) => flatMap(self, r => map(that, r2 => f(r, r2))));\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const ap = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (f, a) => f(a)));\n/**\n * Takes a structure of `Either`s and returns an `Either` of values with the same structure.\n *\n * - If a tuple is supplied, then the returned `Either` will contain a tuple with the same length.\n * - If a struct is supplied, then the returned `Either` will contain a struct with the same keys.\n * - If an iterable is supplied, then the returned `Either` will contain an array.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.all([Either.right(1), Either.right(2)]), Either.right([1, 2]))\n * assert.deepStrictEqual(Either.all({ right: Either.right(1), b: Either.right(\"hello\") }), Either.right({ right: 1, b: \"hello\" }))\n * assert.deepStrictEqual(Either.all({ right: Either.right(1), b: Either.left(\"error\") }), Either.left(\"error\"))\n * ```\n *\n * @category combining\n * @since 2.0.0\n */\n// @ts-expect-error\nexport const all = input => {\n  if (Symbol.iterator in input) {\n    const out = [];\n    for (const e of input) {\n      if (isLeft(e)) {\n        return e;\n      }\n      out.push(e.right);\n    }\n    return right(out);\n  }\n  const out = {};\n  for (const key of Object.keys(input)) {\n    const e = input[key];\n    if (isLeft(e)) {\n      return e;\n    }\n    out[key] = e.right;\n  }\n  return right(out);\n};\n/**\n * Returns an `Either` that swaps the error/success cases. This allows you to\n * use all methods on the error channel, possibly before flipping back.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const flip = self => isLeft(self) ? right(self.left) : left(self.right);\nconst adapter = /*#__PURE__*/Gen.adapter();\n/**\n * @category generators\n * @since 2.0.0\n */\nexport const gen = (...args) => {\n  const f = args.length === 1 ? args[0] : args[1].bind(args[0]);\n  const iterator = f(adapter);\n  let state = iterator.next();\n  while (!state.done) {\n    const current = Gen.isGenKind(state.value) ? state.value.value : Gen.yieldWrapGet(state.value);\n    if (isLeft(current)) {\n      return current;\n    }\n    state = iterator.next(current.right);\n  }\n  return right(state.value);\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Either.Do,\n *   Either.bind(\"x\", () => Either.right(2)),\n *   Either.bind(\"y\", () => Either.right(3)),\n *   Either.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link bind}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 2.0.0\n */\nexport const Do = /*#__PURE__*/right({});\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Either.Do,\n *   Either.bind(\"x\", () => Either.right(2)),\n *   Either.bind(\"y\", () => Either.right(3)),\n *   Either.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 2.0.0\n */\nexport const bind = /*#__PURE__*/doNotation.bind(map, flatMap);\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Either.Do,\n *   Either.bind(\"x\", () => Either.right(2)),\n *   Either.bind(\"y\", () => Either.right(3)),\n *   Either.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 2.0.0\n */\nexport const bindTo = /*#__PURE__*/doNotation.bindTo(map);\nconst let_ = /*#__PURE__*/doNotation.let_(map);\nexport {\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Either.Do,\n *   Either.bind(\"x\", () => Either.right(2)),\n *   Either.bind(\"y\", () => Either.right(3)),\n *   Either.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bindTo}\n * @see {@link bind}\n *\n * @category do notation\n * @since 2.0.0\n */\nlet_ as let };\n/**\n * Converts an `Option` of an `Either` into an `Either` of an `Option`.\n *\n * **Details**\n *\n * This function transforms an `Option<Either<A, E>>` into an\n * `Either<Option<A>, E>`. If the `Option` is `None`, the resulting `Either`\n * will be a `Right` with a `None` value. If the `Option` is `Some`, the\n * inner `Either` will be executed, and its result wrapped in a `Some`.\n *\n * @example\n * ```ts\n * import { Effect, Either, Option } from \"effect\"\n *\n * //      ┌─── Option<Either<number, never>>\n * //      ▼\n * const maybe = Option.some(Either.right(42))\n *\n * //      ┌─── Either<Option<number>, never, never>\n * //      ▼\n * const result = Either.transposeOption(maybe)\n *\n * console.log(Effect.runSync(result))\n * // Output: { _id: 'Option', _tag: 'Some', value: 42 }\n * ```\n *\n * @since 3.14.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const transposeOption = self => {\n  return option_.isNone(self) ? right(option_.none) : map(self.value, option_.some);\n};\n/**\n * Applies an `Either` on an `Option` and transposes the result.\n *\n * **Details**\n *\n * If the `Option` is `None`, the resulting `Either` will immediately succeed with a `Right` value of `None`.\n * If the `Option` is `Some`, the transformation function will be applied to the inner value, and its result wrapped in a `Some`.\n *\n * @example\n * ```ts\n * import { Either, Option, pipe } from \"effect\"\n *\n * //          ┌─── Either<Option<number>, never>>\n * //          ▼\n * const noneResult = pipe(\n *   Option.none(),\n *   Either.transposeMapOption(() => Either.right(42)) // will not be executed\n * )\n * console.log(noneResult)\n * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'None' } }\n *\n * //          ┌─── Either<Option<number>, never>>\n * //          ▼\n * const someRightResult = pipe(\n *   Option.some(42),\n *   Either.transposeMapOption((value) => Either.right(value * 2))\n * )\n * console.log(someRightResult)\n * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'Some', value: 84 } }\n * ```\n *\n * @since 3.15.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const transposeMapOption = /*#__PURE__*/dual(2, (self, f) => option_.isNone(self) ? right(option_.none) : map(f(self.value), option_.some));\n//# sourceMappingURL=Either.js.map","/**\n * @since 2.0.0\n */\n/** @internal */\nexport const isNonEmptyArray = self => self.length > 0;\n//# sourceMappingURL=array.js.map","/**\n * This module provides an implementation of the `Order` type class which is used to define a total ordering on some type `A`.\n * An order is defined by a relation `<=`, which obeys the following laws:\n *\n * - either `x <= y` or `y <= x` (totality)\n * - if `x <= y` and `y <= x`, then `x == y` (antisymmetry)\n * - if `x <= y` and `y <= z`, then `x <= z` (transitivity)\n *\n * The truth table for compare is defined as follows:\n *\n * | `x <= y` | `x >= y` | Ordering |                       |\n * | -------- | -------- | -------- | --------------------- |\n * | `true`   | `true`   | `0`      | corresponds to x == y |\n * | `true`   | `false`  | `< 0`    | corresponds to x < y  |\n * | `false`  | `true`   | `> 0`    | corresponds to x > y  |\n *\n * @since 2.0.0\n */\nimport { dual } from \"./Function.js\";\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const make = compare => (self, that) => self === that ? 0 : compare(self, that);\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const string = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const number = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const boolean = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const bigint = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n/**\n * @since 2.0.0\n */\nexport const reverse = O => make((self, that) => O(that, self));\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combine = /*#__PURE__*/dual(2, (self, that) => make((a1, a2) => {\n  const out = self(a1, a2);\n  if (out !== 0) {\n    return out;\n  }\n  return that(a1, a2);\n}));\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineMany = /*#__PURE__*/dual(2, (self, collection) => make((a1, a2) => {\n  let out = self(a1, a2);\n  if (out !== 0) {\n    return out;\n  }\n  for (const O of collection) {\n    out = O(a1, a2);\n    if (out !== 0) {\n      return out;\n    }\n  }\n  return out;\n}));\n/**\n * @since 2.0.0\n */\nexport const empty = () => make(() => 0);\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineAll = collection => combineMany(empty(), collection);\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const mapInput = /*#__PURE__*/dual(2, (self, f) => make((b1, b2) => self(f(b1), f(b2))));\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Date = /*#__PURE__*/mapInput(number, date => date.getTime());\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const product = /*#__PURE__*/dual(2, (self, that) => make(([xa, xb], [ya, yb]) => {\n  const o = self(xa, ya);\n  return o !== 0 ? o : that(xb, yb);\n}));\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const all = collection => {\n  return make((x, y) => {\n    const len = Math.min(x.length, y.length);\n    let collectionLength = 0;\n    for (const O of collection) {\n      if (collectionLength >= len) {\n        break;\n      }\n      const o = O(x[collectionLength], y[collectionLength]);\n      if (o !== 0) {\n        return o;\n      }\n      collectionLength++;\n    }\n    return 0;\n  });\n};\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const productMany = /*#__PURE__*/dual(2, (self, collection) => {\n  const O = all(collection);\n  return make((x, y) => {\n    const o = self(x[0], y[0]);\n    return o !== 0 ? o : O(x.slice(1), y.slice(1));\n  });\n});\n/**\n * Similar to `Promise.all` but operates on `Order`s.\n *\n * ```\n * [Order<A>, Order<B>, ...] -> Order<[A, B, ...]>\n * ```\n *\n * This function creates and returns a new `Order` for a tuple of values based on the given `Order`s for each element in the tuple.\n * The returned `Order` compares two tuples of the same type by applying the corresponding `Order` to each element in the tuple.\n * It is useful when you need to compare two tuples of the same type and you have a specific way of comparing each element\n * of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const tuple = (...elements) => all(elements);\n/**\n * This function creates and returns a new `Order` for an array of values based on a given `Order` for the elements of the array.\n * The returned `Order` compares two arrays by applying the given `Order` to each element in the arrays.\n * If all elements are equal, the arrays are then compared based on their length.\n * It is useful when you need to compare two arrays of the same type and you have a specific way of comparing each element of the array.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const array = O => make((self, that) => {\n  const aLen = self.length;\n  const bLen = that.length;\n  const len = Math.min(aLen, bLen);\n  for (let i = 0; i < len; i++) {\n    const o = O(self[i], that[i]);\n    if (o !== 0) {\n      return o;\n    }\n  }\n  return number(aLen, bLen);\n});\n/**\n * This function creates and returns a new `Order` for a struct of values based on the given `Order`s\n * for each property in the struct.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const struct = fields => {\n  const keys = Object.keys(fields);\n  return make((self, that) => {\n    for (const key of keys) {\n      const o = fields[key](self[key], that[key]);\n      if (o !== 0) {\n        return o;\n      }\n    }\n    return 0;\n  });\n};\n/**\n * Test whether one value is _strictly less than_ another.\n *\n * @since 2.0.0\n */\nexport const lessThan = O => dual(2, (self, that) => O(self, that) === -1);\n/**\n * Test whether one value is _strictly greater than_ another.\n *\n * @since 2.0.0\n */\nexport const greaterThan = O => dual(2, (self, that) => O(self, that) === 1);\n/**\n * Test whether one value is _non-strictly less than_ another.\n *\n * @since 2.0.0\n */\nexport const lessThanOrEqualTo = O => dual(2, (self, that) => O(self, that) !== 1);\n/**\n * Test whether one value is _non-strictly greater than_ another.\n *\n * @since 2.0.0\n */\nexport const greaterThanOrEqualTo = O => dual(2, (self, that) => O(self, that) !== -1);\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen.\n *\n * @since 2.0.0\n */\nexport const min = O => dual(2, (self, that) => self === that || O(self, that) < 1 ? self : that);\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen.\n *\n * @since 2.0.0\n */\nexport const max = O => dual(2, (self, that) => self === that || O(self, that) > -1 ? self : that);\n/**\n * Clamp a value between a minimum and a maximum.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Order, Number } from \"effect\"\n *\n * const clamp = Order.clamp(Number.Order)({ minimum: 1, maximum: 5 })\n *\n * assert.equal(clamp(3), 3)\n * assert.equal(clamp(0), 1)\n * assert.equal(clamp(6), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const clamp = O => dual(2, (self, options) => min(O)(options.maximum, max(O)(options.minimum, self)));\n/**\n * Test whether a value is between a minimum and a maximum (inclusive).\n *\n * @since 2.0.0\n */\nexport const between = O => dual(2, (self, options) => !lessThan(O)(self, options.minimum) && !greaterThan(O)(self, options.maximum));\n//# sourceMappingURL=Order.js.map","import * as Equal from \"./Equal.js\";\nimport * as Equivalence from \"./Equivalence.js\";\nimport { constNull, constUndefined, dual, identity, isFunction } from \"./Function.js\";\nimport * as doNotation from \"./internal/doNotation.js\";\nimport * as either from \"./internal/either.js\";\nimport * as option from \"./internal/option.js\";\nimport * as order from \"./Order.js\";\nimport * as Gen from \"./Utils.js\";\n/**\n * @category Symbols\n * @since 2.0.0\n */\nexport const TypeId = /*#__PURE__*/Symbol.for(\"effect/Option\");\n/**\n * Represents the absence of a value by creating an empty `Option`.\n *\n * `Option.none` returns an `Option<never>`, which is a subtype of `Option<A>`.\n * This means you can use it in place of any `Option<A>` regardless of the type\n * `A`.\n *\n * **Example** (Creating an Option with No Value)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * // An Option holding no value\n * //\n * //      ┌─── Option<never>\n * //      ▼\n * const noValue = Option.none()\n *\n * console.log(noValue)\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @see {@link some} for the opposite operation.\n *\n * @category Constructors\n * @since 2.0.0\n */\nexport const none = () => option.none;\n/**\n * Wraps the given value into an `Option` to represent its presence.\n *\n * **Example** (Creating an Option with a Value)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * // An Option holding the number 1\n * //\n * //      ┌─── Option<number>\n * //      ▼\n * const value = Option.some(1)\n *\n * console.log(value)\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n * ```\n *\n * @see {@link none} for the opposite operation.\n *\n * @category Constructors\n * @since 2.0.0\n */\nexport const some = option.some;\n/**\n * Determines whether the given value is an `Option`.\n *\n * **Details**\n *\n * This function checks if a value is an instance of `Option`. It returns `true`\n * if the value is either `Option.some` or `Option.none`, and `false` otherwise.\n * This is particularly useful when working with unknown values or when you need\n * to ensure type safety in your code.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.isOption(Option.some(1)))\n * // Output: true\n *\n * console.log(Option.isOption(Option.none()))\n * // Output: true\n *\n * console.log(Option.isOption({}))\n * // Output: false\n * ```\n *\n * @category Guards\n * @since 2.0.0\n */\nexport const isOption = option.isOption;\n/**\n * Checks whether an `Option` represents the absence of a value (`None`).\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.isNone(Option.some(1)))\n * // Output: false\n *\n * console.log(Option.isNone(Option.none()))\n * // Output: true\n * ```\n *\n * @see {@link isSome} for the opposite check.\n *\n * @category Guards\n * @since 2.0.0\n */\nexport const isNone = option.isNone;\n/**\n * Checks whether an `Option` contains a value (`Some`).\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.isSome(Option.some(1)))\n * // Output: true\n *\n * console.log(Option.isSome(Option.none()))\n * // Output: false\n * ```\n *\n * @see {@link isNone} for the opposite check.\n *\n * @category Guards\n * @since 2.0.0\n */\nexport const isSome = option.isSome;\n/**\n * Performs pattern matching on an `Option` to handle both `Some` and `None`\n * cases.\n *\n * **Details**\n *\n * This function allows you to match against an `Option` and handle both\n * scenarios: when the `Option` is `None` (i.e., contains no value), and when\n * the `Option` is `Some` (i.e., contains a value). It executes one of the\n * provided functions based on the case:\n *\n * - If the `Option` is `None`, the `onNone` function is executed and its result\n *   is returned.\n * - If the `Option` is `Some`, the `onSome` function is executed with the\n *   contained value, and its result is returned.\n *\n * This function provides a concise and functional way to handle optional values\n * without resorting to `if` or manual checks, making your code more declarative\n * and readable.\n *\n * **Example** (Pattern Matching with Option)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * const foo = Option.some(1)\n *\n * const message = Option.match(foo, {\n *   onNone: () => \"Option is empty\",\n *   onSome: (value) => `Option has a value: ${value}`\n * })\n *\n * console.log(message)\n * // Output: \"Option has a value: 1\"\n * ```\n *\n * @category Pattern matching\n * @since 2.0.0\n */\nexport const match = /*#__PURE__*/dual(2, (self, {\n  onNone,\n  onSome\n}) => isNone(self) ? onNone() : onSome(self.value));\n/**\n * Converts an `Option`-returning function into a type guard.\n *\n * **Details**\n *\n * This function transforms a function that returns an `Option` into a type\n * guard, ensuring type safety when validating or narrowing types. The returned\n * type guard function checks whether the input satisfies the condition defined\n * in the original `Option`-returning function.\n *\n * If the original function returns `Option.some`, the type guard evaluates to\n * `true`, confirming the input is of the desired type. If the function returns\n * `Option.none`, the type guard evaluates to `false`.\n *\n * This utility is especially useful for validating types in union types,\n * filtering arrays, or ensuring safe handling of specific subtypes.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * type MyData = string | number\n *\n * const parseString = (data: MyData): Option.Option<string> =>\n *   typeof data === \"string\" ? Option.some(data) : Option.none()\n *\n * //      ┌─── (a: MyData) => a is string\n * //      ▼\n * const isString = Option.toRefinement(parseString)\n *\n * console.log(isString(\"a\"))\n * // Output: true\n *\n * console.log(isString(1))\n * // Output: false\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const toRefinement = f => a => isSome(f(a));\n/**\n * Converts an `Iterable` into an `Option`, wrapping the first element if it\n * exists.\n *\n * **Details**\n *\n * This function takes an `Iterable` (e.g., an array, a generator, or any object\n * implementing the `Iterable` interface) and returns an `Option` based on its\n * content:\n *\n * - If the `Iterable` contains at least one element, the first element is\n *   wrapped in a `Some` and returned.\n * - If the `Iterable` is empty, `None` is returned, representing the absence of\n *   a value.\n *\n * This utility is useful for safely handling collections that might be empty,\n * ensuring you explicitly handle both cases where a value exists or doesn't.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.fromIterable([1, 2, 3]))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(Option.fromIterable([]))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Constructors\n * @since 2.0.0\n */\nexport const fromIterable = collection => {\n  for (const a of collection) {\n    return some(a);\n  }\n  return none();\n};\n/**\n * Converts an `Either` into an `Option` by discarding the error and extracting\n * the right value.\n *\n * **Details**\n *\n * This function takes an `Either` and returns an `Option` based on its value:\n *\n * - If the `Either` is a `Right`, its value is wrapped in a `Some` and\n *   returned.\n * - If the `Either` is a `Left`, the error is discarded, and `None` is\n *   returned.\n *\n * This is particularly useful when you only care about the success case\n * (`Right`) of an `Either` and want to handle the result using `Option`. By\n * using this function, you can convert `Either` into a simpler structure for\n * cases where error handling is not required.\n *\n * @example\n * ```ts\n * import { Either, Option } from \"effect\"\n *\n * console.log(Option.getRight(Either.right(\"ok\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'ok' }\n *\n * console.log(Option.getRight(Either.left(\"err\")))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @see {@link getLeft} for the opposite operation.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getRight = either.getRight;\n/**\n * Converts an `Either` into an `Option` by discarding the right value and\n * extracting the left value.\n *\n * **Details**\n *\n * This function transforms an `Either` into an `Option` as follows:\n *\n * - If the `Either` is a `Left`, its value is wrapped in a `Some` and returned.\n * - If the `Either` is a `Right`, the value is discarded, and `None` is\n *   returned.\n *\n * This utility is useful when you only care about the error case (`Left`) of an\n * `Either` and want to handle it as an `Option`. By discarding the right value,\n * it simplifies error-focused workflows.\n *\n * @example\n * ```ts\n * import { Either, Option } from \"effect\"\n *\n * console.log(Option.getLeft(Either.right(\"ok\")))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.getLeft(Either.left(\"err\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'err' }\n * ```\n *\n * @see {@link getRight} for the opposite operation.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getLeft = either.getLeft;\n/**\n * Returns the value contained in the `Option` if it is `Some`, otherwise\n * evaluates and returns the result of `onNone`.\n *\n * **Details**\n *\n * This function allows you to provide a fallback value or computation for when\n * an `Option` is `None`. If the `Option` contains a value (`Some`), that value\n * is returned. If it is empty (`None`), the `onNone` function is executed, and\n * its result is returned instead.\n *\n * This utility is helpful for safely handling `Option` values by ensuring you\n * always receive a meaningful result, whether or not the `Option` contains a\n * value. It is particularly useful for providing default values or alternative\n * logic when working with optional values.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.some(1).pipe(Option.getOrElse(() => 0)))\n * // Output: 1\n *\n * console.log(Option.none().pipe(Option.getOrElse(() => 0)))\n * // Output: 0\n * ```\n *\n * @see {@link getOrNull} for a version that returns `null` instead of executing a function.\n * @see {@link getOrUndefined} for a version that returns `undefined` instead of executing a function.\n *\n * @category Getters\n * @since 2.0.0\n */\nexport const getOrElse = /*#__PURE__*/dual(2, (self, onNone) => isNone(self) ? onNone() : self.value);\n/**\n * Returns the provided `Option` `that` if the current `Option` (`self`) is\n * `None`; otherwise, it returns `self`.\n *\n * **Details**\n *\n * This function provides a fallback mechanism for `Option` values. If the\n * current `Option` is `None` (i.e., it contains no value), the `that` function\n * is evaluated, and its resulting `Option` is returned. If the current `Option`\n * is `Some` (i.e., it contains a value), the original `Option` is returned\n * unchanged.\n *\n * This is particularly useful for chaining fallback values or computations,\n * allowing you to provide alternative `Option` values when the first one is\n * empty.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.none().pipe(Option.orElse(() => Option.none())))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.none())))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n *\n * console.log(Option.none().pipe(Option.orElse(() => Option.some(\"b\"))))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n *\n * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.some(\"b\"))))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n * ```\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const orElse = /*#__PURE__*/dual(2, (self, that) => isNone(self) ? that() : self);\n/**\n * Returns the provided default value wrapped in `Some` if the current `Option`\n * (`self`) is `None`; otherwise, returns `self`.\n *\n * **Details**\n *\n * This function provides a way to supply a default value for cases where an\n * `Option` is `None`. If the current `Option` is empty (`None`), the `onNone`\n * function is executed to compute the default value, which is then wrapped in a\n * `Some`. If the current `Option` contains a value (`Some`), it is returned as\n * is.\n *\n * This is particularly useful for handling optional values where a fallback\n * default needs to be provided explicitly in case of absence.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.none().pipe(Option.orElseSome(() => \"b\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n *\n * console.log(Option.some(\"a\").pipe(Option.orElseSome(() => \"b\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n * ```\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const orElseSome = /*#__PURE__*/dual(2, (self, onNone) => isNone(self) ? some(onNone()) : self);\n/**\n * Similar to {@link orElse}, but returns an `Either` wrapped in an `Option` to\n * indicate the source of the value.\n *\n * **Details**\n *\n * This function allows you to provide a fallback `Option` in case the current\n * `Option` (`self`) is `None`. However, unlike `orElse`, it returns the value\n * wrapped in an `Either` object, providing additional information about where\n * the value came from:\n *\n * - If the value is from the fallback `Option` (`that`), it is wrapped in an\n *   `Either.right`.\n * - If the value is from the original `Option` (`self`), it is wrapped in an\n *   `Either.left`.\n *\n * This is especially useful when you need to differentiate between values\n * originating from the primary `Option` and those coming from the fallback,\n * while still maintaining the `Option`-style handling.\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const orElseEither = /*#__PURE__*/dual(2, (self, that) => isNone(self) ? map(that(), either.right) : map(self, either.left));\n/**\n * Returns the first `Some` value found in an `Iterable` collection of\n * `Option`s, or `None` if no `Some` is found.\n *\n * **Details**\n *\n * This function iterates over a collection of `Option` values and returns the\n * first `Some` it encounters. If the collection contains only `None` values,\n * the result will also be `None`. This utility is useful for efficiently\n * finding the first valid value in a sequence of potentially empty or invalid\n * options.\n *\n * The iteration stops as soon as a `Some` is found, making this function\n * efficient for large collections.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.firstSomeOf([\n *   Option.none(),\n *   Option.some(1),\n *   Option.some(2)\n * ]))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n * ```\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const firstSomeOf = collection => {\n  let out = none();\n  for (out of collection) {\n    if (isSome(out)) {\n      return out;\n    }\n  }\n  return out;\n};\n/**\n * Converts a nullable value into an `Option`. Returns `None` if the value is\n * `null` or `undefined`, otherwise wraps the value in a `Some`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.fromNullable(undefined))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.fromNullable(null))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.fromNullable(1))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const fromNullable = nullableValue => nullableValue == null ? none() : some(nullableValue);\n/**\n * Lifts a function that returns `null` or `undefined` into the `Option`\n * context.\n *\n * **Details**\n *\n * This function takes a function `f` that might return `null` or `undefined`\n * and transforms it into a function that returns an `Option`. The resulting\n * function will return:\n * - `Some` if the original function produces a non-null, non-undefined value.\n * - `None` if the original function produces `null` or `undefined`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const parse = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const parseOption = Option.liftNullable(parse)\n *\n * console.log(parseOption(\"1\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(parseOption(\"not a number\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const liftNullable = f => (...a) => fromNullable(f(...a));\n/**\n * Returns the value contained in the `Option` if it is `Some`; otherwise,\n * returns `null`.\n *\n * **Details**\n *\n * This function provides a way to extract the value of an `Option` while\n * falling back to `null` if the `Option` is `None`.\n *\n * It is particularly useful in scenarios where `null` is an acceptable\n * placeholder for the absence of a value, such as when interacting with APIs or\n * systems that use `null` as a default for missing values.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.getOrNull(Option.some(1)))\n * // Output: 1\n *\n * console.log(Option.getOrNull(Option.none()))\n * // Output: null\n * ```\n *\n * @category Getters\n * @since 2.0.0\n */\nexport const getOrNull = /*#__PURE__*/getOrElse(constNull);\n/**\n * Returns the value contained in the `Option` if it is `Some`; otherwise,\n * returns `undefined`.\n *\n * **Details**\n *\n * This function provides a way to extract the value of an `Option` while\n * falling back to `undefined` if the `Option` is `None`.\n *\n * It is particularly useful in scenarios where `undefined` is an acceptable\n * placeholder for the absence of a value, such as when interacting with APIs or\n * systems that use `undefined` as a default for missing values.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.getOrUndefined(Option.some(1)))\n * // Output: 1\n *\n * console.log(Option.getOrUndefined(Option.none()))\n * // Output: undefined\n * ```\n *\n * @category Getters\n * @since 2.0.0\n */\nexport const getOrUndefined = /*#__PURE__*/getOrElse(constUndefined);\n/**\n * Lifts a function that throws exceptions into a function that returns an\n * `Option`.\n *\n * **Details**\n *\n * This utility function takes a function `f` that might throw an exception and\n * transforms it into a safer function that returns an `Option`. If the original\n * function executes successfully, the result is wrapped in a `Some`. If an\n * exception is thrown, the result is `None`, allowing the developer to handle\n * errors in a functional, type-safe way.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const parse = Option.liftThrowable(JSON.parse)\n *\n * console.log(parse(\"1\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(parse(\"\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const liftThrowable = f => (...a) => {\n  try {\n    return some(f(...a));\n  } catch (e) {\n    return none();\n  }\n};\n/**\n * Extracts the value of an `Option` or throws an error if the `Option` is\n * `None`, using a custom error factory.\n *\n * **Details**\n *\n * This function allows you to extract the value of an `Option` when it is\n * `Some`. If the `Option` is `None`, it throws an error generated by the\n * provided `onNone` function. This utility is particularly useful when you need\n * a fail-fast behavior for empty `Option` values and want to provide a custom\n * error message or object.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Option.getOrThrowWith(Option.some(1), () => new Error('Unexpected None')),\n *   1\n * )\n * assert.throws(() => Option.getOrThrowWith(Option.none(), () => new Error('Unexpected None')))\n * ```\n *\n * @see {@link getOrThrow} for a version that throws a default error.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getOrThrowWith = /*#__PURE__*/dual(2, (self, onNone) => {\n  if (isSome(self)) {\n    return self.value;\n  }\n  throw onNone();\n});\n/**\n * Extracts the value of an `Option` or throws a default error if the `Option`\n * is `None`.\n *\n * **Details**\n *\n * This function extracts the value from an `Option` if it is `Some`. If the\n * `Option` is `None`, it throws a default error. It is useful for fail-fast\n * scenarios where the absence of a value is treated as an exceptional case and\n * a default error is sufficient.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option } from \"effect\"\n *\n * assert.deepStrictEqual(Option.getOrThrow(Option.some(1)), 1)\n * assert.throws(() => Option.getOrThrow(Option.none()))\n * ```\n *\n * @see {@link getOrThrowWith} for a version that allows you to provide a custom error.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getOrThrow = /*#__PURE__*/getOrThrowWith(() => new Error(\"getOrThrow called on a None\"));\n/**\n * Transforms the value inside a `Some` to a new value using the provided\n * function, while leaving `None` unchanged.\n *\n * **Details**\n *\n * This function applies a mapping function `f` to the value inside an `Option`\n * if it is a `Some`. If the `Option` is `None`, it remains unchanged. The\n * result is a new `Option` with the transformed value (if it was a `Some`) or\n * still `None`.\n *\n * This utility is particularly useful for chaining transformations in a\n * functional way without needing to manually handle `None` cases.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Mapping over a `Some`\n * const someValue = Option.some(2)\n *\n * console.log(Option.map(someValue, (n) => n * 2))\n * // Output: { _id: 'Option', _tag: 'Some', value: 4 }\n *\n * // Mapping over a `None`\n * const noneValue = Option.none<number>()\n *\n * console.log(Option.map(noneValue, (n) => n * 2))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => isNone(self) ? none() : some(f(self.value)));\n/**\n * Replaces the value inside a `Some` with the specified constant value, leaving\n * `None` unchanged.\n *\n * **Details**\n *\n * This function transforms an `Option` by replacing the value inside a `Some`\n * with the given constant value `b`. If the `Option` is `None`, it remains\n * unchanged.\n *\n * This is useful when you want to preserve the presence of a value (`Some`) but\n * replace its content with a fixed value.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Replacing the value of a `Some`\n * const someValue = Option.some(42)\n *\n * console.log(Option.as(someValue, \"new value\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'new value' }\n *\n * // Replacing a `None` (no effect)\n * const noneValue = Option.none<number>()\n *\n * console.log(Option.as(noneValue, \"new value\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const as = /*#__PURE__*/dual(2, (self, b) => map(self, () => b));\n/**\n * Replaces the value inside a `Some` with the constant value `void`, leaving\n * `None` unchanged.\n *\n * **Details**\n *\n * This function transforms an `Option` by replacing the value inside a `Some`\n * with `void`. If the `Option` is `None`, it remains unchanged.\n *\n * This is particularly useful in scenarios where the presence or absence of a\n * value is significant, but the actual content of the value is irrelevant.\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const asVoid = /*#__PURE__*/as(undefined);\nconst void_ = /*#__PURE__*/some(undefined);\nexport {\n/**\n * @since 2.0.0\n */\nvoid_ as void };\n/**\n * Applies a function to the value of a `Some` and flattens the resulting\n * `Option`. If the input is `None`, it remains `None`.\n *\n * **Details**\n *\n * This function allows you to chain computations that return `Option` values.\n * If the input `Option` is `Some`, the provided function `f` is applied to the\n * contained value, and the resulting `Option` is returned. If the input is\n * `None`, the function is not applied, and the result remains `None`.\n *\n * This utility is particularly useful for sequencing operations that may fail\n * or produce optional results, enabling clean and concise workflows for\n * handling such cases.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * interface Address {\n *   readonly city: string\n *   readonly street: Option.Option<string>\n * }\n *\n * interface User {\n *   readonly id: number\n *   readonly username: string\n *   readonly email: Option.Option<string>\n *   readonly address: Option.Option<Address>\n * }\n *\n * const user: User = {\n *   id: 1,\n *   username: \"john_doe\",\n *   email: Option.some(\"john.doe@example.com\"),\n *   address: Option.some({\n *     city: \"New York\",\n *     street: Option.some(\"123 Main St\")\n *   })\n * }\n *\n * // Use flatMap to extract the street value\n * const street = user.address.pipe(\n *   Option.flatMap((address) => address.street)\n * )\n *\n * console.log(street)\n * // Output: { _id: 'Option', _tag: 'Some', value: '123 Main St' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => isNone(self) ? none() : f(self.value));\n/**\n * Chains two `Option`s together. The second `Option` can either be a static\n * value or depend on the result of the first `Option`.\n *\n * **Details**\n *\n * This function enables sequencing of two `Option` computations. If the first\n * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n * either:\n *\n * - Be a static `Option` value.\n * - Be a function that produces an `Option`, optionally based on the value of\n *   the first `Option`.\n *\n * If the first `Option` is `None`, the function skips the evaluation of the\n * second `Option` and directly returns `None`.\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const andThen = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => {\n  const b = isFunction(f) ? f(a) : f;\n  return isOption(b) ? b : some(b);\n}));\n/**\n * Combines `flatMap` and `fromNullable`, transforming the value inside a `Some`\n * using a function that may return `null` or `undefined`.\n *\n * **Details**\n *\n * This function applies a transformation function `f` to the value inside a\n * `Some`. The function `f` may return a value, `null`, or `undefined`. If `f`\n * returns a value, it is wrapped in a `Some`. If `f` returns `null` or\n * `undefined`, the result is `None`. If the input `Option` is `None`, the\n * function is not applied, and `None` is returned.\n *\n * This utility is particularly useful when working with deeply nested optional\n * values or chaining computations that may result in `null` or `undefined` at\n * some point.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * interface Employee {\n *   company?: {\n *     address?: {\n *       street?: {\n *         name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: \"high street\" } } } }\n *\n * // Extracting a deeply nested property\n * console.log(\n *   Option.some(employee1)\n *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n * )\n * // Output: { _id: 'Option', _tag: 'Some', value: 'high street' }\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * // Property does not exist\n * console.log(\n *   Option.some(employee2)\n *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n * )\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const flatMapNullable = /*#__PURE__*/dual(2, (self, f) => isNone(self) ? none() : fromNullable(f(self.value)));\n/**\n * Flattens an `Option` of `Option` into a single `Option`.\n *\n * **Details**\n *\n * This function takes an `Option` that wraps another `Option` and flattens it\n * into a single `Option`. If the outer `Option` is `Some`, the function\n * extracts the inner `Option`. If the outer `Option` is `None`, the result\n * remains `None`.\n *\n * This is useful for simplifying nested `Option` structures that may arise\n * during functional operations.\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const flatten = /*#__PURE__*/flatMap(identity);\n/**\n * Combines two `Option`s, keeping the value from the second `Option` if both\n * are `Some`.\n *\n * **Details**\n *\n * This function takes two `Option`s and returns the second one if the first is\n * `Some`. If the first `Option` is `None`, the result will also be `None`,\n * regardless of the second `Option`. It effectively \"zips\" the two `Option`s\n * while discarding the value from the first `Option`.\n *\n * This is particularly useful when sequencing computations where the result of\n * the first computation is not needed, and you only care about the result of\n * the second computation.\n *\n * @category Zipping\n * @since 2.0.0\n */\nexport const zipRight = /*#__PURE__*/dual(2, (self, that) => flatMap(self, () => that));\n/**\n * Combines two `Option`s, keeping the value from the first `Option` if both are\n * `Some`.\n *\n * **Details**\n *\n * This function takes two `Option`s and returns the first one if it is `Some`.\n * If either the first `Option` or the second `Option` is `None`, the result\n * will be `None`. This operation \"zips\" the two `Option`s while discarding the\n * value from the second `Option`.\n *\n * This is useful when sequencing computations where the second `Option`\n * represents a dependency or condition that must hold, but its value is\n * irrelevant.\n *\n * @category Zipping\n * @since 2.0.0\n */\nexport const zipLeft = /*#__PURE__*/dual(2, (self, that) => tap(self, () => that));\n/**\n * Composes two functions that return `Option` values, creating a new function\n * that chains them together.\n *\n * **Details**\n *\n * This function allows you to compose two computations, each represented by a\n * function that returns an `Option`. The result of the first function is passed\n * to the second function if it is `Some`. If the first function returns `None`,\n * the composed function short-circuits and returns `None` without invoking the\n * second function.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const parse = (s: string): Option.Option<number> => isNaN(Number(s)) ? Option.none() : Option.some(Number(s))\n *\n * const double = (n: number): Option.Option<number> => n > 0 ? Option.some(n * 2) : Option.none()\n *\n * const parseAndDouble = Option.composeK(parse, double)\n *\n * console.log(parseAndDouble(\"42\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 84 }\n *\n * console.log(parseAndDouble(\"not a number\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const composeK = /*#__PURE__*/dual(2, (afb, bfc) => a => flatMap(afb(a), bfc));\n/**\n * Applies the provided function `f` to the value of the `Option` if it is\n * `Some` and returns the original `Option`, unless `f` returns `None`, in which\n * case it returns `None`.\n *\n * **Details**\n *\n * This function allows you to perform additional computations on the value of\n * an `Option` without modifying its original value. If the `Option` is `Some`,\n * the provided function `f` is executed with the value, and its result\n * determines whether the original `Option` is returned (`Some`) or the result\n * is `None` if `f` returns `None`. If the input `Option` is `None`, the\n * function is not executed, and `None` is returned.\n *\n * This is particularly useful for applying side conditions or performing\n * validation checks while retaining the original `Option`'s value.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const getInteger = (n: number) => Number.isInteger(n) ? Option.some(n) : Option.none()\n *\n * console.log(Option.tap(Option.none(), getInteger))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.tap(Option.some(1), getInteger))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(Option.tap(Option.some(1.14), getInteger))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const tap = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => map(f(a), () => a)));\n/**\n * Combines two `Option` values into a single `Option` containing a tuple of\n * their values if both are `Some`.\n *\n * **Details**\n *\n * This function takes two `Option`s and combines their values into a tuple `[A,\n * B]` if both are `Some`. If either of the `Option`s is `None`, the result is\n * `None`. This is particularly useful for combining multiple `Option` values\n * into a single one, ensuring both contain valid values.\n *\n * @category Combining\n * @since 2.0.0\n */\nexport const product = (self, that) => isSome(self) && isSome(that) ? some([self.value, that.value]) : none();\n/**\n * Combines an `Option` with a collection of `Option`s into a single `Option`\n * containing a tuple of their values if all are `Some`.\n *\n * **Details**\n *\n * This function takes a primary `Option` and a collection of `Option`s and\n * combines their values into a tuple `[A, ...Array<A>]` if all are `Some`. If\n * the primary `Option` or any `Option` in the collection is `None`, the result\n * is `None`.\n *\n * @category Combining\n * @since 2.0.0\n */\nexport const productMany = (self, collection) => {\n  if (isNone(self)) {\n    return none();\n  }\n  const out = [self.value];\n  for (const o of collection) {\n    if (isNone(o)) {\n      return none();\n    }\n    out.push(o.value);\n  }\n  return some(out);\n};\n/**\n * Combines a structure of `Option`s into a single `Option` containing the\n * values with the same structure.\n *\n * **Details**\n *\n * This function takes a structure of `Option`s (a tuple, struct, or iterable)\n * and produces a single `Option` that contains the values from the input\n * structure if all `Option`s are `Some`. If any `Option` in the input is\n * `None`, the result is `None`. The structure of the input is preserved in the\n * output.\n *\n * - If the input is a tuple (e.g., an array), the result will be an `Option`\n *   containing a tuple with the same length.\n * - If the input is a struct (e.g., an object), the result will be an `Option`\n *   containing a struct with the same keys.\n * - If the input is an iterable, the result will be an `Option` containing an\n *   array.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const maybeName: Option.Option<string> = Option.some(\"John\")\n * const maybeAge: Option.Option<number> = Option.some(25)\n *\n * //      ┌─── Option<[string, number]>\n * //      ▼\n * const tuple = Option.all([maybeName, maybeAge])\n * console.log(tuple)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: [ 'John', 25 ] }\n *\n * //      ┌─── Option<{ name: string; age: number; }>\n * //      ▼\n * const struct = Option.all({ name: maybeName, age: maybeAge })\n * console.log(struct)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: { name: 'John', age: 25 } }\n * ```\n *\n * @category Combining\n * @since 2.0.0\n */\n// @ts-expect-error\nexport const all = input => {\n  if (Symbol.iterator in input) {\n    const out = [];\n    for (const o of input) {\n      if (isNone(o)) {\n        return none();\n      }\n      out.push(o.value);\n    }\n    return some(out);\n  }\n  const out = {};\n  for (const key of Object.keys(input)) {\n    const o = input[key];\n    if (isNone(o)) {\n      return none();\n    }\n    out[key] = o.value;\n  }\n  return some(out);\n};\n/**\n * Combines two `Option` values into a new `Option` by applying a provided\n * function to their values.\n *\n * **Details**\n *\n * This function takes two `Option` values (`self` and `that`) and a combining\n * function `f`. If both `Option` values are `Some`, the function `f` is applied\n * to their values, and the result is wrapped in a new `Some`. If either\n * `Option` is `None`, the result is `None`.\n *\n * This utility is useful for combining two optional computations into a single\n * result while maintaining type safety and avoiding explicit checks for `None`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const maybeName: Option.Option<string> = Option.some(\"John\")\n * const maybeAge: Option.Option<number> = Option.some(25)\n *\n * // Combine the name and age into a person object\n * const person = Option.zipWith(maybeName, maybeAge, (name, age) => ({\n *   name: name.toUpperCase(),\n *   age\n * }))\n *\n * console.log(person)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: { name: 'JOHN', age: 25 } }\n * ```\n *\n * @category Zipping\n * @since 2.0.0\n */\nexport const zipWith = /*#__PURE__*/dual(3, (self, that, f) => map(product(self, that), ([a, b]) => f(a, b)));\n/**\n * Applies a function inside a `Some` to a value inside another `Some`,\n * combining them into a new `Option`.\n *\n * **Details**\n *\n * This function allows you to apply a function wrapped in an `Option` (`self`)\n * to a value wrapped in another `Option` (`that`). If both `Option`s are\n * `Some`, the function is applied to the value, and the result is wrapped in a\n * new `Some`. If either `Option` is `None`, the result is `None`.\n *\n * @category Combining\n * @since 2.0.0\n */\nexport const ap = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (f, a) => f(a)));\n/**\n * Reduces an `Iterable` of `Option<A>` to a single value of type `B`, ignoring\n * elements that are `None`.\n *\n * **Details**\n *\n * This function takes an initial value of type `B` and a reducing function `f`\n * that combines the accumulator with values of type `A`. It processes an\n * iterable of `Option<A>`, applying `f` only to the `Some` values while\n * ignoring the `None` values. The result is a single value of type `B`.\n *\n * This utility is particularly useful for aggregating values from an iterable\n * of `Option`s while skipping the absent (`None`) values.\n *\n * @example\n * ```ts\n * import { Option, pipe } from \"effect\"\n *\n * const iterable = [Option.some(1), Option.none(), Option.some(2), Option.none()]\n *\n * console.log(pipe(iterable, Option.reduceCompact(0, (b, a) => b + a)))\n * // Output: 3\n * ```\n *\n * @category Reducing\n * @since 2.0.0\n */\nexport const reduceCompact = /*#__PURE__*/dual(3, (self, b, f) => {\n  let out = b;\n  for (const oa of self) {\n    if (isSome(oa)) {\n      out = f(out, oa.value);\n    }\n  }\n  return out;\n});\n/**\n * Converts an `Option` into an `Array`.\n * If the input is `None`, an empty array is returned.\n * If the input is `Some`, its value is wrapped in a single-element array.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.toArray(Option.some(1)))\n * // Output: [1]\n *\n * console.log(Option.toArray(Option.none()))\n * // Output: []\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const toArray = self => isNone(self) ? [] : [self.value];\n/**\n * Splits an `Option` into two `Option`s based on the result of a mapping\n * function that produces an `Either`.\n *\n * **Details**\n *\n * This function takes an `Option` and a mapping function `f` that converts its\n * value into an `Either`. It returns a tuple of two `Option`s:\n *\n * - The first `Option` (`left`) contains the value from the `Left` side of the\n *   `Either` if it exists, otherwise `None`.\n * - The second `Option` (`right`) contains the value from the `Right` side of\n *   the `Either` if it exists, otherwise `None`.\n *\n * If the input `Option` is `None`, both returned `Option`s are `None`.\n *\n * This utility is useful for filtering and categorizing the contents of an\n * `Option` based on a bifurcating computation.\n *\n * @category Filtering\n * @since 2.0.0\n */\nexport const partitionMap = /*#__PURE__*/dual(2, (self, f) => {\n  if (isNone(self)) {\n    return [none(), none()];\n  }\n  const e = f(self.value);\n  return either.isLeft(e) ? [some(e.left), none()] : [none(), some(e.right)];\n});\n// TODO(4.0): remove?\n/**\n * Alias of {@link flatMap}.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Transform and filter numbers\n * const transformEven = (n: Option.Option<number>): Option.Option<string> =>\n *   Option.filterMap(n, (n) => (n % 2 === 0 ? Option.some(`Even: ${n}`) : Option.none()))\n *\n * console.log(transformEven(Option.none()))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(transformEven(Option.some(1)))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(transformEven(Option.some(2)))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'Even: 2' }\n * ```\n *\n * @category Filtering\n * @since 2.0.0\n */\nexport const filterMap = flatMap;\n/**\n * Filters an `Option` using a predicate. If the predicate is not satisfied or the `Option` is `None` returns `None`.\n *\n * If you need to change the type of the `Option` in addition to filtering, see `filterMap`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const removeEmptyString = (input: Option.Option<string>) =>\n *   Option.filter(input, (value) => value !== \"\")\n *\n * console.log(removeEmptyString(Option.none()))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(removeEmptyString(Option.some(\"\")))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(removeEmptyString(Option.some(\"a\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n * ```\n *\n * @category Filtering\n * @since 2.0.0\n */\nexport const filter = /*#__PURE__*/dual(2, (self, predicate) => filterMap(self, b => predicate(b) ? option.some(b) : option.none));\n/**\n * Creates an `Equivalence` instance for comparing `Option` values, using a\n * provided `Equivalence` for the inner type.\n *\n * **Details**\n *\n * This function takes an `Equivalence` instance for a specific type `A` and\n * produces an `Equivalence` instance for `Option<A>`. The resulting\n * `Equivalence` determines whether two `Option` values are equivalent:\n *\n * - Two `None`s are considered equivalent.\n * - A `Some` and a `None` are not equivalent.\n * - Two `Some` values are equivalent if their inner values are equivalent\n *   according to the provided `Equivalence`.\n *\n * **Example** (Comparing Optional Numbers for Equivalence)\n *\n * ```ts\n * import { Number, Option } from \"effect\"\n *\n * const isEquivalent = Option.getEquivalence(Number.Equivalence)\n *\n * console.log(isEquivalent(Option.none(), Option.none()))\n * // Output: true\n *\n * console.log(isEquivalent(Option.none(), Option.some(1)))\n * // Output: false\n *\n * console.log(isEquivalent(Option.some(1), Option.none()))\n * // Output: false\n *\n * console.log(isEquivalent(Option.some(1), Option.some(2)))\n * // Output: false\n *\n * console.log(isEquivalent(Option.some(1), Option.some(1)))\n * // Output: true\n * ```\n *\n * @category Equivalence\n * @since 2.0.0\n */\nexport const getEquivalence = isEquivalent => Equivalence.make((x, y) => isNone(x) ? isNone(y) : isNone(y) ? false : isEquivalent(x.value, y.value));\n/**\n * Creates an `Order` instance for comparing `Option` values, using a provided\n * `Order` for the inner type.\n *\n * **Details**\n *\n * This function produces an `Order` instance for `Option<A>`, allowing `Option`\n * values to be compared:\n *\n * - `None` is always considered less than any `Some` value.\n * - If both are `Some`, their inner values are compared using the provided\n *   `Order` instance.\n *\n * @example\n * ```ts\n * import { Number, Option } from \"effect\"\n *\n * const order = Option.getOrder(Number.Order)\n *\n * console.log(order(Option.none(), Option.none()))\n * // Output: 0\n *\n * console.log(order(Option.none(), Option.some(1)))\n * // Output: -1\n *\n * console.log(order(Option.some(1), Option.none()))\n * // Output: 1\n *\n * console.log(order(Option.some(1), Option.some(2)))\n * // Output: -1\n *\n * console.log(order(Option.some(1), Option.some(1)))\n * // Output: 0\n * ```\n *\n * @category Sorting\n * @since 2.0.0\n */\nexport const getOrder = O => order.make((self, that) => isSome(self) ? isSome(that) ? O(self.value, that.value) : 1 : -1);\n/**\n * Lifts a binary function to work with `Option` values, allowing the function\n * to operate on two `Option`s.\n *\n * **Details**\n *\n * This function takes a binary function `f` and returns a new function that\n * applies `f` to the values of two `Option`s (`self` and `that`). If both\n * `Option`s are `Some`, the binary function `f` is applied to their values, and\n * the result is wrapped in a new `Some`. If either `Option` is `None`, the\n * result is `None`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // A binary function to add two numbers\n * const add = (a: number, b: number): number => a + b\n *\n * // Lift the `add` function to work with `Option` values\n * const addOptions = Option.lift2(add)\n *\n * // Both `Option`s are `Some`\n * console.log(addOptions(Option.some(2), Option.some(3)))\n * // Output: { _id: 'Option', _tag: 'Some', value: 5 }\n *\n * // One `Option` is `None`\n * console.log(addOptions(Option.some(2), Option.none()))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Lifting\n * @since 2.0.0\n */\nexport const lift2 = f => dual(2, (self, that) => zipWith(self, that, f));\n/**\n * Lifts a `Predicate` or `Refinement` into the `Option` context, returning a\n * `Some` of the input value if the predicate is satisfied, or `None` otherwise.\n *\n * **Details**\n *\n * This function transforms a `Predicate` (or a more specific `Refinement`) into\n * a function that produces an `Option`. If the predicate evaluates to `true`,\n * the input value is wrapped in a `Some`. If the predicate evaluates to\n * `false`, the result is `None`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Check if a number is positive\n * const isPositive = (n: number) => n > 0\n *\n * //      ┌─── (b: number) => Option<number>\n * //      ▼\n * const parsePositive = Option.liftPredicate(isPositive)\n *\n * console.log(parsePositive(1))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(parsePositive(-1))\n * // OUtput: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Lifting\n * @since 2.0.0\n */\nexport const liftPredicate = /*#__PURE__*/dual(2, (b, predicate) => predicate(b) ? some(b) : none());\n/**\n * Returns a function that checks if an `Option` contains a specified value,\n * using a provided equivalence function.\n *\n * **Details**\n *\n * This function allows you to check whether an `Option` contains a specific\n * value. It uses an equivalence function `isEquivalent` to compare the value\n * inside the `Option` to the provided value. If the `Option` is `Some` and the\n * equivalence function returns `true`, the result is `true`. If the `Option` is\n * `None` or the values are not equivalent, the result is `false`.\n *\n * @example\n * ```ts\n * import { Number, Option } from \"effect\"\n *\n * const contains = Option.containsWith(Number.Equivalence)\n *\n * console.log(Option.some(2).pipe(contains(2)))\n * // Output: true\n *\n * console.log(Option.some(1).pipe(contains(2)))\n * // Output: false\n *\n * console.log(Option.none().pipe(contains(2)))\n * // Output: false\n * ```\n *\n * @see {@link contains} for a version that uses the default `Equivalence`.\n *\n * @category Elements\n * @since 2.0.0\n */\nexport const containsWith = isEquivalent => dual(2, (self, a) => isNone(self) ? false : isEquivalent(self.value, a));\nconst _equivalence = /*#__PURE__*/Equal.equivalence();\n/**\n * Returns a function that checks if an `Option` contains a specified value\n * using the default `Equivalence`.\n *\n * **Details**\n *\n * This function allows you to check whether an `Option` contains a specific\n * value. It uses the default `Equivalence` for equality comparison. If the\n * `Option` is `Some` and its value is equivalent to the provided value, the\n * result is `true`. If the `Option` is `None` or the values are not equivalent,\n * the result is `false`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.some(2).pipe(Option.contains(2)))\n * // Output: true\n *\n * console.log(Option.some(1).pipe(Option.contains(2)))\n * // Output: false\n *\n * console.log(Option.none().pipe(Option.contains(2)))\n * // Output: false\n * ```\n *\n * @see {@link containsWith} for a version that allows you to specify a custom equivalence function.\n *\n * @category Elements\n * @since 2.0.0\n */\nexport const contains = /*#__PURE__*/containsWith(_equivalence);\n/**\n * Checks if a value in an `Option` satisfies a given predicate or refinement.\n *\n * **Details**\n *\n * This function allows you to check if a value inside a `Some` meets a\n * specified condition. If the `Option` is `None`, the result is `false`. If the\n * `Option` is `Some`, the provided predicate or refinement is applied to the\n * value:\n *\n * - If the condition is met, the result is `true`.\n * - If the condition is not met, the result is `false`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const isEven = (n: number) => n % 2 === 0\n *\n * console.log(Option.some(2).pipe(Option.exists(isEven)))\n * // Output: true\n *\n * console.log(Option.some(1).pipe(Option.exists(isEven)))\n * // Output: false\n *\n * console.log(Option.none().pipe(Option.exists(isEven)))\n * // Output: false\n * ```\n *\n * @category Elements\n * @since 2.0.0\n */\nexport const exists = /*#__PURE__*/dual(2, (self, refinement) => isNone(self) ? false : refinement(self.value));\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Option.Do,\n *   Option.bind(\"x\", () => Option.some(2)),\n *   Option.bind(\"y\", () => Option.some(3)),\n *   Option.let(\"sum\", ({ x, y }) => x + y),\n *   Option.filter(({ x, y }) => x * y > 5)\n * )\n * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const bindTo = /*#__PURE__*/doNotation.bindTo(map);\nconst let_ = /*#__PURE__*/doNotation.let_(map);\nexport {\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Option.Do,\n *   Option.bind(\"x\", () => Option.some(2)),\n *   Option.bind(\"y\", () => Option.some(3)),\n *   Option.let(\"sum\", ({ x, y }) => x + y),\n *   Option.filter(({ x, y }) => x * y > 5)\n * )\n * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bind}\n * @see {@link bindTo}\n *\n * @category Do notation\n * @since 2.0.0\n */\nlet_ as let };\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Option.Do,\n *   Option.bind(\"x\", () => Option.some(2)),\n *   Option.bind(\"y\", () => Option.some(3)),\n *   Option.let(\"sum\", ({ x, y }) => x + y),\n *   Option.filter(({ x, y }) => x * y > 5)\n * )\n * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const bind = /*#__PURE__*/doNotation.bind(map, flatMap);\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Option.Do,\n *   Option.bind(\"x\", () => Option.some(2)),\n *   Option.bind(\"y\", () => Option.some(3)),\n *   Option.let(\"sum\", ({ x, y }) => x + y),\n *   Option.filter(({ x, y }) => x * y > 5)\n * )\n * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link bindTo}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const Do = /*#__PURE__*/some({});\nconst adapter = /*#__PURE__*/Gen.adapter();\n/**\n * Similar to `Effect.gen`, `Option.gen` provides a more readable,\n * generator-based syntax for working with `Option` values, making code that\n * involves `Option` easier to write and understand. This approach is similar to\n * using `async/await` but tailored for `Option`.\n *\n * **Example** (Using `Option.gen` to Create a Combined Value)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * const maybeName: Option.Option<string> = Option.some(\"John\")\n * const maybeAge: Option.Option<number> = Option.some(25)\n *\n * const person = Option.gen(function* () {\n *   const name = (yield* maybeName).toUpperCase()\n *   const age = yield* maybeAge\n *   return { name, age }\n * })\n *\n * console.log(person)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: { name: 'JOHN', age: 25 } }\n * ```\n *\n * @category Generators\n * @since 2.0.0\n */\nexport const gen = (...args) => {\n  const f = args.length === 1 ? args[0] : args[1].bind(args[0]);\n  const iterator = f(adapter);\n  let state = iterator.next();\n  while (!state.done) {\n    const current = Gen.isGenKind(state.value) ? state.value.value : Gen.yieldWrapGet(state.value);\n    if (isNone(current)) {\n      return current;\n    }\n    state = iterator.next(current.value);\n  }\n  return some(state.value);\n};\n/**\n * Merges two optional values, applying a function if both exist.\n * Unlike {@link zipWith}, this function returns `None` only if both inputs are `None`.\n *\n * @internal\n */\nexport const mergeWith = f => (o1, o2) => {\n  if (isNone(o1)) {\n    return o2;\n  } else if (isNone(o2)) {\n    return o1;\n  }\n  return some(f(o1.value, o2.value));\n};\n//# sourceMappingURL=Option.js.map","/**\n * This module provides utility functions for working with tuples in TypeScript.\n *\n * @since 2.0.0\n */\nimport * as Equivalence from \"./Equivalence.js\";\nimport { dual } from \"./Function.js\";\nimport * as order from \"./Order.js\";\n/**\n * Constructs a new tuple from the provided values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { make } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(make(1, 'hello', true), [1, 'hello', true])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const make = (...elements) => elements;\n/**\n * Return the first element of a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { getFirst } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(getFirst([\"hello\", 42]), \"hello\")\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getFirst = self => self[0];\n/**\n * Return the second element of a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { getSecond } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(getSecond([\"hello\", 42]), 42)\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getSecond = self => self[1];\n/**\n * Transforms each element of tuple using the given function, treating tuple homomorphically\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Tuple } from \"effect\"\n *\n * const result = pipe(\n *   [\"a\", 1, false] as const,\n *   Tuple.map((el) => el.toString().toUpperCase())\n * )\n * assert.deepStrictEqual(result, ['A', '1', 'FALSE'])\n * ```\n *\n * @category mapping\n * @since 3.9.0\n */\nexport const map = /*#__PURE__*/dual(2, (self, fn) => self.map(element => fn(element)));\n/**\n * Transforms both elements of a tuple using the given functions.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapBoth } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(\n *   mapBoth([\"hello\", 42], { onFirst: s => s.toUpperCase(), onSecond: n => n.toString() }),\n *   [\"HELLO\", \"42\"]\n * )\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapBoth = /*#__PURE__*/dual(2, (self, {\n  onFirst,\n  onSecond\n}) => [onFirst(self[0]), onSecond(self[1])]);\n/**\n * Transforms the first component of a tuple using a given function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapFirst } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(\n *   mapFirst([\"hello\", 42], s => s.toUpperCase()),\n *   [\"HELLO\", 42]\n * )\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapFirst = /*#__PURE__*/dual(2, (self, f) => [f(self[0]), self[1]]);\n/**\n * Transforms the second component of a tuple using a given function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapSecond } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(\n *   mapSecond([\"hello\", 42], n => n.toString()),\n *   [\"hello\", \"42\"]\n * )\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapSecond = /*#__PURE__*/dual(2, (self, f) => [self[0], f(self[1])]);\n/**\n * Swaps the two elements of a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { swap } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(swap([\"hello\", 42]), [42, \"hello\"])\n * ```\n *\n * @since 2.0.0\n */\nexport const swap = self => [self[1], self[0]];\n/**\n * Given a tuple of `Equivalence`s returns a new `Equivalence` that compares values of a tuple\n * by applying each `Equivalence` to the corresponding element of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const getEquivalence = Equivalence.tuple;\n/**\n * This function creates and returns a new `Order` for a tuple of values based on the given `Order`s for each element in the tuple.\n * The returned `Order` compares two tuples of the same type by applying the corresponding `Order` to each element in the tuple.\n * It is useful when you need to compare two tuples of the same type and you have a specific way of comparing each element\n * of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const getOrder = order.tuple;\n/**\n * Appends an element to the end of a tuple.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendElement = /*#__PURE__*/dual(2, (self, that) => [...self, that]);\n/**\n * Retrieves the element at a specified index from a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Tuple } from \"effect\"\n *\n * assert.deepStrictEqual(Tuple.at([1, 'hello', true], 1), 'hello')\n * ```\n *\n * @category getters\n * @since 3.4.0\n */\nexport const at = /*#__PURE__*/dual(2, (self, index) => self[index]);\nexport {\n/**\n * Determine if an `Array` is a tuple with exactly `N` elements, narrowing down the type to `TupleOf`.\n *\n * An `Array` is considered to be a `TupleOf` if its length is exactly `N`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTupleOf } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 3), true);\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 2), false);\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 4), false);\n *\n * const arr: number[] = [1, 2, 3];\n * if (isTupleOf(arr, 3)) {\n *   console.log(arr);\n *   // ^? [number, number, number]\n * }\n *\n * ```\n * @category guards\n * @since 3.3.0\n */\nisTupleOf,\n/**\n * Determine if an `Array` is a tuple with at least `N` elements, narrowing down the type to `TupleOfAtLeast`.\n *\n * An `Array` is considered to be a `TupleOfAtLeast` if its length is at least `N`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTupleOfAtLeast } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 3), true);\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 2), true);\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 4), false);\n *\n * const arr: number[] = [1, 2, 3, 4];\n * if (isTupleOfAtLeast(arr, 3)) {\n *   console.log(arr);\n *   // ^? [number, number, number, ...number[]]\n * }\n *\n * ```\n * @category guards\n * @since 3.3.0\n */\nisTupleOfAtLeast } from \"./Predicate.js\";\n//# sourceMappingURL=Tuple.js.map","/**\n * This module provides utility functions for working with Iterables in TypeScript.\n *\n * @since 2.0.0\n */\nimport * as E from \"./Either.js\";\nimport * as Equal from \"./Equal.js\";\nimport { dual, identity } from \"./Function.js\";\nimport * as O from \"./Option.js\";\nimport { isBoolean } from \"./Predicate.js\";\nimport * as Tuple from \"./Tuple.js\";\n/**\n * Return a `Iterable` with element `i` initialized with `f(i)`.\n *\n * If the `length` is not specified, the `Iterable` will be infinite.\n *\n * **Note**. `length` is normalized to an integer >= 1.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { makeBy } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(Array.from(makeBy(n => n * 2, { length: 5 })), [0, 2, 4, 6, 8])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const makeBy = (f, options) => {\n  const max = options?.length !== undefined ? Math.max(1, Math.floor(options.length)) : Infinity;\n  return {\n    [Symbol.iterator]() {\n      let i = 0;\n      return {\n        next() {\n          if (i < max) {\n            return {\n              value: f(i++),\n              done: false\n            };\n          }\n          return {\n            done: true,\n            value: undefined\n          };\n        }\n      };\n    }\n  };\n};\n/**\n * Return a `Iterable` containing a range of integers, including both endpoints.\n *\n * If `end` is omitted, the range will not have an upper bound.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { range } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(Array.from(range(1, 3)), [1, 2, 3])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const range = (start, end) => {\n  if (end === undefined) {\n    return makeBy(i => start + i);\n  }\n  return makeBy(i => start + i, {\n    length: start <= end ? end - start + 1 : 1\n  });\n};\n/**\n * Return a `Iterable` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { replicate } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(Array.from(replicate(\"a\", 3)), [\"a\", \"a\", \"a\"])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const replicate = /*#__PURE__*/dual(2, (a, n) => makeBy(() => a, {\n  length: n\n}));\n/**\n * Takes a record and returns an Iterable of tuples containing its keys and values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { fromRecord } from \"effect/Iterable\"\n *\n * const x = { a: 1, b: 2, c: 3 }\n * assert.deepStrictEqual(Array.from(fromRecord(x)), [[\"a\", 1], [\"b\", 2], [\"c\", 3]])\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const fromRecord = self => ({\n  *[Symbol.iterator]() {\n    for (const key in self) {\n      if (Object.prototype.hasOwnProperty.call(self, key)) {\n        yield [key, self[key]];\n      }\n    }\n  }\n});\n/**\n * Prepend an element to the front of an `Iterable`, creating a new `Iterable`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prepend = /*#__PURE__*/dual(2, (self, head) => prependAll(self, [head]));\n/**\n * Prepends the specified prefix iterable to the beginning of the specified iterable.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.prependAll([1, 2], [\"a\", \"b\"])),\n *   [\"a\", \"b\", 1, 2]\n * )\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prependAll = /*#__PURE__*/dual(2, (self, that) => appendAll(that, self));\n/**\n * Append an element to the end of an `Iterable`, creating a new `Iterable`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const append = /*#__PURE__*/dual(2, (self, last) => appendAll(self, [last]));\n/**\n * Concatenates two iterables, combining their elements.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendAll = /*#__PURE__*/dual(2, (self, that) => ({\n  [Symbol.iterator]() {\n    const iterA = self[Symbol.iterator]();\n    let doneA = false;\n    let iterB;\n    return {\n      next() {\n        if (!doneA) {\n          const r = iterA.next();\n          if (r.done) {\n            doneA = true;\n            iterB = that[Symbol.iterator]();\n            return iterB.next();\n          }\n          return r;\n        }\n        return iterB.next();\n      }\n    };\n  }\n}));\n/**\n * Reduce an `Iterable` from the left, keeping all intermediate results instead of only the final result.\n *\n * @category folding\n * @since 2.0.0\n */\nexport const scan = /*#__PURE__*/dual(3, (self, b, f) => ({\n  [Symbol.iterator]() {\n    let acc = b;\n    let iterator;\n    function next() {\n      if (iterator === undefined) {\n        iterator = self[Symbol.iterator]();\n        return {\n          done: false,\n          value: acc\n        };\n      }\n      const result = iterator.next();\n      if (result.done) {\n        return result;\n      }\n      acc = f(acc, result.value);\n      return {\n        done: false,\n        value: acc\n      };\n    }\n    return {\n      next\n    };\n  }\n}));\n/**\n * Determine if an `Iterable` is empty\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isEmpty } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(isEmpty([]), true);\n * assert.deepStrictEqual(isEmpty([1, 2, 3]), false);\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmpty = self => {\n  const iterator = self[Symbol.iterator]();\n  return iterator.next().done === true;\n};\n/**\n * Return the number of elements in a `Iterable`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const size = self => {\n  const iterator = self[Symbol.iterator]();\n  let count = 0;\n  while (!iterator.next().done) {\n    count++;\n  }\n  return count;\n};\n/**\n * Get the first element of a `Iterable`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const head = self => {\n  const iterator = self[Symbol.iterator]();\n  const result = iterator.next();\n  return result.done ? O.none() : O.some(result.value);\n};\n/**\n * Get the first element of a `Iterable`, or throw an error if the `Iterable` is empty.\n *\n * @category getters\n * @since 3.3.0\n */\nexport const unsafeHead = self => {\n  const iterator = self[Symbol.iterator]();\n  const result = iterator.next();\n  if (result.done) throw new Error(\"unsafeHead: empty iterable\");\n  return result.value;\n};\n/**\n * Keep only a max number of elements from the start of an `Iterable`, creating a new `Iterable`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const take = /*#__PURE__*/dual(2, (self, n) => ({\n  [Symbol.iterator]() {\n    let i = 0;\n    const iterator = self[Symbol.iterator]();\n    return {\n      next() {\n        if (i < n) {\n          i++;\n          return iterator.next();\n        }\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  }\n}));\n/**\n * Calculate the longest initial Iterable for which all element satisfy the specified predicate, creating a new `Iterable`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const takeWhile = /*#__PURE__*/dual(2, (self, predicate) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let i = 0;\n    return {\n      next() {\n        const result = iterator.next();\n        if (result.done || !predicate(result.value, i++)) {\n          return {\n            done: true,\n            value: undefined\n          };\n        }\n        return result;\n      }\n    };\n  }\n}));\n/**\n * Drop a max number of elements from the start of an `Iterable`\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const drop = /*#__PURE__*/dual(2, (self, n) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let i = 0;\n    return {\n      next() {\n        while (i < n) {\n          const result = iterator.next();\n          if (result.done) {\n            return {\n              done: true,\n              value: undefined\n            };\n          }\n          i++;\n        }\n        return iterator.next();\n      }\n    };\n  }\n}));\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirst = /*#__PURE__*/dual(2, (self, f) => {\n  let i = 0;\n  for (const a of self) {\n    const o = f(a, i);\n    if (isBoolean(o)) {\n      if (o) {\n        return O.some(a);\n      }\n    } else {\n      if (O.isSome(o)) {\n        return o;\n      }\n    }\n    i++;\n  }\n  return O.none();\n});\n/**\n * Find the last element for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLast = /*#__PURE__*/dual(2, (self, f) => {\n  let i = 0;\n  let last = O.none();\n  for (const a of self) {\n    const o = f(a, i);\n    if (isBoolean(o)) {\n      if (o) {\n        last = O.some(a);\n      }\n    } else {\n      if (O.isSome(o)) {\n        last = o;\n      }\n    }\n    i++;\n  }\n  return last;\n});\n/**\n * Takes two `Iterable`s and returns an `Iterable` of corresponding pairs.\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zip = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, Tuple.make));\n/**\n * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results. If one\n * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zipWith = /*#__PURE__*/dual(3, (self, that, f) => ({\n  [Symbol.iterator]() {\n    const selfIterator = self[Symbol.iterator]();\n    const thatIterator = that[Symbol.iterator]();\n    return {\n      next() {\n        const selfResult = selfIterator.next();\n        const thatResult = thatIterator.next();\n        if (selfResult.done || thatResult.done) {\n          return {\n            done: true,\n            value: undefined\n          };\n        }\n        return {\n          done: false,\n          value: f(selfResult.value, thatResult.value)\n        };\n      }\n    };\n  }\n}));\n/**\n * Places an element in between members of an `Iterable`.\n * If the input is a non-empty array, the result is also a non-empty array.\n *\n * @since 2.0.0\n */\nexport const intersperse = /*#__PURE__*/dual(2, (self, middle) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let next = iterator.next();\n    let emitted = false;\n    return {\n      next() {\n        if (next.done) {\n          return next;\n        } else if (emitted) {\n          emitted = false;\n          return {\n            done: false,\n            value: middle\n          };\n        }\n        emitted = true;\n        const result = next;\n        next = iterator.next();\n        return result;\n      }\n    };\n  }\n}));\n/**\n * Returns a function that checks if an `Iterable` contains a given value using a provided `isEquivalent` function.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const containsWith = isEquivalent => dual(2, (self, a) => {\n  for (const i of self) {\n    if (isEquivalent(a, i)) {\n      return true;\n    }\n  }\n  return false;\n});\nconst _equivalence = /*#__PURE__*/Equal.equivalence();\n/**\n * Returns a function that checks if a `Iterable` contains a given value using the default `Equivalence`.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const contains = /*#__PURE__*/containsWith(_equivalence);\n/**\n * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `Iterable`.\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const chunksOf = /*#__PURE__*/dual(2, (self, n) => {\n  const safeN = Math.max(1, Math.floor(n));\n  return {\n    [Symbol.iterator]() {\n      let iterator = self[Symbol.iterator]();\n      return {\n        next() {\n          if (iterator === undefined) {\n            return {\n              done: true,\n              value: undefined\n            };\n          }\n          const chunk = [];\n          for (let i = 0; i < safeN; i++) {\n            const result = iterator.next();\n            if (result.done) {\n              iterator = undefined;\n              return chunk.length === 0 ? {\n                done: true,\n                value: undefined\n              } : {\n                done: false,\n                value: chunk\n              };\n            }\n            chunk.push(result.value);\n          }\n          return {\n            done: false,\n            value: chunk\n          };\n        }\n      };\n    }\n  };\n});\n/**\n * Group equal, consecutive elements of an `Iterable` into `NonEmptyArray`s using the provided `isEquivalent` function.\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupWith = /*#__PURE__*/dual(2, (self, isEquivalent) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let nextResult;\n    return {\n      next() {\n        let result;\n        if (nextResult !== undefined) {\n          if (nextResult.done) {\n            return {\n              done: true,\n              value: undefined\n            };\n          }\n          result = nextResult;\n          nextResult = undefined;\n        } else {\n          result = iterator.next();\n          if (result.done) {\n            return {\n              done: true,\n              value: undefined\n            };\n          }\n        }\n        const chunk = [result.value];\n        while (true) {\n          const next = iterator.next();\n          if (next.done || !isEquivalent(result.value, next.value)) {\n            nextResult = next;\n            return {\n              done: false,\n              value: chunk\n            };\n          }\n          chunk.push(next.value);\n        }\n      }\n    };\n  }\n}));\n/**\n * Group equal, consecutive elements of an `Iterable` into `NonEmptyArray`s.\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const group = /*#__PURE__*/groupWith( /*#__PURE__*/Equal.equivalence());\n/**\n * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupBy = /*#__PURE__*/dual(2, (self, f) => {\n  const out = {};\n  for (const a of self) {\n    const k = f(a);\n    if (Object.prototype.hasOwnProperty.call(out, k)) {\n      out[k].push(a);\n    } else {\n      out[k] = [a];\n    }\n  }\n  return out;\n});\nconst constEmpty = {\n  [Symbol.iterator]() {\n    return constEmptyIterator;\n  }\n};\nconst constEmptyIterator = {\n  next() {\n    return {\n      done: true,\n      value: undefined\n    };\n  }\n};\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const empty = () => constEmpty;\n/**\n * Constructs a new `Iterable<A>` from the specified value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const of = a => [a];\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let i = 0;\n    return {\n      next() {\n        const result = iterator.next();\n        if (result.done) {\n          return {\n            done: true,\n            value: undefined\n          };\n        }\n        return {\n          done: false,\n          value: f(result.value, i++)\n        };\n      }\n    };\n  }\n}));\n/**\n * Applies a function to each element in an Iterable and returns a new Iterable containing the concatenated mapped elements.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => flatten(map(self, f)));\n/**\n * Flattens an Iterable of Iterables into a single Iterable\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatten = self => ({\n  [Symbol.iterator]() {\n    const outerIterator = self[Symbol.iterator]();\n    let innerIterator;\n    function next() {\n      if (innerIterator === undefined) {\n        const next = outerIterator.next();\n        if (next.done) {\n          return next;\n        }\n        innerIterator = next.value[Symbol.iterator]();\n      }\n      const result = innerIterator.next();\n      if (result.done) {\n        innerIterator = undefined;\n        return next();\n      }\n      return result;\n    }\n    return {\n      next\n    };\n  }\n});\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMap = /*#__PURE__*/dual(2, (self, f) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let i = 0;\n    return {\n      next() {\n        let result = iterator.next();\n        while (!result.done) {\n          const b = f(result.value, i++);\n          if (O.isSome(b)) {\n            return {\n              done: false,\n              value: b.value\n            };\n          }\n          result = iterator.next();\n        }\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  }\n}));\n/**\n * Transforms all elements of the `Iterable` for as long as the specified function returns some value\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMapWhile = /*#__PURE__*/dual(2, (self, f) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let i = 0;\n    return {\n      next() {\n        const result = iterator.next();\n        if (result.done) {\n          return {\n            done: true,\n            value: undefined\n          };\n        }\n        const b = f(result.value, i++);\n        if (O.isSome(b)) {\n          return {\n            done: false,\n            value: b.value\n          };\n        }\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  }\n}));\n/**\n * Retrieves the `Some` values from an `Iterable` of `Option`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable, Option } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.getSomes([Option.some(1), Option.none(), Option.some(2)])),\n *   [1, 2]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getSomes = /*#__PURE__*/filterMap(identity);\n/**\n * Retrieves the `Left` values from an `Iterable` of `Either`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable, Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.getLefts([Either.right(1), Either.left(\"err\"), Either.right(2)])),\n *   [\"err\"]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getLefts = self => filterMap(self, E.getLeft);\n/**\n * Retrieves the `Right` values from an `Iterable` of `Either`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable, Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.getRights([Either.right(1), Either.left(\"err\"), Either.right(2)])),\n *   [1, 2]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getRights = self => filterMap(self, E.getRight);\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport const filter = /*#__PURE__*/dual(2, (self, predicate) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let i = 0;\n    return {\n      next() {\n        let result = iterator.next();\n        while (!result.done) {\n          if (predicate(result.value, i++)) {\n            return {\n              done: false,\n              value: result.value\n            };\n          }\n          result = iterator.next();\n        }\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  }\n}));\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMapNullable = /*#__PURE__*/dual(2, (self, f) => filterMap(self, a => {\n  const b = f(a);\n  return b == null ? O.none() : O.some(b);\n}));\n/**\n * Check if a predicate holds true for some `Iterable` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const some = /*#__PURE__*/dual(2, (self, predicate) => {\n  let i = 0;\n  for (const a of self) {\n    if (predicate(a, i++)) {\n      return true;\n    }\n  }\n  return false;\n});\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const unfold = (b, f) => ({\n  [Symbol.iterator]() {\n    let next = b;\n    return {\n      next() {\n        const o = f(next);\n        if (O.isNone(o)) {\n          return {\n            done: true,\n            value: undefined\n          };\n        }\n        const [a, b] = o.value;\n        next = b;\n        return {\n          done: false,\n          value: a\n        };\n      }\n    };\n  }\n});\n/**\n * Iterate over the `Iterable` applying `f`.\n *\n * @since 2.0.0\n */\nexport const forEach = /*#__PURE__*/dual(2, (self, f) => {\n  let i = 0;\n  for (const a of self) {\n    f(a, i++);\n  }\n});\n/**\n * @category folding\n * @since 2.0.0\n */\nexport const reduce = /*#__PURE__*/dual(3, (self, b, f) => {\n  if (Array.isArray(self)) {\n    return self.reduce(f, b);\n  }\n  let i = 0;\n  let result = b;\n  for (const n of self) {\n    result = f(result, n, i++);\n  }\n  return result;\n});\n/**\n * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacentWith = /*#__PURE__*/dual(2, (self, isEquivalent) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]();\n    let first = true;\n    let last;\n    function next() {\n      const result = iterator.next();\n      if (result.done) {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (first) {\n        first = false;\n        last = result.value;\n        return result;\n      }\n      const current = result.value;\n      if (isEquivalent(last, current)) {\n        return next();\n      }\n      last = current;\n      return result;\n    }\n    return {\n      next\n    };\n  }\n}));\n/**\n * Deduplicates adjacent elements that are identical.\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacent = /*#__PURE__*/dedupeAdjacentWith( /*#__PURE__*/Equal.equivalence());\n/**\n * Zips this Iterable crosswise with the specified Iterable using the specified combiner.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesianWith = /*#__PURE__*/dual(3, (self, that, f) => flatMap(self, a => map(that, b => f(a, b))));\n/**\n * Zips this Iterable crosswise with the specified Iterable.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesian = /*#__PURE__*/dual(2, (self, that) => cartesianWith(self, that, (a, b) => [a, b]));\n//# sourceMappingURL=Iterable.js.map","/**\n * This module provides utility functions for working with arrays in TypeScript.\n *\n * @since 2.0.0\n */\nimport * as Either from \"./Either.js\";\nimport * as Equal from \"./Equal.js\";\nimport * as Equivalence from \"./Equivalence.js\";\nimport { dual, identity } from \"./Function.js\";\nimport * as internalArray from \"./internal/array.js\";\nimport * as internalDoNotation from \"./internal/doNotation.js\";\nimport * as moduleIterable from \"./Iterable.js\";\nimport * as Option from \"./Option.js\";\nimport * as Order from \"./Order.js\";\nimport * as Predicate from \"./Predicate.js\";\nimport * as Record from \"./Record.js\";\nimport * as Tuple from \"./Tuple.js\";\n/**\n * Builds a `NonEmptyArray` from an non-empty collection of elements.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.make(1, 2, 3)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const make = (...elements) => elements;\n/**\n * Creates a new `Array` of the specified length.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.allocate<number>(3)\n * console.log(result) // [ <3 empty items> ]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const allocate = n => new Array(n);\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * **Example**\n *\n * ```ts\n * import { makeBy } from \"effect/Array\"\n *\n * const result = makeBy(5, n => n * 2)\n * console.log(result) // [0, 2, 4, 6, 8]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const makeBy = /*#__PURE__*/dual(2, (n, f) => {\n  const max = Math.max(1, Math.floor(n));\n  const out = new Array(max);\n  for (let i = 0; i < max; i++) {\n    out[i] = f(i);\n  }\n  return out;\n});\n/**\n * Return a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * **Example**\n *\n * ```ts\n * import { range } from \"effect/Array\"\n *\n * const result = range(1, 3)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const range = (start, end) => start <= end ? makeBy(end - start + 1, i => start + i) : [start];\n/**\n * Return a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.replicate(\"a\", 3)\n * console.log(result) // [\"a\", \"a\", \"a\"]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const replicate = /*#__PURE__*/dual(2, (a, n) => makeBy(n, () => a));\n/**\n * Creates a new `Array` from an iterable collection of values.\n * If the input is already an array, it returns the input as-is.\n * Otherwise, it converts the iterable collection to an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.fromIterable(new Set([1, 2, 3]))\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromIterable = collection => Array.isArray(collection) ? collection : Array.from(collection);\n/**\n * Creates a new `Array` from a value that might not be an iterable.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.ensure(\"a\")) // [\"a\"]\n * console.log(Array.ensure([\"a\"])) // [\"a\"]\n * console.log(Array.ensure([\"a\", \"b\", \"c\"])) // [\"a\", \"b\", \"c\"]\n * ```\n *\n * @category constructors\n * @since 3.3.0\n */\nexport const ensure = self => Array.isArray(self) ? self : [self];\n/**\n * Takes a record and returns an array of tuples containing its keys and values.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.fromRecord({ a: 1, b: 2, c: 3 })\n * console.log(result) // [[\"a\", 1], [\"b\", 2], [\"c\", 3]]\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const fromRecord = Record.toEntries;\n/**\n * Converts an `Option` to an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * console.log(Array.fromOption(Option.some(1))) // [1]\n * console.log(Array.fromOption(Option.none())) // []\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const fromOption = Option.toArray;\n/**\n * Matches the elements of an array, applying functions to cases of empty and non-empty arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const match = Array.match({\n *   onEmpty: () => \"empty\",\n *   onNonEmpty: ([head, ...tail]) => `head: ${head}, tail: ${tail.length}`\n * })\n * console.log(match([])) // \"empty\"\n * console.log(match([1, 2, 3])) // \"head: 1, tail: 2\"\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const match = /*#__PURE__*/dual(2, (self, {\n  onEmpty,\n  onNonEmpty\n}) => isNonEmptyReadonlyArray(self) ? onNonEmpty(self) : onEmpty());\n/**\n * Matches the elements of an array from the left, applying functions to cases of empty and non-empty arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const matchLeft = Array.matchLeft({\n *   onEmpty: () => \"empty\",\n *   onNonEmpty: (head, tail) => `head: ${head}, tail: ${tail.length}`\n * })\n * console.log(matchLeft([])) // \"empty\"\n * console.log(matchLeft([1, 2, 3])) // \"head: 1, tail: 2\"\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const matchLeft = /*#__PURE__*/dual(2, (self, {\n  onEmpty,\n  onNonEmpty\n}) => isNonEmptyReadonlyArray(self) ? onNonEmpty(headNonEmpty(self), tailNonEmpty(self)) : onEmpty());\n/**\n * Matches the elements of an array from the right, applying functions to cases of empty and non-empty arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const matchRight = Array.matchRight({\n *   onEmpty: () => \"empty\",\n *   onNonEmpty: (init, last) => `init: ${init.length}, last: ${last}`\n * })\n * console.log(matchRight([])) // \"empty\"\n * console.log(matchRight([1, 2, 3])) // \"init: 2, last: 3\"\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const matchRight = /*#__PURE__*/dual(2, (self, {\n  onEmpty,\n  onNonEmpty\n}) => isNonEmptyReadonlyArray(self) ? onNonEmpty(initNonEmpty(self), lastNonEmpty(self)) : onEmpty());\n/**\n * Prepend an element to the front of an `Iterable`, creating a new `NonEmptyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.prepend([2, 3, 4], 1)\n * console.log(result) // [1, 2, 3, 4]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prepend = /*#__PURE__*/dual(2, (self, head) => [head, ...self]);\n/**\n * Prepends the specified prefix array (or iterable) to the beginning of the specified array (or iterable).\n * If either array is non-empty, the result is also a non-empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.prependAll([2, 3], [0, 1])\n * console.log(result) // [0, 1, 2, 3]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prependAll = /*#__PURE__*/dual(2, (self, that) => fromIterable(that).concat(fromIterable(self)));\n/**\n * Append an element to the end of an `Iterable`, creating a new `NonEmptyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.append([1, 2, 3], 4);\n * console.log(result) // [1, 2, 3, 4]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const append = /*#__PURE__*/dual(2, (self, last) => [...self, last]);\n/**\n * Concatenates two arrays (or iterables), combining their elements.\n * If either array is non-empty, the result is also a non-empty array.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendAll = /*#__PURE__*/dual(2, (self, that) => fromIterable(self).concat(fromIterable(that)));\n/**\n * Accumulates values from an `Iterable` starting from the left, storing\n * each intermediate result in an array. Useful for tracking the progression of\n * a value through a series of transformations.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.scan([1, 2, 3, 4], 0, (acc, value) => acc + value)\n * console.log(result) // [0, 1, 3, 6, 10]\n *\n * // Explanation:\n * // This function starts with the initial value (0 in this case)\n * // and adds each element of the array to this accumulator one by one,\n * // keeping track of the cumulative sum after each addition.\n * // Each of these sums is captured in the resulting array.\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const scan = /*#__PURE__*/dual(3, (self, b, f) => {\n  const out = [b];\n  let i = 0;\n  for (const a of self) {\n    out[i + 1] = f(out[i], a);\n    i++;\n  }\n  return out;\n});\n/**\n * Accumulates values from an `Iterable` starting from the right, storing\n * each intermediate result in an array. Useful for tracking the progression of\n * a value through a series of transformations.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.scanRight([1, 2, 3, 4], 0, (acc, value) => acc + value)\n * console.log(result) // [10, 9, 7, 4, 0]\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const scanRight = /*#__PURE__*/dual(3, (self, b, f) => {\n  const input = fromIterable(self);\n  const out = new Array(input.length + 1);\n  out[input.length] = b;\n  for (let i = input.length - 1; i >= 0; i--) {\n    out[i] = f(out[i + 1], input[i]);\n  }\n  return out;\n});\n/**\n * Determine if `unknown` is an Array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isArray(null)) // false\n * console.log(Array.isArray([1, 2, 3])) // true\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isArray = Array.isArray;\n/**\n * Determine if an `Array` is empty narrowing down the type to `[]`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isEmptyArray([])) // true\n * console.log(Array.isEmptyArray([1, 2, 3])) // false\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmptyArray = self => self.length === 0;\n/**\n * Determine if a `ReadonlyArray` is empty narrowing down the type to `readonly []`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isEmptyReadonlyArray([])) // true\n * console.log(Array.isEmptyReadonlyArray([1, 2, 3])) // false\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmptyReadonlyArray = isEmptyArray;\n/**\n * Determine if an `Array` is non empty narrowing down the type to `NonEmptyArray`.\n *\n * An `Array` is considered to be a `NonEmptyArray` if it contains at least one element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isNonEmptyArray([])) // false\n * console.log(Array.isNonEmptyArray([1, 2, 3])) // true\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNonEmptyArray = internalArray.isNonEmptyArray;\n/**\n * Determine if a `ReadonlyArray` is non empty narrowing down the type to `NonEmptyReadonlyArray`.\n *\n * A `ReadonlyArray` is considered to be a `NonEmptyReadonlyArray` if it contains at least one element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isNonEmptyReadonlyArray([])) // false\n * console.log(Array.isNonEmptyReadonlyArray([1, 2, 3])) // true\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNonEmptyReadonlyArray = internalArray.isNonEmptyArray;\n/**\n * Return the number of elements in a `ReadonlyArray`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const length = self => self.length;\nconst isOutOfBounds = (i, as) => i < 0 || i >= as.length;\nconst clamp = (i, as) => Math.floor(Math.min(Math.max(0, i), as.length));\n/**\n * This function provides a safe way to read a value at a particular index from a `ReadonlyArray`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const get = /*#__PURE__*/dual(2, (self, index) => {\n  const i = Math.floor(index);\n  return isOutOfBounds(i, self) ? Option.none() : Option.some(self[i]);\n});\n/**\n * Gets an element unsafely, will throw on out of bounds.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeGet = /*#__PURE__*/dual(2, (self, index) => {\n  const i = Math.floor(index);\n  if (isOutOfBounds(i, self)) {\n    throw new Error(`Index ${i} out of bounds`);\n  }\n  return self[i];\n});\n/**\n * Return a tuple containing the first element, and a new `Array` of the remaining elements, if any.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.unprepend([1, 2, 3, 4])\n * console.log(result) // [1, [2, 3, 4]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const unprepend = self => [headNonEmpty(self), tailNonEmpty(self)];\n/**\n * Return a tuple containing a copy of the `NonEmptyReadonlyArray` without its last element, and that last element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.unappend([1, 2, 3, 4])\n * console.log(result) // [[1, 2, 3], 4]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const unappend = self => [initNonEmpty(self), lastNonEmpty(self)];\n/**\n * Get the first element of a `ReadonlyArray`, or `None` if the `ReadonlyArray` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const head = /*#__PURE__*/get(0);\n/**\n * Get the first element of a non empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.headNonEmpty([1, 2, 3, 4])\n * console.log(result) // 1\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const headNonEmpty = /*#__PURE__*/unsafeGet(0);\n/**\n * Get the last element in a `ReadonlyArray`, or `None` if the `ReadonlyArray` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const last = self => isNonEmptyReadonlyArray(self) ? Option.some(lastNonEmpty(self)) : Option.none();\n/**\n * Get the last element of a non empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.lastNonEmpty([1, 2, 3, 4])\n * console.log(result) // 4\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const lastNonEmpty = self => self[self.length - 1];\n/**\n * Get all but the first element of an `Iterable`, creating a new `Array`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const tail = self => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? Option.some(tailNonEmpty(input)) : Option.none();\n};\n/**\n * Get all but the first element of a `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.tailNonEmpty([1, 2, 3, 4])\n * console.log(result) // [2, 3, 4]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const tailNonEmpty = self => self.slice(1);\n/**\n * Get all but the last element of an `Iterable`, creating a new `Array`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const init = self => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? Option.some(initNonEmpty(input)) : Option.none();\n};\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.initNonEmpty([1, 2, 3, 4])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const initNonEmpty = self => self.slice(0, -1);\n/**\n * Keep only a max number of elements from the start of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.take([1, 2, 3, 4, 5], 3)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const take = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return input.slice(0, clamp(n, input));\n});\n/**\n * Keep only a max number of elements from the end of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.takeRight([1, 2, 3, 4, 5], 3)\n * console.log(result) // [3, 4, 5]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const takeRight = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  const i = clamp(n, input);\n  return i === 0 ? [] : input.slice(-i);\n});\n/**\n * Calculate the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.takeWhile([1, 3, 2, 4, 1, 2], x => x < 4)\n * console.log(result) // [1, 3, 2]\n *\n * // Explanation:\n * // - The function starts with the first element (`1`), which is less than `4`, so it adds `1` to the result.\n * // - The next element (`3`) is also less than `4`, so it adds `3`.\n * // - The next element (`2`) is again less than `4`, so it adds `2`.\n * // - The function then encounters `4`, which is not less than `4`. At this point, it stops checking further elements and finalizes the result.\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const takeWhile = /*#__PURE__*/dual(2, (self, predicate) => {\n  let i = 0;\n  const out = [];\n  for (const a of self) {\n    if (!predicate(a, i)) {\n      break;\n    }\n    out.push(a);\n    i++;\n  }\n  return out;\n});\nconst spanIndex = (self, predicate) => {\n  let i = 0;\n  for (const a of self) {\n    if (!predicate(a, i)) {\n      break;\n    }\n    i++;\n  }\n  return i;\n};\n/**\n * Split an `Iterable` into two parts:\n *\n * 1. the longest initial subarray for which all elements satisfy the specified predicate\n * 2. the remaining elements\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const span = /*#__PURE__*/dual(2, (self, predicate) => splitAt(self, spanIndex(self, predicate)));\n/**\n * Drop a max number of elements from the start of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.drop([1, 2, 3, 4, 5], 2)\n * console.log(result) // [3, 4, 5]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const drop = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return input.slice(clamp(n, input), input.length);\n});\n/**\n * Drop a max number of elements from the end of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dropRight([1, 2, 3, 4, 5], 2)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const dropRight = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return input.slice(0, input.length - clamp(n, input));\n});\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dropWhile([1, 2, 3, 4, 5], x => x < 4)\n * console.log(result) // [4, 5]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const dropWhile = /*#__PURE__*/dual(2, (self, predicate) => fromIterable(self).slice(spanIndex(self, predicate)));\n/**\n * Return the first index for which a predicate holds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findFirstIndex([5, 3, 8, 9], x => x > 5)\n * console.log(result) // Option.some(2)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirstIndex = /*#__PURE__*/dual(2, (self, predicate) => {\n  let i = 0;\n  for (const a of self) {\n    if (predicate(a, i)) {\n      return Option.some(i);\n    }\n    i++;\n  }\n  return Option.none();\n});\n/**\n * Return the last index for which a predicate holds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findLastIndex([1, 3, 8, 9], x => x < 5)\n * console.log(result) // Option.some(1)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLastIndex = /*#__PURE__*/dual(2, (self, predicate) => {\n  const input = fromIterable(self);\n  for (let i = input.length - 1; i >= 0; i--) {\n    if (predicate(input[i], i)) {\n      return Option.some(i);\n    }\n  }\n  return Option.none();\n});\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n * console.log(result) // Option.some(4)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirst = moduleIterable.findFirst;\n/**\n * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n * console.log(result) // Option.some(4)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLast = /*#__PURE__*/dual(2, (self, f) => {\n  const input = fromIterable(self);\n  for (let i = input.length - 1; i >= 0; i--) {\n    const a = input[i];\n    const o = f(a, i);\n    if (Predicate.isBoolean(o)) {\n      if (o) {\n        return Option.some(a);\n      }\n    } else {\n      if (Option.isSome(o)) {\n        return o;\n      }\n    }\n  }\n  return Option.none();\n});\n/**\n * Insert an element at the specified index, creating a new `NonEmptyArray`,\n * or return `None` if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.insertAt(['a', 'b', 'c', 'e'], 3, 'd')\n * console.log(result) // Option.some(['a', 'b', 'c', 'd', 'e'])\n * ```\n *\n * @since 2.0.0\n */\nexport const insertAt = /*#__PURE__*/dual(3, (self, i, b) => {\n  const out = Array.from(self);\n  //             v--- `= self.length` is ok, it means inserting in last position\n  if (i < 0 || i > out.length) {\n    return Option.none();\n  }\n  out.splice(i, 0, b);\n  return Option.some(out);\n});\n/**\n * Change the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.replace(['a', 'b', 'c', 'd'], 1, 'z')\n * console.log(result) // ['a', 'z', 'c', 'd']\n * ```\n *\n * @since 2.0.0\n */\nexport const replace = /*#__PURE__*/dual(3, (self, i, b) => modify(self, i, () => b));\n/**\n * Replaces an element in an array with the given value, returning an option of the updated array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.replaceOption([1, 2, 3], 1, 4)\n * console.log(result) // Option.some([1, 4, 3])\n * ```\n *\n * @since 2.0.0\n */\nexport const replaceOption = /*#__PURE__*/dual(3, (self, i, b) => modifyOption(self, i, () => b));\n/**\n * Apply a function to the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.modify([1, 2, 3, 4], 2, (n) => n * 2)\n * console.log(result) // [1, 2, 6, 4]\n * ```\n *\n * @since 2.0.0\n */\nexport const modify = /*#__PURE__*/dual(3, (self, i, f) => Option.getOrElse(modifyOption(self, i, f), () => Array.from(self)));\n/**\n * Apply a function to the element at the specified index, creating a new `Array`,\n * or return `None` if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const input = [1, 2, 3, 4]\n * const result = Array.modifyOption(input, 2, (n) => n * 2)\n * console.log(result) // Option.some([1, 2, 6, 4])\n *\n * const outOfBoundsResult = Array.modifyOption(input, 5, (n) => n * 2)\n * console.log(outOfBoundsResult) // Option.none()\n * ```\n *\n * @since 2.0.0\n */\nexport const modifyOption = /*#__PURE__*/dual(3, (self, i, f) => {\n  const arr = Array.from(self);\n  if (isOutOfBounds(i, arr)) {\n    return Option.none();\n  }\n  const out = arr;\n  const b = f(arr[i]);\n  out[i] = b;\n  return Option.some(out);\n});\n/**\n * Delete the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const input = [1, 2, 3, 4]\n * const result = Array.remove(input, 2)\n * console.log(result) // [1, 2, 4]\n *\n * const outOfBoundsResult = Array.remove(input, 5)\n * console.log(outOfBoundsResult) // [1, 2, 3, 4]\n * ```\n *\n * @since 2.0.0\n */\nexport const remove = /*#__PURE__*/dual(2, (self, i) => {\n  const out = Array.from(self);\n  if (isOutOfBounds(i, out)) {\n    return out;\n  }\n  out.splice(i, 1);\n  return out;\n});\n/**\n * Reverse an `Iterable`, creating a new `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.reverse([1, 2, 3, 4])\n * console.log(result) // [4, 3, 2, 1]\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const reverse = self => Array.from(self).reverse();\n/**\n * Create a new array with elements sorted in increasing order based on the specified comparator.\n * If the input is a `NonEmptyReadonlyArray`, the output will also be a `NonEmptyReadonlyArray`.\n *\n * @category sorting\n * @since 2.0.0\n */\nexport const sort = /*#__PURE__*/dual(2, (self, O) => {\n  const out = Array.from(self);\n  out.sort(O);\n  return out;\n});\n/**\n * Sorts an array based on a provided mapping function and order. The mapping\n * function transforms the elements into a value that can be compared, and the\n * order defines how those values should be sorted.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order } from \"effect\"\n *\n * const result = Array.sortWith([\"aaa\", \"b\", \"cc\"], (s) => s.length, Order.number)\n * console.log(result) // [\"b\", \"cc\", \"aaa\"]\n *\n * // Explanation:\n * // The array of strings is sorted based on their lengths. The mapping function `(s) => s.length`\n * // converts each string into its length, and the `Order.number` specifies that the lengths should\n * // be sorted in ascending order.\n * ```\n *\n * @since 2.0.0\n * @category elements\n */\nexport const sortWith = /*#__PURE__*/dual(3, (self, f, order) => Array.from(self).map(a => [a, f(a)]).sort(([, a], [, b]) => order(a, b)).map(([_]) => _));\n/**\n * Sorts the elements of an `Iterable` in increasing order based on the provided\n * orders. The elements are compared using the first order in `orders`, then the\n * second order if the first comparison is equal, and so on.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order, pipe } from \"effect\"\n *\n * const users = [\n *   { name: \"Alice\", age: 30 },\n *   { name: \"Bob\", age: 25 },\n *   { name: \"Charlie\", age: 30 }\n * ]\n *\n * const result = pipe(\n *   users,\n *   Array.sortBy(\n *     Order.mapInput(Order.number, (user: (typeof users)[number]) => user.age),\n *     Order.mapInput(Order.string, (user: (typeof users)[number]) => user.name)\n *   )\n * )\n *\n * console.log(result)\n * // [\n * //   { name: \"Bob\", age: 25 },\n * //   { name: \"Alice\", age: 30 },\n * //   { name: \"Charlie\", age: 30 }\n * // ]\n *\n * // Explanation:\n * // The array of users is sorted first by age in ascending order. When ages are equal,\n * // the users are further sorted by name in ascending order.\n * ```\n *\n * @category sorting\n * @since 2.0.0\n */\nexport const sortBy = (...orders) => {\n  const sortByAll = sort(Order.combineAll(orders));\n  return self => {\n    const input = fromIterable(self);\n    if (isNonEmptyReadonlyArray(input)) {\n      return sortByAll(input);\n    }\n    return [];\n  };\n};\n/**\n * Takes two `Iterable`s and returns an `Array` of corresponding pairs.\n * If one input `Iterable` is short, excess elements of the\n * longer `Iterable` are discarded.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.zip([1, 2, 3], ['a', 'b'])\n * console.log(result) // [[1, 'a'], [2, 'b']]\n * ```\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zip = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, Tuple.make));\n/**\n * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results in a new `Array`. If one\n * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.zipWith([1, 2, 3], [4, 5, 6], (a, b) => a + b)\n * console.log(result) // [5, 7, 9]\n * ```\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zipWith = /*#__PURE__*/dual(3, (self, that, f) => {\n  const as = fromIterable(self);\n  const bs = fromIterable(that);\n  if (isNonEmptyReadonlyArray(as) && isNonEmptyReadonlyArray(bs)) {\n    const out = [f(headNonEmpty(as), headNonEmpty(bs))];\n    const len = Math.min(as.length, bs.length);\n    for (let i = 1; i < len; i++) {\n      out[i] = f(as[i], bs[i]);\n    }\n    return out;\n  }\n  return [];\n});\n/**\n * This function is the inverse of `zip`. Takes an `Iterable` of pairs and return two corresponding `Array`s.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.unzip([[1, \"a\"], [2, \"b\"], [3, \"c\"]])\n * console.log(result) // [[1, 2, 3], ['a', 'b', 'c']]\n * ```\n *\n * @since 2.0.0\n */\nexport const unzip = self => {\n  const input = fromIterable(self);\n  if (isNonEmptyReadonlyArray(input)) {\n    const fa = [input[0][0]];\n    const fb = [input[0][1]];\n    for (let i = 1; i < input.length; i++) {\n      fa[i] = input[i][0];\n      fb[i] = input[i][1];\n    }\n    return [fa, fb];\n  }\n  return [[], []];\n};\n/**\n * Places an element in between members of an `Iterable`.\n * If the input is a non-empty array, the result is also a non-empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.intersperse([1, 2, 3], 0)\n * console.log(result) // [1, 0, 2, 0, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const intersperse = /*#__PURE__*/dual(2, (self, middle) => {\n  const input = fromIterable(self);\n  if (isNonEmptyReadonlyArray(input)) {\n    const out = [headNonEmpty(input)];\n    const tail = tailNonEmpty(input);\n    for (let i = 0; i < tail.length; i++) {\n      if (i < tail.length) {\n        out.push(middle);\n      }\n      out.push(tail[i]);\n    }\n    return out;\n  }\n  return [];\n});\n/**\n * Apply a function to the head, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.modifyNonEmptyHead([1, 2, 3], n => n * 10)\n * console.log(result) // [10, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const modifyNonEmptyHead = /*#__PURE__*/dual(2, (self, f) => [f(headNonEmpty(self)), ...tailNonEmpty(self)]);\n/**\n * Change the head, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.setNonEmptyHead([1, 2, 3], 10)\n * console.log(result) // [10, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const setNonEmptyHead = /*#__PURE__*/dual(2, (self, b) => modifyNonEmptyHead(self, () => b));\n/**\n * Apply a function to the last element, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.modifyNonEmptyLast([1, 2, 3], n => n * 2)\n * console.log(result) // [1, 2, 6]\n * ```\n *\n * @since 2.0.0\n */\nexport const modifyNonEmptyLast = /*#__PURE__*/dual(2, (self, f) => append(initNonEmpty(self), f(lastNonEmpty(self))));\n/**\n * Change the last element, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.setNonEmptyLast([1, 2, 3], 4)\n * console.log(result) // [1, 2, 4]\n * ```\n *\n * @since 2.0.0\n */\nexport const setNonEmptyLast = /*#__PURE__*/dual(2, (self, b) => modifyNonEmptyLast(self, () => b));\n/**\n * Rotate an `Iterable` by `n` steps.\n * If the input is a non-empty array, the result is also a non-empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.rotate(['a', 'b', 'c', 'd'], 2)\n * console.log(result) // ['c', 'd', 'a', 'b']\n * ```\n *\n * @since 2.0.0\n */\nexport const rotate = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  if (isNonEmptyReadonlyArray(input)) {\n    const len = input.length;\n    const m = Math.round(n) % len;\n    if (isOutOfBounds(Math.abs(m), input) || m === 0) {\n      return copy(input);\n    }\n    if (m < 0) {\n      const [f, s] = splitNonEmptyAt(input, -m);\n      return appendAll(s, f);\n    } else {\n      return rotate(self, m - len);\n    }\n  }\n  return [];\n});\n/**\n * Returns a function that checks if a `ReadonlyArray` contains a given value using a provided `isEquivalent` function.\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const isEquivalent = (a: number, b: number) => a === b\n * const containsNumber = Array.containsWith(isEquivalent)\n * const result = pipe([1, 2, 3, 4], containsNumber(3))\n * console.log(result) // true\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const containsWith = isEquivalent => dual(2, (self, a) => {\n  for (const i of self) {\n    if (isEquivalent(a, i)) {\n      return true;\n    }\n  }\n  return false;\n});\nconst _equivalence = /*#__PURE__*/Equal.equivalence();\n/**\n * Returns a function that checks if a `ReadonlyArray` contains a given value using the default `Equivalence`.\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const result = pipe(['a', 'b', 'c', 'd'], Array.contains('c'))\n * console.log(result) // true\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const contains = /*#__PURE__*/containsWith(_equivalence);\n/**\n * A useful recursion pattern for processing an `Iterable` to produce a new `Array`, often used for \"chopping\" up the input\n * `Iterable`. Typically chop is called with some function that will consume an initial prefix of the `Iterable` and produce a\n * value and the rest of the `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.chop([1, 2, 3, 4, 5], (as): [number, Array<number>] => [as[0] * 2, as.slice(1)])\n * console.log(result) // [2, 4, 6, 8, 10]\n *\n * // Explanation:\n * // The `chopFunction` takes the first element of the array, doubles it, and then returns it along with the rest of the array.\n * // The `chop` function applies this `chopFunction` recursively to the input array `[1, 2, 3, 4, 5]`,\n * // resulting in a new array `[2, 4, 6, 8, 10]`.\n * ```\n *\n * @since 2.0.0\n */\nexport const chop = /*#__PURE__*/dual(2, (self, f) => {\n  const input = fromIterable(self);\n  if (isNonEmptyReadonlyArray(input)) {\n    const [b, rest] = f(input);\n    const out = [b];\n    let next = rest;\n    while (internalArray.isNonEmptyArray(next)) {\n      const [b, rest] = f(next);\n      out.push(b);\n      next = rest;\n    }\n    return out;\n  }\n  return [];\n});\n/**\n * Splits an `Iterable` into two segments, with the first segment containing a maximum of `n` elements.\n * The value of `n` can be `0`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.splitAt([1, 2, 3, 4, 5], 3)\n * console.log(result) // [[1, 2, 3], [4, 5]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitAt = /*#__PURE__*/dual(2, (self, n) => {\n  const input = Array.from(self);\n  const _n = Math.floor(n);\n  if (isNonEmptyReadonlyArray(input)) {\n    if (_n >= 1) {\n      return splitNonEmptyAt(input, _n);\n    }\n    return [[], input];\n  }\n  return [input, []];\n});\n/**\n * Splits a `NonEmptyReadonlyArray` into two segments, with the first segment containing a maximum of `n` elements.\n * The value of `n` must be `>= 1`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.splitNonEmptyAt([\"a\", \"b\", \"c\", \"d\", \"e\"], 3)\n * console.log(result) // [[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitNonEmptyAt = /*#__PURE__*/dual(2, (self, n) => {\n  const _n = Math.max(1, Math.floor(n));\n  return _n >= self.length ? [copy(self), []] : [prepend(self.slice(1, _n), headNonEmpty(self)), self.slice(_n)];\n});\n/**\n * Splits this iterable into `n` equally sized arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.split([1, 2, 3, 4, 5, 6, 7, 8], 3)\n * console.log(result) // [[1, 2, 3], [4, 5, 6], [7, 8]]\n * ```\n *\n * @since 2.0.0\n * @category splitting\n */\nexport const split = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return chunksOf(input, Math.ceil(input.length / Math.floor(n)));\n});\n/**\n * Splits this iterable on the first element that matches this predicate.\n * Returns a tuple containing two arrays: the first one is before the match, and the second one is from the match onward.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.splitWhere([1, 2, 3, 4, 5], n => n > 3)\n * console.log(result) // [[1, 2, 3], [4, 5]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitWhere = /*#__PURE__*/dual(2, (self, predicate) => span(self, (a, i) => !predicate(a, i)));\n/**\n * Copies an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.copy([1, 2, 3])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const copy = self => self.slice();\n/**\n * Pads an array.\n * Returns a new array of length `n` with the elements of `array` followed by `fill` elements if `array` is shorter than `n`.\n * If `array` is longer than `n`, the returned array will be a slice of `array` containing the `n` first elements of `array`.\n * If `n` is less than or equal to 0, the returned array will be an empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.pad([1, 2, 3], 6, 0)\n * console.log(result) // [1, 2, 3, 0, 0, 0]\n * ```\n *\n * @since 3.8.4\n */\nexport const pad = /*#__PURE__*/dual(3, (self, n, fill) => {\n  if (self.length >= n) {\n    return take(self, n);\n  }\n  return appendAll(self, makeBy(n - self.length, () => fill));\n});\n/**\n * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `Iterable`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts skip-type-checking\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `self`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.chunksOf([1, 2, 3, 4, 5], 2)\n * console.log(result) // [[1, 2], [3, 4], [5]]\n *\n * // Explanation:\n * // The `chunksOf` function takes an array of numbers `[1, 2, 3, 4, 5]` and a number `2`.\n * // It splits the array into chunks of length 2. Since the array length is not evenly divisible by 2,\n * // the last chunk contains the remaining elements.\n * // The result is `[[1, 2], [3, 4], [5]]`.\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const chunksOf = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  if (isNonEmptyReadonlyArray(input)) {\n    return chop(input, splitNonEmptyAt(n));\n  }\n  return [];\n});\n/**\n * Creates sliding windows of size `n` from an `Iterable`.\n * If the number of elements is less than `n` or if `n` is not greater than zero,\n * an empty array is returned.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Array } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5]\n * assert.deepStrictEqual(Array.window(numbers, 3), [[1, 2, 3], [2, 3, 4], [3, 4, 5]])\n * assert.deepStrictEqual(Array.window(numbers, 6), [])\n * ```\n *\n * @category splitting\n * @since 3.13.2\n */\nexport const window = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  if (n > 0 && isNonEmptyReadonlyArray(input)) {\n    return Array.from({\n      length: input.length - (n - 1)\n    }, (_, index) => input.slice(index, index + n));\n  }\n  return [];\n});\n/**\n * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s using the provided `isEquivalent` function.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.groupWith([\"a\", \"a\", \"b\", \"b\", \"b\", \"c\", \"a\"], (x, y) => x === y)\n * console.log(result) // [[\"a\", \"a\"], [\"b\", \"b\", \"b\"], [\"c\"], [\"a\"]]\n * ```\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupWith = /*#__PURE__*/dual(2, (self, isEquivalent) => chop(self, as => {\n  const h = headNonEmpty(as);\n  const out = [h];\n  let i = 1;\n  for (; i < as.length; i++) {\n    const a = as[i];\n    if (isEquivalent(a, h)) {\n      out.push(a);\n    } else {\n      break;\n    }\n  }\n  return [out, as.slice(i)];\n}));\n/**\n * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.group([1, 1, 2, 2, 2, 3, 1])\n * console.log(result) // [[1, 1], [2, 2, 2], [3], [1]]\n * ```\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const group = /*#__PURE__*/groupWith( /*#__PURE__*/Equal.equivalence());\n/**\n * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const people = [\n *   { name: \"Alice\", group: \"A\" },\n *   { name: \"Bob\", group: \"B\" },\n *   { name: \"Charlie\", group: \"A\" }\n * ]\n *\n * const result = Array.groupBy(people, person => person.group)\n * console.log(result)\n * // {\n * //  A: [{ name: \"Alice\", group: \"A\" }, { name: \"Charlie\", group: \"A\" }],\n * //  B: [{ name: \"Bob\", group: \"B\" }]\n * // }\n * ```\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupBy = /*#__PURE__*/dual(2, (self, f) => {\n  const out = {};\n  for (const a of self) {\n    const k = f(a);\n    if (Object.prototype.hasOwnProperty.call(out, k)) {\n      out[k].push(a);\n    } else {\n      out[k] = [a];\n    }\n  }\n  return out;\n});\n/**\n * Calculates the union of two arrays using the provided equivalence relation.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const union = Array.unionWith([1, 2], [2, 3], (a, b) => a === b)\n * console.log(union) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const unionWith = /*#__PURE__*/dual(3, (self, that, isEquivalent) => {\n  const a = fromIterable(self);\n  const b = fromIterable(that);\n  if (isNonEmptyReadonlyArray(a)) {\n    if (isNonEmptyReadonlyArray(b)) {\n      const dedupe = dedupeWith(isEquivalent);\n      return dedupe(appendAll(a, b));\n    }\n    return a;\n  }\n  return b;\n});\n/**\n * Creates a union of two arrays, removing duplicates.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.union([1, 2], [2, 3])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const union = /*#__PURE__*/dual(2, (self, that) => unionWith(self, that, _equivalence));\n/**\n * Creates an `Array` of unique values that are included in all given `Iterable`s using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const array1 = [{ id: 1 }, { id: 2 }, { id: 3 }]\n * const array2 = [{ id: 3 }, { id: 4 }, { id: 1 }]\n * const isEquivalent = (a: { id: number }, b: { id: number }) => a.id === b.id\n * const result = Array.intersectionWith(isEquivalent)(array2)(array1)\n * console.log(result) // [{ id: 1 }, { id: 3 }]\n * ```\n *\n * @since 2.0.0\n */\nexport const intersectionWith = isEquivalent => {\n  const has = containsWith(isEquivalent);\n  return dual(2, (self, that) => fromIterable(self).filter(a => has(that, a)));\n};\n/**\n * Creates an `Array` of unique values that are included in all given `Iterable`s.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.intersection([1, 2, 3], [3, 4, 1])\n * console.log(result) // [1, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const intersection = /*#__PURE__*/intersectionWith(_equivalence);\n/**\n * Creates a `Array` of values not included in the other given `Iterable` using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const array1 = [1, 2, 3]\n * const array2 = [2, 3, 4]\n * const difference = Array.differenceWith<number>((a, b) => a === b)(array1, array2)\n * console.log(difference) // [1]\n * ```\n *\n * @since 2.0.0\n */\nexport const differenceWith = isEquivalent => {\n  const has = containsWith(isEquivalent);\n  return dual(2, (self, that) => fromIterable(self).filter(a => !has(that, a)));\n};\n/**\n * Creates a `Array` of values not included in the other given `Iterable`.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const difference = Array.difference([1, 2, 3], [2, 3, 4])\n * console.log(difference) // [1]\n * ```\n *\n * @since 2.0.0\n */\nexport const difference = /*#__PURE__*/differenceWith(_equivalence);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const empty = () => [];\n/**\n * Constructs a new `NonEmptyArray<A>` from the specified value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const of = a => [a];\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => self.map(f));\n/**\n * Applies a function to each element in an array and returns a new array containing the concatenated mapped elements.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  if (isEmptyReadonlyArray(self)) {\n    return [];\n  }\n  const out = [];\n  for (let i = 0; i < self.length; i++) {\n    const inner = f(self[i], i);\n    for (let j = 0; j < inner.length; j++) {\n      out.push(inner[j]);\n    }\n  }\n  return out;\n});\n/**\n * Combines multiple arrays into a single array by concatenating all elements\n * from each nested array. This function ensures that the structure of nested\n * arrays is collapsed into a single, flat array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.flatten([[1, 2], [], [3, 4], [], [5, 6]])\n * console.log(result) // [1, 2, 3, 4, 5, 6]\n * ```\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatten = /*#__PURE__*/flatMap(identity);\n/**\n * Applies a function to each element of the `Iterable` and filters based on the result, keeping the transformed values where the function returns `Some`.\n * This method combines filtering and mapping functionalities, allowing transformations and filtering of elements based on a single function pass.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * const evenSquares = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n *\n * const result = Array.filterMap([1, 2, 3, 4, 5], evenSquares);\n * console.log(result) // [4, 16]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMap = /*#__PURE__*/dual(2, (self, f) => {\n  const as = fromIterable(self);\n  const out = [];\n  for (let i = 0; i < as.length; i++) {\n    const o = f(as[i], i);\n    if (Option.isSome(o)) {\n      out.push(o.value);\n    }\n  }\n  return out;\n});\n/**\n * Applies a function to each element of the array and filters based on the result, stopping when a condition is not met.\n * This method combines filtering and mapping in a single pass, and short-circuits, i.e., stops processing, as soon as the function returns `None`.\n * This is useful when you need to transform an array but only up to the point where a certain condition holds true.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * const toSquareTillOdd = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n *\n * const result = Array.filterMapWhile([2, 4, 5], toSquareTillOdd)\n * console.log(result) // [4, 16]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMapWhile = /*#__PURE__*/dual(2, (self, f) => {\n  let i = 0;\n  const out = [];\n  for (const a of self) {\n    const b = f(a, i);\n    if (Option.isSome(b)) {\n      out.push(b.value);\n    } else {\n      break;\n    }\n    i++;\n  }\n  return out;\n});\n/**\n * Applies a function to each element of the `Iterable`, categorizing the results into two separate arrays.\n * This function is particularly useful for operations where each element can result in two possible types,\n * and you want to separate these types into different collections. For instance, separating validation results\n * into successes and failures.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\";\n *\n * const isEven = (x: number) => x % 2 === 0\n *\n * const result = Array.partitionMap([1, 2, 3, 4, 5], x =>\n *   isEven(x) ? Either.right(x) : Either.left(x)\n * )\n * console.log(result)\n * // [\n * //   [1, 3, 5],\n * //   [2, 4]\n * // ]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partitionMap = /*#__PURE__*/dual(2, (self, f) => {\n  const left = [];\n  const right = [];\n  const as = fromIterable(self);\n  for (let i = 0; i < as.length; i++) {\n    const e = f(as[i], i);\n    if (Either.isLeft(e)) {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n  return [left, right];\n});\n/**\n * Retrieves the `Some` values from an `Iterable` of `Option`s, collecting them into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * const result = Array.getSomes([Option.some(1), Option.none(), Option.some(2)])\n * console.log(result) // [1, 2]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getSomes = /*#__PURE__*/filterMap(identity);\n/**\n * Retrieves the `Left` values from an `Iterable` of `Either`s, collecting them into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\"\n *\n * const result = Array.getLefts([Either.right(1), Either.left(\"err\"), Either.right(2)])\n * console.log(result) // [\"err\"]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getLefts = self => {\n  const out = [];\n  for (const a of self) {\n    if (Either.isLeft(a)) {\n      out.push(a.left);\n    }\n  }\n  return out;\n};\n/**\n * Retrieves the `Right` values from an `Iterable` of `Either`s, collecting them into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\"\n *\n * const result = Array.getRights([Either.right(1), Either.left(\"err\"), Either.right(2)])\n * console.log(result) // [1, 2]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getRights = self => {\n  const out = [];\n  for (const a of self) {\n    if (Either.isRight(a)) {\n      out.push(a.right);\n    }\n  }\n  return out;\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport const filter = /*#__PURE__*/dual(2, (self, predicate) => {\n  const as = fromIterable(self);\n  const out = [];\n  for (let i = 0; i < as.length; i++) {\n    if (predicate(as[i], i)) {\n      out.push(as[i]);\n    }\n  }\n  return out;\n});\n/**\n * Separate elements based on a predicate that also exposes the index of the element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.partition([1, 2, 3, 4], n => n % 2 === 0)\n * console.log(result) // [[1, 3], [2, 4]]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partition = /*#__PURE__*/dual(2, (self, predicate) => {\n  const left = [];\n  const right = [];\n  const as = fromIterable(self);\n  for (let i = 0; i < as.length; i++) {\n    if (predicate(as[i], i)) {\n      right.push(as[i]);\n    } else {\n      left.push(as[i]);\n    }\n  }\n  return [left, right];\n});\n/**\n * Separates an `Iterable` into two arrays based on a predicate.\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const separate = /*#__PURE__*/partitionMap(identity);\n/**\n * Reduces an array from the left.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.reduce([1, 2, 3], 0, (acc, n) => acc + n)\n * console.log(result) // 6\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const reduce = /*#__PURE__*/dual(3, (self, b, f) => fromIterable(self).reduce((b, a, i) => f(b, a, i), b));\n/**\n * Reduces an array from the right.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.reduceRight([1, 2, 3], 0, (acc, n) => acc + n)\n * console.log(result) // 6\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const reduceRight = /*#__PURE__*/dual(3, (self, b, f) => fromIterable(self).reduceRight((b, a, i) => f(b, a, i), b));\n/**\n * Lifts a predicate into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const isEven = (n: number) => n % 2 === 0\n * const to = Array.liftPredicate(isEven)\n * console.log(to(1)) // []\n * console.log(to(2)) // [2]\n * ```\n *\n * @category lifting\n * @since 2.0.0\n */\nexport const liftPredicate = predicate => b => predicate(b) ? [b] : [];\n/**\n * @category lifting\n * @since 2.0.0\n */\nexport const liftOption = f => (...a) => fromOption(f(...a));\n/**\n * @category conversions\n * @since 2.0.0\n */\nexport const fromNullable = a => a == null ? empty() : [a];\n/**\n * @category lifting\n * @since 2.0.0\n */\nexport const liftNullable = f => (...a) => fromNullable(f(...a));\n/**\n * Maps over an array and flattens the result, removing null and undefined values.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.flatMapNullable([1, 2, 3], n => (n % 2 === 0 ? null : n))\n * console.log(result) // [1, 3]\n *\n * // Explanation:\n * // The array of numbers [1, 2, 3] is mapped with a function that returns null for even numbers\n * // and the number itself for odd numbers. The resulting array [1, null, 3] is then flattened\n * // to remove null values, resulting in [1, 3].\n * ```\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMapNullable = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => fromNullable(f(a))));\n/**\n * Lifts a function that returns an `Either` into a function that returns an array.\n * If the `Either` is a left, it returns an empty array.\n * If the `Either` is a right, it returns an array with the right value.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\"\n *\n * const parseNumber = (s: string): Either.Either<number, Error> =>\n *   isNaN(Number(s)) ? Either.left(new Error(\"Not a number\")) : Either.right(Number(s))\n *\n * const liftedParseNumber = Array.liftEither(parseNumber)\n *\n * const result1 = liftedParseNumber(\"42\")\n * console.log(result1) // [42]\n *\n * const result2 = liftedParseNumber(\"not a number\")\n * console.log(result2) // []\n *\n * // Explanation:\n * // The function parseNumber is lifted to return an array.\n * // When parsing \"42\", it returns an Either.left with the number 42, resulting in [42].\n * // When parsing \"not a number\", it returns an Either.right with an error, resulting in an empty array [].\n * ```\n *\n * @category lifting\n * @since 2.0.0\n */\nexport const liftEither = f => (...a) => {\n  const e = f(...a);\n  return Either.isLeft(e) ? [] : [e.right];\n};\n/**\n * Check if a predicate holds true for every `ReadonlyArray` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const every = /*#__PURE__*/dual(2, (self, refinement) => self.every(refinement));\n/**\n * Check if a predicate holds true for some `ReadonlyArray` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const some = /*#__PURE__*/dual(2, (self, predicate) => self.some(predicate));\n/**\n * Extends an array with a function that maps each subarray to a value.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.extend([1, 2, 3], as => as.length)\n * console.log(result) // [3, 2, 1]\n *\n * // Explanation:\n * // The function maps each subarray starting from each element to its length.\n * // The subarrays are: [1, 2, 3], [2, 3], [3].\n * // The lengths are: 3, 2, 1.\n * // Therefore, the result is [3, 2, 1].\n * ```\n *\n * @since 2.0.0\n */\nexport const extend = /*#__PURE__*/dual(2, (self, f) => self.map((_, i, as) => f(as.slice(i))));\n/**\n * Finds the minimum element in an array based on a comparator.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order } from \"effect\"\n *\n * const result = Array.min([3, 1, 2], Order.number)\n * console.log(result) // 1\n * ```\n *\n * @since 2.0.0\n */\nexport const min = /*#__PURE__*/dual(2, (self, O) => self.reduce(Order.min(O)));\n/**\n * Finds the maximum element in an array based on a comparator.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order } from \"effect\"\n *\n * const result = Array.max([3, 1, 2], Order.number)\n * console.log(result) // 3\n * ```\n *\n * @since 2.0.0\n */\nexport const max = /*#__PURE__*/dual(2, (self, O) => self.reduce(Order.max(O)));\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const unfold = (b, f) => {\n  const out = [];\n  let next = b;\n  let o;\n  while (Option.isSome(o = f(next))) {\n    const [a, b] = o.value;\n    out.push(a);\n    next = b;\n  }\n  return out;\n};\n/**\n * This function creates and returns a new `Order` for an array of values based on a given `Order` for the elements of the array.\n * The returned `Order` compares two arrays by applying the given `Order` to each element in the arrays.\n * If all elements are equal, the arrays are then compared based on their length.\n * It is useful when you need to compare two arrays of the same type and you have a specific way of comparing each element of the array.\n *\n * @category instances\n * @since 2.0.0\n */\nexport const getOrder = Order.array;\n/**\n * Creates an equivalence relation for arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const eq = Array.getEquivalence<number>((a, b) => a === b)\n * console.log(eq([1, 2, 3], [1, 2, 3])) // true\n * ```\n *\n * @category instances\n * @since 2.0.0\n */\nexport const getEquivalence = Equivalence.array;\n/**\n * Performs a side-effect for each element of the `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * Array.forEach([1, 2, 3], n => console.log(n)) // 1, 2, 3\n * ```\n *\n * @since 2.0.0\n */\nexport const forEach = /*#__PURE__*/dual(2, (self, f) => fromIterable(self).forEach((a, i) => f(a, i)));\n/**\n * Remove duplicates from an `Iterable` using the provided `isEquivalent` function,\n * preserving the order of the first occurrence of each element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dedupeWith([1, 2, 2, 3, 3, 3], (a, b) => a === b)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const dedupeWith = /*#__PURE__*/dual(2, (self, isEquivalent) => {\n  const input = fromIterable(self);\n  if (isNonEmptyReadonlyArray(input)) {\n    const out = [headNonEmpty(input)];\n    const rest = tailNonEmpty(input);\n    for (const r of rest) {\n      if (out.every(a => !isEquivalent(r, a))) {\n        out.push(r);\n      }\n    }\n    return out;\n  }\n  return [];\n});\n/**\n * Remove duplicates from an `Iterable`, preserving the order of the first occurrence of each element.\n * The equivalence used to compare elements is provided by `Equal.equivalence()` from the `Equal` module.\n *\n * @since 2.0.0\n */\nexport const dedupe = self => dedupeWith(self, Equal.equivalence());\n/**\n * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dedupeAdjacentWith([1, 1, 2, 2, 3, 3], (a, b) => a === b)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacentWith = /*#__PURE__*/dual(2, (self, isEquivalent) => {\n  const out = [];\n  let lastA = Option.none();\n  for (const a of self) {\n    if (Option.isNone(lastA) || !isEquivalent(a, lastA.value)) {\n      out.push(a);\n      lastA = Option.some(a);\n    }\n  }\n  return out;\n});\n/**\n * Deduplicates adjacent elements that are identical.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dedupeAdjacent([1, 1, 2, 2, 3, 3])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacent = /*#__PURE__*/dedupeAdjacentWith( /*#__PURE__*/Equal.equivalence());\n/**\n * Joins the elements together with \"sep\" in the middle.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const strings = [\"a\", \"b\", \"c\"]\n * const joined = Array.join(strings, \"-\")\n * console.log(joined) // \"a-b-c\"\n * ```\n *\n * @since 2.0.0\n * @category folding\n */\nexport const join = /*#__PURE__*/dual(2, (self, sep) => fromIterable(self).join(sep));\n/**\n * Statefully maps over the chunk, producing new elements of type `B`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.mapAccum([1, 2, 3], 0, (acc, n) => [acc + n, acc + n])\n * console.log(result) // [6, [1, 3, 6]]\n * ```\n *\n * @since 2.0.0\n * @category folding\n */\nexport const mapAccum = /*#__PURE__*/dual(3, (self, s, f) => {\n  let i = 0;\n  let s1 = s;\n  const out = [];\n  for (const a of self) {\n    const r = f(s1, a, i);\n    s1 = r[0];\n    out.push(r[1]);\n    i++;\n  }\n  return [s1, out];\n});\n/**\n * Zips this chunk crosswise with the specified chunk using the specified combiner.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.cartesianWith([1, 2], [\"a\", \"b\"], (a, b) => `${a}-${b}`)\n * console.log(result) // [\"1-a\", \"1-b\", \"2-a\", \"2-b\"]\n * ```\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesianWith = /*#__PURE__*/dual(3, (self, that, f) => flatMap(self, a => map(that, b => f(a, b))));\n/**\n * Zips this chunk crosswise with the specified chunk.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.cartesian([1, 2], [\"a\", \"b\"])\n * console.log(result) // [[1, \"a\"], [1, \"b\"], [2, \"a\"], [2, \"b\"]]\n * ```\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesian = /*#__PURE__*/dual(2, (self, that) => cartesianWith(self, that, (a, b) => [a, b]));\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n *\n * It can be used to simulate \"array comprehension\".\n * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const doResult = pipe(\n *   Array.Do,\n *   Array.bind(\"x\", () => [1, 3, 5]),\n *   Array.bind(\"y\", () => [2, 4, 6]),\n *   Array.filter(({ x, y }) => x < y), // condition\n *   Array.map(({ x, y }) => [x, y] as const) // transformation\n * )\n * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n *\n * // equivalent\n * const x = [1, 3, 5],\n *       y = [2, 4, 6],\n *       result = [];\n * for(let i = 0; i < x.length; i++) {\n *   for(let j = 0; j < y.length; j++) {\n *     const _x = x[i], _y = y[j];\n *     if(_x < _y) result.push([_x, _y] as const)\n *   }\n * }\n * ```\n *\n * @see {@link bindTo}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 3.2.0\n */\nexport const Do = /*#__PURE__*/of({});\n/**\n * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n *\n * It can be used to simulate \"array comprehension\".\n * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const doResult = pipe(\n *   Array.Do,\n *   Array.bind(\"x\", () => [1, 3, 5]),\n *   Array.bind(\"y\", () => [2, 4, 6]),\n *   Array.filter(({ x, y }) => x < y), // condition\n *   Array.map(({ x, y }) => [x, y] as const) // transformation\n * )\n * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n *\n * // equivalent\n * const x = [1, 3, 5],\n *       y = [2, 4, 6],\n *       result = [];\n * for(let i = 0; i < x.length; i++) {\n *   for(let j = 0; j < y.length; j++) {\n *     const _x = x[i], _y = y[j];\n *     if(_x < _y) result.push([_x, _y] as const)\n *   }\n * }\n * ```\n *\n * @see {@link bindTo}\n * @see {@link Do}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 3.2.0\n */\nexport const bind = /*#__PURE__*/internalDoNotation.bind(map, flatMap);\n/**\n * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n *\n * It can be used to simulate \"array comprehension\".\n * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const doResult = pipe(\n *   Array.Do,\n *   Array.bind(\"x\", () => [1, 3, 5]),\n *   Array.bind(\"y\", () => [2, 4, 6]),\n *   Array.filter(({ x, y }) => x < y), // condition\n *   Array.map(({ x, y }) => [x, y] as const) // transformation\n * )\n * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n *\n * // equivalent\n * const x = [1, 3, 5],\n *       y = [2, 4, 6],\n *       result = [];\n * for(let i = 0; i < x.length; i++) {\n *   for(let j = 0; j < y.length; j++) {\n *     const _x = x[i], _y = y[j];\n *     if(_x < _y) result.push([_x, _y] as const)\n *   }\n * }\n * ```\n *\n * @see {@link bindTo}\n * @see {@link Do}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 3.2.0\n */\nexport const bindTo = /*#__PURE__*/internalDoNotation.bindTo(map);\nconst let_ = /*#__PURE__*/internalDoNotation.let_(map);\nexport {\n/**\n * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n *\n * It can be used to simulate \"array comprehension\".\n * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const doResult = pipe(\n *   Array.Do,\n *   Array.bind(\"x\", () => [1, 3, 5]),\n *   Array.bind(\"y\", () => [2, 4, 6]),\n *   Array.filter(({ x, y }) => x < y), // condition\n *   Array.map(({ x, y }) => [x, y] as const) // transformation\n * )\n * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n *\n * // equivalent\n * const x = [1, 3, 5],\n *       y = [2, 4, 6],\n *       result = [];\n * for(let i = 0; i < x.length; i++) {\n *   for(let j = 0; j < y.length; j++) {\n *     const _x = x[i], _y = y[j];\n *     if(_x < _y) result.push([_x, _y] as const)\n *   }\n * }\n *\n * ```\n *\n * @see {@link bindTo}\n * @see {@link bind}\n * @see {@link Do}\n *\n * @category do notation\n * @since 3.2.0\n */\nlet_ as let };\n//# sourceMappingURL=Array.js.map","import * as Predicate from \"../../Predicate.js\";\n/** @internal */\nexport const getKeysForIndexSignature = (input, parameter) => {\n  switch (parameter._tag) {\n    case \"StringKeyword\":\n    case \"TemplateLiteral\":\n      return Object.keys(input);\n    case \"SymbolKeyword\":\n      return Object.getOwnPropertySymbols(input);\n    case \"Refinement\":\n      return getKeysForIndexSignature(input, parameter.from);\n  }\n};\n/**\n * JavaScript does not store the insertion order of properties in a way that\n * combines both string and symbol keys. The internal order groups string keys\n * and symbol keys separately. Hence concatenating the keys is fine.\n *\n * @internal\n */\nexport const ownKeys = o => Object.keys(o).concat(Object.getOwnPropertySymbols(o));\n/** @internal */\nexport const memoizeThunk = f => {\n  let done = false;\n  let a;\n  return () => {\n    if (done) {\n      return a;\n    }\n    a = f();\n    done = true;\n    return a;\n  };\n};\n/** @internal */\nexport const formatDate = date => {\n  try {\n    return date.toISOString();\n  } catch (e) {\n    return String(date);\n  }\n};\n/** @internal */\nexport const formatUnknown = (u, checkCircular = true) => {\n  if (Array.isArray(u)) {\n    return `[${u.map(i => formatUnknown(i, checkCircular)).join(\",\")}]`;\n  }\n  if (Predicate.isDate(u)) {\n    return formatDate(u);\n  }\n  if (Predicate.hasProperty(u, \"toString\") && Predicate.isFunction(u[\"toString\"]) && u[\"toString\"] !== Object.prototype.toString) {\n    return u[\"toString\"]();\n  }\n  if (Predicate.isString(u)) {\n    return JSON.stringify(u);\n  }\n  if (Predicate.isNumber(u) || u == null || Predicate.isBoolean(u) || Predicate.isSymbol(u)) {\n    return String(u);\n  }\n  if (Predicate.isBigInt(u)) {\n    return String(u) + \"n\";\n  }\n  if (Predicate.isIterable(u)) {\n    return `${u.constructor.name}(${formatUnknown(Array.from(u), checkCircular)})`;\n  }\n  try {\n    if (checkCircular) {\n      JSON.stringify(u); // check for circular references\n    }\n    const pojo = `{${ownKeys(u).map(k => `${Predicate.isString(k) ? JSON.stringify(k) : String(k)}:${formatUnknown(u[k], false)}`).join(\",\")}}`;\n    const name = u.constructor.name;\n    return u.constructor !== Object.prototype.constructor ? `${name}(${pojo})` : pojo;\n  } catch (e) {\n    return \"<circular structure>\";\n  }\n};\n/** @internal */\nexport const formatPropertyKey = name => typeof name === \"string\" ? JSON.stringify(name) : String(name);\n/** @internal */\nexport const isNonEmpty = x => Array.isArray(x);\n/** @internal */\nexport const isSingle = x => !Array.isArray(x);\n/** @internal */\nexport const formatPathKey = key => `[${formatPropertyKey(key)}]`;\n/** @internal */\nexport const formatPath = path => isNonEmpty(path) ? path.map(formatPathKey).join(\"\") : formatPathKey(path);\n//# sourceMappingURL=util.js.map","import * as array_ from \"../../Array.js\";\nimport * as util_ from \"./util.js\";\nconst getErrorMessage = (reason, details, path, ast) => {\n  let out = reason;\n  if (path && array_.isNonEmptyReadonlyArray(path)) {\n    out += `\\nat path: ${util_.formatPath(path)}`;\n  }\n  if (details !== undefined) {\n    out += `\\ndetails: ${details}`;\n  }\n  if (ast) {\n    out += `\\nschema (${ast._tag}): ${ast}`;\n  }\n  return out;\n};\n// ---------------------------------------------\n// generic\n// ---------------------------------------------\n/** @internal */\nexport const getInvalidArgumentErrorMessage = details => getErrorMessage(\"Invalid Argument\", details);\nconst getUnsupportedSchemaErrorMessage = (details, path, ast) => getErrorMessage(\"Unsupported schema\", details, path, ast);\nconst getMissingAnnotationErrorMessage = (details, path, ast) => getErrorMessage(\"Missing annotation\", details, path, ast);\n// ---------------------------------------------\n// Arbitrary\n// ---------------------------------------------\n/** @internal */\nexport const getArbitraryUnsupportedErrorMessage = (path, ast) => getUnsupportedSchemaErrorMessage(\"Cannot build an Arbitrary for this schema\", path, ast);\n/** @internal */\nexport const getArbitraryMissingAnnotationErrorMessage = (path, ast) => getMissingAnnotationErrorMessage(`Generating an Arbitrary for this schema requires an \"arbitrary\" annotation`, path, ast);\n/** @internal */\nexport const getArbitraryEmptyEnumErrorMessage = path => getErrorMessage(\"Empty Enums schema\", \"Generating an Arbitrary for this schema requires at least one enum\", path);\n// ---------------------------------------------\n// Equivalence\n// ---------------------------------------------\n/** @internal */\nexport const getEquivalenceUnsupportedErrorMessage = (ast, path) => getUnsupportedSchemaErrorMessage(\"Cannot build an Equivalence\", path, ast);\n// ---------------------------------------------\n// JSON Schema\n// ---------------------------------------------\n/** @internal */\nexport const getJSONSchemaMissingAnnotationErrorMessage = (path, ast) => getMissingAnnotationErrorMessage(`Generating a JSON Schema for this schema requires a \"jsonSchema\" annotation`, path, ast);\n/** @internal */\nexport const getJSONSchemaMissingIdentifierAnnotationErrorMessage = (path, ast) => getMissingAnnotationErrorMessage(`Generating a JSON Schema for this schema requires an \"identifier\" annotation`, path, ast);\n/** @internal */\nexport const getJSONSchemaUnsupportedPostRestElementsErrorMessage = path => getErrorMessage(\"Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request\", undefined, path);\n/** @internal */\nexport const getJSONSchemaUnsupportedKeyErrorMessage = (key, path) => getErrorMessage(\"Unsupported key\", `Cannot encode ${util_.formatPropertyKey(key)} key to JSON Schema`, path);\n// ---------------------------------------------\n// Pretty\n// ---------------------------------------------\n/** @internal */\nexport const getPrettyMissingAnnotationErrorMessage = (path, ast) => getMissingAnnotationErrorMessage(`Generating a Pretty for this schema requires a \"pretty\" annotation`, path, ast);\n/** @internal */\nexport const getPrettyNeverErrorMessage = \"Cannot pretty print a `never` value\";\n/** @internal */\nexport const getPrettyNoMatchingSchemaErrorMessage = (actual, path, ast) => getErrorMessage(\"Unexpected Error\", `Cannot find a matching schema for ${util_.formatUnknown(actual)}`, path, ast);\n// ---------------------------------------------\n// Schema\n// ---------------------------------------------\n/** @internal */\nexport const getSchemaExtendErrorMessage = (x, y, path) => getErrorMessage(\"Unsupported schema or overlapping types\", `cannot extend ${x} with ${y}`, path);\n/** @internal */\nexport const getSchemaUnsupportedLiteralSpanErrorMessage = ast => getErrorMessage(\"Unsupported template literal span\", undefined, undefined, ast);\n// ---------------------------------------------\n// AST\n// ---------------------------------------------\n/** @internal */\nexport const getASTUnsupportedSchemaErrorMessage = ast => getUnsupportedSchemaErrorMessage(undefined, undefined, ast);\n/** @internal */\nexport const getASTUnsupportedKeySchemaErrorMessage = ast => getErrorMessage(\"Unsupported key schema\", undefined, undefined, ast);\n/** @internal */\nexport const getASTUnsupportedLiteralErrorMessage = literal => getErrorMessage(\"Unsupported literal\", `literal value: ${util_.formatUnknown(literal)}`);\n/** @internal */\nexport const getASTDuplicateIndexSignatureErrorMessage = type => getErrorMessage(\"Duplicate index signature\", `${type} index signature`);\n/** @internal */\nexport const getASTIndexSignatureParameterErrorMessage = /*#__PURE__*/getErrorMessage(\"Unsupported index signature parameter\", \"An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types\");\n/** @internal */\nexport const getASTRequiredElementFollowinAnOptionalElementErrorMessage = /*#__PURE__*/getErrorMessage(\"Invalid element\", \"A required element cannot follow an optional element. ts(1257)\");\n/** @internal */\nexport const getASTDuplicatePropertySignatureTransformationErrorMessage = key => getErrorMessage(\"Duplicate property signature transformation\", `Duplicate key ${util_.formatUnknown(key)}`);\n/** @internal */\nexport const getASTUnsupportedRenameSchemaErrorMessage = ast => getUnsupportedSchemaErrorMessage(undefined, undefined, ast);\n/** @internal */\nexport const getASTDuplicatePropertySignatureErrorMessage = key => getErrorMessage(\"Duplicate property signature\", `Duplicate key ${util_.formatUnknown(key)}`);\n//# sourceMappingURL=errors.js.map","/** @internal */\nexport const DateFromSelfSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/DateFromSelf\");\n/** @internal */\nexport const GreaterThanSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/GreaterThan\");\n/** @internal */\nexport const GreaterThanOrEqualToSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/GreaterThanOrEqualTo\");\n/** @internal */\nexport const LessThanSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/LessThan\");\n/** @internal */\nexport const LessThanOrEqualToSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/LessThanOrEqualTo\");\n/** @internal */\nexport const IntSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Int\");\n/** @internal */\nexport const NonNaNSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/NonNaN\");\n/** @internal */\nexport const FiniteSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Finite\");\n/** @internal */\nexport const JsonNumberSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/JsonNumber\");\n/** @internal */\nexport const BetweenSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Between\");\n/** @internal */\nexport const GreaterThanBigintSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/GreaterThanBigint\");\n/** @internal */\nexport const GreaterThanOrEqualToBigIntSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/GreaterThanOrEqualToBigint\");\n/** @internal */\nexport const LessThanBigIntSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/LessThanBigint\");\n/** @internal */\nexport const LessThanOrEqualToBigIntSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/LessThanOrEqualToBigint\");\n/** @internal */\nexport const BetweenBigintSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/BetweenBigint\");\n/** @internal */\nexport const MinLengthSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/MinLength\");\n/** @internal */\nexport const MaxLengthSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/MaxLength\");\n/** @internal */\nexport const LengthSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Length\");\n/** @internal */\nexport const MinItemsSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/MinItems\");\n/** @internal */\nexport const MaxItemsSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/MaxItems\");\n/** @internal */\nexport const ItemsCountSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/ItemsCount\");\n//# sourceMappingURL=schemaId.js.map","/**\n * # Number\n *\n * This module provides utility functions and type class instances for working\n * with the `number` type in TypeScript. It includes functions for basic\n * arithmetic operations, as well as type class instances for `Equivalence` and\n * `Order`.\n *\n * ## Operations Reference\n *\n * | Category     | Operation                                  | Description                                             | Domain                         | Co-domain             |\n * | ------------ | ------------------------------------------ | ------------------------------------------------------- | ------------------------------ | --------------------- |\n * | constructors | {@link module:Number.parse}                | Safely parses a string to a number                      | `string`                       | `Option<number>`      |\n * |              |                                            |                                                         |                                |                       |\n * | math         | {@link module:Number.sum}                  | Adds two numbers                                        | `number`, `number`             | `number`              |\n * | math         | {@link module:Number.sumAll}               | Sums all numbers in a collection                        | `Iterable<number>`             | `number`              |\n * | math         | {@link module:Number.subtract}             | Subtracts one number from another                       | `number`, `number`             | `number`              |\n * | math         | {@link module:Number.multiply}             | Multiplies two numbers                                  | `number`, `number`             | `number`              |\n * | math         | {@link module:Number.multiplyAll}          | Multiplies all numbers in a collection                  | `Iterable<number>`             | `number`              |\n * | math         | {@link module:Number.divide}               | Safely divides handling division by zero                | `number`, `number`             | `Option<number>`      |\n * | math         | {@link module:Number.unsafeDivide}         | Divides but misbehaves for division by zero             | `number`, `number`             | `number`              |\n * | math         | {@link module:Number.remainder}            | Calculates remainder of division                        | `number`, `number`             | `number`              |\n * | math         | {@link module:Number.increment}            | Adds 1 to a number                                      | `number`                       | `number`              |\n * | math         | {@link module:Number.decrement}            | Subtracts 1 from a number                               | `number`                       | `number`              |\n * | math         | {@link module:Number.sign}                 | Determines the sign of a number                         | `number`                       | `Ordering`            |\n * | math         | {@link module:Number.nextPow2}             | Finds the next power of 2                               | `number`                       | `number`              |\n * | math         | {@link module:Number.round}                | Rounds a number with specified precision                | `number`, `number`             | `number`              |\n * |              |                                            |                                                         |                                |                       |\n * | predicates   | {@link module:Number.between}              | Checks if a number is in a range                        | `number`, `{minimum, maximum}` | `boolean`             |\n * | predicates   | {@link module:Number.lessThan}             | Checks if one number is less than another               | `number`, `number`             | `boolean`             |\n * | predicates   | {@link module:Number.lessThanOrEqualTo}    | Checks if one number is less than or equal              | `number`, `number`             | `boolean`             |\n * | predicates   | {@link module:Number.greaterThan}          | Checks if one number is greater than another            | `number`, `number`             | `boolean`             |\n * | predicates   | {@link module:Number.greaterThanOrEqualTo} | Checks if one number is greater or equal                | `number`, `number`             | `boolean`             |\n * |              |                                            |                                                         |                                |                       |\n * | guards       | {@link module:Number.isNumber}             | Type guard for JavaScript numbers                       | `unknown`                      | `boolean`             |\n * |              |                                            |                                                         |                                |                       |\n * | comparison   | {@link module:Number.min}                  | Returns the minimum of two numbers                      | `number`, `number`             | `number`              |\n * | comparison   | {@link module:Number.max}                  | Returns the maximum of two numbers                      | `number`, `number`             | `number`              |\n * | comparison   | {@link module:Number.clamp}                | Restricts a number to a range                           | `number`, `{minimum, maximum}` | `number`              |\n * |              |                                            |                                                         |                                |                       |\n * | instances    | {@link module:Number.Equivalence}          | Equivalence instance for numbers                        |                                | `Equivalence<number>` |\n * | instances    | {@link module:Number.Order}                | Order instance for numbers                              |                                | `Order<number>`       |\n * |              |                                            |                                                         |                                |                       |\n * | errors       | {@link module:Number.DivisionByZeroError}  | Error thrown by unsafeDivide                            |                                |                       |\n *\n * ## Composition Patterns and Type Safety\n *\n * When building function pipelines, understanding how types flow through\n * operations is critical:\n *\n * ### Composing with type-preserving operations\n *\n * Most operations in this module are type-preserving (`number → number`),\n * making them easily composable in pipelines:\n *\n * ```ts\n * import { pipe } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * const result = pipe(\n *   10,\n *   Number.increment, // number → number\n *   Number.multiply(2), // number → number\n *   Number.round(1) // number → number\n * ) // Result: number (21)\n * ```\n *\n * ### Working with Option results\n *\n * Operations that might fail (like division by zero) return Option types and\n * require Option combinators:\n *\n * ```ts\n * import { pipe, Option } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * const result = pipe(\n *   10,\n *   Number.divide(0), // number → Option<number>\n *   Option.getOrElse(() => 0) // Option<number> → number\n * ) // Result: number (0)\n * ```\n *\n * ### Composition best practices\n *\n * - Chain type-preserving operations for maximum composability\n * - Use Option combinators when working with potentially failing operations\n * - Consider using Effect for operations that might fail with specific errors\n * - Remember that all operations maintain JavaScript's floating-point precision\n *   limitations\n *\n * @module Number\n * @since 2.0.0\n * @see {@link module:BigInt} for more similar operations on `bigint` types\n * @see {@link module:BigDecimal} for more similar operations on `BigDecimal` types\n */\nimport * as equivalence from \"./Equivalence.js\";\nimport { dual } from \"./Function.js\";\nimport * as option from \"./internal/option.js\";\nimport * as _Iterable from \"./Iterable.js\";\nimport * as order from \"./Order.js\";\nimport * as predicate from \"./Predicate.js\";\n/**\n * Type guard that tests if a value is a member of the set of JavaScript\n * numbers.\n *\n * @memberof Number\n * @since 2.0.0\n * @category guards\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import * as Number from \"effect/Number\"\n *\n * // Regular numbers\n * assert.equal(Number.isNumber(2), true)\n * assert.equal(Number.isNumber(-3.14), true)\n * assert.equal(Number.isNumber(0), true)\n *\n * // Special numeric values\n * assert.equal(Number.isNumber(Infinity), true)\n * assert.equal(Number.isNumber(NaN), true)\n *\n * // Non-number values\n * assert.equal(Number.isNumber(\"2\"), false)\n * assert.equal(Number.isNumber(true), false)\n * assert.equal(Number.isNumber(null), false)\n * assert.equal(Number.isNumber(undefined), false)\n * assert.equal(Number.isNumber({}), false)\n * assert.equal(Number.isNumber([]), false)\n *\n * // Using as a type guard in conditionals\n * function processValue(value: unknown): string {\n *   if (Number.isNumber(value)) {\n *     // TypeScript now knows 'value' is a number\n *     return `Numeric value: ${value.toFixed(2)}`\n *   }\n *   return \"Not a number\"\n * }\n *\n * assert.strictEqual(processValue(42), \"Numeric value: 42.00\")\n * assert.strictEqual(processValue(\"hello\"), \"Not a number\")\n *\n * // Filtering for numbers in an array\n * const mixed = [1, \"two\", 3, false, 5]\n * const onlyNumbers = mixed.filter(Number.isNumber)\n * assert.equal(onlyNumbers, [1, 3, 5])\n * ```\n *\n * @param input - The value to test for membership in the set of JavaScript\n *   numbers\n *\n * @returns `true` if the input is a JavaScript number, `false` otherwise\n */\nexport const isNumber = predicate.isNumber;\n/**\n * Returns the additive inverse of a number, effectively negating it.\n *\n * @memberof Number\n * @since 3.14.6\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { pipe } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * assert.equal(\n *   Number.negate(5), //\n *   -5\n * )\n *\n * assert.equal(\n *   Number.negate(-5), //\n *   5\n * )\n *\n * assert.equal(\n *   Number.negate(0), //\n *   0\n * )\n * ```\n *\n * @param n - The number value to be negated.\n *\n * @returns The negated number value.\n */\nexport const negate = n => multiply(n, -1);\n/**\n * Performs addition in the set of JavaScript numbers.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { pipe } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * // Data-first style (direct application)\n * assert.equal(Number.sum(2, 3), 5)\n * assert.equal(Number.sum(-10, 5), -5)\n * assert.equal(Number.sum(0.1, 0.2), 0.30000000000000004) // Note: floating-point precision limitation\n *\n * // Data-last style (pipeable)\n * assert.equal(\n *   pipe(\n *     10,\n *     Number.sum(5) // 10 + 5 = 15\n *   ),\n *   15\n * )\n *\n * // Chaining multiple additions\n * assert.equal(\n *   pipe(\n *     1,\n *     Number.sum(2), // 1 + 2 = 3\n *     Number.sum(3), // 3 + 3 = 6\n *     Number.sum(4) // 6 + 4 = 10\n *   ),\n *   10\n * )\n *\n * // Identity property: a + 0 = a\n * assert.equal(Number.sum(42, 0), 42)\n *\n * // Commutative property: a + b = b + a\n * assert.equal(Number.sum(5, 3), Number.sum(3, 5))\n * ```\n */\nexport const sum = /*#__PURE__*/dual(2, (self, that) => self + that);\n/**\n * Computes the sum of all elements in an iterable collection of numbers.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import * as Number from \"effect/Number\"\n *\n * // Basic sums\n * assert.equal(Number.sumAll([2, 3, 4]), 9) // 2 + 3 + 4 = 9\n * assert.equal(Number.sumAll([1.1, 2.2, 3.3]), 6.6) // 1.1 + 2.2 + 3.3 = 6.6\n *\n * // Empty collection returns the additive identity (0)\n * assert.equal(Number.sumAll([]), 0)\n *\n * // Single element collection\n * assert.equal(Number.sumAll([42]), 42)\n *\n * // Sums with negative numbers\n * assert.equal(Number.sumAll([2, -3, 4]), 3) // 2 + (-3) + 4 = 3\n * assert.equal(Number.sumAll([-2, -3, -4]), -9) // (-2) + (-3) + (-4) = -9\n *\n * // Works with any iterable\n * assert.equal(Number.sumAll(new Set([2, 3, 4])), 9)\n *\n * // Using with generated sequences\n * function* range(start: number, end: number) {\n *   for (let i = start; i <= end; i++) yield i\n * }\n *\n * // Compute sum of first 5 natural numbers: 1 + 2 + 3 + 4 + 5 = 15\n * assert.equal(Number.sumAll(range(1, 5)), 15)\n *\n * // Floating point precision example\n * assert.equal(\n *   Number.sumAll([0.1, 0.2]),\n *   0.30000000000000004 // Note IEEE 754 precision limitation\n * )\n * ```\n *\n * @param collection - An `iterable` containing the `numbers` to sum\n *\n * @returns The sum of all numbers in the collection, or 0 if the collection is\n *   empty\n */\nexport const sumAll = collection => _Iterable.reduce(collection, 0, sum);\n/**\n * Performs subtraction in the set of JavaScript numbers.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { pipe } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * // Data-first style (direct application)\n * assert.equal(Number.subtract(2, 3), -1) // 2 - 3 = -1\n * assert.equal(Number.subtract(10, 5), 5) // 10 - 5 = 5\n * assert.equal(Number.subtract(0.3, 0.1), 0.19999999999999998) // Note: floating-point precision limitation\n *\n * // Data-last style (pipeable)\n * assert.equal(\n *   pipe(\n *     10,\n *     Number.subtract(5) // 10 - 5 = 5\n *   ),\n *   5\n * )\n *\n * // Chaining multiple subtractions\n * assert.equal(\n *   pipe(\n *     20,\n *     Number.subtract(5), // 20 - 5 = 15\n *     Number.subtract(3), // 15 - 3 = 12\n *     Number.subtract(2) // 12 - 2 = 10\n *   ),\n *   10\n * )\n *\n * // Right identity property: a - 0 = a\n * assert.equal(Number.subtract(42, 0), 42)\n *\n * // Self-annihilation property: a - a = 0\n * assert.equal(Number.subtract(42, 42), 0)\n *\n * // Non-commutative property: a - b ≠ b - a\n * assert.equal(Number.subtract(5, 3), 2) // 5 - 3 = 2\n * assert.equal(Number.subtract(3, 5), -2) // 3 - 5 = -2\n *\n * // Inverse relation: a - b = -(b - a)\n * assert.equal(Number.subtract(5, 3), -Number.subtract(3, 5))\n * ```\n */\nexport const subtract = /*#__PURE__*/dual(2, (minuend, subtrahend) => minuend - subtrahend);\n/**\n * Performs **multiplication** in the set of JavaScript numbers.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { pipe } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * // Data-first style (direct application)\n * assert.equal(Number.multiply(2, 3), 6) // 2 × 3 = 6\n * assert.equal(Number.multiply(-4, 5), -20) // (-4) × 5 = -20\n * assert.equal(Number.multiply(-3, -2), 6) // (-3) × (-2) = 6\n * assert.equal(Number.multiply(0.1, 0.2), 0.020000000000000004) // Note: floating-point precision limitation\n *\n * // Data-last style (pipeable)\n * assert.equal(\n *   pipe(\n *     10,\n *     Number.multiply(5) // 10 × 5 = 50\n *   ),\n *   50\n * )\n *\n * // Chaining multiple multiplications\n * assert.equal(\n *   pipe(\n *     2,\n *     Number.multiply(3), // 2 × 3 = 6\n *     Number.multiply(4), // 6 × 4 = 24\n *     Number.multiply(0.5) // 24 × 0.5 = 12\n *   ),\n *   12\n * )\n *\n * // Identity property: a × 1 = a\n * assert.equal(Number.multiply(42, 1), 42)\n *\n * // Zero property: a × 0 = 0\n * assert.equal(Number.multiply(42, 0), 0)\n *\n * // Commutative property: a × b = b × a\n * assert.equal(Number.multiply(5, 3), Number.multiply(3, 5))\n *\n * // Associative property: (a × b) × c = a × (b × c)\n * const a = 2,\n *   b = 3,\n *   c = 4\n * assert.equal(\n *   Number.multiply(Number.multiply(a, b), c),\n *   Number.multiply(a, Number.multiply(b, c))\n * )\n * ```\n */\nexport const multiply = /*#__PURE__*/dual(2, (multiplier, multiplicand) => multiplier * multiplicand);\n/**\n * Computes the product of all elements in an iterable collection of numbers.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import * as Number from \"effect/Number\"\n *\n * // Basic products\n * assert.equal(Number.multiplyAll([2, 3, 4]), 24) // 2 × 3 × 4 = 24\n * assert.equal(Number.multiplyAll([1.5, 2, 3]), 9) // 1.5 × 2 × 3 = 9\n *\n * // Empty collection returns the multiplicative identity (1)\n * assert.equal(Number.multiplyAll([]), 1)\n *\n * // Single element collection\n * assert.equal(Number.multiplyAll([42]), 42)\n *\n * // Products with negative numbers\n * assert.equal(Number.multiplyAll([2, -3, 4]), -24) // 2 × (-3) × 4 = -24\n * assert.equal(Number.multiplyAll([-2, -3]), 6) // (-2) × (-3) = 6\n *\n * // Zero property - if any element is zero, product is zero\n * assert.equal(Number.multiplyAll([2, 0, 3]), 0)\n *\n * // Works with any iterable\n * assert.equal(Number.multiplyAll(new Set([2, 3, 4])), 24)\n *\n * // Using with generated sequences\n * function* range(start: number, end: number) {\n *   for (let i = start; i <= end; i++) yield i\n * }\n *\n * // Compute factorial: 5! = 5 × 4 × 3 × 2 × 1 = 120\n * assert.equal(Number.multiplyAll(range(1, 5)), 120)\n * ```\n *\n * @param collection - An `iterable` containing the `numbers` to multiply\n *\n * @returns The product of all numbers in the collection, or 1 if the collection\n *   is empty\n */\nexport const multiplyAll = collection => {\n  let out = 1;\n  for (const n of collection) {\n    if (n === 0) {\n      return 0;\n    }\n    out *= n;\n  }\n  return out;\n};\n/**\n * Performs division in the set of JavaScript numbers, returning the result\n * wrapped in an `Option` to handle division by zero.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { pipe, Option } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * // Data-first style (direct application)\n * assert.equal(Number.divide(6, 3), Option.some(2)) // 6 ÷ 3 = 2\n * assert.equal(Number.divide(-8, 4), Option.some(-2)) // (-8) ÷ 4 = -2\n * assert.equal(Number.divide(-10, -5), Option.some(2)) // (-10) ÷ (-5) = 2\n * assert.equal(Number.divide(1, 3), Option.some(0.3333333333333333)) // Note: floating-point approximation\n *\n * // Handling division by zero\n * assert.equal(Number.divide(6, 0), Option.none()) // 6 ÷ 0 is undefined\n *\n * // Data-last style (pipeable)\n * assert.equal(\n *   pipe(\n *     10,\n *     Number.divide(2) // 10 ÷ 2 = 5\n *   ),\n *   Option.some(5)\n * )\n *\n * // Chaining multiple divisions using Option combinators\n * assert.equal(\n *   pipe(\n *     Option.some(24),\n *     Option.flatMap((n) => Number.divide(n, 2)), // 24 ÷ 2 = 12\n *     Option.flatMap(Number.divide(3)), // 12 ÷ 3 = 4\n *     Option.flatMap(Number.divide(2)) // 4 ÷ 2 = 2\n *   ),\n *   Option.some(2)\n * )\n *\n * // Division-by-one property: a ÷ 1 = a\n * assert.equal(Number.divide(42, 1), Option.some(42))\n *\n * // Self-division property: a ÷ a = 1 (for a ≠ 0)\n * assert.equal(Number.divide(42, 42), Option.some(1))\n *\n * // Non-commutative property: a ÷ b ≠ b ÷ a\n * assert.notDeepStrictEqual(\n *   Number.divide(6, 3), // 6 ÷ 3 = 2\n *   Number.divide(3, 6) // 3 ÷ 6 = 0.5\n * )\n * ```\n */\nexport const divide = /*#__PURE__*/dual(2, (dividend, divisor) => divisor === 0 ? option.none : option.some(dividend / divisor));\n/**\n * Performs division in the set of JavaScript numbers, but misbehaves for\n * division by zero.\n *\n * Unlike {@link module:Number.divide} which returns an Option, this function\n * directly returns a number or `Infinity` or `NaN`.\n *\n * - If the `divisor` is zero, it returns `Infinity`.\n * - If both the `dividend` and the `divisor` are zero, then it returns `NaN`.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { pipe } from \"effect\"\n * import * as Number from \"effect/Number\"\n *\n * // Data-first style (direct application)\n * assert.equal(Number.unsafeDivide(6, 3), 2) // 6 ÷ 3 = 2\n * assert.equal(Number.unsafeDivide(-8, 4), -2) // (-8) ÷ 4 = -2\n * assert.equal(Number.unsafeDivide(-10, -5), 2) // (-10) ÷ (-5) = 2\n * assert.equal(Number.unsafeDivide(1, 3), 0.3333333333333333)\n *\n * // Data-last style (pipeable)\n * assert.equal(\n *   pipe(\n *     10,\n *     Number.unsafeDivide(2) // 10 ÷ 2 = 5\n *   ),\n *   5\n * )\n *\n * // Chaining multiple divisions\n * assert.equal(\n *   pipe(\n *     24,\n *     Number.unsafeDivide(2), // 24 ÷ 2 = 12\n *     Number.unsafeDivide(3), // 12 ÷ 3 = 4\n *     Number.unsafeDivide(2) // 4 ÷ 2 = 2\n *   ),\n *   2\n * )\n *\n * assert.equal(Number.unsafeDivide(6, 0), Infinity)\n *\n * assert.equal(Number.unsafeDivide(0, 0), NaN)\n *\n * // Compare with safe division\n * const safeResult = Number.divide(6, 3) // Option.some(2)\n * const unsafeResult = Number.unsafeDivide(6, 3) // 2 directly\n * ```\n *\n * @throws - An {@link module:Number.DivisionByZeroError} if the divisor is zero.\n * @see {@link module:Number.divide} - Safe division returning an Option\n */\nexport const unsafeDivide = /*#__PURE__*/dual(2, (dividend, divisor) => dividend / divisor);\n/**\n * Returns the result of adding `1` to a given number.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { increment } from \"effect/Number\"\n *\n * assert.equal(increment(2), 3)\n * ```\n */\nexport const increment = n => sum(n, 1);\n/**\n * Decrements a number by `1`.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { decrement } from \"effect/Number\"\n *\n * assert.equal(decrement(3), 2)\n * ```\n */\nexport const decrement = n => subtract(n, 1);\n/**\n * @memberof Number\n * @since 2.0.0\n * @category instances\n */\nexport const Equivalence = equivalence.number;\n/**\n * @memberof Number\n * @since 2.0.0\n * @category instances\n */\nexport const Order = order.number;\n/**\n * Returns `true` if the first argument is less than the second, otherwise\n * `false`.\n *\n * @memberof Number\n * @since 2.0.0\n * @category predicates\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { lessThan } from \"effect/Number\"\n *\n * assert.equal(lessThan(2, 3), true)\n * assert.equal(lessThan(3, 3), false)\n * assert.equal(lessThan(4, 3), false)\n * ```\n */\nexport const lessThan = /*#__PURE__*/order.lessThan(Order);\n/**\n * Returns a function that checks if a given `number` is less than or equal to\n * the provided one.\n *\n * @memberof Number\n * @since 2.0.0\n * @category predicates\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { lessThanOrEqualTo } from \"effect/Number\"\n *\n * assert.equal(lessThanOrEqualTo(2, 3), true)\n * assert.equal(lessThanOrEqualTo(3, 3), true)\n * assert.equal(lessThanOrEqualTo(4, 3), false)\n * ```\n */\nexport const lessThanOrEqualTo = /*#__PURE__*/order.lessThanOrEqualTo(Order);\n/**\n * Returns `true` if the first argument is greater than the second, otherwise\n * `false`.\n *\n * @memberof Number\n * @since 2.0.0\n * @category predicates\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { greaterThan } from \"effect/Number\"\n *\n * assert.equal(greaterThan(2, 3), false)\n * assert.equal(greaterThan(3, 3), false)\n * assert.equal(greaterThan(4, 3), true)\n * ```\n */\nexport const greaterThan = /*#__PURE__*/order.greaterThan(Order);\n/**\n * Returns a function that checks if a given `number` is greater than or equal\n * to the provided one.\n *\n * @memberof Number\n * @since 2.0.0\n * @category predicates\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { greaterThanOrEqualTo } from \"effect/Number\"\n *\n * assert.equal(greaterThanOrEqualTo(2, 3), false)\n * assert.equal(greaterThanOrEqualTo(3, 3), true)\n * assert.equal(greaterThanOrEqualTo(4, 3), true)\n * ```\n */\nexport const greaterThanOrEqualTo = /*#__PURE__*/order.greaterThanOrEqualTo(Order);\n/**\n * Checks if a `number` is between a `minimum` and `maximum` value (inclusive).\n *\n * @memberof Number\n * @since 2.0.0\n * @category predicates\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { Number } from \"effect\"\n *\n * const between = Number.between({ minimum: 0, maximum: 5 })\n *\n * assert.equal(between(3), true)\n * assert.equal(between(-1), false)\n * assert.equal(between(6), false)\n * ```\n */\nexport const between = /*#__PURE__*/order.between(Order);\n/**\n * Restricts the given `number` to be within the range specified by the\n * `minimum` and `maximum` values.\n *\n * - If the `number` is less than the `minimum` value, the function returns the\n *   `minimum` value.\n * - If the `number` is greater than the `maximum` value, the function returns the\n *   `maximum` value.\n * - Otherwise, it returns the original `number`.\n *\n * @memberof Number\n * @since 2.0.0\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { Number } from \"effect\"\n *\n * const clamp = Number.clamp({ minimum: 1, maximum: 5 })\n *\n * assert.equal(clamp(3), 3)\n * assert.equal(clamp(0), 1)\n * assert.equal(clamp(6), 5)\n * ```\n */\nexport const clamp = /*#__PURE__*/order.clamp(Order);\n/**\n * Returns the minimum between two `number`s.\n *\n * @memberof Number\n * @since 2.0.0\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { min } from \"effect/Number\"\n *\n * assert.equal(min(2, 3), 2)\n * ```\n */\nexport const min = /*#__PURE__*/order.min(Order);\n/**\n * Returns the maximum between two `number`s.\n *\n * @memberof Number\n * @since 2.0.0\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { max } from \"effect/Number\"\n *\n * assert.equal(max(2, 3), 3)\n * ```\n */\nexport const max = /*#__PURE__*/order.max(Order);\n/**\n * Determines the sign of a given `number`.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { sign } from \"effect/Number\"\n *\n * assert.equal(sign(-5), -1)\n * assert.equal(sign(0), 0)\n * assert.equal(sign(5), 1)\n * ```\n */\nexport const sign = n => Order(n, 0);\n/**\n * Returns the remainder left over when one operand is divided by a second\n * operand.\n *\n * It always takes the sign of the dividend.\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { remainder } from \"effect/Number\"\n *\n * assert.equal(remainder(2, 2), 0)\n * assert.equal(remainder(3, 2), 1)\n * assert.equal(remainder(-4, 2), -0)\n * ```\n */\nexport const remainder = /*#__PURE__*/dual(2, (dividend, divisor) => {\n  // https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\n  const selfDecCount = (dividend.toString().split(\".\")[1] || \"\").length;\n  const divisorDecCount = (divisor.toString().split(\".\")[1] || \"\").length;\n  const decCount = selfDecCount > divisorDecCount ? selfDecCount : divisorDecCount;\n  const selfInt = parseInt(dividend.toFixed(decCount).replace(\".\", \"\"));\n  const divisorInt = parseInt(divisor.toFixed(decCount).replace(\".\", \"\"));\n  return selfInt % divisorInt / Math.pow(10, decCount);\n});\n/**\n * Returns the next power of 2 greater than or equal to the given number.\n *\n * - For `positive` inputs, returns the smallest power of 2 that is >= the input\n * - For `zero`, returns 2\n * - For `negative` inputs, returns NaN (as logarithms of negative numbers are\n *   undefined)\n * - For `NaN` input, returns NaN\n * - For `Infinity`, returns Infinity\n *\n * @memberof Number\n * @since 2.0.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { nextPow2 } from \"effect/Number\"\n *\n * assert.equal(nextPow2(5), 8)\n * assert.equal(nextPow2(17), 32)\n * assert.equal(nextPow2(0), 2)\n * assert.equal(Number.isNaN(nextPow2(-1)), true) // Negative inputs result in NaN\n * ```\n */\nexport const nextPow2 = n => {\n  const nextPow = Math.ceil(Math.log(n) / Math.log(2));\n  return Math.max(Math.pow(2, nextPow), 2);\n};\n/**\n * Tries to parse a `number` from a `string` using the `Number()` function. The\n * following special string values are supported: \"NaN\", \"Infinity\",\n * \"-Infinity\".\n *\n * @memberof Number\n * @since 2.0.0\n * @category constructors\n */\nexport const parse = s => {\n  if (s === \"NaN\") {\n    return option.some(NaN);\n  }\n  if (s === \"Infinity\") {\n    return option.some(Infinity);\n  }\n  if (s === \"-Infinity\") {\n    return option.some(-Infinity);\n  }\n  if (s.trim() === \"\") {\n    return option.none;\n  }\n  const n = Number(s);\n  return Number.isNaN(n) ? option.none : option.some(n);\n};\n/**\n * Returns the number rounded with the given precision.\n *\n * @memberof Number\n * @since 3.8.0\n * @category math\n * @example\n *\n * ```ts\n * import * as assert from \"node:assert/strict\"\n * import { round } from \"effect/Number\"\n *\n * assert.equal(round(1.1234, 2), 1.12)\n * assert.equal(round(1.567, 2), 1.57)\n * ```\n */\nexport const round = /*#__PURE__*/dual(2, (self, precision) => {\n  const factor = Math.pow(10, precision);\n  return Math.round(self * factor) / factor;\n});\n//# sourceMappingURL=Number.js.map","/**\n * This module provides utility functions for working with RegExp in TypeScript.\n *\n * @since 2.0.0\n */\nimport * as predicate from \"./Predicate.js\";\n/**\n * Tests if a value is a `RegExp`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { RegExp } from \"effect\"\n *\n * assert.deepStrictEqual(RegExp.isRegExp(/a/), true)\n * assert.deepStrictEqual(RegExp.isRegExp(\"a\"), false)\n * ```\n *\n * @category guards\n * @since 3.9.0\n */\nexport const isRegExp = predicate.isRegExp;\n/**\n * Escapes special characters in a regular expression pattern.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { RegExp } from \"effect\"\n *\n * assert.deepStrictEqual(RegExp.escape(\"a*b\"), \"a\\\\*b\")\n * ```\n *\n * @since 2.0.0\n */\nexport const escape = string => string.replace(/[/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n//# sourceMappingURL=RegExp.js.map","/**\n * @since 3.10.0\n */\nimport * as Arr from \"./Array.js\";\nimport { dual, identity } from \"./Function.js\";\nimport { globalValue } from \"./GlobalValue.js\";\nimport * as errors_ from \"./internal/schema/errors.js\";\nimport * as util_ from \"./internal/schema/util.js\";\nimport * as Number from \"./Number.js\";\nimport * as Option from \"./Option.js\";\nimport * as Order from \"./Order.js\";\nimport * as Predicate from \"./Predicate.js\";\nimport * as regexp from \"./RegExp.js\";\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const BrandAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Brand\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const SchemaIdAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/SchemaId\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const MessageAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Message\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const MissingMessageAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/MissingMessage\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const IdentifierAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Identifier\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const TitleAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Title\");\n/** @internal */\nexport const AutoTitleAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/AutoTitle\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DescriptionAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Description\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ExamplesAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Examples\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DefaultAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Default\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const JSONSchemaAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/JSONSchema\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ArbitraryAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Arbitrary\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const PrettyAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Pretty\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const EquivalenceAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Equivalence\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DocumentationAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Documentation\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ConcurrencyAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Concurrency\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const BatchingAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Batching\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ParseIssueTitleAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/ParseIssueTitle\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const ParseOptionsAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/ParseOptions\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const DecodingFallbackAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/DecodingFallback\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const SurrogateAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/Surrogate\");\n/** @internal */\nexport const StableFilterAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/StableFilter\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getAnnotation = /*#__PURE__*/dual(2, (annotated, key) => Object.prototype.hasOwnProperty.call(annotated.annotations, key) ? Option.some(annotated.annotations[key]) : Option.none());\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getBrandAnnotation = /*#__PURE__*/getAnnotation(BrandAnnotationId);\n/**\n * @category annotations\n * @since 3.14.2\n */\nexport const getSchemaIdAnnotation = /*#__PURE__*/getAnnotation(SchemaIdAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getMessageAnnotation = /*#__PURE__*/getAnnotation(MessageAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getMissingMessageAnnotation = /*#__PURE__*/getAnnotation(MissingMessageAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getTitleAnnotation = /*#__PURE__*/getAnnotation(TitleAnnotationId);\n/** @internal */\nexport const getAutoTitleAnnotation = /*#__PURE__*/getAnnotation(AutoTitleAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getIdentifierAnnotation = /*#__PURE__*/getAnnotation(IdentifierAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDescriptionAnnotation = /*#__PURE__*/getAnnotation(DescriptionAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getExamplesAnnotation = /*#__PURE__*/getAnnotation(ExamplesAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDefaultAnnotation = /*#__PURE__*/getAnnotation(DefaultAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getJSONSchemaAnnotation = /*#__PURE__*/getAnnotation(JSONSchemaAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDocumentationAnnotation = /*#__PURE__*/getAnnotation(DocumentationAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getConcurrencyAnnotation = /*#__PURE__*/getAnnotation(ConcurrencyAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getBatchingAnnotation = /*#__PURE__*/getAnnotation(BatchingAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getParseIssueTitleAnnotation = /*#__PURE__*/getAnnotation(ParseIssueTitleAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getParseOptionsAnnotation = /*#__PURE__*/getAnnotation(ParseOptionsAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getDecodingFallbackAnnotation = /*#__PURE__*/getAnnotation(DecodingFallbackAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getSurrogateAnnotation = /*#__PURE__*/getAnnotation(SurrogateAnnotationId);\nconst getStableFilterAnnotation = /*#__PURE__*/getAnnotation(StableFilterAnnotationId);\n/** @internal */\nexport const hasStableFilter = annotated => Option.exists(getStableFilterAnnotation(annotated), b => b === true);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const JSONIdentifierAnnotationId = /*#__PURE__*/Symbol.for(\"effect/annotation/JSONIdentifier\");\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getJSONIdentifierAnnotation = /*#__PURE__*/getAnnotation(JSONIdentifierAnnotationId);\n/**\n * @category annotations\n * @since 3.10.0\n */\nexport const getJSONIdentifier = annotated => Option.orElse(getJSONIdentifierAnnotation(annotated), () => getIdentifierAnnotation(annotated));\n// -------------------------------------------------------------------------------------\n// schema ids\n// -------------------------------------------------------------------------------------\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ParseJsonSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/ParseJson\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Declaration {\n  typeParameters;\n  decodeUnknown;\n  encodeUnknown;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Declaration\";\n  constructor(typeParameters, decodeUnknown, encodeUnknown, annotations = {}) {\n    this.typeParameters = typeParameters;\n    this.decodeUnknown = decodeUnknown;\n    this.encodeUnknown = encodeUnknown;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => \"<declaration schema>\");\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      typeParameters: this.typeParameters.map(ast => ast.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\nconst createASTGuard = tag => ast => ast._tag === tag;\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isDeclaration = /*#__PURE__*/createASTGuard(\"Declaration\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Literal {\n  literal;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Literal\";\n  constructor(literal, annotations = {}) {\n    this.literal = literal;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => util_.formatUnknown(this.literal));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      literal: Predicate.isBigInt(this.literal) ? String(this.literal) : this.literal,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isLiteral = /*#__PURE__*/createASTGuard(\"Literal\");\nconst $null = /*#__PURE__*/new Literal(null);\nexport {\n/**\n * @category constructors\n * @since 3.10.0\n */\n$null as null };\n/**\n * @category model\n * @since 3.10.0\n */\nexport class UniqueSymbol {\n  symbol;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"UniqueSymbol\";\n  constructor(symbol, annotations = {}) {\n    this.symbol = symbol;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => util_.formatUnknown(this.symbol));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      symbol: String(this.symbol),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUniqueSymbol = /*#__PURE__*/createASTGuard(\"UniqueSymbol\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class UndefinedKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"UndefinedKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const undefinedKeyword = /*#__PURE__*/new UndefinedKeyword({\n  [TitleAnnotationId]: \"undefined\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUndefinedKeyword = /*#__PURE__*/createASTGuard(\"UndefinedKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class VoidKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"VoidKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const voidKeyword = /*#__PURE__*/new VoidKeyword({\n  [TitleAnnotationId]: \"void\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isVoidKeyword = /*#__PURE__*/createASTGuard(\"VoidKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class NeverKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"NeverKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const neverKeyword = /*#__PURE__*/new NeverKeyword({\n  [TitleAnnotationId]: \"never\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isNeverKeyword = /*#__PURE__*/createASTGuard(\"NeverKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class UnknownKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"UnknownKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const unknownKeyword = /*#__PURE__*/new UnknownKeyword({\n  [TitleAnnotationId]: \"unknown\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUnknownKeyword = /*#__PURE__*/createASTGuard(\"UnknownKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class AnyKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"AnyKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const anyKeyword = /*#__PURE__*/new AnyKeyword({\n  [TitleAnnotationId]: \"any\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isAnyKeyword = /*#__PURE__*/createASTGuard(\"AnyKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class StringKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"StringKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const stringKeyword = /*#__PURE__*/new StringKeyword({\n  [TitleAnnotationId]: \"string\",\n  [DescriptionAnnotationId]: \"a string\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isStringKeyword = /*#__PURE__*/createASTGuard(\"StringKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class NumberKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"NumberKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const numberKeyword = /*#__PURE__*/new NumberKeyword({\n  [TitleAnnotationId]: \"number\",\n  [DescriptionAnnotationId]: \"a number\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isNumberKeyword = /*#__PURE__*/createASTGuard(\"NumberKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class BooleanKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"BooleanKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const booleanKeyword = /*#__PURE__*/new BooleanKeyword({\n  [TitleAnnotationId]: \"boolean\",\n  [DescriptionAnnotationId]: \"a boolean\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isBooleanKeyword = /*#__PURE__*/createASTGuard(\"BooleanKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class BigIntKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"BigIntKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const bigIntKeyword = /*#__PURE__*/new BigIntKeyword({\n  [TitleAnnotationId]: \"bigint\",\n  [DescriptionAnnotationId]: \"a bigint\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isBigIntKeyword = /*#__PURE__*/createASTGuard(\"BigIntKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class SymbolKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"SymbolKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const symbolKeyword = /*#__PURE__*/new SymbolKeyword({\n  [TitleAnnotationId]: \"symbol\",\n  [DescriptionAnnotationId]: \"a symbol\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isSymbolKeyword = /*#__PURE__*/createASTGuard(\"SymbolKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class ObjectKeyword {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"ObjectKeyword\";\n  constructor(annotations = {}) {\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return formatKeyword(this);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const objectKeyword = /*#__PURE__*/new ObjectKeyword({\n  [TitleAnnotationId]: \"object\",\n  [DescriptionAnnotationId]: \"an object in the TypeScript meaning, i.e. the `object` type\"\n});\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isObjectKeyword = /*#__PURE__*/createASTGuard(\"ObjectKeyword\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Enums {\n  enums;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Enums\";\n  constructor(enums, annotations = {}) {\n    this.enums = enums;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => `<enum ${this.enums.length} value(s): ${this.enums.map(([_, value]) => JSON.stringify(value)).join(\" | \")}>`);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      enums: this.enums,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isEnums = /*#__PURE__*/createASTGuard(\"Enums\");\nconst isTemplateLiteralSpanType = ast => {\n  switch (ast._tag) {\n    case \"Literal\":\n    case \"NumberKeyword\":\n    case \"StringKeyword\":\n    case \"TemplateLiteral\":\n      return true;\n    case \"Union\":\n      return ast.types.every(isTemplateLiteralSpanType);\n  }\n  return false;\n};\nconst templateLiteralSpanUnionTypeToString = type => {\n  switch (type._tag) {\n    case \"Literal\":\n      return JSON.stringify(String(type.literal));\n    case \"StringKeyword\":\n      return \"string\";\n    case \"NumberKeyword\":\n      return \"number\";\n    case \"TemplateLiteral\":\n      return String(type);\n    case \"Union\":\n      return type.types.map(templateLiteralSpanUnionTypeToString).join(\" | \");\n  }\n};\nconst templateLiteralSpanTypeToString = type => {\n  switch (type._tag) {\n    case \"Literal\":\n      return String(type.literal);\n    case \"StringKeyword\":\n      return \"${string}\";\n    case \"NumberKeyword\":\n      return \"${number}\";\n    case \"TemplateLiteral\":\n      return \"${\" + String(type) + \"}\";\n    case \"Union\":\n      return \"${\" + type.types.map(templateLiteralSpanUnionTypeToString).join(\" | \") + \"}\";\n  }\n};\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TemplateLiteralSpan {\n  literal;\n  /**\n   * @since 3.10.0\n   */\n  type;\n  constructor(type, literal) {\n    this.literal = literal;\n    if (isTemplateLiteralSpanType(type)) {\n      this.type = type;\n    } else {\n      throw new Error(errors_.getSchemaUnsupportedLiteralSpanErrorMessage(type));\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return templateLiteralSpanTypeToString(this.type) + this.literal;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      type: this.type.toJSON(),\n      literal: this.literal\n    };\n  }\n}\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TemplateLiteral {\n  head;\n  spans;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"TemplateLiteral\";\n  constructor(head, spans, annotations = {}) {\n    this.head = head;\n    this.spans = spans;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => formatTemplateLiteral(this));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      head: this.head,\n      spans: this.spans.map(span => span.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\nconst formatTemplateLiteral = ast => \"`\" + ast.head + ast.spans.map(String).join(\"\") + \"`\";\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTemplateLiteral = /*#__PURE__*/createASTGuard(\"TemplateLiteral\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Type {\n  type;\n  annotations;\n  constructor(type, annotations = {}) {\n    this.type = type;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      type: this.type.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return String(this.type);\n  }\n}\n/**\n * @category model\n * @since 3.10.0\n */\nexport class OptionalType extends Type {\n  isOptional;\n  constructor(type, isOptional, annotations = {}) {\n    super(type, annotations);\n    this.isOptional = isOptional;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      type: this.type.toJSON(),\n      isOptional: this.isOptional,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return String(this.type) + (this.isOptional ? \"?\" : \"\");\n  }\n}\nconst getRestASTs = rest => rest.map(annotatedAST => annotatedAST.type);\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TupleType {\n  elements;\n  rest;\n  isReadonly;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"TupleType\";\n  constructor(elements, rest, isReadonly, annotations = {}) {\n    this.elements = elements;\n    this.rest = rest;\n    this.isReadonly = isReadonly;\n    this.annotations = annotations;\n    let hasOptionalElement = false;\n    let hasIllegalRequiredElement = false;\n    for (const e of elements) {\n      if (e.isOptional) {\n        hasOptionalElement = true;\n      } else if (hasOptionalElement) {\n        hasIllegalRequiredElement = true;\n        break;\n      }\n    }\n    if (hasIllegalRequiredElement || hasOptionalElement && rest.length > 1) {\n      throw new Error(errors_.getASTRequiredElementFollowinAnOptionalElementErrorMessage);\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => formatTuple(this));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      elements: this.elements.map(e => e.toJSON()),\n      rest: this.rest.map(ast => ast.toJSON()),\n      isReadonly: this.isReadonly,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\nconst formatTuple = ast => {\n  const formattedElements = ast.elements.map(String).join(\", \");\n  return Arr.matchLeft(ast.rest, {\n    onEmpty: () => `readonly [${formattedElements}]`,\n    onNonEmpty: (head, tail) => {\n      const formattedHead = String(head);\n      const wrappedHead = formattedHead.includes(\" | \") ? `(${formattedHead})` : formattedHead;\n      if (tail.length > 0) {\n        const formattedTail = tail.map(String).join(\", \");\n        if (ast.elements.length > 0) {\n          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`;\n        } else {\n          return `readonly [...${wrappedHead}[], ${formattedTail}]`;\n        }\n      } else {\n        if (ast.elements.length > 0) {\n          return `readonly [${formattedElements}, ...${wrappedHead}[]]`;\n        } else {\n          return `ReadonlyArray<${formattedHead}>`;\n        }\n      }\n    }\n  });\n};\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTupleType = /*#__PURE__*/createASTGuard(\"TupleType\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class PropertySignature extends OptionalType {\n  name;\n  isReadonly;\n  constructor(name, type, isOptional, isReadonly, annotations) {\n    super(type, isOptional, annotations);\n    this.name = name;\n    this.isReadonly = isReadonly;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return (this.isReadonly ? \"readonly \" : \"\") + String(this.name) + (this.isOptional ? \"?\" : \"\") + \": \" + this.type;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      name: String(this.name),\n      type: this.type.toJSON(),\n      isOptional: this.isOptional,\n      isReadonly: this.isReadonly,\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @since 3.10.0\n */\nexport const isParameter = ast => {\n  switch (ast._tag) {\n    case \"StringKeyword\":\n    case \"SymbolKeyword\":\n    case \"TemplateLiteral\":\n      return true;\n    case \"Refinement\":\n      return isParameter(ast.from);\n  }\n  return false;\n};\n/**\n * @category model\n * @since 3.10.0\n */\nexport class IndexSignature {\n  type;\n  isReadonly;\n  /**\n   * @since 3.10.0\n   */\n  parameter;\n  constructor(parameter, type, isReadonly) {\n    this.type = type;\n    this.isReadonly = isReadonly;\n    if (isParameter(parameter)) {\n      this.parameter = parameter;\n    } else {\n      throw new Error(errors_.getASTIndexSignatureParameterErrorMessage);\n    }\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return (this.isReadonly ? \"readonly \" : \"\") + `[x: ${this.parameter}]: ${this.type}`;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      parameter: this.parameter.toJSON(),\n      type: this.type.toJSON(),\n      isReadonly: this.isReadonly\n    };\n  }\n}\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TypeLiteral {\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"TypeLiteral\";\n  /**\n   * @since 3.10.0\n   */\n  propertySignatures;\n  /**\n   * @since 3.10.0\n   */\n  indexSignatures;\n  constructor(propertySignatures, indexSignatures, annotations = {}) {\n    this.annotations = annotations;\n    // check for duplicate property signatures\n    const keys = {};\n    for (let i = 0; i < propertySignatures.length; i++) {\n      const name = propertySignatures[i].name;\n      if (Object.prototype.hasOwnProperty.call(keys, name)) {\n        throw new Error(errors_.getASTDuplicatePropertySignatureErrorMessage(name));\n      }\n      keys[name] = null;\n    }\n    // check for duplicate index signatures\n    const parameters = {\n      string: false,\n      symbol: false\n    };\n    for (let i = 0; i < indexSignatures.length; i++) {\n      const encodedParameter = getEncodedParameter(indexSignatures[i].parameter);\n      if (isStringKeyword(encodedParameter)) {\n        if (parameters.string) {\n          throw new Error(errors_.getASTDuplicateIndexSignatureErrorMessage(\"string\"));\n        }\n        parameters.string = true;\n      } else if (isSymbolKeyword(encodedParameter)) {\n        if (parameters.symbol) {\n          throw new Error(errors_.getASTDuplicateIndexSignatureErrorMessage(\"symbol\"));\n        }\n        parameters.symbol = true;\n      }\n    }\n    this.propertySignatures = propertySignatures;\n    this.indexSignatures = indexSignatures;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => formatTypeLiteral(this));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      propertySignatures: this.propertySignatures.map(ps => ps.toJSON()),\n      indexSignatures: this.indexSignatures.map(ps => ps.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\nconst formatIndexSignatures = iss => iss.map(String).join(\"; \");\nconst formatTypeLiteral = ast => {\n  if (ast.propertySignatures.length > 0) {\n    const pss = ast.propertySignatures.map(String).join(\"; \");\n    if (ast.indexSignatures.length > 0) {\n      return `{ ${pss}; ${formatIndexSignatures(ast.indexSignatures)} }`;\n    } else {\n      return `{ ${pss} }`;\n    }\n  } else {\n    if (ast.indexSignatures.length > 0) {\n      return `{ ${formatIndexSignatures(ast.indexSignatures)} }`;\n    } else {\n      return \"{}\";\n    }\n  }\n};\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTypeLiteral = /*#__PURE__*/createASTGuard(\"TypeLiteral\");\nconst sortCandidates = /*#__PURE__*/Arr.sort( /*#__PURE__*/Order.mapInput(Number.Order, ast => {\n  switch (ast._tag) {\n    case \"AnyKeyword\":\n      return 0;\n    case \"UnknownKeyword\":\n      return 1;\n    case \"ObjectKeyword\":\n      return 2;\n    case \"StringKeyword\":\n    case \"NumberKeyword\":\n    case \"BooleanKeyword\":\n    case \"BigIntKeyword\":\n    case \"SymbolKeyword\":\n      return 3;\n  }\n  return 4;\n}));\nconst literalMap = {\n  string: \"StringKeyword\",\n  number: \"NumberKeyword\",\n  boolean: \"BooleanKeyword\",\n  bigint: \"BigIntKeyword\"\n};\n/** @internal */\nexport const flatten = candidates => Arr.flatMap(candidates, ast => isUnion(ast) ? flatten(ast.types) : [ast]);\n/** @internal */\nexport const unify = candidates => {\n  const cs = sortCandidates(candidates);\n  const out = [];\n  const uniques = {};\n  const literals = [];\n  for (const ast of cs) {\n    switch (ast._tag) {\n      case \"NeverKeyword\":\n        break;\n      case \"AnyKeyword\":\n        return [anyKeyword];\n      case \"UnknownKeyword\":\n        return [unknownKeyword];\n      // uniques\n      case \"ObjectKeyword\":\n      case \"UndefinedKeyword\":\n      case \"VoidKeyword\":\n      case \"StringKeyword\":\n      case \"NumberKeyword\":\n      case \"BooleanKeyword\":\n      case \"BigIntKeyword\":\n      case \"SymbolKeyword\":\n        {\n          if (!uniques[ast._tag]) {\n            uniques[ast._tag] = ast;\n            out.push(ast);\n          }\n          break;\n        }\n      case \"Literal\":\n        {\n          const type = typeof ast.literal;\n          switch (type) {\n            case \"string\":\n            case \"number\":\n            case \"bigint\":\n            case \"boolean\":\n              {\n                const _tag = literalMap[type];\n                if (!uniques[_tag] && !literals.includes(ast.literal)) {\n                  literals.push(ast.literal);\n                  out.push(ast);\n                }\n                break;\n              }\n            // null\n            case \"object\":\n              {\n                if (!literals.includes(ast.literal)) {\n                  literals.push(ast.literal);\n                  out.push(ast);\n                }\n                break;\n              }\n          }\n          break;\n        }\n      case \"UniqueSymbol\":\n        {\n          if (!uniques[\"SymbolKeyword\"] && !literals.includes(ast.symbol)) {\n            literals.push(ast.symbol);\n            out.push(ast);\n          }\n          break;\n        }\n      case \"TupleType\":\n        {\n          if (!uniques[\"ObjectKeyword\"]) {\n            out.push(ast);\n          }\n          break;\n        }\n      case \"TypeLiteral\":\n        {\n          if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {\n            if (!uniques[\"{}\"]) {\n              uniques[\"{}\"] = ast;\n              out.push(ast);\n            }\n          } else if (!uniques[\"ObjectKeyword\"]) {\n            out.push(ast);\n          }\n          break;\n        }\n      default:\n        out.push(ast);\n    }\n  }\n  return out;\n};\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Union {\n  types;\n  annotations;\n  static make = (types, annotations) => {\n    return isMembers(types) ? new Union(types, annotations) : types.length === 1 ? types[0] : neverKeyword;\n  };\n  /** @internal */\n  static unify = (candidates, annotations) => {\n    return Union.make(unify(flatten(candidates)), annotations);\n  };\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Union\";\n  constructor(types, annotations = {}) {\n    this.types = types;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => this.types.map(String).join(\" | \"));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      types: this.types.map(ast => ast.toJSON()),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/** @internal */\nexport const mapMembers = (members, f) => members.map(f);\n/** @internal */\nexport const isMembers = as => as.length > 1;\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isUnion = /*#__PURE__*/createASTGuard(\"Union\");\nconst toJSONMemoMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Schema/AST/toJSONMemoMap\"), () => new WeakMap());\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Suspend {\n  f;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Suspend\";\n  constructor(f, annotations = {}) {\n    this.f = f;\n    this.annotations = annotations;\n    this.f = util_.memoizeThunk(f);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return getExpected(this).pipe(Option.orElse(() => Option.flatMap(Option.liftThrowable(this.f)(), ast => getExpected(ast))), Option.getOrElse(() => \"<suspended schema>\"));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    const ast = this.f();\n    let out = toJSONMemoMap.get(ast);\n    if (out) {\n      return out;\n    }\n    toJSONMemoMap.set(ast, {\n      _tag: this._tag\n    });\n    out = {\n      _tag: this._tag,\n      ast: ast.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n    toJSONMemoMap.set(ast, out);\n    return out;\n  }\n}\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isSuspend = /*#__PURE__*/createASTGuard(\"Suspend\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Refinement {\n  from;\n  filter;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Refinement\";\n  constructor(from, filter, annotations = {}) {\n    this.from = from;\n    this.filter = filter;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return getIdentifierAnnotation(this).pipe(Option.getOrElse(() => Option.match(getOrElseExpected(this), {\n      onNone: () => `{ ${this.from} | filter }`,\n      onSome: expected => isRefinement(this.from) ? String(this.from) + \" & \" + expected : expected\n    })));\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      from: this.from.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isRefinement = /*#__PURE__*/createASTGuard(\"Refinement\");\n/**\n * @since 3.10.0\n */\nexport const defaultParseOption = {};\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Transformation {\n  from;\n  to;\n  transformation;\n  annotations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Transformation\";\n  constructor(from, to, transformation, annotations = {}) {\n    this.from = from;\n    this.to = to;\n    this.transformation = transformation;\n    this.annotations = annotations;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return Option.getOrElse(getExpected(this), () => `(${String(this.from)} <-> ${String(this.to)})`);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _tag: this._tag,\n      from: this.from.toJSON(),\n      to: this.to.toJSON(),\n      annotations: toJSONAnnotations(this.annotations)\n    };\n  }\n}\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTransformation = /*#__PURE__*/createASTGuard(\"Transformation\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class FinalTransformation {\n  decode;\n  encode;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"FinalTransformation\";\n  constructor(decode, encode) {\n    this.decode = decode;\n    this.encode = encode;\n  }\n}\nconst createTransformationGuard = tag => ast => ast._tag === tag;\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isFinalTransformation = /*#__PURE__*/createTransformationGuard(\"FinalTransformation\");\n/**\n * @category model\n * @since 3.10.0\n */\nexport class ComposeTransformation {\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"ComposeTransformation\";\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const composeTransformation = /*#__PURE__*/new ComposeTransformation();\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isComposeTransformation = /*#__PURE__*/createTransformationGuard(\"ComposeTransformation\");\n/**\n * Represents a `PropertySignature -> PropertySignature` transformation\n *\n * The semantic of `decode` is:\n * - `none()` represents the absence of the key/value pair\n * - `some(value)` represents the presence of the key/value pair\n *\n * The semantic of `encode` is:\n * - `none()` you don't want to output the key/value pair\n * - `some(value)` you want to output the key/value pair\n *\n * @category model\n * @since 3.10.0\n */\nexport class PropertySignatureTransformation {\n  from;\n  to;\n  decode;\n  encode;\n  constructor(from, to, decode, encode) {\n    this.from = from;\n    this.to = to;\n    this.decode = decode;\n    this.encode = encode;\n  }\n}\nconst isRenamingPropertySignatureTransformation = t => t.decode === identity && t.encode === identity;\n/**\n * @category model\n * @since 3.10.0\n */\nexport class TypeLiteralTransformation {\n  propertySignatureTransformations;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"TypeLiteralTransformation\";\n  constructor(propertySignatureTransformations) {\n    this.propertySignatureTransformations = propertySignatureTransformations;\n    // check for duplicate property signature transformations\n    const fromKeys = {};\n    const toKeys = {};\n    for (const pst of propertySignatureTransformations) {\n      const from = pst.from;\n      if (fromKeys[from]) {\n        throw new Error(errors_.getASTDuplicatePropertySignatureTransformationErrorMessage(from));\n      }\n      fromKeys[from] = true;\n      const to = pst.to;\n      if (toKeys[to]) {\n        throw new Error(errors_.getASTDuplicatePropertySignatureTransformationErrorMessage(to));\n      }\n      toKeys[to] = true;\n    }\n  }\n}\n/**\n * @category guards\n * @since 3.10.0\n */\nexport const isTypeLiteralTransformation = /*#__PURE__*/createTransformationGuard(\"TypeLiteralTransformation\");\n// -------------------------------------------------------------------------------------\n// API\n// -------------------------------------------------------------------------------------\n/**\n * Merges a set of new annotations with existing ones, potentially overwriting\n * any duplicates.\n *\n * @since 3.10.0\n */\nexport const annotations = (ast, overrides) => {\n  const d = Object.getOwnPropertyDescriptors(ast);\n  const value = {\n    ...ast.annotations,\n    ...overrides\n  };\n  const surrogate = getSurrogateAnnotation(ast);\n  if (Option.isSome(surrogate)) {\n    value[SurrogateAnnotationId] = annotations(surrogate.value, overrides);\n  }\n  d.annotations.value = value;\n  return Object.create(Object.getPrototypeOf(ast), d);\n};\n/**\n * Equivalent at runtime to the TypeScript type-level `keyof` operator.\n *\n * @since 3.10.0\n */\nexport const keyof = ast => Union.unify(_keyof(ast));\nconst STRING_KEYWORD_PATTERN = \"[\\\\s\\\\S]*\"; // any string, including newlines\nconst NUMBER_KEYWORD_PATTERN = \"[+-]?\\\\d*\\\\.?\\\\d+(?:[Ee][+-]?\\\\d+)?\";\nconst getTemplateLiteralSpanTypePattern = (type, capture) => {\n  switch (type._tag) {\n    case \"Literal\":\n      return regexp.escape(String(type.literal));\n    case \"StringKeyword\":\n      return STRING_KEYWORD_PATTERN;\n    case \"NumberKeyword\":\n      return NUMBER_KEYWORD_PATTERN;\n    case \"TemplateLiteral\":\n      return getTemplateLiteralPattern(type, capture, false);\n    case \"Union\":\n      return type.types.map(type => getTemplateLiteralSpanTypePattern(type, capture)).join(\"|\");\n  }\n};\nconst handleTemplateLiteralSpanTypeParens = (type, s, capture, top) => {\n  if (isUnion(type)) {\n    if (capture && !top) {\n      return `(?:${s})`;\n    }\n  } else if (!capture || !top) {\n    return s;\n  }\n  return `(${s})`;\n};\nconst getTemplateLiteralPattern = (ast, capture, top) => {\n  let pattern = ``;\n  if (ast.head !== \"\") {\n    const head = regexp.escape(ast.head);\n    pattern += capture && top ? `(${head})` : head;\n  }\n  for (const span of ast.spans) {\n    const spanPattern = getTemplateLiteralSpanTypePattern(span.type, capture);\n    pattern += handleTemplateLiteralSpanTypeParens(span.type, spanPattern, capture, top);\n    if (span.literal !== \"\") {\n      const literal = regexp.escape(span.literal);\n      pattern += capture && top ? `(${literal})` : literal;\n    }\n  }\n  return pattern;\n};\n/**\n * Generates a regular expression from a `TemplateLiteral` AST node.\n *\n * @see {@link getTemplateLiteralCapturingRegExp} for a variant that captures the pattern.\n *\n * @since 3.10.0\n */\nexport const getTemplateLiteralRegExp = ast => new RegExp(`^${getTemplateLiteralPattern(ast, false, true)}$`);\n/**\n * Generates a regular expression that captures the pattern defined by the given `TemplateLiteral` AST.\n *\n * @see {@link getTemplateLiteralRegExp} for a variant that does not capture the pattern.\n *\n * @since 3.10.0\n */\nexport const getTemplateLiteralCapturingRegExp = ast => new RegExp(`^${getTemplateLiteralPattern(ast, true, true)}$`);\n/**\n * @since 3.10.0\n */\nexport const getPropertySignatures = ast => {\n  const annotation = getSurrogateAnnotation(ast);\n  if (Option.isSome(annotation)) {\n    return getPropertySignatures(annotation.value);\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      return ast.propertySignatures.slice();\n    case \"Suspend\":\n      return getPropertySignatures(ast.f());\n    case \"Refinement\":\n      return getPropertySignatures(ast.from);\n  }\n  return getPropertyKeys(ast).map(name => getPropertyKeyIndexedAccess(ast, name));\n};\nconst getIndexSignatures = ast => {\n  const annotation = getSurrogateAnnotation(ast);\n  if (Option.isSome(annotation)) {\n    return getIndexSignatures(annotation.value);\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      return ast.indexSignatures.slice();\n    case \"Suspend\":\n      return getIndexSignatures(ast.f());\n    case \"Refinement\":\n      return getIndexSignatures(ast.from);\n  }\n  return [];\n};\n/** @internal */\nexport const getNumberIndexedAccess = ast => {\n  switch (ast._tag) {\n    case \"TupleType\":\n      {\n        let hasOptional = false;\n        let out = [];\n        for (const e of ast.elements) {\n          if (e.isOptional) {\n            hasOptional = true;\n          }\n          out.push(e.type);\n        }\n        if (hasOptional) {\n          out.push(undefinedKeyword);\n        }\n        out = out.concat(getRestASTs(ast.rest));\n        return Union.make(out);\n      }\n    case \"Refinement\":\n      return getNumberIndexedAccess(ast.from);\n    case \"Union\":\n      return Union.make(ast.types.map(getNumberIndexedAccess));\n    case \"Suspend\":\n      return getNumberIndexedAccess(ast.f());\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n};\nconst getTypeLiteralPropertySignature = (ast, name) => {\n  // from property signatures...\n  const ops = Arr.findFirst(ast.propertySignatures, ps => ps.name === name);\n  if (Option.isSome(ops)) {\n    return ops.value;\n  }\n  // from index signatures...\n  if (Predicate.isString(name)) {\n    let out = undefined;\n    for (const is of ast.indexSignatures) {\n      const encodedParameter = getEncodedParameter(is.parameter);\n      switch (encodedParameter._tag) {\n        case \"TemplateLiteral\":\n          {\n            const regex = getTemplateLiteralRegExp(encodedParameter);\n            if (regex.test(name)) {\n              return new PropertySignature(name, is.type, false, true);\n            }\n            break;\n          }\n        case \"StringKeyword\":\n          {\n            if (out === undefined) {\n              out = new PropertySignature(name, is.type, false, true);\n            }\n          }\n      }\n    }\n    if (out) {\n      return out;\n    }\n  } else if (Predicate.isSymbol(name)) {\n    for (const is of ast.indexSignatures) {\n      const encodedParameter = getEncodedParameter(is.parameter);\n      if (isSymbolKeyword(encodedParameter)) {\n        return new PropertySignature(name, is.type, false, true);\n      }\n    }\n  }\n};\n/** @internal */\nexport const getPropertyKeyIndexedAccess = (ast, name) => {\n  const annotation = getSurrogateAnnotation(ast);\n  if (Option.isSome(annotation)) {\n    return getPropertyKeyIndexedAccess(annotation.value, name);\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      {\n        const ps = getTypeLiteralPropertySignature(ast, name);\n        if (ps) {\n          return ps;\n        }\n        break;\n      }\n    case \"Union\":\n      return new PropertySignature(name, Union.make(ast.types.map(ast => getPropertyKeyIndexedAccess(ast, name).type)), false, true);\n    case \"Suspend\":\n      return getPropertyKeyIndexedAccess(ast.f(), name);\n    case \"Refinement\":\n      return getPropertyKeyIndexedAccess(ast.from, name);\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n};\nconst getPropertyKeys = ast => {\n  const annotation = getSurrogateAnnotation(ast);\n  if (Option.isSome(annotation)) {\n    return getPropertyKeys(annotation.value);\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      return ast.propertySignatures.map(ps => ps.name);\n    case \"Union\":\n      return ast.types.slice(1).reduce((out, ast) => Arr.intersection(out, getPropertyKeys(ast)), getPropertyKeys(ast.types[0]));\n    case \"Suspend\":\n      return getPropertyKeys(ast.f());\n    case \"Refinement\":\n      return getPropertyKeys(ast.from);\n    case \"Transformation\":\n      return getPropertyKeys(ast.to);\n  }\n  return [];\n};\n/** @internal */\nexport const record = (key, value) => {\n  const propertySignatures = [];\n  const indexSignatures = [];\n  const go = key => {\n    switch (key._tag) {\n      case \"NeverKeyword\":\n        break;\n      case \"StringKeyword\":\n      case \"SymbolKeyword\":\n      case \"TemplateLiteral\":\n      case \"Refinement\":\n        indexSignatures.push(new IndexSignature(key, value, true));\n        break;\n      case \"Literal\":\n        if (Predicate.isString(key.literal) || Predicate.isNumber(key.literal)) {\n          propertySignatures.push(new PropertySignature(key.literal, value, false, true));\n        } else {\n          throw new Error(errors_.getASTUnsupportedLiteralErrorMessage(key.literal));\n        }\n        break;\n      case \"Enums\":\n        {\n          for (const [_, name] of key.enums) {\n            propertySignatures.push(new PropertySignature(name, value, false, true));\n          }\n          break;\n        }\n      case \"UniqueSymbol\":\n        propertySignatures.push(new PropertySignature(key.symbol, value, false, true));\n        break;\n      case \"Union\":\n        key.types.forEach(go);\n        break;\n      default:\n        throw new Error(errors_.getASTUnsupportedKeySchemaErrorMessage(key));\n    }\n  };\n  go(key);\n  return {\n    propertySignatures,\n    indexSignatures\n  };\n};\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Pick`.\n *\n * @since 3.10.0\n */\nexport const pick = (ast, keys) => {\n  const annotation = getSurrogateAnnotation(ast);\n  if (Option.isSome(annotation)) {\n    return pick(annotation.value, keys);\n  }\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      {\n        const pss = [];\n        const names = {};\n        for (const ps of ast.propertySignatures) {\n          names[ps.name] = null;\n          if (keys.includes(ps.name)) {\n            pss.push(ps);\n          }\n        }\n        for (const key of keys) {\n          if (!(key in names)) {\n            const ps = getTypeLiteralPropertySignature(ast, key);\n            if (ps) {\n              pss.push(ps);\n            }\n          }\n        }\n        return new TypeLiteral(pss, []);\n      }\n    case \"Union\":\n      return new TypeLiteral(keys.map(name => getPropertyKeyIndexedAccess(ast, name)), []);\n    case \"Suspend\":\n      return pick(ast.f(), keys);\n    case \"Refinement\":\n      return pick(ast.from, keys);\n    case \"Transformation\":\n      {\n        switch (ast.transformation._tag) {\n          case \"ComposeTransformation\":\n            return new Transformation(pick(ast.from, keys), pick(ast.to, keys), composeTransformation);\n          case \"TypeLiteralTransformation\":\n            {\n              const ts = [];\n              const fromKeys = [];\n              for (const k of keys) {\n                const t = ast.transformation.propertySignatureTransformations.find(t => t.to === k);\n                if (t) {\n                  ts.push(t);\n                  fromKeys.push(t.from);\n                } else {\n                  fromKeys.push(k);\n                }\n              }\n              return Arr.isNonEmptyReadonlyArray(ts) ? new Transformation(pick(ast.from, fromKeys), pick(ast.to, keys), new TypeLiteralTransformation(ts)) : pick(ast.from, fromKeys);\n            }\n        }\n      }\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n};\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Omit`.\n *\n * @since 3.10.0\n */\nexport const omit = (ast, keys) => {\n  let indexSignatures = getIndexSignatures(ast);\n  if (indexSignatures.length > 0) {\n    if (indexSignatures.some(is => isStringKeyword(getEncodedParameter(is.parameter)))) {\n      indexSignatures = indexSignatures.filter(is => !isTemplateLiteral(getEncodedParameter(is.parameter)));\n    }\n    return new TypeLiteral([], indexSignatures);\n  }\n  return pick(ast, getPropertyKeys(ast).filter(name => !keys.includes(name)));\n};\n/** @internal */\nexport const orUndefined = ast => Union.make([ast, undefinedKeyword]);\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Partial`.\n *\n * @since 3.10.0\n */\nexport const partial = (ast, options) => {\n  const exact = options?.exact === true;\n  switch (ast._tag) {\n    case \"TupleType\":\n      return new TupleType(ast.elements.map(e => new OptionalType(exact ? e.type : orUndefined(e.type), true)), Arr.match(ast.rest, {\n        onEmpty: () => ast.rest,\n        onNonEmpty: rest => [new Type(Union.make([...getRestASTs(rest), undefinedKeyword]))]\n      }), ast.isReadonly);\n    case \"TypeLiteral\":\n      return new TypeLiteral(ast.propertySignatures.map(ps => new PropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)), ast.indexSignatures.map(is => new IndexSignature(is.parameter, orUndefined(is.type), is.isReadonly)));\n    case \"Union\":\n      return Union.make(ast.types.map(member => partial(member, options)));\n    case \"Suspend\":\n      return new Suspend(() => partial(ast.f(), options));\n    case \"Declaration\":\n    case \"Refinement\":\n      throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n    case \"Transformation\":\n      {\n        if (isTypeLiteralTransformation(ast.transformation) && ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)) {\n          return new Transformation(partial(ast.from, options), partial(ast.to, options), ast.transformation);\n        }\n        throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n      }\n  }\n  return ast;\n};\n/**\n * Equivalent at runtime to the built-in TypeScript utility type `Required`.\n *\n * @since 3.10.0\n */\nexport const required = ast => {\n  switch (ast._tag) {\n    case \"TupleType\":\n      return new TupleType(ast.elements.map(e => new OptionalType(e.type, false)), ast.rest, ast.isReadonly);\n    case \"TypeLiteral\":\n      return new TypeLiteral(ast.propertySignatures.map(f => new PropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)), ast.indexSignatures);\n    case \"Union\":\n      return Union.make(ast.types.map(member => required(member)));\n    case \"Suspend\":\n      return new Suspend(() => required(ast.f()));\n    case \"Declaration\":\n    case \"Refinement\":\n      throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n    case \"Transformation\":\n      {\n        if (isTypeLiteralTransformation(ast.transformation) && ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)) {\n          return new Transformation(required(ast.from), required(ast.to), ast.transformation);\n        }\n        throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n      }\n  }\n  return ast;\n};\n/**\n * Creates a new AST with shallow mutability applied to its properties.\n *\n * @since 3.10.0\n */\nexport const mutable = ast => {\n  switch (ast._tag) {\n    case \"TupleType\":\n      return ast.isReadonly === false ? ast : new TupleType(ast.elements, ast.rest, false, ast.annotations);\n    case \"TypeLiteral\":\n      {\n        const propertySignatures = changeMap(ast.propertySignatures, ps => ps.isReadonly === false ? ps : new PropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations));\n        const indexSignatures = changeMap(ast.indexSignatures, is => is.isReadonly === false ? is : new IndexSignature(is.parameter, is.type, false));\n        return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ? ast : new TypeLiteral(propertySignatures, indexSignatures, ast.annotations);\n      }\n    case \"Union\":\n      {\n        const types = changeMap(ast.types, mutable);\n        return types === ast.types ? ast : Union.make(types, ast.annotations);\n      }\n    case \"Suspend\":\n      return new Suspend(() => mutable(ast.f()), ast.annotations);\n    case \"Refinement\":\n      {\n        const from = mutable(ast.from);\n        return from === ast.from ? ast : new Refinement(from, ast.filter, ast.annotations);\n      }\n    case \"Transformation\":\n      {\n        const from = mutable(ast.from);\n        const to = mutable(ast.to);\n        return from === ast.from && to === ast.to ? ast : new Transformation(from, to, ast.transformation, ast.annotations);\n      }\n  }\n  return ast;\n};\n/**\n * @since 3.10.0\n */\nexport const getCompiler = match => {\n  const compile = (ast, path) => match[ast._tag](ast, compile, path);\n  return compile;\n};\n/** @internal */\nexport const pickAnnotations = annotationIds => annotated => {\n  let out = undefined;\n  for (const id of annotationIds) {\n    if (Object.prototype.hasOwnProperty.call(annotated.annotations, id)) {\n      if (out === undefined) {\n        out = {};\n      }\n      out[id] = annotated.annotations[id];\n    }\n  }\n  return out;\n};\n/** @internal */\nexport const omitAnnotations = annotationIds => annotated => {\n  const out = {\n    ...annotated.annotations\n  };\n  for (const id of annotationIds) {\n    delete out[id];\n  }\n  return out;\n};\nconst preserveTransformationAnnotations = /*#__PURE__*/pickAnnotations([ExamplesAnnotationId, DefaultAnnotationId, JSONSchemaAnnotationId, ArbitraryAnnotationId, PrettyAnnotationId, EquivalenceAnnotationId]);\n/**\n * @since 3.10.0\n */\nexport const typeAST = ast => {\n  switch (ast._tag) {\n    case \"Declaration\":\n      {\n        const typeParameters = changeMap(ast.typeParameters, typeAST);\n        return typeParameters === ast.typeParameters ? ast : new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations);\n      }\n    case \"TupleType\":\n      {\n        const elements = changeMap(ast.elements, e => {\n          const type = typeAST(e.type);\n          return type === e.type ? e : new OptionalType(type, e.isOptional);\n        });\n        const restASTs = getRestASTs(ast.rest);\n        const rest = changeMap(restASTs, typeAST);\n        return elements === ast.elements && rest === restASTs ? ast : new TupleType(elements, rest.map(type => new Type(type)), ast.isReadonly, ast.annotations);\n      }\n    case \"TypeLiteral\":\n      {\n        const propertySignatures = changeMap(ast.propertySignatures, p => {\n          const type = typeAST(p.type);\n          return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly);\n        });\n        const indexSignatures = changeMap(ast.indexSignatures, is => {\n          const type = typeAST(is.type);\n          return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly);\n        });\n        return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ? ast : new TypeLiteral(propertySignatures, indexSignatures, ast.annotations);\n      }\n    case \"Union\":\n      {\n        const types = changeMap(ast.types, typeAST);\n        return types === ast.types ? ast : Union.make(types, ast.annotations);\n      }\n    case \"Suspend\":\n      return new Suspend(() => typeAST(ast.f()), ast.annotations);\n    case \"Refinement\":\n      {\n        const from = typeAST(ast.from);\n        return from === ast.from ? ast : new Refinement(from, ast.filter, ast.annotations);\n      }\n    case \"Transformation\":\n      {\n        const preserve = preserveTransformationAnnotations(ast);\n        return typeAST(preserve !== undefined ? annotations(ast.to, preserve) : ast.to);\n      }\n  }\n  return ast;\n};\n// To generate a JSON Schema from a recursive schema, an `identifier` annotation\n// is required. So, when we calculate the encodedAST, we need to preserve the\n// annotation in the form of an internal custom annotation that acts as a\n// surrogate for the identifier, which the JSON Schema compiler can then read.\nconst createJSONIdentifierAnnotation = annotated => Option.match(getJSONIdentifier(annotated), {\n  onNone: () => undefined,\n  onSome: identifier => ({\n    [JSONIdentifierAnnotationId]: identifier\n  })\n});\nfunction changeMap(as, f) {\n  let changed = false;\n  const out = Arr.allocate(as.length);\n  for (let i = 0; i < as.length; i++) {\n    const a = as[i];\n    const fa = f(a);\n    if (fa !== a) {\n      changed = true;\n    }\n    out[i] = fa;\n  }\n  return changed ? out : as;\n}\n/**\n * Returns the from part of a transformation if it exists\n *\n * @internal\n */\nexport const getTransformationFrom = ast => {\n  switch (ast._tag) {\n    case \"Transformation\":\n      return ast.from;\n    case \"Refinement\":\n      return getTransformationFrom(ast.from);\n    case \"Suspend\":\n      return getTransformationFrom(ast.f());\n  }\n};\nconst encodedAST_ = (ast, isBound) => {\n  switch (ast._tag) {\n    case \"Declaration\":\n      {\n        const typeParameters = changeMap(ast.typeParameters, ast => encodedAST_(ast, isBound));\n        return typeParameters === ast.typeParameters ? ast : new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations);\n      }\n    case \"TupleType\":\n      {\n        const elements = changeMap(ast.elements, e => {\n          const type = encodedAST_(e.type, isBound);\n          return type === e.type ? e : new OptionalType(type, e.isOptional);\n        });\n        const restASTs = getRestASTs(ast.rest);\n        const rest = changeMap(restASTs, ast => encodedAST_(ast, isBound));\n        return elements === ast.elements && rest === restASTs ? ast : new TupleType(elements, rest.map(ast => new Type(ast)), ast.isReadonly, createJSONIdentifierAnnotation(ast));\n      }\n    case \"TypeLiteral\":\n      {\n        const propertySignatures = changeMap(ast.propertySignatures, ps => {\n          const type = encodedAST_(ps.type, isBound);\n          return type === ps.type ? ps : new PropertySignature(ps.name, type, ps.isOptional, ps.isReadonly);\n        });\n        const indexSignatures = changeMap(ast.indexSignatures, is => {\n          const type = encodedAST_(is.type, isBound);\n          return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly);\n        });\n        return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ? ast : new TypeLiteral(propertySignatures, indexSignatures, createJSONIdentifierAnnotation(ast));\n      }\n    case \"Union\":\n      {\n        const types = changeMap(ast.types, ast => encodedAST_(ast, isBound));\n        return types === ast.types ? ast : Union.make(types, createJSONIdentifierAnnotation(ast));\n      }\n    case \"Suspend\":\n      return new Suspend(() => encodedAST_(ast.f(), isBound), createJSONIdentifierAnnotation(ast));\n    case \"Refinement\":\n      {\n        const from = encodedAST_(ast.from, isBound);\n        if (isBound) {\n          if (from === ast.from) {\n            return ast;\n          }\n          if (getTransformationFrom(ast.from) === undefined && hasStableFilter(ast)) {\n            return new Refinement(from, ast.filter, ast.annotations);\n          }\n        }\n        const identifier = createJSONIdentifierAnnotation(ast);\n        return identifier ? annotations(from, identifier) : from;\n      }\n    case \"Transformation\":\n      {\n        const identifier = createJSONIdentifierAnnotation(ast);\n        return encodedAST_(identifier ? annotations(ast.from, identifier) : ast.from, isBound);\n      }\n  }\n  return ast;\n};\n/**\n * @since 3.10.0\n */\nexport const encodedAST = ast => encodedAST_(ast, false);\n/**\n * @since 3.10.0\n */\nexport const encodedBoundAST = ast => encodedAST_(ast, true);\nconst toJSONAnnotations = annotations => {\n  const out = {};\n  for (const k of Object.getOwnPropertySymbols(annotations)) {\n    out[String(k)] = annotations[k];\n  }\n  return out;\n};\n/** @internal */\nexport const getEncodedParameter = ast => {\n  switch (ast._tag) {\n    case \"StringKeyword\":\n    case \"SymbolKeyword\":\n    case \"TemplateLiteral\":\n      return ast;\n    case \"Refinement\":\n      return getEncodedParameter(ast.from);\n  }\n};\n/** @internal  */\nexport const equals = (self, that) => {\n  switch (self._tag) {\n    case \"Literal\":\n      return isLiteral(that) && that.literal === self.literal;\n    case \"UniqueSymbol\":\n      return isUniqueSymbol(that) && that.symbol === self.symbol;\n    case \"UndefinedKeyword\":\n    case \"VoidKeyword\":\n    case \"NeverKeyword\":\n    case \"UnknownKeyword\":\n    case \"AnyKeyword\":\n    case \"StringKeyword\":\n    case \"NumberKeyword\":\n    case \"BooleanKeyword\":\n    case \"BigIntKeyword\":\n    case \"SymbolKeyword\":\n    case \"ObjectKeyword\":\n      return that._tag === self._tag;\n    case \"TemplateLiteral\":\n      return isTemplateLiteral(that) && that.head === self.head && equalsTemplateLiteralSpan(that.spans, self.spans);\n    case \"Enums\":\n      return isEnums(that) && equalsEnums(that.enums, self.enums);\n    case \"Union\":\n      return isUnion(that) && equalsUnion(self.types, that.types);\n    case \"Refinement\":\n    case \"TupleType\":\n    case \"TypeLiteral\":\n    case \"Suspend\":\n    case \"Transformation\":\n    case \"Declaration\":\n      return self === that;\n  }\n};\nconst equalsTemplateLiteralSpan = /*#__PURE__*/Arr.getEquivalence((self, that) => {\n  return self.literal === that.literal && equals(self.type, that.type);\n});\nconst equalsEnums = /*#__PURE__*/Arr.getEquivalence((self, that) => that[0] === self[0] && that[1] === self[1]);\nconst equalsUnion = /*#__PURE__*/Arr.getEquivalence(equals);\nconst intersection = /*#__PURE__*/Arr.intersectionWith(equals);\nconst _keyof = ast => {\n  switch (ast._tag) {\n    case \"Declaration\":\n      {\n        const annotation = getSurrogateAnnotation(ast);\n        if (Option.isSome(annotation)) {\n          return _keyof(annotation.value);\n        }\n        break;\n      }\n    case \"TypeLiteral\":\n      return ast.propertySignatures.map(p => Predicate.isSymbol(p.name) ? new UniqueSymbol(p.name) : new Literal(p.name)).concat(ast.indexSignatures.map(is => getEncodedParameter(is.parameter)));\n    case \"Suspend\":\n      return _keyof(ast.f());\n    case \"Union\":\n      return ast.types.slice(1).reduce((out, ast) => intersection(out, _keyof(ast)), _keyof(ast.types[0]));\n    case \"Transformation\":\n      return _keyof(ast.to);\n  }\n  throw new Error(errors_.getASTUnsupportedSchemaErrorMessage(ast));\n};\n/** @internal */\nexport const compose = (ab, cd) => new Transformation(ab, cd, composeTransformation);\n/** @internal */\nexport const rename = (ast, mapping) => {\n  switch (ast._tag) {\n    case \"TypeLiteral\":\n      {\n        const propertySignatureTransformations = [];\n        for (const key of util_.ownKeys(mapping)) {\n          const name = mapping[key];\n          if (name !== undefined) {\n            propertySignatureTransformations.push(new PropertySignatureTransformation(key, name, identity, identity));\n          }\n        }\n        if (propertySignatureTransformations.length === 0) {\n          return ast;\n        }\n        return new Transformation(ast, new TypeLiteral(ast.propertySignatures.map(ps => {\n          const name = mapping[ps.name];\n          return new PropertySignature(name === undefined ? ps.name : name, typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations);\n        }), ast.indexSignatures), new TypeLiteralTransformation(propertySignatureTransformations));\n      }\n    case \"Union\":\n      return Union.make(ast.types.map(ast => rename(ast, mapping)));\n    case \"Suspend\":\n      return new Suspend(() => rename(ast.f(), mapping));\n    case \"Transformation\":\n      return compose(ast, rename(typeAST(ast), mapping));\n  }\n  throw new Error(errors_.getASTUnsupportedRenameSchemaErrorMessage(ast));\n};\nconst formatKeyword = ast => Option.getOrElse(getExpected(ast), () => ast._tag);\nfunction getBrands(ast) {\n  return Option.match(getBrandAnnotation(ast), {\n    onNone: () => \"\",\n    onSome: brands => brands.map(brand => ` & Brand<${util_.formatUnknown(brand)}>`).join(\"\")\n  });\n}\nconst getOrElseExpected = ast => getTitleAnnotation(ast).pipe(Option.orElse(() => getDescriptionAnnotation(ast)), Option.orElse(() => getAutoTitleAnnotation(ast)), Option.map(s => s + getBrands(ast)));\nconst getExpected = ast => Option.orElse(getIdentifierAnnotation(ast), () => getOrElseExpected(ast));\n/** @internal */\nexport const pruneUndefined = (ast, self, onTransformation) => {\n  switch (ast._tag) {\n    case \"UndefinedKeyword\":\n      return neverKeyword;\n    case \"Union\":\n      {\n        const types = [];\n        let hasUndefined = false;\n        for (const type of ast.types) {\n          const pruned = self(type);\n          if (pruned) {\n            hasUndefined = true;\n            if (!isNeverKeyword(pruned)) {\n              types.push(pruned);\n            }\n          } else {\n            types.push(type);\n          }\n        }\n        if (hasUndefined) {\n          return Union.make(types);\n        }\n        break;\n      }\n    case \"Suspend\":\n      return self(ast.f());\n    case \"Transformation\":\n      return onTransformation(ast);\n  }\n};\n//# sourceMappingURL=SchemaAST.js.map","import * as Equal from \"../Equal.js\";\nimport { dual } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as Hash from \"../Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport { EffectPrototype, effectVariance } from \"./effectable.js\";\nimport * as option from \"./option.js\";\n/** @internal */\nexport const TagTypeId = /*#__PURE__*/Symbol.for(\"effect/Context/Tag\");\n/** @internal */\nexport const ReferenceTypeId = /*#__PURE__*/Symbol.for(\"effect/Context/Reference\");\n/** @internal */\nconst STMSymbolKey = \"effect/STM\";\n/** @internal */\nexport const STMTypeId = /*#__PURE__*/Symbol.for(STMSymbolKey);\n/** @internal */\nexport const TagProto = {\n  ...EffectPrototype,\n  _op: \"Tag\",\n  [STMTypeId]: effectVariance,\n  [TagTypeId]: {\n    _Service: _ => _,\n    _Identifier: _ => _\n  },\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"Tag\",\n      key: this.key,\n      stack: this.stack\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  of(self) {\n    return self;\n  },\n  context(self) {\n    return make(this, self);\n  }\n};\nexport const ReferenceProto = {\n  ...TagProto,\n  [ReferenceTypeId]: ReferenceTypeId\n};\n/** @internal */\nexport const makeGenericTag = key => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 2;\n  const creationError = new Error();\n  Error.stackTraceLimit = limit;\n  const tag = Object.create(TagProto);\n  Object.defineProperty(tag, \"stack\", {\n    get() {\n      return creationError.stack;\n    }\n  });\n  tag.key = key;\n  return tag;\n};\n/** @internal */\nexport const Tag = id => () => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 2;\n  const creationError = new Error();\n  Error.stackTraceLimit = limit;\n  function TagClass() {}\n  Object.setPrototypeOf(TagClass, TagProto);\n  TagClass.key = id;\n  Object.defineProperty(TagClass, \"stack\", {\n    get() {\n      return creationError.stack;\n    }\n  });\n  return TagClass;\n};\n/** @internal */\nexport const Reference = () => (id, options) => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 2;\n  const creationError = new Error();\n  Error.stackTraceLimit = limit;\n  function ReferenceClass() {}\n  Object.setPrototypeOf(ReferenceClass, ReferenceProto);\n  ReferenceClass.key = id;\n  ReferenceClass.defaultValue = options.defaultValue;\n  Object.defineProperty(ReferenceClass, \"stack\", {\n    get() {\n      return creationError.stack;\n    }\n  });\n  return ReferenceClass;\n};\n/** @internal */\nexport const TypeId = /*#__PURE__*/Symbol.for(\"effect/Context\");\n/** @internal */\nexport const ContextProto = {\n  [TypeId]: {\n    _Services: _ => _\n  },\n  [Equal.symbol](that) {\n    if (isContext(that)) {\n      if (this.unsafeMap.size === that.unsafeMap.size) {\n        for (const k of this.unsafeMap.keys()) {\n          if (!that.unsafeMap.has(k) || !Equal.equals(this.unsafeMap.get(k), that.unsafeMap.get(k))) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  },\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.number(this.unsafeMap.size));\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"Context\",\n      services: Array.from(this.unsafeMap).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n};\n/** @internal */\nexport const makeContext = unsafeMap => {\n  const context = Object.create(ContextProto);\n  context.unsafeMap = unsafeMap;\n  return context;\n};\nconst serviceNotFoundError = tag => {\n  const error = new Error(`Service not found${tag.key ? `: ${String(tag.key)}` : \"\"}`);\n  if (tag.stack) {\n    const lines = tag.stack.split(\"\\n\");\n    if (lines.length > 2) {\n      const afterAt = lines[2].match(/at (.*)/);\n      if (afterAt) {\n        error.message = error.message + ` (defined at ${afterAt[1]})`;\n      }\n    }\n  }\n  if (error.stack) {\n    const lines = error.stack.split(\"\\n\");\n    lines.splice(1, 3);\n    error.stack = lines.join(\"\\n\");\n  }\n  return error;\n};\n/** @internal */\nexport const isContext = u => hasProperty(u, TypeId);\n/** @internal */\nexport const isTag = u => hasProperty(u, TagTypeId);\n/** @internal */\nexport const isReference = u => hasProperty(u, ReferenceTypeId);\nconst _empty = /*#__PURE__*/makeContext( /*#__PURE__*/new Map());\n/** @internal */\nexport const empty = () => _empty;\n/** @internal */\nexport const make = (tag, service) => makeContext(new Map([[tag.key, service]]));\n/** @internal */\nexport const add = /*#__PURE__*/dual(3, (self, tag, service) => {\n  const map = new Map(self.unsafeMap);\n  map.set(tag.key, service);\n  return makeContext(map);\n});\nconst defaultValueCache = /*#__PURE__*/globalValue(\"effect/Context/defaultValueCache\", () => new Map());\nconst getDefaultValue = tag => {\n  if (defaultValueCache.has(tag.key)) {\n    return defaultValueCache.get(tag.key);\n  }\n  const value = tag.defaultValue();\n  defaultValueCache.set(tag.key, value);\n  return value;\n};\n/** @internal */\nexport const unsafeGetReference = (self, tag) => {\n  return self.unsafeMap.has(tag.key) ? self.unsafeMap.get(tag.key) : getDefaultValue(tag);\n};\n/** @internal */\nexport const unsafeGet = /*#__PURE__*/dual(2, (self, tag) => {\n  if (!self.unsafeMap.has(tag.key)) {\n    if (ReferenceTypeId in tag) return getDefaultValue(tag);\n    throw serviceNotFoundError(tag);\n  }\n  return self.unsafeMap.get(tag.key);\n});\n/** @internal */\nexport const get = unsafeGet;\n/** @internal */\nexport const getOrElse = /*#__PURE__*/dual(3, (self, tag, orElse) => {\n  if (!self.unsafeMap.has(tag.key)) {\n    return isReference(tag) ? getDefaultValue(tag) : orElse();\n  }\n  return self.unsafeMap.get(tag.key);\n});\n/** @internal */\nexport const getOption = /*#__PURE__*/dual(2, (self, tag) => {\n  if (!self.unsafeMap.has(tag.key)) {\n    return isReference(tag) ? option.some(getDefaultValue(tag)) : option.none;\n  }\n  return option.some(self.unsafeMap.get(tag.key));\n});\n/** @internal */\nexport const merge = /*#__PURE__*/dual(2, (self, that) => {\n  const map = new Map(self.unsafeMap);\n  for (const [tag, s] of that.unsafeMap) {\n    map.set(tag, s);\n  }\n  return makeContext(map);\n});\n/** @internal */\nexport const mergeAll = (...ctxs) => {\n  const map = new Map();\n  for (const ctx of ctxs) {\n    for (const [tag, s] of ctx.unsafeMap) {\n      map.set(tag, s);\n    }\n  }\n  return makeContext(map);\n};\n/** @internal */\nexport const pick = (...tags) => self => {\n  const tagSet = new Set(tags.map(_ => _.key));\n  const newEnv = new Map();\n  for (const [tag, s] of self.unsafeMap.entries()) {\n    if (tagSet.has(tag)) {\n      newEnv.set(tag, s);\n    }\n  }\n  return makeContext(newEnv);\n};\n/** @internal */\nexport const omit = (...tags) => self => {\n  const newEnv = new Map(self.unsafeMap);\n  for (const tag of tags) {\n    newEnv.delete(tag.key);\n  }\n  return makeContext(newEnv);\n};\n//# sourceMappingURL=context.js.map","import * as internal from \"./internal/context.js\";\nconst TagTypeId = internal.TagTypeId;\nconst ReferenceTypeId = internal.ReferenceTypeId;\n/**\n * Creates a new `Tag` instance with an optional key parameter.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.GenericTag(\"PORT\").key === Context.GenericTag(\"PORT\").key, true)\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const GenericTag = internal.makeGenericTag;\nconst TypeId = internal.TypeId;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const unsafeMake = internal.makeContext;\n/**\n * Checks if the provided argument is a `Context`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.isContext(Context.empty()), true)\n * ```\n *\n * @since 2.0.0\n * @category guards\n */\nexport const isContext = internal.isContext;\n/**\n * Checks if the provided argument is a `Tag`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.isTag(Context.GenericTag(\"Tag\")), true)\n * ```\n *\n * @since 2.0.0\n * @category guards\n */\nexport const isTag = internal.isTag;\n/**\n * Checks if the provided argument is a `Reference`.\n *\n * @since 3.11.0\n * @category guards\n * @experimental\n */\nexport const isReference = internal.isReference;\n/**\n * Returns an empty `Context`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.isContext(Context.empty()), true)\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const empty = internal.empty;\n/**\n * Creates a new `Context` with a single service associated to the tag.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make = internal.make;\n/**\n * Adds a service to a given `Context`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, pipe } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const someContext = Context.make(Port, { PORT: 8080 })\n *\n * const Services = pipe(\n *   someContext,\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * ```\n *\n * @since 2.0.0\n */\nexport const add = internal.add;\n/**\n * Get a service from the context that corresponds to the given tag.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const Services = pipe(\n *   Context.make(Port, { PORT: 8080 }),\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * ```\n *\n * @since 2.0.0\n * @category getters\n */\nexport const get = internal.get;\n/**\n * Get a service from the context that corresponds to the given tag, or\n * use the fallback value.\n *\n * @since 3.7.0\n * @category getters\n */\nexport const getOrElse = internal.getOrElse;\n/**\n * Get a service from the context that corresponds to the given tag.\n * This function is unsafe because if the tag is not present in the context, a runtime error will be thrown.\n *\n * For a safer version see {@link getOption}.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.unsafeGet(Services, Port), { PORT: 8080 })\n * assert.throws(() => Context.unsafeGet(Services, Timeout))\n * ```\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeGet = internal.unsafeGet;\n/**\n * Get the value associated with the specified tag from the context wrapped in an `Option` object. If the tag is not\n * found, the `Option` object will be `None`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, Option } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.getOption(Services, Port), Option.some({ PORT: 8080 }))\n * assert.deepStrictEqual(Context.getOption(Services, Timeout), Option.none())\n * ```\n *\n * @since 2.0.0\n * @category getters\n */\nexport const getOption = internal.getOption;\n/**\n * Merges two `Context`s, returning a new `Context` containing the services of both.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const firstContext = Context.make(Port, { PORT: 8080 })\n * const secondContext = Context.make(Timeout, { TIMEOUT: 5000 })\n *\n * const Services = Context.merge(firstContext, secondContext)\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * ```\n *\n * @since 2.0.0\n */\nexport const merge = internal.merge;\n/**\n * Merges any number of `Context`s, returning a new `Context` containing the services of all.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n * const Host = Context.GenericTag<{ HOST: string }>(\"Host\")\n *\n * const firstContext = Context.make(Port, { PORT: 8080 })\n * const secondContext = Context.make(Timeout, { TIMEOUT: 5000 })\n * const thirdContext = Context.make(Host, { HOST: \"localhost\" })\n *\n * const Services = Context.mergeAll(firstContext, secondContext, thirdContext)\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * assert.deepStrictEqual(Context.get(Services, Host), { HOST: \"localhost\" })\n * ```\n *\n * @since 3.12.0\n */\nexport const mergeAll = internal.mergeAll;\n/**\n * Returns a new `Context` that contains only the specified services.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Context, Option } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const someContext = pipe(\n *   Context.make(Port, { PORT: 8080 }),\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * const Services = pipe(someContext, Context.pick(Port))\n *\n * assert.deepStrictEqual(Context.getOption(Services, Port), Option.some({ PORT: 8080 }))\n * assert.deepStrictEqual(Context.getOption(Services, Timeout), Option.none())\n * ```\n *\n * @since 2.0.0\n */\nexport const pick = internal.pick;\n/**\n * @since 2.0.0\n */\nexport const omit = internal.omit;\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, Layer } from \"effect\"\n *\n * class MyTag extends Context.Tag(\"MyTag\")<\n *  MyTag,\n *  { readonly myNum: number }\n * >() {\n *  static Live = Layer.succeed(this, { myNum: 108 })\n * }\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const Tag = internal.Tag;\n/**\n * Creates a context tag with a default value.\n *\n * **Details**\n *\n * `Context.Reference` allows you to create a tag that can hold a value. You can\n * provide a default value for the service, which will automatically be used\n * when the context is accessed, or override it with a custom implementation\n * when needed.\n *\n * **Example** (Declaring a Tag with a default value)\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, Effect } from \"effect\"\n *\n * class SpecialNumber extends Context.Reference<SpecialNumber>()(\n *   \"SpecialNumber\",\n *   { defaultValue: () => 2048 }\n * ) {}\n *\n * //      ┌─── Effect<void, never, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const specialNumber = yield* SpecialNumber\n *   console.log(`The special number is ${specialNumber}`)\n * })\n *\n * // No need to provide the SpecialNumber implementation\n * Effect.runPromise(program)\n * // Output: The special number is 2048\n * ```\n *\n * **Example** (Overriding the default value)\n *\n * ```ts\n * import { Context, Effect } from \"effect\"\n *\n * class SpecialNumber extends Context.Reference<SpecialNumber>()(\n *   \"SpecialNumber\",\n *   { defaultValue: () => 2048 }\n * ) {}\n *\n * const program = Effect.gen(function* () {\n *   const specialNumber = yield* SpecialNumber\n *   console.log(`The special number is ${specialNumber}`)\n * })\n *\n * Effect.runPromise(program.pipe(Effect.provideService(SpecialNumber, -1)))\n * // Output: The special number is -1\n * ```\n *\n * @since 3.11.0\n * @category constructors\n * @experimental\n */\nexport const Reference = internal.Reference;\n//# sourceMappingURL=Context.js.map","/**\n * @since 2.0.0\n */\nimport * as RA from \"./Array.js\";\nimport * as Equal from \"./Equal.js\";\nimport * as Equivalence from \"./Equivalence.js\";\nimport { dual, identity, pipe } from \"./Function.js\";\nimport * as Hash from \"./Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"./Inspectable.js\";\nimport * as O from \"./Option.js\";\nimport * as Order from \"./Order.js\";\nimport { pipeArguments } from \"./Pipeable.js\";\nimport { hasProperty } from \"./Predicate.js\";\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Chunk\");\nfunction copy(src, srcPos, dest, destPos, len) {\n  for (let i = srcPos; i < Math.min(src.length, srcPos + len); i++) {\n    dest[destPos + i - srcPos] = src[i];\n  }\n  return dest;\n}\nconst emptyArray = [];\n/**\n * Compares the two chunks of equal length using the specified function\n *\n * @category equivalence\n * @since 2.0.0\n */\nexport const getEquivalence = isEquivalent => Equivalence.make((self, that) => self.length === that.length && toReadonlyArray(self).every((value, i) => isEquivalent(value, unsafeGet(that, i))));\nconst _equivalence = /*#__PURE__*/getEquivalence(Equal.equals);\nconst ChunkProto = {\n  [TypeId]: {\n    _A: _ => _\n  },\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"Chunk\",\n      values: toReadonlyArray(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  [Equal.symbol](that) {\n    return isChunk(that) && _equivalence(this, that);\n  },\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.array(toReadonlyArray(this)));\n  },\n  [Symbol.iterator]() {\n    switch (this.backing._tag) {\n      case \"IArray\":\n        {\n          return this.backing.array[Symbol.iterator]();\n        }\n      case \"IEmpty\":\n        {\n          return emptyArray[Symbol.iterator]();\n        }\n      default:\n        {\n          return toReadonlyArray(this)[Symbol.iterator]();\n        }\n    }\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeChunk = backing => {\n  const chunk = Object.create(ChunkProto);\n  chunk.backing = backing;\n  switch (backing._tag) {\n    case \"IEmpty\":\n      {\n        chunk.length = 0;\n        chunk.depth = 0;\n        chunk.left = chunk;\n        chunk.right = chunk;\n        break;\n      }\n    case \"IConcat\":\n      {\n        chunk.length = backing.left.length + backing.right.length;\n        chunk.depth = 1 + Math.max(backing.left.depth, backing.right.depth);\n        chunk.left = backing.left;\n        chunk.right = backing.right;\n        break;\n      }\n    case \"IArray\":\n      {\n        chunk.length = backing.array.length;\n        chunk.depth = 0;\n        chunk.left = _empty;\n        chunk.right = _empty;\n        break;\n      }\n    case \"ISingleton\":\n      {\n        chunk.length = 1;\n        chunk.depth = 0;\n        chunk.left = _empty;\n        chunk.right = _empty;\n        break;\n      }\n    case \"ISlice\":\n      {\n        chunk.length = backing.length;\n        chunk.depth = backing.chunk.depth + 1;\n        chunk.left = _empty;\n        chunk.right = _empty;\n        break;\n      }\n  }\n  return chunk;\n};\n/**\n * Checks if `u` is a `Chunk<unknown>`\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const isChunk = u => hasProperty(u, TypeId);\nconst _empty = /*#__PURE__*/makeChunk({\n  _tag: \"IEmpty\"\n});\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const empty = () => _empty;\n/**\n * Builds a `NonEmptyChunk` from an non-empty collection of elements.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const make = (...as) => unsafeFromNonEmptyArray(as);\n/**\n * Builds a `NonEmptyChunk` from a single element.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const of = a => makeChunk({\n  _tag: \"ISingleton\",\n  a\n});\n/**\n * Creates a new `Chunk` from an iterable collection of values.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromIterable = self => isChunk(self) ? self : unsafeFromArray(RA.fromIterable(self));\nconst copyToArray = (self, array, initial) => {\n  switch (self.backing._tag) {\n    case \"IArray\":\n      {\n        copy(self.backing.array, 0, array, initial, self.length);\n        break;\n      }\n    case \"IConcat\":\n      {\n        copyToArray(self.left, array, initial);\n        copyToArray(self.right, array, initial + self.left.length);\n        break;\n      }\n    case \"ISingleton\":\n      {\n        array[initial] = self.backing.a;\n        break;\n      }\n    case \"ISlice\":\n      {\n        let i = 0;\n        let j = initial;\n        while (i < self.length) {\n          array[j] = unsafeGet(self, i);\n          i += 1;\n          j += 1;\n        }\n        break;\n      }\n  }\n};\nconst toArray_ = self => toReadonlyArray(self).slice();\n/**\n * Converts a `Chunk` into an `Array`. If the provided `Chunk` is non-empty\n * (`NonEmptyChunk`), the function will return a `NonEmptyArray`, ensuring the\n * non-empty property is preserved.\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const toArray = toArray_;\nconst toReadonlyArray_ = self => {\n  switch (self.backing._tag) {\n    case \"IEmpty\":\n      {\n        return emptyArray;\n      }\n    case \"IArray\":\n      {\n        return self.backing.array;\n      }\n    default:\n      {\n        const arr = new Array(self.length);\n        copyToArray(self, arr, 0);\n        self.backing = {\n          _tag: \"IArray\",\n          array: arr\n        };\n        self.left = _empty;\n        self.right = _empty;\n        self.depth = 0;\n        return arr;\n      }\n  }\n};\n/**\n * Converts a `Chunk` into a `ReadonlyArray`. If the provided `Chunk` is\n * non-empty (`NonEmptyChunk`), the function will return a\n * `NonEmptyReadonlyArray`, ensuring the non-empty property is preserved.\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const toReadonlyArray = toReadonlyArray_;\nconst reverseChunk = self => {\n  switch (self.backing._tag) {\n    case \"IEmpty\":\n    case \"ISingleton\":\n      return self;\n    case \"IArray\":\n      {\n        return makeChunk({\n          _tag: \"IArray\",\n          array: RA.reverse(self.backing.array)\n        });\n      }\n    case \"IConcat\":\n      {\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: reverse(self.backing.right),\n          right: reverse(self.backing.left)\n        });\n      }\n    case \"ISlice\":\n      return unsafeFromArray(RA.reverse(toReadonlyArray(self)));\n  }\n};\n/**\n * Reverses the order of elements in a `Chunk`.\n * Importantly, if the input chunk is a `NonEmptyChunk`, the reversed chunk will also be a `NonEmptyChunk`.\n *\n * **Example**\n *\n * ```ts\n * import { Chunk } from \"effect\"\n *\n * const chunk = Chunk.make(1, 2, 3)\n * const result = Chunk.reverse(chunk)\n *\n * console.log(result)\n * // { _id: 'Chunk', values: [ 3, 2, 1 ] }\n * ```\n *\n * @since 2.0.0\n * @category elements\n */\nexport const reverse = reverseChunk;\n/**\n * This function provides a safe way to read a value at a particular index from a `Chunk`.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const get = /*#__PURE__*/dual(2, (self, index) => index < 0 || index >= self.length ? O.none() : O.some(unsafeGet(self, index)));\n/**\n * Wraps an array into a chunk without copying, unsafe on mutable arrays\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeFromArray = self => self.length === 0 ? empty() : self.length === 1 ? of(self[0]) : makeChunk({\n  _tag: \"IArray\",\n  array: self\n});\n/**\n * Wraps an array into a chunk without copying, unsafe on mutable arrays\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeFromNonEmptyArray = self => unsafeFromArray(self);\n/**\n * Gets an element unsafely, will throw on out of bounds\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeGet = /*#__PURE__*/dual(2, (self, index) => {\n  switch (self.backing._tag) {\n    case \"IEmpty\":\n      {\n        throw new Error(`Index out of bounds`);\n      }\n    case \"ISingleton\":\n      {\n        if (index !== 0) {\n          throw new Error(`Index out of bounds`);\n        }\n        return self.backing.a;\n      }\n    case \"IArray\":\n      {\n        if (index >= self.length || index < 0) {\n          throw new Error(`Index out of bounds`);\n        }\n        return self.backing.array[index];\n      }\n    case \"IConcat\":\n      {\n        return index < self.left.length ? unsafeGet(self.left, index) : unsafeGet(self.right, index - self.left.length);\n      }\n    case \"ISlice\":\n      {\n        return unsafeGet(self.backing.chunk, index + self.backing.offset);\n      }\n  }\n});\n/**\n * Appends the specified element to the end of the `Chunk`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const append = /*#__PURE__*/dual(2, (self, a) => appendAll(self, of(a)));\n/**\n * Prepend an element to the front of a `Chunk`, creating a new `NonEmptyChunk`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prepend = /*#__PURE__*/dual(2, (self, elem) => appendAll(of(elem), self));\n/**\n * Takes the first up to `n` elements from the chunk\n *\n * @since 2.0.0\n */\nexport const take = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return _empty;\n  } else if (n >= self.length) {\n    return self;\n  } else {\n    switch (self.backing._tag) {\n      case \"ISlice\":\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self.backing.chunk,\n            length: n,\n            offset: self.backing.offset\n          });\n        }\n      case \"IConcat\":\n        {\n          if (n > self.left.length) {\n            return makeChunk({\n              _tag: \"IConcat\",\n              left: self.left,\n              right: take(self.right, n - self.left.length)\n            });\n          }\n          return take(self.left, n);\n        }\n      default:\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self,\n            offset: 0,\n            length: n\n          });\n        }\n    }\n  }\n});\n/**\n * Drops the first up to `n` elements from the chunk\n *\n * @since 2.0.0\n */\nexport const drop = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return self;\n  } else if (n >= self.length) {\n    return _empty;\n  } else {\n    switch (self.backing._tag) {\n      case \"ISlice\":\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self.backing.chunk,\n            offset: self.backing.offset + n,\n            length: self.backing.length - n\n          });\n        }\n      case \"IConcat\":\n        {\n          if (n > self.left.length) {\n            return drop(self.right, n - self.left.length);\n          }\n          return makeChunk({\n            _tag: \"IConcat\",\n            left: drop(self.left, n),\n            right: self.right\n          });\n        }\n      default:\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self,\n            offset: n,\n            length: self.length - n\n          });\n        }\n    }\n  }\n});\n/**\n * Drops the last `n` elements.\n *\n * @since 2.0.0\n */\nexport const dropRight = /*#__PURE__*/dual(2, (self, n) => take(self, Math.max(0, self.length - n)));\n/**\n * Drops all elements so long as the predicate returns true.\n *\n * @since 2.0.0\n */\nexport const dropWhile = /*#__PURE__*/dual(2, (self, predicate) => {\n  const arr = toReadonlyArray(self);\n  const len = arr.length;\n  let i = 0;\n  while (i < len && predicate(arr[i])) {\n    i++;\n  }\n  return drop(self, i);\n});\n/**\n * Prepends the specified prefix chunk to the beginning of the specified chunk.\n * If either chunk is non-empty, the result is also a non-empty chunk.\n *\n * **Example**\n *\n * ```ts\n * import { Chunk } from \"effect\"\n *\n * const result = Chunk.make(1, 2).pipe(Chunk.prependAll(Chunk.make(\"a\", \"b\")), Chunk.toArray)\n *\n * console.log(result)\n * // [ \"a\", \"b\", 1, 2 ]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prependAll = /*#__PURE__*/dual(2, (self, that) => appendAll(that, self));\n/**\n * Concatenates two chunks, combining their elements.\n * If either chunk is non-empty, the result is also a non-empty chunk.\n *\n * **Example**\n *\n * ```ts\n * import { Chunk } from \"effect\"\n *\n * const result = Chunk.make(1, 2).pipe(Chunk.appendAll(Chunk.make(\"a\", \"b\")), Chunk.toArray)\n *\n * console.log(result)\n * // [ 1, 2, \"a\", \"b\" ]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendAll = /*#__PURE__*/dual(2, (self, that) => {\n  if (self.backing._tag === \"IEmpty\") {\n    return that;\n  }\n  if (that.backing._tag === \"IEmpty\") {\n    return self;\n  }\n  const diff = that.depth - self.depth;\n  if (Math.abs(diff) <= 1) {\n    return makeChunk({\n      _tag: \"IConcat\",\n      left: self,\n      right: that\n    });\n  } else if (diff < -1) {\n    if (self.left.depth >= self.right.depth) {\n      const nr = appendAll(self.right, that);\n      return makeChunk({\n        _tag: \"IConcat\",\n        left: self.left,\n        right: nr\n      });\n    } else {\n      const nrr = appendAll(self.right.right, that);\n      if (nrr.depth === self.depth - 3) {\n        const nr = makeChunk({\n          _tag: \"IConcat\",\n          left: self.right.left,\n          right: nrr\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: self.left,\n          right: nr\n        });\n      } else {\n        const nl = makeChunk({\n          _tag: \"IConcat\",\n          left: self.left,\n          right: self.right.left\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: nl,\n          right: nrr\n        });\n      }\n    }\n  } else {\n    if (that.right.depth >= that.left.depth) {\n      const nl = appendAll(self, that.left);\n      return makeChunk({\n        _tag: \"IConcat\",\n        left: nl,\n        right: that.right\n      });\n    } else {\n      const nll = appendAll(self, that.left.left);\n      if (nll.depth === that.depth - 3) {\n        const nl = makeChunk({\n          _tag: \"IConcat\",\n          left: nll,\n          right: that.left.right\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: nl,\n          right: that.right\n        });\n      } else {\n        const nr = makeChunk({\n          _tag: \"IConcat\",\n          left: that.left.right,\n          right: that.right\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: nll,\n          right: nr\n        });\n      }\n    }\n  }\n});\n/**\n * Returns a filtered and mapped subset of the elements.\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const filterMap = /*#__PURE__*/dual(2, (self, f) => unsafeFromArray(RA.filterMap(self, f)));\n/**\n * Returns a filtered and mapped subset of the elements.\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const filter = /*#__PURE__*/dual(2, (self, predicate) => unsafeFromArray(RA.filter(self, predicate)));\n/**\n * Transforms all elements of the chunk for as long as the specified function returns some value\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const filterMapWhile = /*#__PURE__*/dual(2, (self, f) => unsafeFromArray(RA.filterMapWhile(self, f)));\n/**\n * Filter out optional values\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const compact = self => filterMap(self, identity);\n/**\n * Applies a function to each element in a chunk and returns a new chunk containing the concatenated mapped elements.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  if (self.backing._tag === \"ISingleton\") {\n    return f(self.backing.a, 0);\n  }\n  let out = _empty;\n  let i = 0;\n  for (const k of self) {\n    out = appendAll(out, f(k, i++));\n  }\n  return out;\n});\n/**\n * Iterates over each element of a `Chunk` and applies a function to it.\n *\n * **Details**\n *\n * This function processes every element of the given `Chunk`, calling the\n * provided function `f` on each element. It does not return a new value;\n * instead, it is primarily used for side effects, such as logging or\n * accumulating data in an external variable.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const forEach = /*#__PURE__*/dual(2, (self, f) => toReadonlyArray(self).forEach(f));\n/**\n * Flattens a chunk of chunks into a single chunk by concatenating all chunks.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatten = /*#__PURE__*/flatMap(identity);\n/**\n * Groups elements in chunks of up to `n` elements.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const chunksOf = /*#__PURE__*/dual(2, (self, n) => {\n  const gr = [];\n  let current = [];\n  toReadonlyArray(self).forEach(a => {\n    current.push(a);\n    if (current.length >= n) {\n      gr.push(unsafeFromArray(current));\n      current = [];\n    }\n  });\n  if (current.length > 0) {\n    gr.push(unsafeFromArray(current));\n  }\n  return unsafeFromArray(gr);\n});\n/**\n * Creates a Chunk of unique values that are included in all given Chunks.\n *\n * The order and references of result values are determined by the Chunk.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const intersection = /*#__PURE__*/dual(2, (self, that) => unsafeFromArray(RA.intersection(toReadonlyArray(self), toReadonlyArray(that))));\n/**\n * Determines if the chunk is empty.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const isEmpty = self => self.length === 0;\n/**\n * Determines if the chunk is not empty.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const isNonEmpty = self => self.length > 0;\n/**\n * Returns the first element of this chunk if it exists.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const head = /*#__PURE__*/get(0);\n/**\n * Returns the first element of this chunk.\n *\n * It will throw an error if the chunk is empty.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeHead = self => unsafeGet(self, 0);\n/**\n * Returns the first element of this non empty chunk.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const headNonEmpty = unsafeHead;\n/**\n * Returns the last element of this chunk if it exists.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const last = self => get(self, self.length - 1);\n/**\n * Returns the last element of this chunk.\n *\n * It will throw an error if the chunk is empty.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeLast = self => unsafeGet(self, self.length - 1);\n/**\n * Returns the last element of this non empty chunk.\n *\n * @since 3.4.0\n * @category elements\n */\nexport const lastNonEmpty = unsafeLast;\n/**\n * Transforms the elements of a chunk using the specified mapping function.\n * If the input chunk is non-empty, the resulting chunk will also be non-empty.\n *\n * **Example**\n *\n * ```ts\n * import { Chunk } from \"effect\"\n *\n * const result = Chunk.map(Chunk.make(1, 2), (n) => n + 1)\n *\n * console.log(result)\n * // { _id: 'Chunk', values: [ 2, 3 ] }\n * ```\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => self.backing._tag === \"ISingleton\" ? of(f(self.backing.a, 0)) : unsafeFromArray(pipe(toReadonlyArray(self), RA.map((a, i) => f(a, i)))));\n/**\n * Statefully maps over the chunk, producing new elements of type `B`.\n *\n * @since 2.0.0\n * @category folding\n */\nexport const mapAccum = /*#__PURE__*/dual(3, (self, s, f) => {\n  const [s1, as] = RA.mapAccum(self, s, f);\n  return [s1, unsafeFromArray(as)];\n});\n/**\n * Separate elements based on a predicate that also exposes the index of the element.\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partition = /*#__PURE__*/dual(2, (self, predicate) => pipe(RA.partition(toReadonlyArray(self), predicate), ([l, r]) => [unsafeFromArray(l), unsafeFromArray(r)]));\n/**\n * Partitions the elements of this chunk into two chunks using f.\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partitionMap = /*#__PURE__*/dual(2, (self, f) => pipe(RA.partitionMap(toReadonlyArray(self), f), ([l, r]) => [unsafeFromArray(l), unsafeFromArray(r)]));\n/**\n * Partitions the elements of this chunk into two chunks.\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const separate = self => pipe(RA.separate(toReadonlyArray(self)), ([l, r]) => [unsafeFromArray(l), unsafeFromArray(r)]);\n/**\n * Retireves the size of the chunk\n *\n * @since 2.0.0\n * @category elements\n */\nexport const size = self => self.length;\n/**\n * Sort the elements of a Chunk in increasing order, creating a new Chunk.\n *\n * @since 2.0.0\n * @category sorting\n */\nexport const sort = /*#__PURE__*/dual(2, (self, O) => unsafeFromArray(RA.sort(toReadonlyArray(self), O)));\n/**\n * @since 2.0.0\n * @category sorting\n */\nexport const sortWith = /*#__PURE__*/dual(3, (self, f, order) => sort(self, Order.mapInput(order, f)));\n/**\n *  Returns two splits of this chunk at the specified index.\n *\n * @since 2.0.0\n * @category splitting\n */\nexport const splitAt = /*#__PURE__*/dual(2, (self, n) => [take(self, n), drop(self, n)]);\n/**\n * Splits a `NonEmptyChunk` into two segments, with the first segment containing a maximum of `n` elements.\n * The value of `n` must be `>= 1`.\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitNonEmptyAt = /*#__PURE__*/dual(2, (self, n) => {\n  const _n = Math.max(1, Math.floor(n));\n  return _n >= self.length ? [self, empty()] : [take(self, _n), drop(self, _n)];\n});\n/**\n * Splits this chunk into `n` equally sized chunks.\n *\n * @since 2.0.0\n * @category splitting\n */\nexport const split = /*#__PURE__*/dual(2, (self, n) => chunksOf(self, Math.ceil(self.length / Math.floor(n))));\n/**\n * Splits this chunk on the first element that matches this predicate.\n * Returns a tuple containing two chunks: the first one is before the match, and the second one is from the match onward.\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitWhere = /*#__PURE__*/dual(2, (self, predicate) => {\n  let i = 0;\n  for (const a of toReadonlyArray(self)) {\n    if (predicate(a)) {\n      break;\n    } else {\n      i++;\n    }\n  }\n  return splitAt(self, i);\n});\n/**\n * Returns every elements after the first.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const tail = self => self.length > 0 ? O.some(drop(self, 1)) : O.none();\n/**\n * Returns every elements after the first.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const tailNonEmpty = self => drop(self, 1);\n/**\n * Takes the last `n` elements.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const takeRight = /*#__PURE__*/dual(2, (self, n) => drop(self, self.length - n));\n/**\n * Takes all elements so long as the predicate returns true.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const takeWhile = /*#__PURE__*/dual(2, (self, predicate) => {\n  const out = [];\n  for (const a of toReadonlyArray(self)) {\n    if (predicate(a)) {\n      out.push(a);\n    } else {\n      break;\n    }\n  }\n  return unsafeFromArray(out);\n});\n/**\n * Creates a Chunks of unique values, in order, from all given Chunks.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const union = /*#__PURE__*/dual(2, (self, that) => unsafeFromArray(RA.union(toReadonlyArray(self), toReadonlyArray(that))));\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const dedupe = self => unsafeFromArray(RA.dedupe(toReadonlyArray(self)));\n/**\n * Deduplicates adjacent elements that are identical.\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const dedupeAdjacent = self => unsafeFromArray(RA.dedupeAdjacent(self));\n/**\n * Takes a `Chunk` of pairs and return two corresponding `Chunk`s.\n *\n * Note: The function is reverse of `zip`.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const unzip = self => {\n  const [left, right] = RA.unzip(self);\n  return [unsafeFromArray(left), unsafeFromArray(right)];\n};\n/**\n * Zips this chunk pointwise with the specified chunk using the specified combiner.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipWith = /*#__PURE__*/dual(3, (self, that, f) => unsafeFromArray(RA.zipWith(self, that, f)));\n/**\n * Zips this chunk pointwise with the specified chunk.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zip = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (a, b) => [a, b]));\n/**\n * Delete the element at the specified index, creating a new `Chunk`.\n *\n * @since 2.0.0\n */\nexport const remove = /*#__PURE__*/dual(2, (self, i) => unsafeFromArray(RA.remove(toReadonlyArray(self), i)));\n/**\n * @since 2.0.0\n */\nexport const modifyOption = /*#__PURE__*/dual(3, (self, i, f) => O.map(RA.modifyOption(toReadonlyArray(self), i, f), unsafeFromArray));\n/**\n * Apply a function to the element at the specified index, creating a new `Chunk`,\n * or returning the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nexport const modify = /*#__PURE__*/dual(3, (self, i, f) => O.getOrElse(modifyOption(self, i, f), () => self));\n/**\n * Change the element at the specified index, creating a new `Chunk`,\n * or returning the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nexport const replace = /*#__PURE__*/dual(3, (self, i, b) => modify(self, i, () => b));\n/**\n * @since 2.0.0\n */\nexport const replaceOption = /*#__PURE__*/dual(3, (self, i, b) => modifyOption(self, i, () => b));\n/**\n * Return a Chunk of length n with element i initialized with f(i).\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const makeBy = /*#__PURE__*/dual(2, (n, f) => fromIterable(RA.makeBy(n, f)));\n/**\n * Create a non empty `Chunk` containing a range of integers, including both endpoints.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const range = (start, end) => start <= end ? makeBy(end - start + 1, i => start + i) : of(start);\n// -------------------------------------------------------------------------------------\n// re-exports from ReadonlyArray\n// -------------------------------------------------------------------------------------\n/**\n * Returns a function that checks if a `Chunk` contains a given value using the default `Equivalence`.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const contains = RA.contains;\n/**\n * Returns a function that checks if a `Chunk` contains a given value using a provided `isEquivalent` function.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const containsWith = RA.containsWith;\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirst = RA.findFirst;\n/**\n * Return the first index for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirstIndex = RA.findFirstIndex;\n/**\n * Find the last element for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLast = RA.findLast;\n/**\n * Return the last index for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLastIndex = RA.findLastIndex;\n/**\n * Check if a predicate holds true for every `Chunk` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const every = /*#__PURE__*/dual(2, (self, refinement) => RA.fromIterable(self).every(refinement));\n/**\n * Check if a predicate holds true for some `Chunk` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const some = /*#__PURE__*/dual(2, (self, predicate) => RA.fromIterable(self).some(predicate));\n/**\n * Joins the elements together with \"sep\" in the middle.\n *\n * @category folding\n * @since 2.0.0\n */\nexport const join = RA.join;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport const reduce = RA.reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport const reduceRight = RA.reduceRight;\n/**\n * Creates a `Chunk` of values not included in the other given `Chunk` using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Chunk`.\n *\n * @since 3.2.0\n */\nexport const differenceWith = isEquivalent => {\n  return dual(2, (self, that) => unsafeFromArray(RA.differenceWith(isEquivalent)(that, self)));\n};\n/**\n * Creates a `Chunk` of values not included in the other given `Chunk`.\n * The order and references of result values are determined by the first `Chunk`.\n *\n * @since 3.2.0\n */\nexport const difference = /*#__PURE__*/dual(2, (self, that) => unsafeFromArray(RA.difference(that, self)));\n//# sourceMappingURL=Chunk.js.map","/**\n * @since 2.0.0\n */\nimport * as Equal from \"./Equal.js\";\nimport { dual } from \"./Function.js\";\nimport * as Hash from \"./Hash.js\";\nimport { NodeInspectSymbol } from \"./Inspectable.js\";\nimport * as Option from \"./Option.js\";\nimport * as order from \"./Order.js\";\nimport { pipeArguments } from \"./Pipeable.js\";\nimport { hasProperty, isBigInt, isNumber, isString } from \"./Predicate.js\";\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Duration\");\nconst bigint0 = /*#__PURE__*/BigInt(0);\nconst bigint24 = /*#__PURE__*/BigInt(24);\nconst bigint60 = /*#__PURE__*/BigInt(60);\nconst bigint1e3 = /*#__PURE__*/BigInt(1_000);\nconst bigint1e6 = /*#__PURE__*/BigInt(1_000_000);\nconst bigint1e9 = /*#__PURE__*/BigInt(1_000_000_000);\nconst DURATION_REGEX = /^(-?\\d+(?:\\.\\d+)?)\\s+(nanos?|micros?|millis?|seconds?|minutes?|hours?|days?|weeks?)$/;\n/**\n * @since 2.0.0\n */\nexport const decode = input => {\n  if (isDuration(input)) {\n    return input;\n  } else if (isNumber(input)) {\n    return millis(input);\n  } else if (isBigInt(input)) {\n    return nanos(input);\n  } else if (Array.isArray(input) && input.length === 2 && input.every(isNumber)) {\n    if (input[0] === -Infinity || input[1] === -Infinity || Number.isNaN(input[0]) || Number.isNaN(input[1])) {\n      return zero;\n    }\n    if (input[0] === Infinity || input[1] === Infinity) {\n      return infinity;\n    }\n    return nanos(BigInt(Math.round(input[0] * 1_000_000_000)) + BigInt(Math.round(input[1])));\n  } else if (isString(input)) {\n    const match = DURATION_REGEX.exec(input);\n    if (match) {\n      const [_, valueStr, unit] = match;\n      const value = Number(valueStr);\n      switch (unit) {\n        case \"nano\":\n        case \"nanos\":\n          return nanos(BigInt(valueStr));\n        case \"micro\":\n        case \"micros\":\n          return micros(BigInt(valueStr));\n        case \"milli\":\n        case \"millis\":\n          return millis(value);\n        case \"second\":\n        case \"seconds\":\n          return seconds(value);\n        case \"minute\":\n        case \"minutes\":\n          return minutes(value);\n        case \"hour\":\n        case \"hours\":\n          return hours(value);\n        case \"day\":\n        case \"days\":\n          return days(value);\n        case \"week\":\n        case \"weeks\":\n          return weeks(value);\n      }\n    }\n  }\n  throw new Error(\"Invalid DurationInput\");\n};\n/**\n * @since 2.5.0\n */\nexport const decodeUnknown = /*#__PURE__*/Option.liftThrowable(decode);\nconst zeroValue = {\n  _tag: \"Millis\",\n  millis: 0\n};\nconst infinityValue = {\n  _tag: \"Infinity\"\n};\nconst DurationProto = {\n  [TypeId]: TypeId,\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.structure(this.value));\n  },\n  [Equal.symbol](that) {\n    return isDuration(that) && equals(this, that);\n  },\n  toString() {\n    return `Duration(${format(this)})`;\n  },\n  toJSON() {\n    switch (this.value._tag) {\n      case \"Millis\":\n        return {\n          _id: \"Duration\",\n          _tag: \"Millis\",\n          millis: this.value.millis\n        };\n      case \"Nanos\":\n        return {\n          _id: \"Duration\",\n          _tag: \"Nanos\",\n          hrtime: toHrTime(this)\n        };\n      case \"Infinity\":\n        return {\n          _id: \"Duration\",\n          _tag: \"Infinity\"\n        };\n    }\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst make = input => {\n  const duration = Object.create(DurationProto);\n  if (isNumber(input)) {\n    if (isNaN(input) || input <= 0) {\n      duration.value = zeroValue;\n    } else if (!Number.isFinite(input)) {\n      duration.value = infinityValue;\n    } else if (!Number.isInteger(input)) {\n      duration.value = {\n        _tag: \"Nanos\",\n        nanos: BigInt(Math.round(input * 1_000_000))\n      };\n    } else {\n      duration.value = {\n        _tag: \"Millis\",\n        millis: input\n      };\n    }\n  } else if (input <= bigint0) {\n    duration.value = zeroValue;\n  } else {\n    duration.value = {\n      _tag: \"Nanos\",\n      nanos: input\n    };\n  }\n  return duration;\n};\n/**\n * @since 2.0.0\n * @category guards\n */\nexport const isDuration = u => hasProperty(u, TypeId);\n/**\n * @since 2.0.0\n * @category guards\n */\nexport const isFinite = self => self.value._tag !== \"Infinity\";\n/**\n * @since 3.5.0\n * @category guards\n */\nexport const isZero = self => {\n  switch (self.value._tag) {\n    case \"Millis\":\n      {\n        return self.value.millis === 0;\n      }\n    case \"Nanos\":\n      {\n        return self.value.nanos === bigint0;\n      }\n    case \"Infinity\":\n      {\n        return false;\n      }\n  }\n};\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const zero = /*#__PURE__*/make(0);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const infinity = /*#__PURE__*/make(Infinity);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const nanos = nanos => make(nanos);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const micros = micros => make(micros * bigint1e3);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const millis = millis => make(millis);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const seconds = seconds => make(seconds * 1000);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const minutes = minutes => make(minutes * 60_000);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const hours = hours => make(hours * 3_600_000);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const days = days => make(days * 86_400_000);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const weeks = weeks => make(weeks * 604_800_000);\n/**\n * @since 2.0.0\n * @category getters\n */\nexport const toMillis = self => match(self, {\n  onMillis: millis => millis,\n  onNanos: nanos => Number(nanos) / 1_000_000\n});\n/**\n * @since 2.0.0\n * @category getters\n */\nexport const toSeconds = self => match(self, {\n  onMillis: millis => millis / 1_000,\n  onNanos: nanos => Number(nanos) / 1_000_000_000\n});\n/**\n * @since 3.8.0\n * @category getters\n */\nexport const toMinutes = self => match(self, {\n  onMillis: millis => millis / 60_000,\n  onNanos: nanos => Number(nanos) / 60_000_000_000\n});\n/**\n * @since 3.8.0\n * @category getters\n */\nexport const toHours = self => match(self, {\n  onMillis: millis => millis / 3_600_000,\n  onNanos: nanos => Number(nanos) / 3_600_000_000_000\n});\n/**\n * @since 3.8.0\n * @category getters\n */\nexport const toDays = self => match(self, {\n  onMillis: millis => millis / 86_400_000,\n  onNanos: nanos => Number(nanos) / 86_400_000_000_000\n});\n/**\n * @since 3.8.0\n * @category getters\n */\nexport const toWeeks = self => match(self, {\n  onMillis: millis => millis / 604_800_000,\n  onNanos: nanos => Number(nanos) / 604_800_000_000_000\n});\n/**\n * Get the duration in nanoseconds as a bigint.\n *\n * If the duration is infinite, returns `Option.none()`\n *\n * @since 2.0.0\n * @category getters\n */\nexport const toNanos = self => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Infinity\":\n      return Option.none();\n    case \"Nanos\":\n      return Option.some(_self.value.nanos);\n    case \"Millis\":\n      return Option.some(BigInt(Math.round(_self.value.millis * 1_000_000)));\n  }\n};\n/**\n * Get the duration in nanoseconds as a bigint.\n *\n * If the duration is infinite, it throws an error.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const unsafeToNanos = self => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Infinity\":\n      throw new Error(\"Cannot convert infinite duration to nanos\");\n    case \"Nanos\":\n      return _self.value.nanos;\n    case \"Millis\":\n      return BigInt(Math.round(_self.value.millis * 1_000_000));\n  }\n};\n/**\n * @since 2.0.0\n * @category getters\n */\nexport const toHrTime = self => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Infinity\":\n      return [Infinity, 0];\n    case \"Nanos\":\n      return [Number(_self.value.nanos / bigint1e9), Number(_self.value.nanos % bigint1e9)];\n    case \"Millis\":\n      return [Math.floor(_self.value.millis / 1000), Math.round(_self.value.millis % 1000 * 1_000_000)];\n  }\n};\n/**\n * @since 2.0.0\n * @category pattern matching\n */\nexport const match = /*#__PURE__*/dual(2, (self, options) => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Nanos\":\n      return options.onNanos(_self.value.nanos);\n    case \"Infinity\":\n      return options.onMillis(Infinity);\n    case \"Millis\":\n      return options.onMillis(_self.value.millis);\n  }\n});\n/**\n * @since 2.0.0\n * @category pattern matching\n */\nexport const matchWith = /*#__PURE__*/dual(3, (self, that, options) => {\n  const _self = decode(self);\n  const _that = decode(that);\n  if (_self.value._tag === \"Infinity\" || _that.value._tag === \"Infinity\") {\n    return options.onMillis(toMillis(_self), toMillis(_that));\n  } else if (_self.value._tag === \"Nanos\" || _that.value._tag === \"Nanos\") {\n    const selfNanos = _self.value._tag === \"Nanos\" ? _self.value.nanos : BigInt(Math.round(_self.value.millis * 1_000_000));\n    const thatNanos = _that.value._tag === \"Nanos\" ? _that.value.nanos : BigInt(Math.round(_that.value.millis * 1_000_000));\n    return options.onNanos(selfNanos, thatNanos);\n  }\n  return options.onMillis(_self.value.millis, _that.value.millis);\n});\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Order = /*#__PURE__*/order.make((self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self < that ? -1 : self > that ? 1 : 0,\n  onNanos: (self, that) => self < that ? -1 : self > that ? 1 : 0\n}));\n/**\n * Checks if a `Duration` is between a `minimum` and `maximum` value.\n *\n * @category predicates\n * @since 2.0.0\n */\nexport const between = /*#__PURE__*/order.between( /*#__PURE__*/order.mapInput(Order, decode));\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Equivalence = (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self === that,\n  onNanos: (self, that) => self === that\n});\nconst _min = /*#__PURE__*/order.min(Order);\n/**\n * @since 2.0.0\n */\nexport const min = /*#__PURE__*/dual(2, (self, that) => _min(decode(self), decode(that)));\nconst _max = /*#__PURE__*/order.max(Order);\n/**\n * @since 2.0.0\n * @category order\n */\nexport const max = /*#__PURE__*/dual(2, (self, that) => _max(decode(self), decode(that)));\nconst _clamp = /*#__PURE__*/order.clamp(Order);\n/**\n * @since 2.0.0\n * @category order\n */\nexport const clamp = /*#__PURE__*/dual(2, (self, options) => _clamp(decode(self), {\n  minimum: decode(options.minimum),\n  maximum: decode(options.maximum)\n}));\n/**\n * @since 2.4.19\n * @category math\n */\nexport const divide = /*#__PURE__*/dual(2, (self, by) => match(self, {\n  onMillis: millis => {\n    if (by === 0 || isNaN(by) || !Number.isFinite(by)) {\n      return Option.none();\n    }\n    return Option.some(make(millis / by));\n  },\n  onNanos: nanos => {\n    if (isNaN(by) || by <= 0 || !Number.isFinite(by)) {\n      return Option.none();\n    }\n    try {\n      return Option.some(make(nanos / BigInt(by)));\n    } catch (e) {\n      return Option.none();\n    }\n  }\n}));\n/**\n * @since 2.4.19\n * @category math\n */\nexport const unsafeDivide = /*#__PURE__*/dual(2, (self, by) => match(self, {\n  onMillis: millis => make(millis / by),\n  onNanos: nanos => {\n    if (isNaN(by) || by < 0 || Object.is(by, -0)) {\n      return zero;\n    } else if (Object.is(by, 0) || !Number.isFinite(by)) {\n      return infinity;\n    }\n    return make(nanos / BigInt(by));\n  }\n}));\n/**\n * @since 2.0.0\n * @category math\n */\nexport const times = /*#__PURE__*/dual(2, (self, times) => match(self, {\n  onMillis: millis => make(millis * times),\n  onNanos: nanos => make(nanos * BigInt(times))\n}));\n/**\n * @since 2.0.0\n * @category math\n */\nexport const subtract = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => make(self - that),\n  onNanos: (self, that) => make(self - that)\n}));\n/**\n * @since 2.0.0\n * @category math\n */\nexport const sum = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => make(self + that),\n  onNanos: (self, that) => make(self + that)\n}));\n/**\n * @since 2.0.0\n * @category predicates\n */\nexport const lessThan = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self < that,\n  onNanos: (self, that) => self < that\n}));\n/**\n * @since 2.0.0\n * @category predicates\n */\nexport const lessThanOrEqualTo = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self <= that,\n  onNanos: (self, that) => self <= that\n}));\n/**\n * @since 2.0.0\n * @category predicates\n */\nexport const greaterThan = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self > that,\n  onNanos: (self, that) => self > that\n}));\n/**\n * @since 2.0.0\n * @category predicates\n */\nexport const greaterThanOrEqualTo = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self >= that,\n  onNanos: (self, that) => self >= that\n}));\n/**\n * @since 2.0.0\n * @category predicates\n */\nexport const equals = /*#__PURE__*/dual(2, (self, that) => Equivalence(decode(self), decode(that)));\n/**\n * Converts a `Duration` to its parts.\n *\n * @since 3.8.0\n * @category conversions\n */\nexport const parts = self => {\n  const duration = decode(self);\n  if (duration.value._tag === \"Infinity\") {\n    return {\n      days: Infinity,\n      hours: Infinity,\n      minutes: Infinity,\n      seconds: Infinity,\n      millis: Infinity,\n      nanos: Infinity\n    };\n  }\n  const nanos = unsafeToNanos(duration);\n  const ms = nanos / bigint1e6;\n  const sec = ms / bigint1e3;\n  const min = sec / bigint60;\n  const hr = min / bigint60;\n  const days = hr / bigint24;\n  return {\n    days: Number(days),\n    hours: Number(hr % bigint24),\n    minutes: Number(min % bigint60),\n    seconds: Number(sec % bigint60),\n    millis: Number(ms % bigint1e3),\n    nanos: Number(nanos % bigint1e6)\n  };\n};\n/**\n * Converts a `Duration` to a human readable string.\n *\n * @since 2.0.0\n * @category conversions\n * @example\n * ```ts\n * import { Duration } from \"effect\"\n *\n * Duration.format(Duration.millis(1000)) // \"1s\"\n * Duration.format(Duration.millis(1001)) // \"1s 1ms\"\n * ```\n */\nexport const format = self => {\n  const duration = decode(self);\n  if (duration.value._tag === \"Infinity\") {\n    return \"Infinity\";\n  }\n  if (isZero(duration)) {\n    return \"0\";\n  }\n  const fragments = parts(duration);\n  const pieces = [];\n  if (fragments.days !== 0) {\n    pieces.push(`${fragments.days}d`);\n  }\n  if (fragments.hours !== 0) {\n    pieces.push(`${fragments.hours}h`);\n  }\n  if (fragments.minutes !== 0) {\n    pieces.push(`${fragments.minutes}m`);\n  }\n  if (fragments.seconds !== 0) {\n    pieces.push(`${fragments.seconds}s`);\n  }\n  if (fragments.millis !== 0) {\n    pieces.push(`${fragments.millis}ms`);\n  }\n  if (fragments.nanos !== 0) {\n    pieces.push(`${fragments.nanos}ns`);\n  }\n  return pieces.join(\" \");\n};\n/**\n * Formats a Duration into an ISO8601 duration string.\n *\n * Months are assumed to be 30 days and years are assumed to be 365 days.\n *\n * Milliseconds and nanoseconds are expressed as fractional seconds.\n *\n * @example\n * ```ts\n * import { Duration } from \"effect\"\n *\n * Duration.unsafeFormatIso(Duration.days(1)) // => \"P1D\"\n * Duration.unsafeFormatIso(Duration.minutes(90)) // => \"PT1H30M\"\n * Duration.unsafeFormatIso(Duration.millis(1500)) // => \"PT1.5S\"\n * ```\n *\n * @throws `RangeError` If the duration is not finite.\n *\n * @since 3.13.0\n * @category conversions\n */\nexport const unsafeFormatIso = self => {\n  const duration = decode(self);\n  if (!isFinite(duration)) {\n    throw new RangeError(\"Cannot format infinite duration\");\n  }\n  const fragments = [];\n  const {\n    days,\n    hours,\n    millis,\n    minutes,\n    nanos,\n    seconds\n  } = parts(duration);\n  let rest = days;\n  if (rest >= 365) {\n    const years = Math.floor(rest / 365);\n    rest %= 365;\n    fragments.push(`${years}Y`);\n  }\n  if (rest >= 30) {\n    const months = Math.floor(rest / 30);\n    rest %= 30;\n    fragments.push(`${months}M`);\n  }\n  if (rest >= 7) {\n    const weeks = Math.floor(rest / 7);\n    rest %= 7;\n    fragments.push(`${weeks}W`);\n  }\n  if (rest > 0) {\n    fragments.push(`${rest}D`);\n  }\n  if (hours !== 0 || minutes !== 0 || seconds !== 0 || millis !== 0 || nanos !== 0) {\n    fragments.push(\"T\");\n    if (hours !== 0) {\n      fragments.push(`${hours}H`);\n    }\n    if (minutes !== 0) {\n      fragments.push(`${minutes}M`);\n    }\n    if (seconds !== 0 || millis !== 0 || nanos !== 0) {\n      const total = BigInt(seconds) * bigint1e9 + BigInt(millis) * bigint1e6 + BigInt(nanos);\n      const str = (Number(total) / 1e9).toFixed(9).replace(/\\.?0+$/, \"\");\n      fragments.push(`${str}S`);\n    }\n  }\n  return `P${fragments.join(\"\") || \"T0S\"}`;\n};\n/**\n * Formats a Duration into an ISO8601 duration string.\n *\n * Months are assumed to be 30 days and years are assumed to be 365 days.\n *\n * Returns `Option.none()` if the duration is infinite.\n *\n * @example\n * ```ts\n * import { Duration, Option } from \"effect\"\n *\n * Duration.formatIso(Duration.days(1)) // => Option.some(\"P1D\")\n * Duration.formatIso(Duration.minutes(90)) // => Option.some(\"PT1H30M\")\n * Duration.formatIso(Duration.millis(1500)) // => Option.some(\"PT1.5S\")\n * Duration.formatIso(Duration.infinity) // => Option.none()\n * ```\n *\n * @since 3.13.0\n * @category conversions\n */\nexport const formatIso = self => {\n  const duration = decode(self);\n  return isFinite(duration) ? Option.some(unsafeFormatIso(duration)) : Option.none();\n};\n/**\n * Parses an ISO8601 duration string into a `Duration`.\n *\n * Months are assumed to be 30 days and years are assumed to be 365 days.\n *\n * @example\n * ```ts\n * import { Duration, Option } from \"effect\"\n *\n * Duration.fromIso(\"P1D\") // => Option.some(Duration.days(1))\n * Duration.fromIso(\"PT1H\") // => Option.some(Duration.hours(1))\n * Duration.fromIso(\"PT1M\") // => Option.some(Duration.minutes(1))\n * Duration.fromIso(\"PT1.5S\") // => Option.some(Duration.seconds(1.5))\n * ```\n *\n * @since 3.13.0\n * @category conversions\n */\nexport const fromIso = iso => {\n  const result = DURATION_ISO_REGEX.exec(iso);\n  if (result == null) {\n    return Option.none();\n  }\n  const [years, months, weeks, days, hours, mins, secs] = result.slice(1, 8).map(_ => _ ? Number(_) : 0);\n  const value = years * 365 * 24 * 60 * 60 + months * 30 * 24 * 60 * 60 + weeks * 7 * 24 * 60 * 60 + days * 24 * 60 * 60 + hours * 60 * 60 + mins * 60 + secs;\n  return Option.some(seconds(value));\n};\nconst DURATION_ISO_REGEX = /^P(?!$)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)W)?(?:(\\d+)D)?(?:T(?!$)(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$/;\n//# sourceMappingURL=Duration.js.map","/** @internal */\nexport const SIZE = 5;\n/** @internal */\nexport const BUCKET_SIZE = /*#__PURE__*/Math.pow(2, SIZE);\n/** @internal */\nexport const MASK = BUCKET_SIZE - 1;\n/** @internal */\nexport const MAX_INDEX_NODE = BUCKET_SIZE / 2;\n/** @internal */\nexport const MIN_ARRAY_NODE = BUCKET_SIZE / 4;\n//# sourceMappingURL=config.js.map","import { MASK } from \"./config.js\";\n/**\n * Hamming weight.\n *\n * Taken from: http://jsperf.com/hamming-weight\n *\n * @internal\n */\nexport function popcount(x) {\n  x -= x >> 1 & 0x55555555;\n  x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n  x = x + (x >> 4) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n/** @internal */\nexport function hashFragment(shift, h) {\n  return h >>> shift & MASK;\n}\n/** @internal */\nexport function toBitmap(x) {\n  return 1 << x;\n}\n/** @internal */\nexport function fromBitmap(bitmap, bit) {\n  return popcount(bitmap & bit - 1);\n}\n//# sourceMappingURL=bitwise.js.map","export const make = (value, previous) => ({\n  value,\n  previous\n});\n//# sourceMappingURL=stack.js.map","/** @internal */\nexport function arrayUpdate(mutate, at, v, arr) {\n  let out = arr;\n  if (!mutate) {\n    const len = arr.length;\n    out = new Array(len);\n    for (let i = 0; i < len; ++i) out[i] = arr[i];\n  }\n  out[at] = v;\n  return out;\n}\n/** @internal */\nexport function arraySpliceOut(mutate, at, arr) {\n  const newLen = arr.length - 1;\n  let i = 0;\n  let g = 0;\n  let out = arr;\n  if (mutate) {\n    i = g = at;\n  } else {\n    out = new Array(newLen);\n    while (i < at) out[g++] = arr[i++];\n  }\n  ;\n  ++i;\n  while (i <= newLen) out[g++] = arr[i++];\n  if (mutate) {\n    out.length = newLen;\n  }\n  return out;\n}\n/** @internal */\nexport function arraySpliceIn(mutate, at, v, arr) {\n  const len = arr.length;\n  if (mutate) {\n    let i = len;\n    while (i >= at) arr[i--] = arr[i];\n    arr[at] = v;\n    return arr;\n  }\n  let i = 0,\n    g = 0;\n  const out = new Array(len + 1);\n  while (i < at) out[g++] = arr[i++];\n  out[at] = v;\n  while (i < len) out[++g] = arr[i++];\n  return out;\n}\n//# sourceMappingURL=array.js.map","import { equals } from \"../../Equal.js\";\nimport * as O from \"../../Option.js\";\nimport { isTagged } from \"../../Predicate.js\";\nimport * as Stack from \"../stack.js\";\nimport { arraySpliceIn, arraySpliceOut, arrayUpdate } from \"./array.js\";\nimport { fromBitmap, hashFragment, toBitmap } from \"./bitwise.js\";\nimport { MAX_INDEX_NODE, MIN_ARRAY_NODE, SIZE } from \"./config.js\";\n/** @internal */\nexport class EmptyNode {\n  _tag = \"EmptyNode\";\n  modify(edit, _shift, f, hash, key, size) {\n    const v = f(O.none());\n    if (O.isNone(v)) return new EmptyNode();\n    ++size.value;\n    return new LeafNode(edit, hash, key, v);\n  }\n}\n/** @internal */\nexport function isEmptyNode(a) {\n  return isTagged(a, \"EmptyNode\");\n}\n/** @internal */\nexport function isLeafNode(node) {\n  return isEmptyNode(node) || node._tag === \"LeafNode\" || node._tag === \"CollisionNode\";\n}\n/** @internal */\nexport function canEditNode(node, edit) {\n  return isEmptyNode(node) ? false : edit === node.edit;\n}\n/** @internal */\nexport class LeafNode {\n  edit;\n  hash;\n  key;\n  value;\n  _tag = \"LeafNode\";\n  constructor(edit, hash, key, value) {\n    this.edit = edit;\n    this.hash = hash;\n    this.key = key;\n    this.value = value;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    if (equals(key, this.key)) {\n      const v = f(this.value);\n      if (v === this.value) return this;else if (O.isNone(v)) {\n        ;\n        --size.value;\n        return new EmptyNode();\n      }\n      if (canEditNode(this, edit)) {\n        this.value = v;\n        return this;\n      }\n      return new LeafNode(edit, hash, key, v);\n    }\n    const v = f(O.none());\n    if (O.isNone(v)) return this;\n    ++size.value;\n    return mergeLeaves(edit, shift, this.hash, this, hash, new LeafNode(edit, hash, key, v));\n  }\n}\n/** @internal */\nexport class CollisionNode {\n  edit;\n  hash;\n  children;\n  _tag = \"CollisionNode\";\n  constructor(edit, hash, children) {\n    this.edit = edit;\n    this.hash = hash;\n    this.children = children;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    if (hash === this.hash) {\n      const canEdit = canEditNode(this, edit);\n      const list = this.updateCollisionList(canEdit, edit, this.hash, this.children, f, key, size);\n      if (list === this.children) return this;\n      return list.length > 1 ? new CollisionNode(edit, this.hash, list) : list[0]; // collapse single element collision list\n    }\n    const v = f(O.none());\n    if (O.isNone(v)) return this;\n    ++size.value;\n    return mergeLeaves(edit, shift, this.hash, this, hash, new LeafNode(edit, hash, key, v));\n  }\n  updateCollisionList(mutate, edit, hash, list, f, key, size) {\n    const len = list.length;\n    for (let i = 0; i < len; ++i) {\n      const child = list[i];\n      if (\"key\" in child && equals(key, child.key)) {\n        const value = child.value;\n        const newValue = f(value);\n        if (newValue === value) return list;\n        if (O.isNone(newValue)) {\n          ;\n          --size.value;\n          return arraySpliceOut(mutate, i, list);\n        }\n        return arrayUpdate(mutate, i, new LeafNode(edit, hash, key, newValue), list);\n      }\n    }\n    const newValue = f(O.none());\n    if (O.isNone(newValue)) return list;\n    ++size.value;\n    return arrayUpdate(mutate, len, new LeafNode(edit, hash, key, newValue), list);\n  }\n}\n/** @internal */\nexport class IndexedNode {\n  edit;\n  mask;\n  children;\n  _tag = \"IndexedNode\";\n  constructor(edit, mask, children) {\n    this.edit = edit;\n    this.mask = mask;\n    this.children = children;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    const mask = this.mask;\n    const children = this.children;\n    const frag = hashFragment(shift, hash);\n    const bit = toBitmap(frag);\n    const indx = fromBitmap(mask, bit);\n    const exists = mask & bit;\n    const canEdit = canEditNode(this, edit);\n    if (!exists) {\n      const _newChild = new EmptyNode().modify(edit, shift + SIZE, f, hash, key, size);\n      if (!_newChild) return this;\n      return children.length >= MAX_INDEX_NODE ? expand(edit, frag, _newChild, mask, children) : new IndexedNode(edit, mask | bit, arraySpliceIn(canEdit, indx, _newChild, children));\n    }\n    const current = children[indx];\n    const child = current.modify(edit, shift + SIZE, f, hash, key, size);\n    if (current === child) return this;\n    let bitmap = mask;\n    let newChildren;\n    if (isEmptyNode(child)) {\n      // remove\n      bitmap &= ~bit;\n      if (!bitmap) return new EmptyNode();\n      if (children.length <= 2 && isLeafNode(children[indx ^ 1])) {\n        return children[indx ^ 1]; // collapse\n      }\n      newChildren = arraySpliceOut(canEdit, indx, children);\n    } else {\n      // modify\n      newChildren = arrayUpdate(canEdit, indx, child, children);\n    }\n    if (canEdit) {\n      this.mask = bitmap;\n      this.children = newChildren;\n      return this;\n    }\n    return new IndexedNode(edit, bitmap, newChildren);\n  }\n}\n/** @internal */\nexport class ArrayNode {\n  edit;\n  size;\n  children;\n  _tag = \"ArrayNode\";\n  constructor(edit, size, children) {\n    this.edit = edit;\n    this.size = size;\n    this.children = children;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    let count = this.size;\n    const children = this.children;\n    const frag = hashFragment(shift, hash);\n    const child = children[frag];\n    const newChild = (child || new EmptyNode()).modify(edit, shift + SIZE, f, hash, key, size);\n    if (child === newChild) return this;\n    const canEdit = canEditNode(this, edit);\n    let newChildren;\n    if (isEmptyNode(child) && !isEmptyNode(newChild)) {\n      // add\n      ;\n      ++count;\n      newChildren = arrayUpdate(canEdit, frag, newChild, children);\n    } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {\n      // remove\n      ;\n      --count;\n      if (count <= MIN_ARRAY_NODE) {\n        return pack(edit, count, frag, children);\n      }\n      newChildren = arrayUpdate(canEdit, frag, new EmptyNode(), children);\n    } else {\n      // modify\n      newChildren = arrayUpdate(canEdit, frag, newChild, children);\n    }\n    if (canEdit) {\n      this.size = count;\n      this.children = newChildren;\n      return this;\n    }\n    return new ArrayNode(edit, count, newChildren);\n  }\n}\nfunction pack(edit, count, removed, elements) {\n  const children = new Array(count - 1);\n  let g = 0;\n  let bitmap = 0;\n  for (let i = 0, len = elements.length; i < len; ++i) {\n    if (i !== removed) {\n      const elem = elements[i];\n      if (elem && !isEmptyNode(elem)) {\n        children[g++] = elem;\n        bitmap |= 1 << i;\n      }\n    }\n  }\n  return new IndexedNode(edit, bitmap, children);\n}\nfunction expand(edit, frag, child, bitmap, subNodes) {\n  const arr = [];\n  let bit = bitmap;\n  let count = 0;\n  for (let i = 0; bit; ++i) {\n    if (bit & 1) arr[i] = subNodes[count++];\n    bit >>>= 1;\n  }\n  arr[frag] = child;\n  return new ArrayNode(edit, count + 1, arr);\n}\nfunction mergeLeavesInner(edit, shift, h1, n1, h2, n2) {\n  if (h1 === h2) return new CollisionNode(edit, h1, [n2, n1]);\n  const subH1 = hashFragment(shift, h1);\n  const subH2 = hashFragment(shift, h2);\n  if (subH1 === subH2) {\n    return child => new IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), [child]);\n  } else {\n    const children = subH1 < subH2 ? [n1, n2] : [n2, n1];\n    return new IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), children);\n  }\n}\nfunction mergeLeaves(edit, shift, h1, n1, h2, n2) {\n  let stack = undefined;\n  let currentShift = shift;\n  while (true) {\n    const res = mergeLeavesInner(edit, currentShift, h1, n1, h2, n2);\n    if (typeof res === \"function\") {\n      stack = Stack.make(res, stack);\n      currentShift = currentShift + SIZE;\n    } else {\n      let final = res;\n      while (stack != null) {\n        final = stack.value(final);\n        stack = stack.previous;\n      }\n      return final;\n    }\n  }\n}\n//# sourceMappingURL=node.js.map","import * as Equal from \"../Equal.js\";\nimport * as Dual from \"../Function.js\";\nimport { identity, pipe } from \"../Function.js\";\nimport * as Hash from \"../Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport { fromBitmap, hashFragment, toBitmap } from \"./hashMap/bitwise.js\";\nimport { SIZE } from \"./hashMap/config.js\";\nimport * as Node from \"./hashMap/node.js\";\nconst HashMapSymbolKey = \"effect/HashMap\";\n/** @internal */\nexport const HashMapTypeId = /*#__PURE__*/Symbol.for(HashMapSymbolKey);\nconst HashMapProto = {\n  [HashMapTypeId]: HashMapTypeId,\n  [Symbol.iterator]() {\n    return new HashMapIterator(this, (k, v) => [k, v]);\n  },\n  [Hash.symbol]() {\n    let hash = Hash.hash(HashMapSymbolKey);\n    for (const item of this) {\n      hash ^= pipe(Hash.hash(item[0]), Hash.combine(Hash.hash(item[1])));\n    }\n    return Hash.cached(this, hash);\n  },\n  [Equal.symbol](that) {\n    if (isHashMap(that)) {\n      if (that._size !== this._size) {\n        return false;\n      }\n      for (const item of this) {\n        const elem = pipe(that, getHash(item[0], Hash.hash(item[0])));\n        if (Option.isNone(elem)) {\n          return false;\n        } else {\n          if (!Equal.equals(item[1], elem.value)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  },\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"HashMap\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeImpl = (editable, edit, root, size) => {\n  const map = Object.create(HashMapProto);\n  map._editable = editable;\n  map._edit = edit;\n  map._root = root;\n  map._size = size;\n  return map;\n};\nclass HashMapIterator {\n  map;\n  f;\n  v;\n  constructor(map, f) {\n    this.map = map;\n    this.f = f;\n    this.v = visitLazy(this.map._root, this.f, undefined);\n  }\n  next() {\n    if (Option.isNone(this.v)) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n    const v0 = this.v.value;\n    this.v = applyCont(v0.cont);\n    return {\n      done: false,\n      value: v0.value\n    };\n  }\n  [Symbol.iterator]() {\n    return new HashMapIterator(this.map, this.f);\n  }\n}\nconst applyCont = cont => cont ? visitLazyChildren(cont[0], cont[1], cont[2], cont[3], cont[4]) : Option.none();\nconst visitLazy = (node, f, cont = undefined) => {\n  switch (node._tag) {\n    case \"LeafNode\":\n      {\n        if (Option.isSome(node.value)) {\n          return Option.some({\n            value: f(node.key, node.value.value),\n            cont\n          });\n        }\n        return applyCont(cont);\n      }\n    case \"CollisionNode\":\n    case \"ArrayNode\":\n    case \"IndexedNode\":\n      {\n        const children = node.children;\n        return visitLazyChildren(children.length, children, 0, f, cont);\n      }\n    default:\n      {\n        return applyCont(cont);\n      }\n  }\n};\nconst visitLazyChildren = (len, children, i, f, cont) => {\n  while (i < len) {\n    const child = children[i++];\n    if (child && !Node.isEmptyNode(child)) {\n      return visitLazy(child, f, [len, children, i, f, cont]);\n    }\n  }\n  return applyCont(cont);\n};\nconst _empty = /*#__PURE__*/makeImpl(false, 0, /*#__PURE__*/new Node.EmptyNode(), 0);\n/** @internal */\nexport const empty = () => _empty;\n/** @internal */\nexport const make = (...entries) => fromIterable(entries);\n/** @internal */\nexport const fromIterable = entries => {\n  const map = beginMutation(empty());\n  for (const entry of entries) {\n    set(map, entry[0], entry[1]);\n  }\n  return endMutation(map);\n};\n/** @internal */\nexport const isHashMap = u => hasProperty(u, HashMapTypeId);\n/** @internal */\nexport const isEmpty = self => self && Node.isEmptyNode(self._root);\n/** @internal */\nexport const get = /*#__PURE__*/Dual.dual(2, (self, key) => getHash(self, key, Hash.hash(key)));\n/** @internal */\nexport const getHash = /*#__PURE__*/Dual.dual(3, (self, key, hash) => {\n  let node = self._root;\n  let shift = 0;\n  while (true) {\n    switch (node._tag) {\n      case \"LeafNode\":\n        {\n          return Equal.equals(key, node.key) ? node.value : Option.none();\n        }\n      case \"CollisionNode\":\n        {\n          if (hash === node.hash) {\n            const children = node.children;\n            for (let i = 0, len = children.length; i < len; ++i) {\n              const child = children[i];\n              if (\"key\" in child && Equal.equals(key, child.key)) {\n                return child.value;\n              }\n            }\n          }\n          return Option.none();\n        }\n      case \"IndexedNode\":\n        {\n          const frag = hashFragment(shift, hash);\n          const bit = toBitmap(frag);\n          if (node.mask & bit) {\n            node = node.children[fromBitmap(node.mask, bit)];\n            shift += SIZE;\n            break;\n          }\n          return Option.none();\n        }\n      case \"ArrayNode\":\n        {\n          node = node.children[hashFragment(shift, hash)];\n          if (node) {\n            shift += SIZE;\n            break;\n          }\n          return Option.none();\n        }\n      default:\n        return Option.none();\n    }\n  }\n});\n/** @internal */\nexport const unsafeGet = /*#__PURE__*/Dual.dual(2, (self, key) => {\n  const element = getHash(self, key, Hash.hash(key));\n  if (Option.isNone(element)) {\n    throw new Error(\"Expected map to contain key\");\n  }\n  return element.value;\n});\n/** @internal */\nexport const has = /*#__PURE__*/Dual.dual(2, (self, key) => Option.isSome(getHash(self, key, Hash.hash(key))));\n/** @internal */\nexport const hasHash = /*#__PURE__*/Dual.dual(3, (self, key, hash) => Option.isSome(getHash(self, key, hash)));\n/** @internal */\nexport const set = /*#__PURE__*/Dual.dual(3, (self, key, value) => modifyAt(self, key, () => Option.some(value)));\n/** @internal */\nexport const setTree = /*#__PURE__*/Dual.dual(3, (self, newRoot, newSize) => {\n  if (self._editable) {\n    ;\n    self._root = newRoot;\n    self._size = newSize;\n    return self;\n  }\n  return newRoot === self._root ? self : makeImpl(self._editable, self._edit, newRoot, newSize);\n});\n/** @internal */\nexport const keys = self => new HashMapIterator(self, key => key);\n/** @internal */\nexport const values = self => new HashMapIterator(self, (_, value) => value);\n/** @internal */\nexport const entries = self => new HashMapIterator(self, (key, value) => [key, value]);\n/** @internal */\nexport const size = self => self._size;\n/** @internal */\nexport const beginMutation = self => makeImpl(true, self._edit + 1, self._root, self._size);\n/** @internal */\nexport const endMutation = self => {\n  ;\n  self._editable = false;\n  return self;\n};\n/** @internal */\nexport const mutate = /*#__PURE__*/Dual.dual(2, (self, f) => {\n  const transient = beginMutation(self);\n  f(transient);\n  return endMutation(transient);\n});\n/** @internal */\nexport const modifyAt = /*#__PURE__*/Dual.dual(3, (self, key, f) => modifyHash(self, key, Hash.hash(key), f));\n/** @internal */\nexport const modifyHash = /*#__PURE__*/Dual.dual(4, (self, key, hash, f) => {\n  const size = {\n    value: self._size\n  };\n  const newRoot = self._root.modify(self._editable ? self._edit : NaN, 0, f, hash, key, size);\n  return pipe(self, setTree(newRoot, size.value));\n});\n/** @internal */\nexport const modify = /*#__PURE__*/Dual.dual(3, (self, key, f) => modifyAt(self, key, Option.map(f)));\n/** @internal */\nexport const union = /*#__PURE__*/Dual.dual(2, (self, that) => {\n  const result = beginMutation(self);\n  forEach(that, (v, k) => set(result, k, v));\n  return endMutation(result);\n});\n/** @internal */\nexport const remove = /*#__PURE__*/Dual.dual(2, (self, key) => modifyAt(self, key, Option.none));\n/** @internal */\nexport const removeMany = /*#__PURE__*/Dual.dual(2, (self, keys) => mutate(self, map => {\n  for (const key of keys) {\n    remove(key)(map);\n  }\n}));\n/**\n * Maps over the entries of the `HashMap` using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const map = /*#__PURE__*/Dual.dual(2, (self, f) => reduce(self, empty(), (map, value, key) => set(map, key, f(value, key))));\n/** @internal */\nexport const flatMap = /*#__PURE__*/Dual.dual(2, (self, f) => reduce(self, empty(), (zero, value, key) => mutate(zero, map => forEach(f(value, key), (value, key) => set(map, key, value)))));\n/** @internal */\nexport const forEach = /*#__PURE__*/Dual.dual(2, (self, f) => reduce(self, void 0, (_, value, key) => f(value, key)));\n/** @internal */\nexport const reduce = /*#__PURE__*/Dual.dual(3, (self, zero, f) => {\n  const root = self._root;\n  if (root._tag === \"LeafNode\") {\n    return Option.isSome(root.value) ? f(zero, root.value.value, root.key) : zero;\n  }\n  if (root._tag === \"EmptyNode\") {\n    return zero;\n  }\n  const toVisit = [root.children];\n  let children;\n  while (children = toVisit.pop()) {\n    for (let i = 0, len = children.length; i < len;) {\n      const child = children[i++];\n      if (child && !Node.isEmptyNode(child)) {\n        if (child._tag === \"LeafNode\") {\n          if (Option.isSome(child.value)) {\n            zero = f(zero, child.value.value, child.key);\n          }\n        } else {\n          toVisit.push(child.children);\n        }\n      }\n    }\n  }\n  return zero;\n});\n/** @internal */\nexport const filter = /*#__PURE__*/Dual.dual(2, (self, f) => mutate(empty(), map => {\n  for (const [k, a] of self) {\n    if (f(a, k)) {\n      set(map, k, a);\n    }\n  }\n}));\n/** @internal */\nexport const compact = self => filterMap(self, identity);\n/** @internal */\nexport const filterMap = /*#__PURE__*/Dual.dual(2, (self, f) => mutate(empty(), map => {\n  for (const [k, a] of self) {\n    const option = f(a, k);\n    if (Option.isSome(option)) {\n      set(map, k, option.value);\n    }\n  }\n}));\n/** @internal */\nexport const findFirst = /*#__PURE__*/Dual.dual(2, (self, predicate) => {\n  for (const ka of self) {\n    if (predicate(ka[1], ka[0])) {\n      return Option.some(ka);\n    }\n  }\n  return Option.none();\n});\n/** @internal */\nexport const some = /*#__PURE__*/Dual.dual(2, (self, predicate) => {\n  for (const ka of self) {\n    if (predicate(ka[1], ka[0])) {\n      return true;\n    }\n  }\n  return false;\n});\n/** @internal */\nexport const every = /*#__PURE__*/Dual.dual(2, (self, predicate) => !some(self, (a, k) => !predicate(a, k)));\n//# sourceMappingURL=hashMap.js.map","import * as Equal from \"../Equal.js\";\nimport { dual } from \"../Function.js\";\nimport * as Hash from \"../Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport * as HM from \"./hashMap.js\";\nconst HashSetSymbolKey = \"effect/HashSet\";\n/** @internal */\nexport const HashSetTypeId = /*#__PURE__*/Symbol.for(HashSetSymbolKey);\nconst HashSetProto = {\n  [HashSetTypeId]: HashSetTypeId,\n  [Symbol.iterator]() {\n    return HM.keys(this._keyMap);\n  },\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.combine(Hash.hash(this._keyMap))(Hash.hash(HashSetSymbolKey)));\n  },\n  [Equal.symbol](that) {\n    if (isHashSet(that)) {\n      return HM.size(this._keyMap) === HM.size(that._keyMap) && Equal.equals(this._keyMap, that._keyMap);\n    }\n    return false;\n  },\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"HashSet\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const makeImpl = keyMap => {\n  const set = Object.create(HashSetProto);\n  set._keyMap = keyMap;\n  return set;\n};\n/** @internal */\nexport const isHashSet = u => hasProperty(u, HashSetTypeId);\nconst _empty = /*#__PURE__*/makeImpl( /*#__PURE__*/HM.empty());\n/** @internal */\nexport const empty = () => _empty;\n/** @internal */\nexport const fromIterable = elements => {\n  const set = beginMutation(empty());\n  for (const value of elements) {\n    add(set, value);\n  }\n  return endMutation(set);\n};\n/** @internal */\nexport const make = (...elements) => {\n  const set = beginMutation(empty());\n  for (const value of elements) {\n    add(set, value);\n  }\n  return endMutation(set);\n};\n/** @internal */\nexport const has = /*#__PURE__*/dual(2, (self, value) => HM.has(self._keyMap, value));\n/** @internal */\nexport const some = /*#__PURE__*/dual(2, (self, f) => {\n  let found = false;\n  for (const value of self) {\n    found = f(value);\n    if (found) {\n      break;\n    }\n  }\n  return found;\n});\n/** @internal */\nexport const every = /*#__PURE__*/dual(2, (self, refinement) => !some(self, a => !refinement(a)));\n/** @internal */\nexport const isSubset = /*#__PURE__*/dual(2, (self, that) => every(self, value => has(that, value)));\n/** @internal */\nexport const values = self => HM.keys(self._keyMap);\n/** @internal */\nexport const size = self => HM.size(self._keyMap);\n/** @internal */\nexport const beginMutation = self => makeImpl(HM.beginMutation(self._keyMap));\n/** @internal */\nexport const endMutation = self => {\n  ;\n  self._keyMap._editable = false;\n  return self;\n};\n/** @internal */\nexport const mutate = /*#__PURE__*/dual(2, (self, f) => {\n  const transient = beginMutation(self);\n  f(transient);\n  return endMutation(transient);\n});\n/** @internal */\nexport const add = /*#__PURE__*/dual(2, (self, value) => self._keyMap._editable ? (HM.set(value, true)(self._keyMap), self) : makeImpl(HM.set(value, true)(self._keyMap)));\n/** @internal */\nexport const remove = /*#__PURE__*/dual(2, (self, value) => self._keyMap._editable ? (HM.remove(value)(self._keyMap), self) : makeImpl(HM.remove(value)(self._keyMap)));\n/** @internal */\nexport const difference = /*#__PURE__*/dual(2, (self, that) => mutate(self, set => {\n  for (const value of that) {\n    remove(set, value);\n  }\n}));\n/** @internal */\nexport const intersection = /*#__PURE__*/dual(2, (self, that) => mutate(empty(), set => {\n  for (const value of that) {\n    if (has(value)(self)) {\n      add(value)(set);\n    }\n  }\n}));\n/** @internal */\nexport const union = /*#__PURE__*/dual(2, (self, that) => mutate(empty(), set => {\n  forEach(self, value => add(set, value));\n  for (const value of that) {\n    add(set, value);\n  }\n}));\n/** @internal */\nexport const toggle = /*#__PURE__*/dual(2, (self, value) => has(self, value) ? remove(self, value) : add(self, value));\n/** @internal */\nexport const map = /*#__PURE__*/dual(2, (self, f) => mutate(empty(), set => {\n  forEach(self, a => {\n    const b = f(a);\n    if (!has(set, b)) {\n      add(set, b);\n    }\n  });\n}));\n/** @internal */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => mutate(empty(), set => {\n  forEach(self, a => {\n    for (const b of f(a)) {\n      if (!has(set, b)) {\n        add(set, b);\n      }\n    }\n  });\n}));\n/** @internal */\nexport const forEach = /*#__PURE__*/dual(2, (self, f) => HM.forEach(self._keyMap, (_, k) => f(k)));\n/** @internal */\nexport const reduce = /*#__PURE__*/dual(3, (self, zero, f) => HM.reduce(self._keyMap, zero, (z, _, a) => f(z, a)));\n/** @internal */\nexport const filter = /*#__PURE__*/dual(2, (self, f) => {\n  return mutate(empty(), set => {\n    const iterator = values(self);\n    let next;\n    while (!(next = iterator.next()).done) {\n      const value = next.value;\n      if (f(value)) {\n        add(set, value);\n      }\n    }\n  });\n});\n/** @internal */\nexport const partition = /*#__PURE__*/dual(2, (self, predicate) => {\n  const iterator = values(self);\n  let next;\n  const right = beginMutation(empty());\n  const left = beginMutation(empty());\n  while (!(next = iterator.next()).done) {\n    const value = next.value;\n    if (predicate(value)) {\n      add(right, value);\n    } else {\n      add(left, value);\n    }\n  }\n  return [endMutation(left), endMutation(right)];\n});\n//# sourceMappingURL=hashSet.js.map","/**\n * # HashSet\n *\n * An immutable `HashSet` provides a collection of unique values with efficient\n * lookup, insertion and removal. Once created, a `HashSet` cannot be modified;\n * any operation that would alter the set instead returns a new `HashSet` with\n * the changes. This immutability offers benefits like predictable state\n * management and easier reasoning about your code.\n *\n * ## What Problem Does It Solve?\n *\n * `HashSet` solves the problem of maintaining an unsorted collection where each\n * value appears exactly once, with fast operations for checking membership and\n * adding/removing values.\n *\n * ## When to Use\n *\n * Use `HashSet` when you need:\n *\n * - A collection with no duplicate values\n * - Efficient membership testing (**`O(1)`** average complexity)\n * - Set operations like union, intersection, and difference\n * - An immutable data structure that preserves functional programming patterns\n *\n * ## Advanced Features\n *\n * HashSet provides operations for:\n *\n * - Transforming sets with map and flatMap\n * - Filtering elements with filter\n * - Combining sets with union, intersection and difference\n * - Performance optimizations via mutable operations in controlled contexts\n *\n * ## Performance Characteristics\n *\n * - **Lookup** operations ({@link module:HashSet.has}): **`O(1)`** average time\n *   complexity\n * - **Insertion** operations ({@link module:HashSet.add}): **`O(1)`** average time\n *   complexity\n * - **Removal** operations ({@link module:HashSet.remove}): **`O(1)`** average\n *   time complexity\n * - **Set** operations ({@link module:HashSet.union},\n *   {@link module:HashSet.intersection}): **`O(n)`** where n is the size of the\n *   smaller set\n * - **Iteration**: **`O(n)`** where n is the size of the set\n *\n * The HashSet data structure implements the following traits:\n *\n * - {@link Iterable}: allows iterating over the values in the set\n * - {@link Equal}: allows comparing two sets for value-based equality\n * - {@link Pipeable}: allows chaining operations with the pipe operator\n * - {@link Inspectable}: allows inspecting the contents of the set\n *\n * ## Operations Reference\n *\n * | Category     | Operation                           | Description                                 | Complexity |\n * | ------------ | ----------------------------------- | ------------------------------------------- | ---------- |\n * | constructors | {@link module:HashSet.empty}        | Creates an empty HashSet                    | O(1)       |\n * | constructors | {@link module:HashSet.fromIterable} | Creates a HashSet from an iterable          | O(n)       |\n * | constructors | {@link module:HashSet.make}         | Creates a HashSet from multiple values      | O(n)       |\n * |              |                                     |                                             |            |\n * | elements     | {@link module:HashSet.has}          | Checks if a value exists in the set         | O(1) avg   |\n * | elements     | {@link module:HashSet.some}         | Checks if any element satisfies a predicate | O(n)       |\n * | elements     | {@link module:HashSet.every}        | Checks if all elements satisfy a predicate  | O(n)       |\n * | elements     | {@link module:HashSet.isSubset}     | Checks if a set is a subset of another      | O(n)       |\n * |              |                                     |                                             |            |\n * | getters      | {@link module:HashSet.values}       | Gets an iterator of all values              | O(1)       |\n * | getters      | {@link module:HashSet.toValues}     | Gets an array of all values                 | O(n)       |\n * | getters      | {@link module:HashSet.size}         | Gets the number of elements                 | O(1)       |\n * |              |                                     |                                             |            |\n * | mutations    | {@link module:HashSet.add}          | Adds a value to the set                     | O(1) avg   |\n * | mutations    | {@link module:HashSet.remove}       | Removes a value from the set                | O(1) avg   |\n * | mutations    | {@link module:HashSet.toggle}       | Toggles a value's presence                  | O(1) avg   |\n * |              |                                     |                                             |            |\n * | operations   | {@link module:HashSet.difference}   | Computes set difference (A - B)             | O(n)       |\n * | operations   | {@link module:HashSet.intersection} | Computes set intersection (A ∩ B)           | O(n)       |\n * | operations   | {@link module:HashSet.union}        | Computes set union (A ∪ B)                  | O(n)       |\n * |              |                                     |                                             |            |\n * | mapping      | {@link module:HashSet.map}          | Transforms each element                     | O(n)       |\n * |              |                                     |                                             |            |\n * | sequencing   | {@link module:HashSet.flatMap}      | Transforms and flattens elements            | O(n)       |\n * |              |                                     |                                             |            |\n * | traversing   | {@link module:HashSet.forEach}      | Applies a function to each element          | O(n)       |\n * |              |                                     |                                             |            |\n * | folding      | {@link module:HashSet.reduce}       | Reduces the set to a single value           | O(n)       |\n * |              |                                     |                                             |            |\n * | filtering    | {@link module:HashSet.filter}       | Keeps elements that satisfy a predicate     | O(n)       |\n * |              |                                     |                                             |            |\n * | partitioning | {@link module:HashSet.partition}    | Splits into two sets by a predicate         | O(n)       |\n *\n * ## Notes\n *\n * ### Composability with the Effect Ecosystem:\n *\n * This `HashSet` is designed to work seamlessly within the Effect ecosystem. It\n * implements the {@link Iterable}, {@link Equal}, {@link Pipeable}, and\n * {@link Inspectable} traits from Effect. This ensures compatibility with other\n * Effect data structures and functionalities. For example, you can easily use\n * Effect's `pipe` method to chain operations on the `HashSet`.\n *\n * **Equality of Elements with Effect's {@link Equal `Equal`} Trait:**\n *\n * This `HashSet` relies on Effect's {@link Equal} trait to determine the\n * uniqueness of elements within the set. The way equality is checked depends on\n * the type of the elements:\n *\n * - **Primitive Values:** For primitive JavaScript values like strings, numbers,\n *   booleans, `null`, and `undefined`, equality is determined by their value\n *   (similar to the `===` operator).\n * - **Objects and Custom Types:** For objects and other custom types, equality is\n *   determined by whether those types implement the {@link Equal} interface\n *   themselves. If an element type implements `Equal`, the `HashSet` will\n *   delegate to that implementation to perform the equality check. This allows\n *   you to define custom logic for determining when two instances of your\n *   objects should be considered equal based on their properties, rather than\n *   just their object identity.\n *\n * ```ts\n * import { Equal, Hash, HashSet } from \"effect\"\n *\n * class Person implements Equal.Equal {\n *   constructor(\n *     readonly id: number, // Unique identifier\n *     readonly name: string,\n *     readonly age: number\n *   ) {}\n *\n *   // Define equality based on id, name, and age\n *   [Equal.symbol](that: Equal.Equal): boolean {\n *     if (that instanceof Person) {\n *       return (\n *         Equal.equals(this.id, that.id) &&\n *         Equal.equals(this.name, that.name) &&\n *         Equal.equals(this.age, that.age)\n *       )\n *     }\n *     return false\n *   }\n *\n *   // Generate a hash code based on the unique id\n *   [Hash.symbol](): number {\n *     return Hash.hash(this.id)\n *   }\n * }\n *\n * // Creating a HashSet with objects that implement the Equal interface\n * const set = HashSet.empty().pipe(\n *   HashSet.add(new Person(1, \"Alice\", 30)),\n *   HashSet.add(new Person(1, \"Alice\", 30))\n * )\n *\n * // HashSet recognizes them as equal, so only one element is stored\n * console.log(HashSet.size(set))\n * // Output: 1\n * ```\n *\n * **Simplifying Equality and Hashing with `Data` and `Schema`:**\n *\n * Effect's {@link Data} and {@link Schema `Schema.Data`} modules offer powerful\n * ways to automatically handle the implementation of both the {@link Equal} and\n * {@link Hash} traits for your custom data structures.\n *\n * - **`Data` Module:** By using constructors like `Data.struct`, `Data.tuple`,\n *   `Data.array`, or `Data.case` to define your data types, Effect\n *   automatically generates the necessary implementations for value-based\n *   equality and consistent hashing. This significantly reduces boilerplate and\n *   ensures correctness.\n *\n * ```ts\n * import { HashSet, Data, Equal } from \"effect\"\n * import assert from \"node:assert/strict\"\n *\n * // Data.* implements the `Equal` traits for us\n * const person1 = Data.struct({ id: 1, name: \"Alice\", age: 30 })\n * const person2 = Data.struct({ id: 1, name: \"Alice\", age: 30 })\n *\n * assert(Equal.equals(person1, person2))\n *\n * const set = HashSet.empty().pipe(\n *   HashSet.add(person1),\n *   HashSet.add(person2)\n * )\n *\n * // HashSet recognizes them as equal, so only one element is stored\n * console.log(HashSet.size(set)) // Output: 1\n * ```\n *\n * - **`Schema` Module:** When defining data schemas using the {@link Schema}\n *   module, you can use `Schema.Data` to automatically include the `Equal` and\n *   `Hash` traits in the decoded objects. This is particularly important when\n *   working with `HashSet`. **For decoded objects to be correctly recognized as\n *   equal within a `HashSet`, ensure that the schema for those objects is\n *   defined using `Schema.Data`.**\n *\n * ```ts\n * import { Equal, HashSet, Schema } from \"effect\"\n * import assert from \"node:assert/strict\"\n *\n * // Schema.Data implements the `Equal` traits for us\n * const PersonSchema = Schema.Data(\n *   Schema.Struct({\n *     id: Schema.Number,\n *     name: Schema.String,\n *     age: Schema.Number\n *   })\n * )\n *\n * const Person = Schema.decode(PersonSchema)\n *\n * const person1 = Person({ id: 1, name: \"Alice\", age: 30 })\n * const person2 = Person({ id: 1, name: \"Alice\", age: 30 })\n *\n * assert(Equal.equals(person1, person2)) // Output: true\n *\n * const set = HashSet.empty().pipe(\n *   HashSet.add(person1),\n *   HashSet.add(person2)\n * )\n *\n * // HashSet thanks to Schema.Data implementation of the `Equal` trait, recognizes the two Person as equal, so only one element is stored\n * console.log(HashSet.size(set)) // Output: 1\n * ```\n *\n * ### Interoperability with the JavaScript Runtime:\n *\n * To interoperate with the regular JavaScript runtime, Effect's `HashSet`\n * provides methods to access its elements in formats readily usable by\n * JavaScript APIs: {@link values `HashSet.values`},\n * {@link toValues `HashSet.toValues`}\n *\n * ```ts\n * import { HashSet } from \"effect\"\n *\n * const hashSet: HashSet.HashSet<number> = HashSet.make(1, 2, 3)\n *\n * // Using HashSet.values to convert HashSet.HashSet<A> to IterableIterator<A>\n * const iterable: IterableIterator<number> = HashSet.values(hashSet)\n *\n * console.log(...iterable) // Logs:  1 2 3\n *\n * // Using HashSet.toValues to convert HashSet.HashSet<A> to Array<A>\n * const array: Array<number> = HashSet.toValues(hashSet)\n *\n * console.log(array) // Logs: [ 1, 2, 3 ]\n * ```\n *\n * Be mindful of performance implications (both time and space complexity) when\n * frequently converting between Effect's immutable HashSet and mutable\n * JavaScript data structures, especially for large collections.\n *\n * @module HashSet\n * @since 2.0.0\n */\nimport * as HS from \"./internal/hashSet.js\";\nconst TypeId = HS.HashSetTypeId;\n/**\n * @memberof HashSet\n * @since 2.0.0\n * @category refinements\n */\nexport const isHashSet = HS.isHashSet;\n/**\n * Creates an empty `HashSet`.\n *\n * Time complexity: **`O(1)`**\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category constructors\n * @example\n *\n * ```ts\n * import { HashSet, pipe } from \"effect\"\n *\n * console.log(\n *   pipe(\n *     // Provide a type argument to create a HashSet of a specific type\n *     HashSet.empty<number>(),\n *     HashSet.add(1),\n *     HashSet.add(1), // Notice the duplicate\n *     HashSet.add(2),\n *     HashSet.toValues\n *   )\n * ) // Output: [1, 2]\n * ```\n *\n * @see Other `HashSet` constructors are {@link module:HashSet.make} {@link module:HashSet.fromIterable}\n */\nexport const empty = HS.empty;\n/**\n * Creates a new `HashSet` from an iterable collection of values.\n *\n * Time complexity: **`O(n)`** where n is the number of elements in the iterable\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category constructors\n * @example\n *\n * ```ts\n * // Creating a HashSet from an Array\n * import { HashSet, pipe } from \"effect\"\n *\n * console.log(\n *   pipe(\n *     [1, 2, 3, 4, 5, 1, 2, 3], // Array<number> is an Iterable<number>;  Note the duplicates.\n *     HashSet.fromIterable,\n *     HashSet.toValues\n *   )\n * ) // Output: [1, 2, 3, 4, 5]\n * ```\n *\n * @example\n *\n * ```ts\n * // Creating a HashSet from a Set\n * import { HashSet, pipe } from \"effect\"\n *\n * console.log(\n *   pipe(\n *     new Set([\"apple\", \"banana\", \"orange\", \"apple\"]), // Set<string> is an Iterable<string>\n *     HashSet.fromIterable,\n *     HashSet.toValues\n *   )\n * ) // Output: [\"apple\", \"banana\", \"orange\"]\n * ```\n *\n * @example\n *\n * ```ts\n * // Creating a HashSet from a Generator\n * import { HashSet } from \"effect\"\n *\n * // Generator functions return iterables\n * function* fibonacci(n: number): Generator<number, void, unknown> {\n *   let [a, b] = [0, 1]\n *   for (let i = 0; i < n; i++) {\n *     yield a\n *     ;[a, b] = [b, a + b]\n *   }\n * }\n *\n * // Create a HashSet from the first 10 Fibonacci numbers\n * const fibonacciSet = HashSet.fromIterable(fibonacci(10))\n *\n * console.log(HashSet.toValues(fibonacciSet))\n * // Outputs: [0, 1, 2, 3, 5, 8, 13, 21, 34] but in unsorted order\n * ```\n *\n * @example\n *\n * ```ts\n * //  Creating a HashSet from another HashSet\n * import { HashSet, pipe } from \"effect\"\n *\n * console.log(\n *   pipe(\n *     // since HashSet implements the Iterable interface, we can use it to create a new HashSet\n *     HashSet.make(1, 2, 3, 4),\n *     HashSet.fromIterable,\n *     HashSet.toValues // turns the HashSet back into an array\n *   )\n * ) // Output: [1, 2, 3, 4]\n * ```\n *\n * @example\n *\n * ```ts\n * // Creating a HashSet from other Effect's data structures like Chunk\n * import { Chunk, HashSet, pipe } from \"effect\"\n *\n * console.log(\n *   pipe(\n *     Chunk.make(1, 2, 3, 4), // Iterable<number>\n *     HashSet.fromIterable,\n *     HashSet.toValues // turns the HashSet back into an array\n *   )\n * ) // Outputs: [1, 2, 3, 4]\n * ```\n *\n * @see Other `HashSet` constructors are {@link module:HashSet.empty} {@link module:HashSet.make}\n */\nexport const fromIterable = HS.fromIterable;\n/**\n * Construct a new `HashSet` from a variable number of values.\n *\n * Time complexity: **`O(n)`** where n is the number of elements\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category constructors\n * @example\n *\n * ```ts\n * import { Equal, Hash, HashSet, pipe } from \"effect\"\n * import assert from \"node:assert/strict\"\n *\n * class Character implements Equal.Equal {\n *   readonly name: string\n *   readonly trait: string\n *\n *   constructor(name: string, trait: string) {\n *     this.name = name\n *     this.trait = trait\n *   }\n *\n *   // Define equality based on name, and trait\n *   [Equal.symbol](that: Equal.Equal): boolean {\n *     if (that instanceof Character) {\n *       return (\n *         Equal.equals(this.name, that.name) &&\n *         Equal.equals(this.trait, that.trait)\n *       )\n *     }\n *     return false\n *   }\n *\n *   // Generate a hash code based on the sum of the character's name and trait\n *   [Hash.symbol](): number {\n *     return Hash.hash(this.name + this.trait)\n *   }\n *\n *   static readonly of = (name: string, trait: string): Character => {\n *     return new Character(name, trait)\n *   }\n * }\n *\n * assert.strictEqual(\n *   Equal.equals(\n *     HashSet.make(\n *       Character.of(\"Alice\", \"Curious\"),\n *       Character.of(\"Alice\", \"Curious\"),\n *       Character.of(\"White Rabbit\", \"Always late\"),\n *       Character.of(\"Mad Hatter\", \"Tea enthusiast\")\n *     ),\n *     // Is the same as adding each character to an empty set\n *     pipe(\n *       HashSet.empty(),\n *       HashSet.add(Character.of(\"Alice\", \"Curious\")),\n *       HashSet.add(Character.of(\"Alice\", \"Curious\")), // Alice tried to attend twice!\n *       HashSet.add(Character.of(\"White Rabbit\", \"Always late\")),\n *       HashSet.add(Character.of(\"Mad Hatter\", \"Tea enthusiast\"))\n *     )\n *   ),\n *   true,\n *   \"`HashSet.make` and `HashSet.empty() + HashSet.add()` should be equal\"\n * )\n *\n * assert.strictEqual(\n *   Equal.equals(\n *     HashSet.make(\n *       Character.of(\"Alice\", \"Curious\"),\n *       Character.of(\"Alice\", \"Curious\"),\n *       Character.of(\"White Rabbit\", \"Always late\"),\n *       Character.of(\"Mad Hatter\", \"Tea enthusiast\")\n *     ),\n *     HashSet.fromIterable([\n *       Character.of(\"Alice\", \"Curious\"),\n *       Character.of(\"Alice\", \"Curious\"),\n *       Character.of(\"White Rabbit\", \"Always late\"),\n *       Character.of(\"Mad Hatter\", \"Tea enthusiast\")\n *     ])\n *   ),\n *   true,\n *   \"`HashSet.make` and `HashSet.fromIterable` should be equal\"\n * )\n * ```\n *\n * @see Other `HashSet` constructors are {@link module:HashSet.fromIterable} {@link module:HashSet.empty}\n */\nexport const make = HS.make;\n/**\n * Checks if the specified value exists in the `HashSet`.\n *\n * Time complexity: **`O(1)`** average\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category elements\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(HashSet.make(0, 1, 2), HashSet.has(3)) // false\n *\n * // or piped with the pipe function\n * HashSet.make(0, 1, 2).pipe(HashSet.has(3)) // false\n *\n * // or with `data-first` API\n * HashSet.has(HashSet.make(0, 1, 2), 3) // false\n * ```\n *\n * @returns A `boolean` signaling the presence of the value in the HashSet\n * @see Other `HashSet` elements are {@link module:HashSet.some} {@link module:HashSet.every} {@link module:HashSet.isSubset}\n */\nexport const has = HS.has;\n/**\n * Check if a predicate holds true for some `HashSet` element.\n *\n * Time complexity: **`O(n)`** where n is the number of elements in the set\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category elements\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * const set: HashSet.HashSet<number> = HashSet.make(0, 1, 2)\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   set,\n *   HashSet.some((n) => n > 0)\n * ) // true\n *\n * // or piped with the pipe function\n * set.pipe(HashSet.some((n) => n > 0)) // true\n *\n * // or with `data-first` API\n * HashSet.some(set, (n) => n > 0) // true\n * ```\n *\n * @see Other `HashSet` elements are {@link module:HashSet.has} {@link module:HashSet.every} {@link module:HashSet.isSubset}\n */\nexport const some = HS.some;\n/**\n * Check if a predicate holds true for every `HashSet` element.\n *\n * Time complexity is **`O(n)`** as it needs to traverse the whole HashSet\n * collection\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category elements\n * @example\n *\n * ```ts\n * // Syntax with Refinement\n * import { HashSet, pipe, Predicate } from \"effect\"\n *\n * const numberOrString = HashSet.make(1, \"1\", \"one\", \"uno\")\n *\n * // with `data-last`, a.k.a. `pipeable` API and `Refinement`\n * pipe(\n *   numberOrString, // HashSet.HashSet<number | string>\n *   HashSet.every(Predicate.isString)\n * ) // HashSet.HashSet<string>\n *\n * // or piped with the pipe function and  `Refinement`\n * numberOrString // HashSet.HashSet<number | string>\n *   .pipe(HashSet.every(Predicate.isString)) // HashSet.HashSet<string>\n *\n * // or with `data-first` API and `Refinement`\n * HashSet.every(\n *   numberOrString, // HashSet.HashSet<number | string>\n *   Predicate.isString\n * ) // HashSet.HashSet<string>\n * ```\n *\n * @example\n *\n * ```ts\n * // Syntax with Predicate\n * import { HashSet, pipe } from \"effect\"\n *\n * const set = HashSet.make(1, 2, 3)\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   set,\n *   HashSet.every((n) => n >= 0)\n * ) // true\n *\n * // or piped with the pipe function\n * set.pipe(HashSet.every((n) => n >= 0)) // true\n *\n * // or with `data-first` API\n * HashSet.every(set, (n) => n >= 0) // true\n * ```\n *\n * @returns A boolean once it has evaluated that whole collection fulfill the\n *   Predicate function\n * @see Other `HashSet` elements are {@link module:HashSet.has} {@link module:HashSet.some} {@link module:HashSet.isSubset}\n */\nexport const every = HS.every;\n/**\n * Returns `true` if and only if every element in the this `HashSet` is an\n * element of the second set,\n *\n * **NOTE**: the hash and equal of both sets must be the same.\n *\n * Time complexity analysis is of **`O(n)`**\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category elements\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * const set1 = HashSet.make(0, 1)\n * const set2 = HashSet.make(1, 2)\n * const set3 = HashSet.make(0, 1, 2)\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(set1, HashSet.isSubset(set2)) // false\n * pipe(set1, HashSet.isSubset(set3)) // true\n *\n * // or piped with the pipe function\n * set1.pipe(HashSet.isSubset(set2)) // false\n * set1.pipe(HashSet.isSubset(set3)) // true\n *\n * // or with `data-first` API\n * HashSet.isSubset(set1, set2) // false\n * HashSet.isSubset(set1, set3) // true)\n * ```\n *\n * @see Other `HashSet` elements are {@link module:HashSet.has} {@link module:HashSet.some} {@link module:HashSet.every}\n */\nexport const isSubset = HS.isSubset;\n/**\n * Returns an `IterableIterator` of the values in the `HashSet`.\n *\n * Time complexity: **`O(1)`**\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category getters\n * @example\n *\n * ```ts\n * import { HashSet, pipe } from \"effect\"\n *\n * const numberIterable = pipe(\n *   HashSet.make(0, 1, 1, 2), // HashSet.HashSet<number>\n *   HashSet.values // takes an HashSet<A> and returns an IterableIterator<A>\n * )\n *\n * for (const number of numberIterable) {\n *   console.log(number) // it will logs: 0, 1, 2\n * }\n * ```\n *\n * @see Other `HashSet` getters are {@link module:HashSet.toValues} {@link module:HashSet.size}\n */\nexport const values = HS.values;\n/**\n * Returns an `Array` of the values within the `HashSet`.\n *\n * Time complexity: **`O(n)`** where n is the number of elements in the set\n *\n * @memberof HashSet\n * @since 3.13.0\n * @category getters\n * @example\n *\n * ```ts\n * import { HashSet, pipe } from \"effect\"\n * import { deepStrictEqual } from \"node:assert/strict\"\n *\n * deepStrictEqual(\n *   pipe(\n *     HashSet.make(0, 1, 1, 2), // HashSet<number>\n *     HashSet.toValues // takes an HashSet<A> and returns an Array<A>\n *   ),\n *   Array.of(0, 1, 2)\n * )\n * ```\n *\n * @see Other `HashSet` getters are {@link module:HashSet.values} {@link module:HashSet.size}\n */\nexport const toValues = self => Array.from(values(self));\n/**\n * Calculates the number of values in the `HashSet`.\n *\n * Time complexity: **`O(1)`**\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category getters\n * @example\n *\n * ```ts\n * import { HashSet, pipe } from \"effect\"\n * import assert from \"node:assert/strict\"\n *\n * assert.deepStrictEqual(pipe(HashSet.empty(), HashSet.size), 0)\n *\n * assert.deepStrictEqual(\n *   pipe(HashSet.make(1, 2, 2, 3, 4, 3), HashSet.size),\n *   4\n * )\n * ```\n *\n * @see Other `HashSet` getters are {@link module:HashSet.values} {@link module:HashSet.toValues}\n */\nexport const size = HS.size;\n/**\n * Creates a new mutable version of the `HashSet`\n *\n * When a `HashSet` is mutable, operations like {@link add} and {@link remove}\n * modify the data structure in place instead of creating a new one, which is\n * more efficient when performing multiple operations.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * import { HashSet } from \"effect\"\n * import assert from \"node:assert/strict\"\n *\n * const UPPER_BOUND = 10_000\n *\n * const immutableSet = HashSet.empty<number>().pipe(HashSet.add(0))\n *\n * // Create a mutable version of the immutableSet\n * const mutableSet = HashSet.beginMutation(immutableSet)\n *\n * for (let i = 1; i < UPPER_BOUND; i++) {\n *   // Operations now modify the set in place instead of creating new instances\n *   // This is more efficient when making multiple changes\n *   const pointerToMutableSet = HashSet.add(mutableSet, i)\n *\n *   // the two sets have the same identity, hence `add` is mutating mutableSet and not returning a new HashSet instance\n *   assert(Object.is(mutableSet, pointerToMutableSet))\n *   assert.equal(HashSet.has(mutableSet, i), true) // `i` is in the mutableSet\n *   assert.equal(HashSet.has(immutableSet, i), false) // `i` is not in the immutableSet\n * }\n *\n * const next = UPPER_BOUND + 1\n * // When done, mark the set as immutable again\n * HashSet.endMutation(mutableSet).pipe(\n *   HashSet.add(next) // since this returns a new HashSet, it will not be logged as part of the mutableSet\n * )\n * assert.equal(HashSet.has(mutableSet, next), false)\n *\n * console.log(HashSet.toValues(immutableSet)) // [0]\n * console.log(HashSet.toValues(mutableSet).sort((a, b) => a - b)) // [0, 1, 2, 3, ...rest]\n * ```\n *\n * @see Other `HashSet` mutations are {@link module:HashSet.add} {@link module:HashSet.remove} {@link module:HashSet.toggle} {@link module:HashSet.endMutation} {@link module:HashSet.mutate}\n */\nexport const beginMutation = HS.beginMutation;\n/**\n * Makes the `HashSet` immutable again.\n *\n * After calling `endMutation`, operations like {@link add} and {@link remove}\n * will create new instances of the `HashSet` instead of modifying the existing\n * one.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * import { HashSet } from \"effect\"\n * import assert from \"node:assert/strict\"\n *\n * // Create a mutable set\n * const mutableSet = HashSet.beginMutation(HashSet.empty<number>())\n *\n * // Add some elements to the mutable set\n * HashSet.add(mutableSet, 1)\n * HashSet.add(mutableSet, 2)\n *\n * // Before endMutation, operations modify the set in place\n * const sameSet = HashSet.add(mutableSet, 3)\n * assert(Object.is(mutableSet, sameSet)) // true - same object reference\n * assert.deepStrictEqual(HashSet.toValues(mutableSet).sort(), [1, 2, 3])\n *\n * // Make the set immutable again\n * const immutableSet = HashSet.endMutation(mutableSet)\n *\n * // endMutation returns the same set instance, now made immutable\n * assert(Object.is(mutableSet, immutableSet)) // true - same object reference\n *\n * // After endMutation, operations create new instances\n * const newSet = HashSet.add(immutableSet, 4)\n * assert(!Object.is(immutableSet, newSet)) // false - different object references\n *\n * // The original set remains unchanged\n * assert.deepStrictEqual(HashSet.toValues(immutableSet).sort(), [1, 2, 3])\n *\n * // The new set contains the added element\n * assert.deepStrictEqual(HashSet.toValues(newSet).sort(), [1, 2, 3, 4])\n * ```\n *\n * @see Other `HashSet` mutations are {@link module:HashSet.add} {@link module:HashSet.remove} {@link module:HashSet.toggle} {@link module:HashSet.beginMutation} {@link module:HashSet.mutate}\n */\nexport const endMutation = HS.endMutation;\n/**\n * Mutates the `HashSet` within the context of the provided function.\n *\n * You can consider it a functional abstraction on top of the lower-level\n * mutation primitives of {@link module:HashSet.beginMutation} `->` `mutable\n * context` `->` {@link HashSet.endMutation}.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with data-last, a.k.a. pipeable API\n * pipe(\n *   HashSet.make(1, 2, 3),\n *   HashSet.mutate((set) => {\n *     HashSet.add(set, 4)\n *     HashSet.remove(set, 1)\n *   })\n * )\n *\n * // or piped with the pipe function\n * HashSet.make(1, 2, 3).pipe(\n *   HashSet.mutate((set) => {\n *     HashSet.add(set, 4)\n *     HashSet.remove(set, 1)\n *   })\n * )\n *\n * // or with data-first API\n * HashSet.mutate(HashSet.make(1, 2, 3), (set) => {\n *   HashSet.add(set, 4)\n *   HashSet.remove(set, 1)\n * })\n * ```\n *\n * @see Other `HashSet` mutations are {@link module:HashSet.add} {@link module:HashSet.remove} {@link module:HashSet.toggle} {@link module:HashSet.beginMutation} {@link module:HashSet.endMutation}\n */\nexport const mutate = HS.mutate;\n/**\n * Adds a value to the `HashSet`.\n *\n * Time complexity: **`O(1)`** average\n *\n * @remarks\n * Remember that a `HashSet` is a collection of unique values, so adding a value\n * that already exists in the `HashSet` will not add a duplicate.\n *\n * Remember that HashSet is an immutable data structure, so the `add` function,\n * like all other functions that modify the HashSet, will return a new HashSet\n * with the added value.\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with data-last, a.k.a. pipeable API\n * pipe(HashSet.empty(), HashSet.add(0), HashSet.add(0))\n *\n * // or piped with the pipe function\n * HashSet.empty().pipe(HashSet.add(0))\n *\n * // or with data-first API\n * HashSet.add(HashSet.empty(), 0)\n * ```\n *\n * @see Other `HashSet` mutations are {@link module:HashSet.remove} {@link module:HashSet.toggle} {@link module:HashSet.beginMutation} {@link module:HashSet.endMutation} {@link module:HashSet.mutate}\n */\nexport const add = HS.add;\n/**\n * Removes a value from the `HashSet`.\n *\n * Time complexity: **`O(1)`** average\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(HashSet.make(0, 1, 2), HashSet.remove(0))\n *\n * // or piped with the pipe function\n * HashSet.make(0, 1, 2).pipe(HashSet.remove(0))\n *\n * // or with `data-first` API\n * HashSet.remove(HashSet.make(0, 1, 2), 0)\n * ```\n *\n * @see Other `HashSet` mutations are {@link module:HashSet.add} {@link module:HashSet.toggle} {@link module:HashSet.beginMutation} {@link module:HashSet.endMutation} {@link module:HashSet.mutate}\n */\nexport const remove = HS.remove;\n/**\n * Computes the set difference `(A - B)` between this `HashSet` and the\n * specified `Iterable<A>`.\n *\n * Time complexity: **`O(n)`** where n is the number of elements in the set\n *\n * **NOTE**: the hash and equal of the values in both the set and the iterable\n * must be the same; meaning we cannot compute a difference between a `HashSet\n * of bananas` and a `HashSet of elephants` as they are not the same type and\n * won't implement the Equal trait in the same way.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with data-last, a.k.a. pipeable API\n * pipe(HashSet.make(1, 2, 3), HashSet.difference(HashSet.make(3, 4, 5)))\n *\n * // or piped with the pipe function\n * HashSet.make(1, 2, 3).pipe(HashSet.difference(HashSet.make(3, 4, 5)))\n *\n * // or with data-first API\n * HashSet.difference(HashSet.make(1, 2, 3), HashSet.make(3, 4, 5))\n * ```\n *\n * @see Other `HashSet` operations are {@link module:HashSet.intersection} {@link module:HashSet.union}\n */\nexport const difference = HS.difference;\n/**\n * Returns a `HashSet` of values which are present in both this set and that\n * `Iterable<A>`. Computes set intersection (A ∩ B)\n *\n * Time complexity: **`O(n)`** where n is the number of elements in the smaller\n * set\n *\n * **NOTE**: the hash and equal of the values in both the set and the iterable\n * must be the same.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with data-last, a.k.a. pipeable API\n * pipe(HashSet.make(1, 2, 3), HashSet.intersection(HashSet.make(2, 3, 4)))\n *\n * // or piped with the pipe function\n * HashSet.make(1, 2, 3).pipe(HashSet.intersection(HashSet.make(2, 3, 4)))\n *\n * // or with data-first API\n * HashSet.intersection(HashSet.make(1, 2, 3), HashSet.make(2, 3, 4))\n * ```\n *\n * @see Other `HashSet` operations are {@link module:HashSet.difference} {@link module:HashSet.union}\n */\nexport const intersection = HS.intersection;\n/**\n * Computes the set union `( self ∪ that )` between this `HashSet` and the\n * specified `Iterable<A>`.\n *\n * Time complexity: **`O(n)`** where n is the number of elements in the set\n *\n * **NOTE**: the hash and equal of the values in both the set and the iterable\n * must be the same.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with data-last, a.k.a. pipeable API\n * pipe(HashSet.make(1, 2, 3), HashSet.union(HashSet.make(3, 4, 5)))\n *\n * // or piped with the pipe function\n * HashSet.make(1, 2, 3).pipe(HashSet.union(HashSet.make(3, 4, 5)))\n *\n * // or with data-first API\n * HashSet.union(HashSet.make(1, 2, 3), HashSet.make(3, 4, 5))\n * ```\n *\n * @see Other `HashSet` operations are {@link module:HashSet.difference} {@link module:HashSet.intersection}\n */\nexport const union = HS.union;\n/**\n * Checks if a value is present in the `HashSet`. If it is present, the value\n * will be removed from the `HashSet`, otherwise the value will be added to the\n * `HashSet`.\n *\n * Time complexity: **`O(1)`** average\n *\n * @memberof HashSet\n * @since 2.0.0\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(HashSet.make(0, 1, 2), HashSet.toggle(0))\n *\n * // or piped with the pipe function\n * HashSet.make(0, 1, 2).pipe(HashSet.toggle(0))\n *\n * // or with `data-first` API\n * HashSet.toggle(HashSet.make(0, 1, 2), 0)\n * ```\n *\n * @returns A new `HashSet` where the toggled value is being either added or\n *   removed based on the initial `HashSet` state.\n * @see Other `HashSet` mutations are {@link module:HashSet.add} {@link module:HashSet.remove} {@link module:HashSet.beginMutation} {@link module:HashSet.endMutation} {@link module:HashSet.mutate}\n */\nexport const toggle = HS.toggle;\n/**\n * Maps over the values of the `HashSet` using the specified function.\n *\n * The time complexity is of **`O(n)`**.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category mapping\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   HashSet.make(0, 1, 2), // HashSet.HashSet<number>\n *   HashSet.map(String) // HashSet.HashSet<string>\n * )\n *\n * // or piped with the pipe method\n * HashSet.make(0, 1, 2).pipe(HashSet.map(String))\n *\n * // or with `data-first` API\n * HashSet.map(HashSet.make(0, 1, 2), String)\n * ```\n */\nexport const map = HS.map;\n/**\n * Chains over the values of the `HashSet` using the specified function.\n *\n * The time complexity is of **`O(n)`**.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category sequencing\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   HashSet.make(0, 1, 2), // HashSet.HashSet<number>\n *   HashSet.flatMap((n) => Array.of(String(n))) // HashSet.HashSet<string>\n * )\n *\n * // or piped with the pipe method\n * HashSet.make(0, 1, 2) // HashSet.HashSet<number>\n *   .pipe(\n *     HashSet.flatMap((n) => Array.of(String(n))) // HashSet.HashSet<string>\n *   )\n *\n * // or with `data-first` API\n * HashSet.flatMap(HashSet.make(0, 1, 2), (n) => Array.of(String(n)))\n * ```\n */\nexport const flatMap = HS.flatMap;\n/**\n * Applies the specified function to the values of the `HashSet`.\n *\n * The time complexity is of **`O(n)`**.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category traversing\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(HashSet.make(0, 1, 2), HashSet.forEach(console.log)) // logs: 0 1 2\n *\n * // or piped with the pipe method\n * HashSet.make(0, 1, 2).pipe(HashSet.forEach(console.log)) // logs: 0 1 2\n *\n * // or with `data-first` API\n * HashSet.forEach(HashSet.make(0, 1, 2), console.log) // logs: 0 1 2\n * ```\n */\nexport const forEach = HS.forEach;\n/**\n * Reduces the specified state over the values of the `HashSet`.\n *\n * The time complexity is of **`O(n)`**.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category folding\n * @example\n *\n * ```ts\n * // Syntax\n * import { HashSet, pipe } from \"effect\"\n *\n * const sum = (a: number, b: number): number => a + b\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(HashSet.make(0, 1, 2), HashSet.reduce(0, sum))\n *\n * // or with the pipe method\n * HashSet.make(0, 1, 2).pipe(HashSet.reduce(0, sum))\n *\n * // or with `data-first` API\n * HashSet.reduce(HashSet.make(0, 1, 2), 0, sum)\n * ```\n */\nexport const reduce = HS.reduce;\n/**\n * Filters values out of a `HashSet` using the specified predicate.\n *\n * The time complexity is of **`O(n)`**.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category filtering\n * @example\n *\n * ```ts\n * // Syntax with  Predicate\n * import { HashSet, type Predicate, pipe } from \"effect\"\n *\n * const filterPositiveNumbers: Predicate.Predicate<number> = (n) => n > 0\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   HashSet.make(-2, -1, 0, 1, 2),\n *   HashSet.filter(filterPositiveNumbers)\n * )\n *\n * // or with the pipe method\n * HashSet.make(-2, -1, 0, 1, 2).pipe(HashSet.filter(filterPositiveNumbers))\n *\n * // or with `data-first` API\n * HashSet.filter(HashSet.make(-2, -1, 0, 1, 2), filterPositiveNumbers)\n * ```\n *\n * @example\n *\n * ```ts\n * /// Syntax with Refinement\n * import { HashSet, pipe } from \"effect\"\n *\n * const stringRefinement = (value: unknown): value is string =>\n *   typeof value === \"string\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   HashSet.make(1, \"unos\", 2, \"two\", 3, \"trois\", 4, \"vier\"), // // HashSet.HashSet<number | string>\n *   HashSet.filter(stringRefinement)\n * ) // HashSet.HashSet<string>\n *\n * // or with the pipe method\n * HashSet.make(1, \"unos\", 2, \"two\", 3, \"trois\", 4, \"vier\") // HashSet.HashSet<number | string>\n *   .pipe(HashSet.filter(stringRefinement)) // HashSet.HashSet<string>\n *\n * // or with `data-first` API\n * HashSet.filter(\n *   HashSet.make(1, \"unos\", 2, \"two\", 3, \"trois\", 4, \"vier\"), // HashSet.HashSet<number | string>\n *   stringRefinement\n * ) // HashSet.HashSet<string>\n * ```\n */\nexport const filter = HS.filter;\n/**\n * Partition the values of a `HashSet` using the specified predicate.\n *\n * If a value matches the predicate, it will be placed into the `HashSet` on the\n * right side of the resulting `Tuple`, otherwise the value will be placed into\n * the left side.\n *\n * Time complexity is of **`O(n)`**.\n *\n * @memberof HashSet\n * @since 2.0.0\n * @category partitioning\n * @example\n *\n * ```ts\n * // Syntax with Predicate\n * import { HashSet, pipe, Predicate } from \"effect\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   HashSet.make(0, 1, 2, 3, 4, 5),\n *   HashSet.partition((n) => n % 2 === 0)\n * )\n *\n * // or with the pipe method\n * HashSet.make(0, 1, 2, 3, 4, 5).pipe(\n *   HashSet.partition((n) => n % 2 === 0)\n * )\n *\n * // or with `data-first` API\n * HashSet.partition(HashSet.make(0, 1, 2, 3, 4, 5), (n) => n % 2 === 0)\n * ```\n *\n * @example\n *\n * ```ts\n * // Syntax with Refinement\n * import { HashSet, pipe, Predicate } from \"effect\"\n *\n * const stringRefinement: Predicate.Refinement<string | number, string> = (\n *   value\n * ) => typeof value === \"string\"\n *\n * // with `data-last`, a.k.a. `pipeable` API\n * pipe(\n *   HashSet.make(1, \"unos\", 2, \"two\", 3, \"trois\", 4, \"vier\"),\n *   HashSet.partition(stringRefinement)\n * )\n *\n * // or with the pipe method\n * HashSet.make(1, \"unos\", 2, \"two\", 3, \"trois\", 4, \"vier\").pipe(\n *   HashSet.partition(stringRefinement)\n * )\n *\n * // or with `data-first` API\n * HashSet.partition(\n *   HashSet.make(1, \"unos\", 2, \"two\", 3, \"trois\", 4, \"vier\"),\n *   stringRefinement\n * )\n * ```\n */\nexport const partition = HS.partition;\n//# sourceMappingURL=HashSet.js.map","/**\n * @since 2.0.0\n */\nimport * as Equal from \"./Equal.js\";\nimport * as Dual from \"./Function.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"./Inspectable.js\";\nimport { pipeArguments } from \"./Pipeable.js\";\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/MutableRef\");\nconst MutableRefProto = {\n  [TypeId]: TypeId,\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"MutableRef\",\n      current: toJSON(this.current)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const make = value => {\n  const ref = Object.create(MutableRefProto);\n  ref.current = value;\n  return ref;\n};\n/**\n * @since 2.0.0\n * @category general\n */\nexport const compareAndSet = /*#__PURE__*/Dual.dual(3, (self, oldValue, newValue) => {\n  if (Equal.equals(oldValue, self.current)) {\n    self.current = newValue;\n    return true;\n  }\n  return false;\n});\n/**\n * @since 2.0.0\n * @category numeric\n */\nexport const decrement = self => update(self, n => n - 1);\n/**\n * @since 2.0.0\n * @category numeric\n */\nexport const decrementAndGet = self => updateAndGet(self, n => n - 1);\n/**\n * @since 2.0.0\n * @category general\n */\nexport const get = self => self.current;\n/**\n * @since 2.0.0\n * @category numeric\n */\nexport const getAndDecrement = self => getAndUpdate(self, n => n - 1);\n/**\n * @since 2.0.0\n * @category numeric\n */\nexport const getAndIncrement = self => getAndUpdate(self, n => n + 1);\n/**\n * @since 2.0.0\n * @category general\n */\nexport const getAndSet = /*#__PURE__*/Dual.dual(2, (self, value) => {\n  const ret = self.current;\n  self.current = value;\n  return ret;\n});\n/**\n * @since 2.0.0\n * @category general\n */\nexport const getAndUpdate = /*#__PURE__*/Dual.dual(2, (self, f) => getAndSet(self, f(get(self))));\n/**\n * @since 2.0.0\n * @category numeric\n */\nexport const increment = self => update(self, n => n + 1);\n/**\n * @since 2.0.0\n * @category numeric\n */\nexport const incrementAndGet = self => updateAndGet(self, n => n + 1);\n/**\n * @since 2.0.0\n * @category general\n */\nexport const set = /*#__PURE__*/Dual.dual(2, (self, value) => {\n  self.current = value;\n  return self;\n});\n/**\n * @since 2.0.0\n * @category general\n */\nexport const setAndGet = /*#__PURE__*/Dual.dual(2, (self, value) => {\n  self.current = value;\n  return self.current;\n});\n/**\n * @since 2.0.0\n * @category general\n */\nexport const update = /*#__PURE__*/Dual.dual(2, (self, f) => set(self, f(get(self))));\n/**\n * @since 2.0.0\n * @category general\n */\nexport const updateAndGet = /*#__PURE__*/Dual.dual(2, (self, f) => setAndGet(self, f(get(self))));\n/**\n * @since 2.0.0\n * @category boolean\n */\nexport const toggle = self => update(self, _ => !_);\n//# sourceMappingURL=MutableRef.js.map","import * as Equal from \"../Equal.js\";\nimport { dual, pipe } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as Hash from \"../Hash.js\";\nimport * as HashSet from \"../HashSet.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\";\nimport * as MutableRef from \"../MutableRef.js\";\nimport * as Option from \"../Option.js\";\nimport { hasProperty } from \"../Predicate.js\";\n/** @internal */\nconst FiberIdSymbolKey = \"effect/FiberId\";\n/** @internal */\nexport const FiberIdTypeId = /*#__PURE__*/Symbol.for(FiberIdSymbolKey);\n/** @internal */\nconst OP_NONE = \"None\";\n/** @internal */\nconst OP_RUNTIME = \"Runtime\";\n/** @internal */\nconst OP_COMPOSITE = \"Composite\";\nconst emptyHash = /*#__PURE__*/Hash.string(`${FiberIdSymbolKey}-${OP_NONE}`);\n/** @internal */\nclass None {\n  [FiberIdTypeId] = FiberIdTypeId;\n  _tag = OP_NONE;\n  id = -1;\n  startTimeMillis = -1;\n  [Hash.symbol]() {\n    return emptyHash;\n  }\n  [Equal.symbol](that) {\n    return isFiberId(that) && that._tag === OP_NONE;\n  }\n  toString() {\n    return format(this.toJSON());\n  }\n  toJSON() {\n    return {\n      _id: \"FiberId\",\n      _tag: this._tag\n    };\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n/** @internal */\nclass Runtime {\n  id;\n  startTimeMillis;\n  [FiberIdTypeId] = FiberIdTypeId;\n  _tag = OP_RUNTIME;\n  constructor(id, startTimeMillis) {\n    this.id = id;\n    this.startTimeMillis = startTimeMillis;\n  }\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.string(`${FiberIdSymbolKey}-${this._tag}-${this.id}-${this.startTimeMillis}`));\n  }\n  [Equal.symbol](that) {\n    return isFiberId(that) && that._tag === OP_RUNTIME && this.id === that.id && this.startTimeMillis === that.startTimeMillis;\n  }\n  toString() {\n    return format(this.toJSON());\n  }\n  toJSON() {\n    return {\n      _id: \"FiberId\",\n      _tag: this._tag,\n      id: this.id,\n      startTimeMillis: this.startTimeMillis\n    };\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n/** @internal */\nclass Composite {\n  left;\n  right;\n  [FiberIdTypeId] = FiberIdTypeId;\n  _tag = OP_COMPOSITE;\n  constructor(left, right) {\n    this.left = left;\n    this.right = right;\n  }\n  _hash;\n  [Hash.symbol]() {\n    return pipe(Hash.string(`${FiberIdSymbolKey}-${this._tag}`), Hash.combine(Hash.hash(this.left)), Hash.combine(Hash.hash(this.right)), Hash.cached(this));\n  }\n  [Equal.symbol](that) {\n    return isFiberId(that) && that._tag === OP_COMPOSITE && Equal.equals(this.left, that.left) && Equal.equals(this.right, that.right);\n  }\n  toString() {\n    return format(this.toJSON());\n  }\n  toJSON() {\n    return {\n      _id: \"FiberId\",\n      _tag: this._tag,\n      left: toJSON(this.left),\n      right: toJSON(this.right)\n    };\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n/** @internal */\nexport const none = /*#__PURE__*/new None();\n/** @internal */\nexport const runtime = (id, startTimeMillis) => {\n  return new Runtime(id, startTimeMillis);\n};\n/** @internal */\nexport const composite = (left, right) => {\n  return new Composite(left, right);\n};\n/** @internal */\nexport const isFiberId = self => hasProperty(self, FiberIdTypeId);\n/** @internal */\nexport const isNone = self => {\n  return self._tag === OP_NONE || pipe(toSet(self), HashSet.every(id => isNone(id)));\n};\n/** @internal */\nexport const isRuntime = self => {\n  return self._tag === OP_RUNTIME;\n};\n/** @internal */\nexport const isComposite = self => {\n  return self._tag === OP_COMPOSITE;\n};\n/** @internal */\nexport const combine = /*#__PURE__*/dual(2, (self, that) => {\n  if (self._tag === OP_NONE) {\n    return that;\n  }\n  if (that._tag === OP_NONE) {\n    return self;\n  }\n  return new Composite(self, that);\n});\n/** @internal */\nexport const combineAll = fiberIds => {\n  return pipe(fiberIds, HashSet.reduce(none, (a, b) => combine(b)(a)));\n};\n/** @internal */\nexport const getOrElse = /*#__PURE__*/dual(2, (self, that) => isNone(self) ? that : self);\n/** @internal */\nexport const ids = self => {\n  switch (self._tag) {\n    case OP_NONE:\n      {\n        return HashSet.empty();\n      }\n    case OP_RUNTIME:\n      {\n        return HashSet.make(self.id);\n      }\n    case OP_COMPOSITE:\n      {\n        return pipe(ids(self.left), HashSet.union(ids(self.right)));\n      }\n  }\n};\nconst _fiberCounter = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Fiber/Id/_fiberCounter\"), () => MutableRef.make(0));\n/** @internal */\nexport const make = (id, startTimeSeconds) => {\n  return new Runtime(id, startTimeSeconds);\n};\n/** @internal */\nexport const threadName = self => {\n  const identifiers = Array.from(ids(self)).map(n => `#${n}`).join(\",\");\n  return identifiers;\n};\n/** @internal */\nexport const toOption = self => {\n  const fiberIds = toSet(self);\n  if (HashSet.size(fiberIds) === 0) {\n    return Option.none();\n  }\n  let first = true;\n  let acc;\n  for (const fiberId of fiberIds) {\n    if (first) {\n      acc = fiberId;\n      first = false;\n    } else {\n      // @ts-expect-error\n      acc = pipe(acc, combine(fiberId));\n    }\n  }\n  // @ts-expect-error\n  return Option.some(acc);\n};\n/** @internal */\nexport const toSet = self => {\n  switch (self._tag) {\n    case OP_NONE:\n      {\n        return HashSet.empty();\n      }\n    case OP_RUNTIME:\n      {\n        return HashSet.make(self);\n      }\n    case OP_COMPOSITE:\n      {\n        return pipe(toSet(self.left), HashSet.union(toSet(self.right)));\n      }\n  }\n};\n/** @internal */\nexport const unsafeMake = () => {\n  const id = MutableRef.get(_fiberCounter);\n  pipe(_fiberCounter, MutableRef.set(id + 1));\n  return new Runtime(id, Date.now());\n};\n//# sourceMappingURL=fiberId.js.map","import * as internal from \"./internal/fiberId.js\";\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const FiberIdTypeId = internal.FiberIdTypeId;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const none = internal.none;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const runtime = internal.runtime;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const composite = internal.composite;\n/**\n * Returns `true` if the specified unknown value is a `FiberId`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isFiberId = internal.isFiberId;\n/**\n * Returns `true` if the `FiberId` is a `None`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isNone = internal.isNone;\n/**\n * Returns `true` if the `FiberId` is a `Runtime`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isRuntime = internal.isRuntime;\n/**\n * Returns `true` if the `FiberId` is a `Composite`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isComposite = internal.isComposite;\n/**\n * Combine two `FiberId`s.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const combine = internal.combine;\n/**\n * Combines a set of `FiberId`s into a single `FiberId`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const combineAll = internal.combineAll;\n/**\n * Returns this `FiberId` if it is not `None`, otherwise returns that `FiberId`.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const getOrElse = internal.getOrElse;\n/**\n * Get the set of identifiers for this `FiberId`.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const ids = internal.ids;\n/**\n * Creates a new `FiberId`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make = internal.make;\n/**\n * Creates a string representing the name of the current thread of execution\n * represented by the specified `FiberId`.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const threadName = internal.threadName;\n/**\n * Convert a `FiberId` into an `Option<FiberId>`.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const toOption = internal.toOption;\n/**\n * Convert a `FiberId` into a `HashSet<FiberId>`.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const toSet = internal.toSet;\n/**\n * Unsafely creates a new `FiberId`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeMake = internal.unsafeMake;\n//# sourceMappingURL=FiberId.js.map","/**\n * @since 2.0.0\n */\nimport * as HM from \"./internal/hashMap.js\";\nimport * as keySet_ from \"./internal/hashMap/keySet.js\";\nconst TypeId = HM.HashMapTypeId;\n/**\n * @since 2.0.0\n * @category refinements\n */\nexport const isHashMap = HM.isHashMap;\n/**\n * Creates a new `HashMap`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const empty = HM.empty;\n/**\n * Constructs a new `HashMap` from an array of key/value pairs.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make = HM.make;\n/**\n * Creates a new `HashMap` from an iterable collection of key/value pairs.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fromIterable = HM.fromIterable;\n/**\n * Checks if the `HashMap` contains any entries.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const isEmpty = HM.isEmpty;\n/**\n * Safely lookup the value for the specified key in the `HashMap` using the\n * internal hashing function.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const get = HM.get;\n/**\n * Lookup the value for the specified key in the `HashMap` using a custom hash.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const getHash = HM.getHash;\n/**\n * Unsafely lookup the value for the specified key in the `HashMap` using the\n * internal hashing function.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeGet = HM.unsafeGet;\n/**\n * Checks if the specified key has an entry in the `HashMap`.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const has = HM.has;\n/**\n * Checks if the specified key has an entry in the `HashMap` using a custom\n * hash.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const hasHash = HM.hasHash;\n/**\n * Sets the specified key to the specified value using the internal hashing\n * function.\n *\n * @since 2.0.0\n */\nexport const set = HM.set;\n/**\n * Returns an `IterableIterator` of the keys within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const keys = HM.keys;\n/**\n * Returns a `HashSet` of keys within the `HashMap`.\n *\n * @since 2.0.0\n * @category getter\n */\nexport const keySet = keySet_.keySet;\n/**\n * Returns an `IterableIterator` of the values within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const values = HM.values;\n/**\n * Returns an `Array` of the values within the `HashMap`.\n *\n * @since 3.13.0\n * @category getters\n */\nexport const toValues = self => Array.from(values(self));\n/**\n * Returns an `IterableIterator` of the entries within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const entries = HM.entries;\n/**\n * Returns an `Array<[K, V]>` of the entries within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const toEntries = self => Array.from(entries(self));\n/**\n * Returns the number of entries within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const size = HM.size;\n/**\n * Marks the `HashMap` as mutable.\n *\n * @since 2.0.0\n */\nexport const beginMutation = HM.beginMutation;\n/**\n * Marks the `HashMap` as immutable.\n *\n * @since 2.0.0\n */\nexport const endMutation = HM.endMutation;\n/**\n * Mutates the `HashMap` within the context of the provided function.\n *\n * @since 2.0.0\n */\nexport const mutate = HM.mutate;\n/**\n * Set or remove the specified key in the `HashMap` using the specified\n * update function. The value of the specified key will be computed using the\n * provided hash.\n *\n * The update function will be invoked with the current value of the key if it\n * exists, or `None` if no such value exists.\n *\n * @since 2.0.0\n */\nexport const modifyAt = HM.modifyAt;\n/**\n * Alter the value of the specified key in the `HashMap` using the specified\n * update function. The value of the specified key will be computed using the\n * provided hash.\n *\n * The update function will be invoked with the current value of the key if it\n * exists, or `None` if no such value exists.\n *\n * This function will always either update or insert a value into the `HashMap`.\n *\n * @since 2.0.0\n */\nexport const modifyHash = HM.modifyHash;\n/**\n * Updates the value of the specified key within the `HashMap` if it exists.\n *\n * @since 2.0.0\n */\nexport const modify = HM.modify;\n/**\n * Performs a union of this `HashMap` and that `HashMap`.\n *\n * @since 2.0.0\n */\nexport const union = HM.union;\n/**\n * Remove the entry for the specified key in the `HashMap` using the internal\n * hashing function.\n *\n * @since 2.0.0\n */\nexport const remove = HM.remove;\n/**\n * Removes all entries in the `HashMap` which have the specified keys.\n *\n * @since 2.0.0\n */\nexport const removeMany = HM.removeMany;\n/**\n * Maps over the entries of the `HashMap` using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const map = HM.map;\n/**\n * Chains over the entries of the `HashMap` using the specified function.\n *\n * **NOTE**: the hash and equal of both maps have to be the same.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatMap = HM.flatMap;\n/**\n * Applies the specified function to the entries of the `HashMap`.\n *\n * @since 2.0.0\n * @category traversing\n */\nexport const forEach = HM.forEach;\n/**\n * Reduces the specified state over the entries of the `HashMap`.\n *\n * @since 2.0.0\n * @category folding\n */\nexport const reduce = HM.reduce;\n/**\n * Filters entries out of a `HashMap` using the specified predicate.\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const filter = HM.filter;\n/**\n * Filters out `None` values from a `HashMap` of `Options`s.\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const compact = HM.compact;\n/**\n * Maps over the entries of the `HashMap` using the specified partial function\n * and filters out `None` values.\n *\n * @since 2.0.0\n * @category filtering\n */\nexport const filterMap = HM.filterMap;\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirst = HM.findFirst;\n/**\n * Checks if any entry in a hashmap meets a specific condition.\n *\n * @since 3.13.0\n * @category elements\n */\nexport const some = HM.some;\n/**\n * Checks if all entries in a hashmap meets a specific condition.\n *\n * @param self - The hashmap to check.\n * @param predicate - The condition to test entries (value, key).\n *\n * @since 3.14.0\n * @category elements\n */\nexport const every = HM.every;\n//# sourceMappingURL=HashMap.js.map","/**\n * A data type for immutable linked lists representing ordered collections of elements of type `A`.\n *\n * This data type is optimal for last-in-first-out (LIFO), stack-like access patterns. If you need another access pattern, for example, random access or FIFO, consider using a collection more suited to this than `List`.\n *\n * **Performance**\n *\n * - Time: `List` has `O(1)` prepend and head/tail access. Most other operations are `O(n)` on the number of elements in the list. This includes the index-based lookup of elements, `length`, `append` and `reverse`.\n * - Space: `List` implements structural sharing of the tail list. This means that many operations are either zero- or constant-memory cost.\n *\n * @since 2.0.0\n */\n/**\n * This file is ported from\n *\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n */\nimport * as Arr from \"./Array.js\";\nimport * as Chunk from \"./Chunk.js\";\nimport * as Either from \"./Either.js\";\nimport * as Equal from \"./Equal.js\";\nimport * as Equivalence from \"./Equivalence.js\";\nimport { dual, identity, unsafeCoerce } from \"./Function.js\";\nimport * as Hash from \"./Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"./Inspectable.js\";\nimport * as Option from \"./Option.js\";\nimport { pipeArguments } from \"./Pipeable.js\";\nimport { hasProperty } from \"./Predicate.js\";\n/**\n * @since 2.0.0\n * @category symbol\n */\nexport const TypeId = /*#__PURE__*/Symbol.for(\"effect/List\");\n/**\n * Converts the specified `List` to an `Array`.\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const toArray = self => Arr.fromIterable(self);\n/**\n * @category equivalence\n * @since 2.0.0\n */\nexport const getEquivalence = isEquivalent => Equivalence.mapInput(Arr.getEquivalence(isEquivalent), toArray);\nconst _equivalence = /*#__PURE__*/getEquivalence(Equal.equals);\nconst ConsProto = {\n  [TypeId]: TypeId,\n  _tag: \"Cons\",\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"List\",\n      _tag: \"Cons\",\n      values: toArray(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  [Equal.symbol](that) {\n    return isList(that) && this._tag === that._tag && _equivalence(this, that);\n  },\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.array(toArray(this)));\n  },\n  [Symbol.iterator]() {\n    let done = false;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let self = this;\n    return {\n      next() {\n        if (done) {\n          return this.return();\n        }\n        if (self._tag === \"Nil\") {\n          done = true;\n          return this.return();\n        }\n        const value = self.head;\n        self = self.tail;\n        return {\n          done,\n          value\n        };\n      },\n      return(value) {\n        if (!done) {\n          done = true;\n        }\n        return {\n          done: true,\n          value\n        };\n      }\n    };\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeCons = (head, tail) => {\n  const cons = Object.create(ConsProto);\n  cons.head = head;\n  cons.tail = tail;\n  return cons;\n};\nconst NilHash = /*#__PURE__*/Hash.string(\"Nil\");\nconst NilProto = {\n  [TypeId]: TypeId,\n  _tag: \"Nil\",\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"List\",\n      _tag: \"Nil\"\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  [Hash.symbol]() {\n    return NilHash;\n  },\n  [Equal.symbol](that) {\n    return isList(that) && this._tag === that._tag;\n  },\n  [Symbol.iterator]() {\n    return {\n      next() {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst _Nil = /*#__PURE__*/Object.create(NilProto);\n/**\n * Returns `true` if the specified value is a `List`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isList = u => hasProperty(u, TypeId);\n/**\n * Returns `true` if the specified value is a `List.Nil<A>`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isNil = self => self._tag === \"Nil\";\n/**\n * Returns `true` if the specified value is a `List.Cons<A>`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isCons = self => self._tag === \"Cons\";\n/**\n * Returns the number of elements contained in the specified `List`\n *\n * @since 2.0.0\n * @category getters\n */\nexport const size = self => {\n  let these = self;\n  let len = 0;\n  while (!isNil(these)) {\n    len += 1;\n    these = these.tail;\n  }\n  return len;\n};\n/**\n * Constructs a new empty `List<A>`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const nil = () => _Nil;\n/**\n * Constructs a new `List.Cons<A>` from the specified `head` and `tail` values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const cons = (head, tail) => makeCons(head, tail);\n/**\n * Constructs a new empty `List<A>`.\n *\n * Alias of {@link nil}.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const empty = nil;\n/**\n * Constructs a new `List<A>` from the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const of = value => makeCons(value, _Nil);\n/**\n * Creates a new `List` from an iterable collection of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fromIterable = prefix => {\n  const iterator = prefix[Symbol.iterator]();\n  let next;\n  if ((next = iterator.next()) && !next.done) {\n    const result = makeCons(next.value, _Nil);\n    let curr = result;\n    while ((next = iterator.next()) && !next.done) {\n      const temp = makeCons(next.value, _Nil);\n      curr.tail = temp;\n      curr = temp;\n    }\n    return result;\n  } else {\n    return _Nil;\n  }\n};\n/**\n * Constructs a new `List<A>` from the specified values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make = (...elements) => fromIterable(elements);\n/**\n * Appends the specified element to the end of the `List`, creating a new `Cons`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const append = /*#__PURE__*/dual(2, (self, element) => appendAll(self, of(element)));\n/**\n * Concatenates two lists, combining their elements.\n * If either list is non-empty, the result is also a non-empty list.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { List } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   List.make(1, 2).pipe(List.appendAll(List.make(\"a\", \"b\")), List.toArray),\n *   [1, 2, \"a\", \"b\"]\n * )\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendAll = /*#__PURE__*/dual(2, (self, that) => prependAll(that, self));\n/**\n * Prepends the specified element to the beginning of the list.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prepend = /*#__PURE__*/dual(2, (self, element) => cons(element, self));\n/**\n * Prepends the specified prefix list to the beginning of the specified list.\n * If either list is non-empty, the result is also a non-empty list.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { List } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   List.make(1, 2).pipe(List.prependAll(List.make(\"a\", \"b\")), List.toArray),\n *   [\"a\", \"b\", 1, 2]\n * )\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prependAll = /*#__PURE__*/dual(2, (self, prefix) => {\n  if (isNil(self)) {\n    return prefix;\n  } else if (isNil(prefix)) {\n    return self;\n  } else {\n    const result = makeCons(prefix.head, self);\n    let curr = result;\n    let that = prefix.tail;\n    while (!isNil(that)) {\n      const temp = makeCons(that.head, self);\n      curr.tail = temp;\n      curr = temp;\n      that = that.tail;\n    }\n    return result;\n  }\n});\n/**\n * Prepends the specified prefix list (in reverse order) to the beginning of the\n * specified list.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prependAllReversed = /*#__PURE__*/dual(2, (self, prefix) => {\n  let out = self;\n  let pres = prefix;\n  while (isCons(pres)) {\n    out = makeCons(pres.head, out);\n    pres = pres.tail;\n  }\n  return out;\n});\n/**\n * Drops the first `n` elements from the specified list.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const drop = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return self;\n  }\n  if (n >= size(self)) {\n    return _Nil;\n  }\n  let these = self;\n  let i = 0;\n  while (!isNil(these) && i < n) {\n    these = these.tail;\n    i += 1;\n  }\n  return these;\n});\n/**\n * Check if a predicate holds true for every `List` element.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const every = /*#__PURE__*/dual(2, (self, refinement) => {\n  for (const a of self) {\n    if (!refinement(a)) {\n      return false;\n    }\n  }\n  return true;\n});\n/**\n * Check if a predicate holds true for some `List` element.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const some = /*#__PURE__*/dual(2, (self, predicate) => {\n  let these = self;\n  while (!isNil(these)) {\n    if (predicate(these.head)) {\n      return true;\n    }\n    these = these.tail;\n  }\n  return false;\n});\n/**\n * Filters a list using the specified predicate.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const filter = /*#__PURE__*/dual(2, (self, predicate) => noneIn(self, predicate, false));\n// everything seen so far is not included\nconst noneIn = (self, predicate, isFlipped) => {\n  while (true) {\n    if (isNil(self)) {\n      return _Nil;\n    } else {\n      if (predicate(self.head) !== isFlipped) {\n        return allIn(self, self.tail, predicate, isFlipped);\n      } else {\n        self = self.tail;\n      }\n    }\n  }\n};\n// everything from 'start' is included, if everything from this point is in we can return the origin\n// start otherwise if we discover an element that is out we must create a new partial list.\nconst allIn = (start, remaining, predicate, isFlipped) => {\n  while (true) {\n    if (isNil(remaining)) {\n      return start;\n    } else {\n      if (predicate(remaining.head) !== isFlipped) {\n        remaining = remaining.tail;\n      } else {\n        return partialFill(start, remaining, predicate, isFlipped);\n      }\n    }\n  }\n};\n// we have seen elements that should be included then one that should be excluded, start building\nconst partialFill = (origStart, firstMiss, predicate, isFlipped) => {\n  const newHead = makeCons(unsafeHead(origStart), _Nil);\n  let toProcess = unsafeTail(origStart);\n  let currentLast = newHead;\n  // we know that all elements are :: until at least firstMiss.tail\n  while (!(toProcess === firstMiss)) {\n    const newElem = makeCons(unsafeHead(toProcess), _Nil);\n    currentLast.tail = newElem;\n    currentLast = unsafeCoerce(newElem);\n    toProcess = unsafeCoerce(toProcess.tail);\n  }\n  // at this point newHead points to a list which is a duplicate of all the 'in' elements up to the first miss.\n  // currentLast is the last element in that list.\n  // now we are going to try and share as much of the tail as we can, only moving elements across when we have to.\n  let next = firstMiss.tail;\n  let nextToCopy = unsafeCoerce(next); // the next element we would need to copy to our list if we cant share.\n  while (!isNil(next)) {\n    // generally recommended is next.isNonEmpty but this incurs an extra method call.\n    const head = unsafeHead(next);\n    if (predicate(head) !== isFlipped) {\n      next = next.tail;\n    } else {\n      // its not a match - do we have outstanding elements?\n      while (!(nextToCopy === next)) {\n        const newElem = makeCons(unsafeHead(nextToCopy), _Nil);\n        currentLast.tail = newElem;\n        currentLast = newElem;\n        nextToCopy = unsafeCoerce(nextToCopy.tail);\n      }\n      nextToCopy = unsafeCoerce(next.tail);\n      next = next.tail;\n    }\n  }\n  // we have remaining elements - they are unchanged attach them to the end\n  if (!isNil(nextToCopy)) {\n    currentLast.tail = nextToCopy;\n  }\n  return newHead;\n};\n/**\n * Filters and maps a list using the specified partial function. The resulting\n * list may be smaller than the input list due to the possibility of the partial\n * function not being defined for some elements.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const filterMap = /*#__PURE__*/dual(2, (self, f) => {\n  const bs = [];\n  for (const a of self) {\n    const oa = f(a);\n    if (Option.isSome(oa)) {\n      bs.push(oa.value);\n    }\n  }\n  return fromIterable(bs);\n});\n/**\n * Removes all `None` values from the specified list.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const compact = self => filterMap(self, identity);\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirst = /*#__PURE__*/dual(2, (self, predicate) => {\n  let these = self;\n  while (!isNil(these)) {\n    if (predicate(these.head)) {\n      return Option.some(these.head);\n    }\n    these = these.tail;\n  }\n  return Option.none();\n});\n/**\n * Applies a function to each element in a list and returns a new list containing the concatenated mapped elements.\n *\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  let rest = self;\n  let head = undefined;\n  let tail = undefined;\n  while (!isNil(rest)) {\n    let bs = f(rest.head);\n    while (!isNil(bs)) {\n      const next = makeCons(bs.head, _Nil);\n      if (tail === undefined) {\n        head = next;\n      } else {\n        tail.tail = next;\n      }\n      tail = next;\n      bs = bs.tail;\n    }\n    rest = rest.tail;\n  }\n  if (head === undefined) {\n    return _Nil;\n  }\n  return head;\n});\n/**\n * Applies the specified function to each element of the `List`.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const forEach = /*#__PURE__*/dual(2, (self, f) => {\n  let these = self;\n  while (!isNil(these)) {\n    f(these.head);\n    these = these.tail;\n  }\n});\n/**\n * Returns the first element of the specified list, or `None` if the list is\n * empty.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const head = self => isNil(self) ? Option.none() : Option.some(self.head);\n/**\n * Returns the last element of the specified list, or `None` if the list is\n * empty.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const last = self => isNil(self) ? Option.none() : Option.some(unsafeLast(self));\n/**\n * Applies the specified mapping function to each element of the list.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => {\n  if (isNil(self)) {\n    return self;\n  } else {\n    let i = 0;\n    const head = makeCons(f(self.head, i++), _Nil);\n    let nextHead = head;\n    let rest = self.tail;\n    while (!isNil(rest)) {\n      const next = makeCons(f(rest.head, i++), _Nil);\n      nextHead.tail = next;\n      nextHead = next;\n      rest = rest.tail;\n    }\n    return head;\n  }\n});\n/**\n * Partition a list into two lists, where the first list contains all elements\n * that did not satisfy the specified predicate, and the second list contains\n * all elements that did satisfy the specified predicate.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const partition = /*#__PURE__*/dual(2, (self, predicate) => {\n  const left = [];\n  const right = [];\n  for (const a of self) {\n    if (predicate(a)) {\n      right.push(a);\n    } else {\n      left.push(a);\n    }\n  }\n  return [fromIterable(left), fromIterable(right)];\n});\n/**\n * Partition a list into two lists, where the first list contains all elements\n * for which the specified function returned a `Left`, and the second list\n * contains all elements for which the specified function returned a `Right`.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const partitionMap = /*#__PURE__*/dual(2, (self, f) => {\n  const left = [];\n  const right = [];\n  for (const a of self) {\n    const e = f(a);\n    if (Either.isLeft(e)) {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n  return [fromIterable(left), fromIterable(right)];\n});\n/**\n * Folds over the elements of the list using the specified function, using the\n * specified initial value.\n *\n * @since 2.0.0\n * @category folding\n */\nexport const reduce = /*#__PURE__*/dual(3, (self, zero, f) => {\n  let acc = zero;\n  let these = self;\n  while (!isNil(these)) {\n    acc = f(acc, these.head);\n    these = these.tail;\n  }\n  return acc;\n});\n/**\n * Folds over the elements of the list using the specified function, beginning\n * with the last element of the list, using the specified initial value.\n *\n * @since 2.0.0\n * @category folding\n */\nexport const reduceRight = /*#__PURE__*/dual(3, (self, zero, f) => {\n  let acc = zero;\n  let these = reverse(self);\n  while (!isNil(these)) {\n    acc = f(acc, these.head);\n    these = these.tail;\n  }\n  return acc;\n});\n/**\n * Returns a new list with the elements of the specified list in reverse order.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const reverse = self => {\n  let result = empty();\n  let these = self;\n  while (!isNil(these)) {\n    result = prepend(result, these.head);\n    these = these.tail;\n  }\n  return result;\n};\n/**\n * Splits the specified list into two lists at the specified index.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const splitAt = /*#__PURE__*/dual(2, (self, n) => [take(self, n), drop(self, n)]);\n/**\n * Returns the tail of the specified list, or `None` if the list is empty.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const tail = self => isNil(self) ? Option.none() : Option.some(self.tail);\n/**\n * Takes the specified number of elements from the beginning of the specified\n * list.\n *\n * @since 2.0.0\n * @category combinators\n */\nexport const take = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return _Nil;\n  }\n  if (n >= size(self)) {\n    return self;\n  }\n  let these = make(unsafeHead(self));\n  let current = unsafeTail(self);\n  for (let i = 1; i < n; i++) {\n    these = makeCons(unsafeHead(current), these);\n    current = unsafeTail(current);\n  }\n  return reverse(these);\n});\n/**\n * Converts the specified `List` to a `Chunk`.\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const toChunk = self => Chunk.fromIterable(self);\nconst getExpectedListToBeNonEmptyErrorMessage = \"Expected List to be non-empty\";\n/**\n * Unsafely returns the first element of the specified `List`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeHead = self => {\n  if (isNil(self)) {\n    throw new Error(getExpectedListToBeNonEmptyErrorMessage);\n  }\n  return self.head;\n};\n/**\n * Unsafely returns the last element of the specified `List`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeLast = self => {\n  if (isNil(self)) {\n    throw new Error(getExpectedListToBeNonEmptyErrorMessage);\n  }\n  let these = self;\n  let scout = self.tail;\n  while (!isNil(scout)) {\n    these = scout;\n    scout = scout.tail;\n  }\n  return these.head;\n};\n/**\n * Unsafely returns the tail of the specified `List`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeTail = self => {\n  if (isNil(self)) {\n    throw new Error(getExpectedListToBeNonEmptyErrorMessage);\n  }\n  return self.tail;\n};\n//# sourceMappingURL=List.js.map","import * as Equal from \"../Equal.js\";\nimport * as Hash from \"../Hash.js\";\nimport { StructuralPrototype } from \"./effectable.js\";\n/** @internal */\nexport const ArrayProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(Array.prototype), {\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.array(this));\n  },\n  [Equal.symbol](that) {\n    if (Array.isArray(that) && this.length === that.length) {\n      return this.every((v, i) => Equal.equals(v, that[i]));\n    } else {\n      return false;\n    }\n  }\n});\n/** @internal */\nexport const Structural = /*#__PURE__*/function () {\n  function Structural(args) {\n    if (args) {\n      Object.assign(this, args);\n    }\n  }\n  Structural.prototype = StructuralPrototype;\n  return Structural;\n}();\n/** @internal */\nexport const struct = as => Object.assign(Object.create(StructuralPrototype), as);\n//# sourceMappingURL=data.js.map","import * as Chunk from \"../../Chunk.js\";\nimport * as Equal from \"../../Equal.js\";\nimport * as Dual from \"../../Function.js\";\nimport { makeContext } from \"../context.js\";\nimport { Structural } from \"../data.js\";\n/** @internal */\nexport const ContextPatchTypeId = /*#__PURE__*/Symbol.for(\"effect/DifferContextPatch\");\nfunction variance(a) {\n  return a;\n}\n/** @internal */\nconst PatchProto = {\n  ...Structural.prototype,\n  [ContextPatchTypeId]: {\n    _Value: variance,\n    _Patch: variance\n  }\n};\nconst EmptyProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Empty\"\n});\nconst _empty = /*#__PURE__*/Object.create(EmptyProto);\n/**\n * @internal\n */\nexport const empty = () => _empty;\nconst AndThenProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"AndThen\"\n});\nconst makeAndThen = (first, second) => {\n  const o = Object.create(AndThenProto);\n  o.first = first;\n  o.second = second;\n  return o;\n};\nconst AddServiceProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"AddService\"\n});\nconst makeAddService = (key, service) => {\n  const o = Object.create(AddServiceProto);\n  o.key = key;\n  o.service = service;\n  return o;\n};\nconst RemoveServiceProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"RemoveService\"\n});\nconst makeRemoveService = key => {\n  const o = Object.create(RemoveServiceProto);\n  o.key = key;\n  return o;\n};\nconst UpdateServiceProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"UpdateService\"\n});\nconst makeUpdateService = (key, update) => {\n  const o = Object.create(UpdateServiceProto);\n  o.key = key;\n  o.update = update;\n  return o;\n};\n/** @internal */\nexport const diff = (oldValue, newValue) => {\n  const missingServices = new Map(oldValue.unsafeMap);\n  let patch = empty();\n  for (const [tag, newService] of newValue.unsafeMap.entries()) {\n    if (missingServices.has(tag)) {\n      const old = missingServices.get(tag);\n      missingServices.delete(tag);\n      if (!Equal.equals(old, newService)) {\n        patch = combine(makeUpdateService(tag, () => newService))(patch);\n      }\n    } else {\n      missingServices.delete(tag);\n      patch = combine(makeAddService(tag, newService))(patch);\n    }\n  }\n  for (const [tag] of missingServices.entries()) {\n    patch = combine(makeRemoveService(tag))(patch);\n  }\n  return patch;\n};\n/** @internal */\nexport const combine = /*#__PURE__*/Dual.dual(2, (self, that) => makeAndThen(self, that));\n/** @internal */\nexport const patch = /*#__PURE__*/Dual.dual(2, (self, context) => {\n  if (self._tag === \"Empty\") {\n    return context;\n  }\n  let wasServiceUpdated = false;\n  let patches = Chunk.of(self);\n  const updatedContext = new Map(context.unsafeMap);\n  while (Chunk.isNonEmpty(patches)) {\n    const head = Chunk.headNonEmpty(patches);\n    const tail = Chunk.tailNonEmpty(patches);\n    switch (head._tag) {\n      case \"Empty\":\n        {\n          patches = tail;\n          break;\n        }\n      case \"AddService\":\n        {\n          updatedContext.set(head.key, head.service);\n          patches = tail;\n          break;\n        }\n      case \"AndThen\":\n        {\n          patches = Chunk.prepend(Chunk.prepend(tail, head.second), head.first);\n          break;\n        }\n      case \"RemoveService\":\n        {\n          updatedContext.delete(head.key);\n          patches = tail;\n          break;\n        }\n      case \"UpdateService\":\n        {\n          updatedContext.set(head.key, head.update(updatedContext.get(head.key)));\n          wasServiceUpdated = true;\n          patches = tail;\n          break;\n        }\n    }\n  }\n  if (!wasServiceUpdated) {\n    return makeContext(updatedContext);\n  }\n  const map = new Map();\n  for (const [tag] of context.unsafeMap) {\n    if (updatedContext.has(tag)) {\n      map.set(tag, updatedContext.get(tag));\n      updatedContext.delete(tag);\n    }\n  }\n  for (const [tag, s] of updatedContext) {\n    map.set(tag, s);\n  }\n  return makeContext(map);\n});\n//# sourceMappingURL=contextPatch.js.map","import * as Chunk from \"../../Chunk.js\";\nimport * as Dual from \"../../Function.js\";\nimport * as HashSet from \"../../HashSet.js\";\nimport { Structural } from \"../data.js\";\n/** @internal */\nexport const HashSetPatchTypeId = /*#__PURE__*/Symbol.for(\"effect/DifferHashSetPatch\");\nfunction variance(a) {\n  return a;\n}\n/** @internal */\nconst PatchProto = {\n  ...Structural.prototype,\n  [HashSetPatchTypeId]: {\n    _Value: variance,\n    _Key: variance,\n    _Patch: variance\n  }\n};\nconst EmptyProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Empty\"\n});\nconst _empty = /*#__PURE__*/Object.create(EmptyProto);\n/** @internal */\nexport const empty = () => _empty;\nconst AndThenProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"AndThen\"\n});\n/** @internal */\nexport const makeAndThen = (first, second) => {\n  const o = Object.create(AndThenProto);\n  o.first = first;\n  o.second = second;\n  return o;\n};\nconst AddProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Add\"\n});\n/** @internal */\nexport const makeAdd = value => {\n  const o = Object.create(AddProto);\n  o.value = value;\n  return o;\n};\nconst RemoveProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Remove\"\n});\n/** @internal */\nexport const makeRemove = value => {\n  const o = Object.create(RemoveProto);\n  o.value = value;\n  return o;\n};\n/** @internal */\nexport const diff = (oldValue, newValue) => {\n  const [removed, patch] = HashSet.reduce([oldValue, empty()], ([set, patch], value) => {\n    if (HashSet.has(value)(set)) {\n      return [HashSet.remove(value)(set), patch];\n    }\n    return [set, combine(makeAdd(value))(patch)];\n  })(newValue);\n  return HashSet.reduce(patch, (patch, value) => combine(makeRemove(value))(patch))(removed);\n};\n/** @internal */\nexport const combine = /*#__PURE__*/Dual.dual(2, (self, that) => makeAndThen(self, that));\n/** @internal */\nexport const patch = /*#__PURE__*/Dual.dual(2, (self, oldValue) => {\n  if (self._tag === \"Empty\") {\n    return oldValue;\n  }\n  let set = oldValue;\n  let patches = Chunk.of(self);\n  while (Chunk.isNonEmpty(patches)) {\n    const head = Chunk.headNonEmpty(patches);\n    const tail = Chunk.tailNonEmpty(patches);\n    switch (head._tag) {\n      case \"Empty\":\n        {\n          patches = tail;\n          break;\n        }\n      case \"AndThen\":\n        {\n          patches = Chunk.prepend(head.first)(Chunk.prepend(head.second)(tail));\n          break;\n        }\n      case \"Add\":\n        {\n          set = HashSet.add(head.value)(set);\n          patches = tail;\n          break;\n        }\n      case \"Remove\":\n        {\n          set = HashSet.remove(head.value)(set);\n          patches = tail;\n        }\n    }\n  }\n  return set;\n});\n//# sourceMappingURL=hashSetPatch.js.map","import * as Arr from \"../../Array.js\";\nimport * as Equal from \"../../Equal.js\";\nimport * as Dual from \"../../Function.js\";\nimport * as Data from \"../data.js\";\n/** @internal */\nexport const ReadonlyArrayPatchTypeId = /*#__PURE__*/Symbol.for(\"effect/DifferReadonlyArrayPatch\");\nfunction variance(a) {\n  return a;\n}\nconst PatchProto = {\n  ...Data.Structural.prototype,\n  [ReadonlyArrayPatchTypeId]: {\n    _Value: variance,\n    _Patch: variance\n  }\n};\nconst EmptyProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Empty\"\n});\nconst _empty = /*#__PURE__*/Object.create(EmptyProto);\n/**\n * @internal\n */\nexport const empty = () => _empty;\nconst AndThenProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"AndThen\"\n});\nconst makeAndThen = (first, second) => {\n  const o = Object.create(AndThenProto);\n  o.first = first;\n  o.second = second;\n  return o;\n};\nconst AppendProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Append\"\n});\nconst makeAppend = values => {\n  const o = Object.create(AppendProto);\n  o.values = values;\n  return o;\n};\nconst SliceProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Slice\"\n});\nconst makeSlice = (from, until) => {\n  const o = Object.create(SliceProto);\n  o.from = from;\n  o.until = until;\n  return o;\n};\nconst UpdateProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Update\"\n});\nconst makeUpdate = (index, patch) => {\n  const o = Object.create(UpdateProto);\n  o.index = index;\n  o.patch = patch;\n  return o;\n};\n/** @internal */\nexport const diff = options => {\n  let i = 0;\n  let patch = empty();\n  while (i < options.oldValue.length && i < options.newValue.length) {\n    const oldElement = options.oldValue[i];\n    const newElement = options.newValue[i];\n    const valuePatch = options.differ.diff(oldElement, newElement);\n    if (!Equal.equals(valuePatch, options.differ.empty)) {\n      patch = combine(patch, makeUpdate(i, valuePatch));\n    }\n    i = i + 1;\n  }\n  if (i < options.oldValue.length) {\n    patch = combine(patch, makeSlice(0, i));\n  }\n  if (i < options.newValue.length) {\n    patch = combine(patch, makeAppend(Arr.drop(i)(options.newValue)));\n  }\n  return patch;\n};\n/** @internal */\nexport const combine = /*#__PURE__*/Dual.dual(2, (self, that) => makeAndThen(self, that));\n/** @internal */\nexport const patch = /*#__PURE__*/Dual.dual(3, (self, oldValue, differ) => {\n  if (self._tag === \"Empty\") {\n    return oldValue;\n  }\n  let readonlyArray = oldValue.slice();\n  let patches = Arr.of(self);\n  while (Arr.isNonEmptyArray(patches)) {\n    const head = Arr.headNonEmpty(patches);\n    const tail = Arr.tailNonEmpty(patches);\n    switch (head._tag) {\n      case \"Empty\":\n        {\n          patches = tail;\n          break;\n        }\n      case \"AndThen\":\n        {\n          tail.unshift(head.first, head.second);\n          patches = tail;\n          break;\n        }\n      case \"Append\":\n        {\n          for (const value of head.values) {\n            readonlyArray.push(value);\n          }\n          patches = tail;\n          break;\n        }\n      case \"Slice\":\n        {\n          readonlyArray = readonlyArray.slice(head.from, head.until);\n          patches = tail;\n          break;\n        }\n      case \"Update\":\n        {\n          readonlyArray[head.index] = differ.patch(head.patch, readonlyArray[head.index]);\n          patches = tail;\n          break;\n        }\n    }\n  }\n  return readonlyArray;\n});\n//# sourceMappingURL=readonlyArrayPatch.js.map","import * as Equal from \"../Equal.js\";\nimport * as Dual from \"../Function.js\";\nimport { constant, identity } from \"../Function.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport * as ChunkPatch from \"./differ/chunkPatch.js\";\nimport * as ContextPatch from \"./differ/contextPatch.js\";\nimport * as HashMapPatch from \"./differ/hashMapPatch.js\";\nimport * as HashSetPatch from \"./differ/hashSetPatch.js\";\nimport * as OrPatch from \"./differ/orPatch.js\";\nimport * as ReadonlyArrayPatch from \"./differ/readonlyArrayPatch.js\";\n/** @internal */\nexport const DifferTypeId = /*#__PURE__*/Symbol.for(\"effect/Differ\");\n/** @internal */\nexport const DifferProto = {\n  [DifferTypeId]: {\n    _P: identity,\n    _V: identity\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const make = params => {\n  const differ = Object.create(DifferProto);\n  differ.empty = params.empty;\n  differ.diff = params.diff;\n  differ.combine = params.combine;\n  differ.patch = params.patch;\n  return differ;\n};\n/** @internal */\nexport const environment = () => make({\n  empty: ContextPatch.empty(),\n  combine: (first, second) => ContextPatch.combine(second)(first),\n  diff: (oldValue, newValue) => ContextPatch.diff(oldValue, newValue),\n  patch: (patch, oldValue) => ContextPatch.patch(oldValue)(patch)\n});\n/** @internal */\nexport const chunk = differ => make({\n  empty: ChunkPatch.empty(),\n  combine: (first, second) => ChunkPatch.combine(second)(first),\n  diff: (oldValue, newValue) => ChunkPatch.diff({\n    oldValue,\n    newValue,\n    differ\n  }),\n  patch: (patch, oldValue) => ChunkPatch.patch(oldValue, differ)(patch)\n});\n/** @internal */\nexport const hashMap = differ => make({\n  empty: HashMapPatch.empty(),\n  combine: (first, second) => HashMapPatch.combine(second)(first),\n  diff: (oldValue, newValue) => HashMapPatch.diff({\n    oldValue,\n    newValue,\n    differ\n  }),\n  patch: (patch, oldValue) => HashMapPatch.patch(oldValue, differ)(patch)\n});\n/** @internal */\nexport const hashSet = () => make({\n  empty: HashSetPatch.empty(),\n  combine: (first, second) => HashSetPatch.combine(second)(first),\n  diff: (oldValue, newValue) => HashSetPatch.diff(oldValue, newValue),\n  patch: (patch, oldValue) => HashSetPatch.patch(oldValue)(patch)\n});\n/** @internal */\nexport const orElseEither = /*#__PURE__*/Dual.dual(2, (self, that) => make({\n  empty: OrPatch.empty(),\n  combine: (first, second) => OrPatch.combine(first, second),\n  diff: (oldValue, newValue) => OrPatch.diff({\n    oldValue,\n    newValue,\n    left: self,\n    right: that\n  }),\n  patch: (patch, oldValue) => OrPatch.patch(patch, {\n    oldValue,\n    left: self,\n    right: that\n  })\n}));\n/** @internal */\nexport const readonlyArray = differ => make({\n  empty: ReadonlyArrayPatch.empty(),\n  combine: (first, second) => ReadonlyArrayPatch.combine(first, second),\n  diff: (oldValue, newValue) => ReadonlyArrayPatch.diff({\n    oldValue,\n    newValue,\n    differ\n  }),\n  patch: (patch, oldValue) => ReadonlyArrayPatch.patch(patch, oldValue, differ)\n});\n/** @internal */\nexport const transform = /*#__PURE__*/Dual.dual(2, (self, {\n  toNew,\n  toOld\n}) => make({\n  empty: self.empty,\n  combine: (first, second) => self.combine(first, second),\n  diff: (oldValue, newValue) => self.diff(toOld(oldValue), toOld(newValue)),\n  patch: (patch, oldValue) => toNew(self.patch(patch, toOld(oldValue)))\n}));\n/** @internal */\nexport const update = () => updateWith((_, a) => a);\n/** @internal */\nexport const updateWith = f => make({\n  empty: identity,\n  combine: (first, second) => {\n    if (first === identity) {\n      return second;\n    }\n    if (second === identity) {\n      return first;\n    }\n    return a => second(first(a));\n  },\n  diff: (oldValue, newValue) => {\n    if (Equal.equals(oldValue, newValue)) {\n      return identity;\n    }\n    return constant(newValue);\n  },\n  patch: (patch, oldValue) => f(oldValue, patch(oldValue))\n});\n/** @internal */\nexport const zip = /*#__PURE__*/Dual.dual(2, (self, that) => make({\n  empty: [self.empty, that.empty],\n  combine: (first, second) => [self.combine(first[0], second[0]), that.combine(first[1], second[1])],\n  diff: (oldValue, newValue) => [self.diff(oldValue[0], newValue[0]), that.diff(oldValue[1], newValue[1])],\n  patch: (patch, oldValue) => [self.patch(patch[0], oldValue[0]), that.patch(patch[1], oldValue[1])]\n}));\n//# sourceMappingURL=differ.js.map","import { dual } from \"../Function.js\";\n/** @internal */\nconst BIT_MASK = 0xff;\n/** @internal */\nconst BIT_SHIFT = 0x08;\n/** @internal */\nexport const active = patch => patch & BIT_MASK;\n/** @internal */\nexport const enabled = patch => patch >> BIT_SHIFT & BIT_MASK;\n/** @internal */\nexport const make = (active, enabled) => (active & BIT_MASK) + ((enabled & active & BIT_MASK) << BIT_SHIFT);\n/** @internal */\nexport const empty = /*#__PURE__*/make(0, 0);\n/** @internal */\nexport const enable = flag => make(flag, flag);\n/** @internal */\nexport const disable = flag => make(flag, 0);\n/** @internal */\nexport const isEmpty = patch => patch === 0;\n/** @internal */\nexport const isActive = /*#__PURE__*/dual(2, (self, flag) => (active(self) & flag) !== 0);\n/** @internal */\nexport const isEnabled = /*#__PURE__*/dual(2, (self, flag) => (enabled(self) & flag) !== 0);\n/** @internal */\nexport const isDisabled = /*#__PURE__*/dual(2, (self, flag) => (active(self) & flag) !== 0 && (enabled(self) & flag) === 0);\n/** @internal */\nexport const exclude = /*#__PURE__*/dual(2, (self, flag) => make(active(self) & ~flag, enabled(self)));\n/** @internal */\nexport const both = /*#__PURE__*/dual(2, (self, that) => make(active(self) | active(that), enabled(self) & enabled(that)));\n/** @internal */\nexport const either = /*#__PURE__*/dual(2, (self, that) => make(active(self) | active(that), enabled(self) | enabled(that)));\n/** @internal */\nexport const andThen = /*#__PURE__*/dual(2, (self, that) => self | that);\n/** @internal */\nexport const inverse = patch => make(enabled(patch), invert(active(patch)));\n/** @internal */\nexport const invert = n => ~n >>> 0 & BIT_MASK;\n//# sourceMappingURL=runtimeFlagsPatch.js.map","import { dual } from \"../Function.js\";\nimport * as internalDiffer from \"./differ.js\";\nimport * as runtimeFlagsPatch from \"./runtimeFlagsPatch.js\";\n/** @internal */\nexport const None = 0;\n/** @internal */\nexport const Interruption = 1 << 0;\n/** @internal */\nexport const OpSupervision = 1 << 1;\n/** @internal */\nexport const RuntimeMetrics = 1 << 2;\n/** @internal */\nexport const WindDown = 1 << 4;\n/** @internal */\nexport const CooperativeYielding = 1 << 5;\n/** @internal */\nexport const allFlags = [None, Interruption, OpSupervision, RuntimeMetrics, WindDown, CooperativeYielding];\nconst print = flag => {\n  switch (flag) {\n    case CooperativeYielding:\n      {\n        return \"CooperativeYielding\";\n      }\n    case WindDown:\n      {\n        return \"WindDown\";\n      }\n    case RuntimeMetrics:\n      {\n        return \"RuntimeMetrics\";\n      }\n    case OpSupervision:\n      {\n        return \"OpSupervision\";\n      }\n    case Interruption:\n      {\n        return \"Interruption\";\n      }\n    case None:\n      {\n        return \"None\";\n      }\n  }\n};\n/** @internal */\nexport const cooperativeYielding = self => isEnabled(self, CooperativeYielding);\n/** @internal */\nexport const disable = /*#__PURE__*/dual(2, (self, flag) => self & ~flag);\n/** @internal */\nexport const disableAll = /*#__PURE__*/dual(2, (self, flags) => self & ~flags);\n/** @internal */\nexport const enable = /*#__PURE__*/dual(2, (self, flag) => self | flag);\n/** @internal */\nexport const enableAll = /*#__PURE__*/dual(2, (self, flags) => self | flags);\n/** @internal */\nexport const interruptible = self => interruption(self) && !windDown(self);\n/** @internal */\nexport const interruption = self => isEnabled(self, Interruption);\n/** @internal */\nexport const isDisabled = /*#__PURE__*/dual(2, (self, flag) => !isEnabled(self, flag));\n/** @internal */\nexport const isEnabled = /*#__PURE__*/dual(2, (self, flag) => (self & flag) !== 0);\n/** @internal */\nexport const make = (...flags) => flags.reduce((a, b) => a | b, 0);\n/** @internal */\nexport const none = /*#__PURE__*/make(None);\n/** @internal */\nexport const opSupervision = self => isEnabled(self, OpSupervision);\n/** @internal */\nexport const render = self => {\n  const active = [];\n  allFlags.forEach(flag => {\n    if (isEnabled(self, flag)) {\n      active.push(`${print(flag)}`);\n    }\n  });\n  return `RuntimeFlags(${active.join(\", \")})`;\n};\n/** @internal */\nexport const runtimeMetrics = self => isEnabled(self, RuntimeMetrics);\n/** @internal */\nexport const toSet = self => new Set(allFlags.filter(flag => isEnabled(self, flag)));\nexport const windDown = self => isEnabled(self, WindDown);\n// circular with RuntimeFlagsPatch\n/** @internal */\nexport const enabledSet = self => toSet(runtimeFlagsPatch.active(self) & runtimeFlagsPatch.enabled(self));\n/** @internal */\nexport const disabledSet = self => toSet(runtimeFlagsPatch.active(self) & ~runtimeFlagsPatch.enabled(self));\n/** @internal */\nexport const diff = /*#__PURE__*/dual(2, (self, that) => runtimeFlagsPatch.make(self ^ that, that));\n/** @internal */\nexport const patch = /*#__PURE__*/dual(2, (self, patch) => self & (runtimeFlagsPatch.invert(runtimeFlagsPatch.active(patch)) | runtimeFlagsPatch.enabled(patch)) | runtimeFlagsPatch.active(patch) & runtimeFlagsPatch.enabled(patch));\n/** @internal */\nexport const renderPatch = self => {\n  const enabled = Array.from(enabledSet(self)).map(flag => print(flag)).join(\", \");\n  const disabled = Array.from(disabledSet(self)).map(flag => print(flag)).join(\", \");\n  return `RuntimeFlagsPatch(enabled = (${enabled}), disabled = (${disabled}))`;\n};\n/** @internal */\nexport const differ = /*#__PURE__*/internalDiffer.make({\n  empty: runtimeFlagsPatch.empty,\n  diff: (oldValue, newValue) => diff(oldValue, newValue),\n  combine: (first, second) => runtimeFlagsPatch.andThen(second)(first),\n  patch: (_patch, oldValue) => patch(oldValue, _patch)\n});\n//# sourceMappingURL=runtimeFlags.js.map","/**\n * @since 2.0.0\n */\nimport * as runtimeFlags from \"./internal/runtimeFlags.js\";\nimport * as internal from \"./internal/runtimeFlagsPatch.js\";\n/**\n * The empty `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const empty = internal.empty;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const make = internal.make;\n/**\n * Creates a `RuntimeFlagsPatch` describing enabling the provided `RuntimeFlag`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const enable = internal.enable;\n/**\n * Creates a `RuntimeFlagsPatch` describing disabling the provided `RuntimeFlag`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const disable = internal.disable;\n/**\n * Returns `true` if the specified `RuntimeFlagsPatch` is empty.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const isEmpty = internal.isEmpty;\n/**\n * Returns `true` if the `RuntimeFlagsPatch` describes the specified\n * `RuntimeFlag` as active.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const isActive = internal.isActive;\n/**\n * Returns `true` if the `RuntimeFlagsPatch` describes the specified\n * `RuntimeFlag` as enabled.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const isEnabled = internal.isEnabled;\n/**\n * Returns `true` if the `RuntimeFlagsPatch` describes the specified\n * `RuntimeFlag` as disabled.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const isDisabled = internal.isDisabled;\n/**\n * Returns `true` if the `RuntimeFlagsPatch` includes the specified\n * `RuntimeFlag`, `false` otherwise.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const includes = internal.isActive;\n/**\n * Creates a `RuntimeFlagsPatch` describing the application of the `self` patch,\n * followed by `that` patch.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const andThen = internal.andThen;\n/**\n * Creates a `RuntimeFlagsPatch` describing application of both the `self` patch\n * and `that` patch.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const both = internal.both;\n/**\n * Creates a `RuntimeFlagsPatch` describing application of either the `self`\n * patch or `that` patch.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const either = internal.either;\n/**\n * Creates a `RuntimeFlagsPatch` which describes exclusion of the specified\n * `RuntimeFlag` from the set of `RuntimeFlags`.\n *\n * @category utils\n * @since 2.0.0\n */\nexport const exclude = internal.exclude;\n/**\n * Creates a `RuntimeFlagsPatch` which describes the inverse of the patch\n * specified by the provided `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const inverse = internal.inverse;\n/**\n * Returns a `ReadonlySet<number>` containing the `RuntimeFlags` described as\n * enabled by the specified `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const enabledSet = runtimeFlags.enabledSet;\n/**\n * Returns a `ReadonlySet<number>` containing the `RuntimeFlags` described as\n * disabled by the specified `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const disabledSet = runtimeFlags.disabledSet;\n/**\n * Renders the provided `RuntimeFlagsPatch` to a string.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const render = runtimeFlags.renderPatch;\n//# sourceMappingURL=RuntimeFlagsPatch.js.map","import * as Chunk from \"../Chunk.js\";\nimport * as Either from \"../Either.js\";\nimport * as Equal from \"../Equal.js\";\nimport * as HashMap from \"../HashMap.js\";\nimport * as List from \"../List.js\";\nimport * as Option from \"../Option.js\";\nimport { hasProperty } from \"../Predicate.js\";\n/** @internal */\nexport const empty = {\n  _tag: \"Empty\"\n};\n/**\n * Combines this collection of blocked requests with the specified collection\n * of blocked requests, in parallel.\n *\n * @internal\n */\nexport const par = (self, that) => ({\n  _tag: \"Par\",\n  left: self,\n  right: that\n});\n/**\n * Combines this collection of blocked requests with the specified collection\n * of blocked requests, in sequence.\n *\n * @internal\n */\nexport const seq = (self, that) => ({\n  _tag: \"Seq\",\n  left: self,\n  right: that\n});\n/**\n * Constructs a collection of blocked requests from the specified blocked\n * request and data source.\n *\n * @internal\n */\nexport const single = (dataSource, blockedRequest) => ({\n  _tag: \"Single\",\n  dataSource: dataSource,\n  blockedRequest\n});\n/** @internal */\nexport const MapRequestResolversReducer = f => ({\n  emptyCase: () => empty,\n  parCase: (left, right) => par(left, right),\n  seqCase: (left, right) => seq(left, right),\n  singleCase: (dataSource, blockedRequest) => single(f(dataSource), blockedRequest)\n});\n/**\n * Transforms all data sources with the specified data source aspect, which\n * can change the environment type of data sources but must preserve the\n * request type of each data source.\n *\n * @internal\n */\nexport const mapRequestResolvers = (self, f) => reduce(self, MapRequestResolversReducer(f));\n/**\n * Folds over the cases of this collection of blocked requests with the\n * specified functions.\n *\n * @internal\n */\nexport const reduce = (self, reducer) => {\n  let input = List.of(self);\n  let output = List.empty();\n  while (List.isCons(input)) {\n    const current = input.head;\n    switch (current._tag) {\n      case \"Empty\":\n        {\n          output = List.cons(Either.right(reducer.emptyCase()), output);\n          input = input.tail;\n          break;\n        }\n      case \"Par\":\n        {\n          output = List.cons(Either.left({\n            _tag: \"ParCase\"\n          }), output);\n          input = List.cons(current.left, List.cons(current.right, input.tail));\n          break;\n        }\n      case \"Seq\":\n        {\n          output = List.cons(Either.left({\n            _tag: \"SeqCase\"\n          }), output);\n          input = List.cons(current.left, List.cons(current.right, input.tail));\n          break;\n        }\n      case \"Single\":\n        {\n          const result = reducer.singleCase(current.dataSource, current.blockedRequest);\n          output = List.cons(Either.right(result), output);\n          input = input.tail;\n          break;\n        }\n    }\n  }\n  const result = List.reduce(output, List.empty(), (acc, current) => {\n    switch (current._tag) {\n      case \"Left\":\n        {\n          const left = List.unsafeHead(acc);\n          const right = List.unsafeHead(List.unsafeTail(acc));\n          const tail = List.unsafeTail(List.unsafeTail(acc));\n          switch (current.left._tag) {\n            case \"ParCase\":\n              {\n                return List.cons(reducer.parCase(left, right), tail);\n              }\n            case \"SeqCase\":\n              {\n                return List.cons(reducer.seqCase(left, right), tail);\n              }\n          }\n        }\n      case \"Right\":\n        {\n          return List.cons(current.right, acc);\n        }\n    }\n  });\n  if (List.isNil(result)) {\n    throw new Error(\"BUG: BlockedRequests.reduce - please report an issue at https://github.com/Effect-TS/effect/issues\");\n  }\n  return result.head;\n};\n/**\n * Flattens a collection of blocked requests into a collection of pipelined\n * and batched requests that can be submitted for execution.\n *\n * @internal\n */\nexport const flatten = self => {\n  let current = List.of(self);\n  let updated = List.empty();\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    const [parallel, sequential] = List.reduce(current, [parallelCollectionEmpty(), List.empty()], ([parallel, sequential], blockedRequest) => {\n      const [par, seq] = step(blockedRequest);\n      return [parallelCollectionCombine(parallel, par), List.appendAll(sequential, seq)];\n    });\n    updated = merge(updated, parallel);\n    if (List.isNil(sequential)) {\n      return List.reverse(updated);\n    }\n    current = sequential;\n  }\n  throw new Error(\"BUG: BlockedRequests.flatten - please report an issue at https://github.com/Effect-TS/effect/issues\");\n};\n/**\n * Takes one step in evaluating a collection of blocked requests, returning a\n * collection of blocked requests that can be performed in parallel and a list\n * of blocked requests that must be performed sequentially after those\n * requests.\n */\nconst step = requests => {\n  let current = requests;\n  let parallel = parallelCollectionEmpty();\n  let stack = List.empty();\n  let sequential = List.empty();\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    switch (current._tag) {\n      case \"Empty\":\n        {\n          if (List.isNil(stack)) {\n            return [parallel, sequential];\n          }\n          current = stack.head;\n          stack = stack.tail;\n          break;\n        }\n      case \"Par\":\n        {\n          stack = List.cons(current.right, stack);\n          current = current.left;\n          break;\n        }\n      case \"Seq\":\n        {\n          const left = current.left;\n          const right = current.right;\n          switch (left._tag) {\n            case \"Empty\":\n              {\n                current = right;\n                break;\n              }\n            case \"Par\":\n              {\n                const l = left.left;\n                const r = left.right;\n                current = par(seq(l, right), seq(r, right));\n                break;\n              }\n            case \"Seq\":\n              {\n                const l = left.left;\n                const r = left.right;\n                current = seq(l, seq(r, right));\n                break;\n              }\n            case \"Single\":\n              {\n                current = left;\n                sequential = List.cons(right, sequential);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Single\":\n        {\n          parallel = parallelCollectionAdd(parallel, current);\n          if (List.isNil(stack)) {\n            return [parallel, sequential];\n          }\n          current = stack.head;\n          stack = stack.tail;\n          break;\n        }\n    }\n  }\n  throw new Error(\"BUG: BlockedRequests.step - please report an issue at https://github.com/Effect-TS/effect/issues\");\n};\n/**\n * Merges a collection of requests that must be executed sequentially with a\n * collection of requests that can be executed in parallel. If the collections\n * are both from the same single data source then the requests can be\n * pipelined while preserving ordering guarantees.\n */\nconst merge = (sequential, parallel) => {\n  if (List.isNil(sequential)) {\n    return List.of(parallelCollectionToSequentialCollection(parallel));\n  }\n  if (parallelCollectionIsEmpty(parallel)) {\n    return sequential;\n  }\n  const seqHeadKeys = sequentialCollectionKeys(sequential.head);\n  const parKeys = parallelCollectionKeys(parallel);\n  if (seqHeadKeys.length === 1 && parKeys.length === 1 && Equal.equals(seqHeadKeys[0], parKeys[0])) {\n    return List.cons(sequentialCollectionCombine(sequential.head, parallelCollectionToSequentialCollection(parallel)), sequential.tail);\n  }\n  return List.cons(parallelCollectionToSequentialCollection(parallel), sequential);\n};\n//\n// circular\n//\n/** @internal */\nexport const EntryTypeId = /*#__PURE__*/Symbol.for(\"effect/RequestBlock/Entry\");\n/** @internal */\nclass EntryImpl {\n  request;\n  result;\n  listeners;\n  ownerId;\n  state;\n  [EntryTypeId] = blockedRequestVariance;\n  constructor(request, result, listeners, ownerId, state) {\n    this.request = request;\n    this.result = result;\n    this.listeners = listeners;\n    this.ownerId = ownerId;\n    this.state = state;\n  }\n}\nconst blockedRequestVariance = {\n  /* c8 ignore next */\n  _R: _ => _\n};\n/** @internal */\nexport const isEntry = u => hasProperty(u, EntryTypeId);\n/** @internal */\nexport const makeEntry = options => new EntryImpl(options.request, options.result, options.listeners, options.ownerId, options.state);\n/** @internal */\nexport const RequestBlockParallelTypeId = /*#__PURE__*/Symbol.for(\"effect/RequestBlock/RequestBlockParallel\");\nconst parallelVariance = {\n  /* c8 ignore next */\n  _R: _ => _\n};\nclass ParallelImpl {\n  map;\n  [RequestBlockParallelTypeId] = parallelVariance;\n  constructor(map) {\n    this.map = map;\n  }\n}\n/** @internal */\nexport const parallelCollectionEmpty = () => new ParallelImpl(HashMap.empty());\n/** @internal */\nexport const parallelCollectionMake = (dataSource, blockedRequest) => new ParallelImpl(HashMap.make([dataSource, Chunk.of(blockedRequest)]));\n/** @internal */\nexport const parallelCollectionAdd = (self, blockedRequest) => new ParallelImpl(HashMap.modifyAt(self.map, blockedRequest.dataSource, _ => Option.orElseSome(Option.map(_, Chunk.append(blockedRequest.blockedRequest)), () => Chunk.of(blockedRequest.blockedRequest))));\n/** @internal */\nexport const parallelCollectionCombine = (self, that) => new ParallelImpl(HashMap.reduce(self.map, that.map, (map, value, key) => HashMap.set(map, key, Option.match(HashMap.get(map, key), {\n  onNone: () => value,\n  onSome: other => Chunk.appendAll(value, other)\n}))));\n/** @internal */\nexport const parallelCollectionIsEmpty = self => HashMap.isEmpty(self.map);\n/** @internal */\nexport const parallelCollectionKeys = self => Array.from(HashMap.keys(self.map));\n/** @internal */\nexport const parallelCollectionToSequentialCollection = self => sequentialCollectionMake(HashMap.map(self.map, x => Chunk.of(x)));\n// TODO\n// /** @internal */\n// export const parallelCollectionToChunk = <R>(\n//   self: ParallelCollection<R>\n// ): Array<[RequestResolver.RequestResolver<unknown, R>, Array<Request.Entry<unknown>>]> => Array.from(self.map) as any\n/** @internal */\nexport const SequentialCollectionTypeId = /*#__PURE__*/Symbol.for(\"effect/RequestBlock/RequestBlockSequential\");\nconst sequentialVariance = {\n  /* c8 ignore next */\n  _R: _ => _\n};\nclass SequentialImpl {\n  map;\n  [SequentialCollectionTypeId] = sequentialVariance;\n  constructor(map) {\n    this.map = map;\n  }\n}\n/** @internal */\nexport const sequentialCollectionMake = map => new SequentialImpl(map);\n/** @internal */\nexport const sequentialCollectionCombine = (self, that) => new SequentialImpl(HashMap.reduce(that.map, self.map, (map, value, key) => HashMap.set(map, key, Option.match(HashMap.get(map, key), {\n  onNone: () => Chunk.empty(),\n  onSome: a => Chunk.appendAll(a, value)\n}))));\n/** @internal */\nexport const sequentialCollectionIsEmpty = self => HashMap.isEmpty(self.map);\n/** @internal */\nexport const sequentialCollectionKeys = self => Array.from(HashMap.keys(self.map));\n/** @internal */\nexport const sequentialCollectionToChunk = self => Array.from(self.map);\n//# sourceMappingURL=blockedRequests.js.map","/** @internal */\nexport const OP_DIE = \"Die\";\n/** @internal */\nexport const OP_EMPTY = \"Empty\";\n/** @internal */\nexport const OP_FAIL = \"Fail\";\n/** @internal */\nexport const OP_INTERRUPT = \"Interrupt\";\n/** @internal */\nexport const OP_PARALLEL = \"Parallel\";\n/** @internal */\nexport const OP_SEQUENTIAL = \"Sequential\";\n//# sourceMappingURL=cause.js.map","import * as Arr from \"../Array.js\";\nimport * as Chunk from \"../Chunk.js\";\nimport * as Either from \"../Either.js\";\nimport * as Equal from \"../Equal.js\";\nimport { constFalse, constTrue, dual, identity, pipe } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as Hash from \"../Hash.js\";\nimport * as HashSet from \"../HashSet.js\";\nimport { NodeInspectSymbol, stringifyCircular, toJSON } from \"../Inspectable.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport { hasProperty, isFunction } from \"../Predicate.js\";\nimport { getBugErrorMessage } from \"./errors.js\";\nimport * as OpCodes from \"./opCodes/cause.js\";\n// -----------------------------------------------------------------------------\n// Models\n// -----------------------------------------------------------------------------\n/** @internal */\nconst CauseSymbolKey = \"effect/Cause\";\n/** @internal */\nexport const CauseTypeId = /*#__PURE__*/Symbol.for(CauseSymbolKey);\nconst variance = {\n  /* c8 ignore next */\n  _E: _ => _\n};\n/** @internal */\nconst proto = {\n  [CauseTypeId]: variance,\n  [Hash.symbol]() {\n    return pipe(Hash.hash(CauseSymbolKey), Hash.combine(Hash.hash(flattenCause(this))), Hash.cached(this));\n  },\n  [Equal.symbol](that) {\n    return isCause(that) && causeEquals(this, that);\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  toJSON() {\n    switch (this._tag) {\n      case \"Empty\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag\n        };\n      case \"Die\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          defect: toJSON(this.defect)\n        };\n      case \"Interrupt\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          fiberId: this.fiberId.toJSON()\n        };\n      case \"Fail\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          failure: toJSON(this.error)\n        };\n      case \"Sequential\":\n      case \"Parallel\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          left: toJSON(this.left),\n          right: toJSON(this.right)\n        };\n    }\n  },\n  toString() {\n    return pretty(this);\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n};\n// -----------------------------------------------------------------------------\n// Constructors\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const empty = /*#__PURE__*/(() => {\n  const o = /*#__PURE__*/Object.create(proto);\n  o._tag = OpCodes.OP_EMPTY;\n  return o;\n})();\n/** @internal */\nexport const fail = error => {\n  const o = Object.create(proto);\n  o._tag = OpCodes.OP_FAIL;\n  o.error = error;\n  return o;\n};\n/** @internal */\nexport const die = defect => {\n  const o = Object.create(proto);\n  o._tag = OpCodes.OP_DIE;\n  o.defect = defect;\n  return o;\n};\n/** @internal */\nexport const interrupt = fiberId => {\n  const o = Object.create(proto);\n  o._tag = OpCodes.OP_INTERRUPT;\n  o.fiberId = fiberId;\n  return o;\n};\n/** @internal */\nexport const parallel = (left, right) => {\n  const o = Object.create(proto);\n  o._tag = OpCodes.OP_PARALLEL;\n  o.left = left;\n  o.right = right;\n  return o;\n};\n/** @internal */\nexport const sequential = (left, right) => {\n  const o = Object.create(proto);\n  o._tag = OpCodes.OP_SEQUENTIAL;\n  o.left = left;\n  o.right = right;\n  return o;\n};\n// -----------------------------------------------------------------------------\n// Refinements\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const isCause = u => hasProperty(u, CauseTypeId);\n/** @internal */\nexport const isEmptyType = self => self._tag === OpCodes.OP_EMPTY;\n/** @internal */\nexport const isFailType = self => self._tag === OpCodes.OP_FAIL;\n/** @internal */\nexport const isDieType = self => self._tag === OpCodes.OP_DIE;\n/** @internal */\nexport const isInterruptType = self => self._tag === OpCodes.OP_INTERRUPT;\n/** @internal */\nexport const isSequentialType = self => self._tag === OpCodes.OP_SEQUENTIAL;\n/** @internal */\nexport const isParallelType = self => self._tag === OpCodes.OP_PARALLEL;\n// -----------------------------------------------------------------------------\n// Getters\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const size = self => reduceWithContext(self, void 0, SizeCauseReducer);\n/** @internal */\nexport const isEmpty = self => {\n  if (self._tag === OpCodes.OP_EMPTY) {\n    return true;\n  }\n  return reduce(self, true, (acc, cause) => {\n    switch (cause._tag) {\n      case OpCodes.OP_EMPTY:\n        {\n          return Option.some(acc);\n        }\n      case OpCodes.OP_DIE:\n      case OpCodes.OP_FAIL:\n      case OpCodes.OP_INTERRUPT:\n        {\n          return Option.some(false);\n        }\n      default:\n        {\n          return Option.none();\n        }\n    }\n  });\n};\n/** @internal */\nexport const isFailure = self => Option.isSome(failureOption(self));\n/** @internal */\nexport const isDie = self => Option.isSome(dieOption(self));\n/** @internal */\nexport const isInterrupted = self => Option.isSome(interruptOption(self));\n/** @internal */\nexport const isInterruptedOnly = self => reduceWithContext(undefined, IsInterruptedOnlyCauseReducer)(self);\n/** @internal */\nexport const failures = self => Chunk.reverse(reduce(self, Chunk.empty(), (list, cause) => cause._tag === OpCodes.OP_FAIL ? Option.some(pipe(list, Chunk.prepend(cause.error))) : Option.none()));\n/** @internal */\nexport const defects = self => Chunk.reverse(reduce(self, Chunk.empty(), (list, cause) => cause._tag === OpCodes.OP_DIE ? Option.some(pipe(list, Chunk.prepend(cause.defect))) : Option.none()));\n/** @internal */\nexport const interruptors = self => reduce(self, HashSet.empty(), (set, cause) => cause._tag === OpCodes.OP_INTERRUPT ? Option.some(pipe(set, HashSet.add(cause.fiberId))) : Option.none());\n/** @internal */\nexport const failureOption = self => find(self, cause => cause._tag === OpCodes.OP_FAIL ? Option.some(cause.error) : Option.none());\n/** @internal */\nexport const failureOrCause = self => {\n  const option = failureOption(self);\n  switch (option._tag) {\n    case \"None\":\n      {\n        // no `E` inside this `Cause`, so it can be safely cast to `never`\n        return Either.right(self);\n      }\n    case \"Some\":\n      {\n        return Either.left(option.value);\n      }\n  }\n};\n/** @internal */\nexport const dieOption = self => find(self, cause => cause._tag === OpCodes.OP_DIE ? Option.some(cause.defect) : Option.none());\n/** @internal */\nexport const flipCauseOption = self => match(self, {\n  onEmpty: Option.some(empty),\n  onFail: Option.map(fail),\n  onDie: defect => Option.some(die(defect)),\n  onInterrupt: fiberId => Option.some(interrupt(fiberId)),\n  onSequential: Option.mergeWith(sequential),\n  onParallel: Option.mergeWith(parallel)\n});\n/** @internal */\nexport const interruptOption = self => find(self, cause => cause._tag === OpCodes.OP_INTERRUPT ? Option.some(cause.fiberId) : Option.none());\n/** @internal */\nexport const keepDefects = self => match(self, {\n  onEmpty: Option.none(),\n  onFail: () => Option.none(),\n  onDie: defect => Option.some(die(defect)),\n  onInterrupt: () => Option.none(),\n  onSequential: Option.mergeWith(sequential),\n  onParallel: Option.mergeWith(parallel)\n});\n/** @internal */\nexport const keepDefectsAndElectFailures = self => match(self, {\n  onEmpty: Option.none(),\n  onFail: failure => Option.some(die(failure)),\n  onDie: defect => Option.some(die(defect)),\n  onInterrupt: () => Option.none(),\n  onSequential: Option.mergeWith(sequential),\n  onParallel: Option.mergeWith(parallel)\n});\n/** @internal */\nexport const linearize = self => match(self, {\n  onEmpty: HashSet.empty(),\n  onFail: error => HashSet.make(fail(error)),\n  onDie: defect => HashSet.make(die(defect)),\n  onInterrupt: fiberId => HashSet.make(interrupt(fiberId)),\n  onSequential: (leftSet, rightSet) => HashSet.flatMap(leftSet, leftCause => HashSet.map(rightSet, rightCause => sequential(leftCause, rightCause))),\n  onParallel: (leftSet, rightSet) => HashSet.flatMap(leftSet, leftCause => HashSet.map(rightSet, rightCause => parallel(leftCause, rightCause)))\n});\n/** @internal */\nexport const stripFailures = self => match(self, {\n  onEmpty: empty,\n  onFail: () => empty,\n  onDie: die,\n  onInterrupt: interrupt,\n  onSequential: sequential,\n  onParallel: parallel\n});\n/** @internal */\nexport const electFailures = self => match(self, {\n  onEmpty: empty,\n  onFail: die,\n  onDie: die,\n  onInterrupt: interrupt,\n  onSequential: sequential,\n  onParallel: parallel\n});\n/** @internal */\nexport const stripSomeDefects = /*#__PURE__*/dual(2, (self, pf) => match(self, {\n  onEmpty: Option.some(empty),\n  onFail: error => Option.some(fail(error)),\n  onDie: defect => {\n    const option = pf(defect);\n    return Option.isSome(option) ? Option.none() : Option.some(die(defect));\n  },\n  onInterrupt: fiberId => Option.some(interrupt(fiberId)),\n  onSequential: Option.mergeWith(sequential),\n  onParallel: Option.mergeWith(parallel)\n}));\n// -----------------------------------------------------------------------------\n// Mapping\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const as = /*#__PURE__*/dual(2, (self, error) => map(self, () => error));\n/** @internal */\nexport const map = /*#__PURE__*/dual(2, (self, f) => flatMap(self, e => fail(f(e))));\n// -----------------------------------------------------------------------------\n// Sequencing\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => match(self, {\n  onEmpty: empty,\n  onFail: error => f(error),\n  onDie: defect => die(defect),\n  onInterrupt: fiberId => interrupt(fiberId),\n  onSequential: (left, right) => sequential(left, right),\n  onParallel: (left, right) => parallel(left, right)\n}));\n/** @internal */\nexport const flatten = self => flatMap(self, identity);\n/** @internal */\nexport const andThen = /*#__PURE__*/dual(2, (self, f) => isFunction(f) ? flatMap(self, f) : flatMap(self, () => f));\n// -----------------------------------------------------------------------------\n// Equality\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const contains = /*#__PURE__*/dual(2, (self, that) => {\n  if (that._tag === OpCodes.OP_EMPTY || self === that) {\n    return true;\n  }\n  return reduce(self, false, (accumulator, cause) => {\n    return Option.some(accumulator || causeEquals(cause, that));\n  });\n});\n/** @internal */\nconst causeEquals = (left, right) => {\n  let leftStack = Chunk.of(left);\n  let rightStack = Chunk.of(right);\n  while (Chunk.isNonEmpty(leftStack) && Chunk.isNonEmpty(rightStack)) {\n    const [leftParallel, leftSequential] = pipe(Chunk.headNonEmpty(leftStack), reduce([HashSet.empty(), Chunk.empty()], ([parallel, sequential], cause) => {\n      const [par, seq] = evaluateCause(cause);\n      return Option.some([pipe(parallel, HashSet.union(par)), pipe(sequential, Chunk.appendAll(seq))]);\n    }));\n    const [rightParallel, rightSequential] = pipe(Chunk.headNonEmpty(rightStack), reduce([HashSet.empty(), Chunk.empty()], ([parallel, sequential], cause) => {\n      const [par, seq] = evaluateCause(cause);\n      return Option.some([pipe(parallel, HashSet.union(par)), pipe(sequential, Chunk.appendAll(seq))]);\n    }));\n    if (!Equal.equals(leftParallel, rightParallel)) {\n      return false;\n    }\n    leftStack = leftSequential;\n    rightStack = rightSequential;\n  }\n  return true;\n};\n// -----------------------------------------------------------------------------\n// Flattening\n// -----------------------------------------------------------------------------\n/**\n * Flattens a cause to a sequence of sets of causes, where each set represents\n * causes that fail in parallel and sequential sets represent causes that fail\n * after each other.\n *\n * @internal\n */\nconst flattenCause = cause => {\n  return flattenCauseLoop(Chunk.of(cause), Chunk.empty());\n};\n/** @internal */\nconst flattenCauseLoop = (causes, flattened) => {\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    const [parallel, sequential] = pipe(causes, Arr.reduce([HashSet.empty(), Chunk.empty()], ([parallel, sequential], cause) => {\n      const [par, seq] = evaluateCause(cause);\n      return [pipe(parallel, HashSet.union(par)), pipe(sequential, Chunk.appendAll(seq))];\n    }));\n    const updated = HashSet.size(parallel) > 0 ? pipe(flattened, Chunk.prepend(parallel)) : flattened;\n    if (Chunk.isEmpty(sequential)) {\n      return Chunk.reverse(updated);\n    }\n    causes = sequential;\n    flattened = updated;\n  }\n  throw new Error(getBugErrorMessage(\"Cause.flattenCauseLoop\"));\n};\n// -----------------------------------------------------------------------------\n// Finding\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const find = /*#__PURE__*/dual(2, (self, pf) => {\n  const stack = [self];\n  while (stack.length > 0) {\n    const item = stack.pop();\n    const option = pf(item);\n    switch (option._tag) {\n      case \"None\":\n        {\n          switch (item._tag) {\n            case OpCodes.OP_SEQUENTIAL:\n            case OpCodes.OP_PARALLEL:\n              {\n                stack.push(item.right);\n                stack.push(item.left);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Some\":\n        {\n          return option;\n        }\n    }\n  }\n  return Option.none();\n});\n// -----------------------------------------------------------------------------\n// Filtering\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const filter = /*#__PURE__*/dual(2, (self, predicate) => reduceWithContext(self, void 0, FilterCauseReducer(predicate)));\n// -----------------------------------------------------------------------------\n// Evaluation\n// -----------------------------------------------------------------------------\n/**\n * Takes one step in evaluating a cause, returning a set of causes that fail\n * in parallel and a list of causes that fail sequentially after those causes.\n *\n * @internal\n */\nconst evaluateCause = self => {\n  let cause = self;\n  const stack = [];\n  let _parallel = HashSet.empty();\n  let _sequential = Chunk.empty();\n  while (cause !== undefined) {\n    switch (cause._tag) {\n      case OpCodes.OP_EMPTY:\n        {\n          if (stack.length === 0) {\n            return [_parallel, _sequential];\n          }\n          cause = stack.pop();\n          break;\n        }\n      case OpCodes.OP_FAIL:\n        {\n          _parallel = HashSet.add(_parallel, Chunk.make(cause._tag, cause.error));\n          if (stack.length === 0) {\n            return [_parallel, _sequential];\n          }\n          cause = stack.pop();\n          break;\n        }\n      case OpCodes.OP_DIE:\n        {\n          _parallel = HashSet.add(_parallel, Chunk.make(cause._tag, cause.defect));\n          if (stack.length === 0) {\n            return [_parallel, _sequential];\n          }\n          cause = stack.pop();\n          break;\n        }\n      case OpCodes.OP_INTERRUPT:\n        {\n          _parallel = HashSet.add(_parallel, Chunk.make(cause._tag, cause.fiberId));\n          if (stack.length === 0) {\n            return [_parallel, _sequential];\n          }\n          cause = stack.pop();\n          break;\n        }\n      case OpCodes.OP_SEQUENTIAL:\n        {\n          switch (cause.left._tag) {\n            case OpCodes.OP_EMPTY:\n              {\n                cause = cause.right;\n                break;\n              }\n            case OpCodes.OP_SEQUENTIAL:\n              {\n                cause = sequential(cause.left.left, sequential(cause.left.right, cause.right));\n                break;\n              }\n            case OpCodes.OP_PARALLEL:\n              {\n                cause = parallel(sequential(cause.left.left, cause.right), sequential(cause.left.right, cause.right));\n                break;\n              }\n            default:\n              {\n                _sequential = Chunk.prepend(_sequential, cause.right);\n                cause = cause.left;\n                break;\n              }\n          }\n          break;\n        }\n      case OpCodes.OP_PARALLEL:\n        {\n          stack.push(cause.right);\n          cause = cause.left;\n          break;\n        }\n    }\n  }\n  throw new Error(getBugErrorMessage(\"Cause.evaluateCauseLoop\"));\n};\n// -----------------------------------------------------------------------------\n// Reducing\n// -----------------------------------------------------------------------------\n/** @internal */\nconst SizeCauseReducer = {\n  emptyCase: () => 0,\n  failCase: () => 1,\n  dieCase: () => 1,\n  interruptCase: () => 1,\n  sequentialCase: (_, left, right) => left + right,\n  parallelCase: (_, left, right) => left + right\n};\n/** @internal */\nconst IsInterruptedOnlyCauseReducer = {\n  emptyCase: constTrue,\n  failCase: constFalse,\n  dieCase: constFalse,\n  interruptCase: constTrue,\n  sequentialCase: (_, left, right) => left && right,\n  parallelCase: (_, left, right) => left && right\n};\n/** @internal */\nconst FilterCauseReducer = predicate => ({\n  emptyCase: () => empty,\n  failCase: (_, error) => fail(error),\n  dieCase: (_, defect) => die(defect),\n  interruptCase: (_, fiberId) => interrupt(fiberId),\n  sequentialCase: (_, left, right) => {\n    if (predicate(left)) {\n      if (predicate(right)) {\n        return sequential(left, right);\n      }\n      return left;\n    }\n    if (predicate(right)) {\n      return right;\n    }\n    return empty;\n  },\n  parallelCase: (_, left, right) => {\n    if (predicate(left)) {\n      if (predicate(right)) {\n        return parallel(left, right);\n      }\n      return left;\n    }\n    if (predicate(right)) {\n      return right;\n    }\n    return empty;\n  }\n});\nconst OP_SEQUENTIAL_CASE = \"SequentialCase\";\nconst OP_PARALLEL_CASE = \"ParallelCase\";\n/** @internal */\nexport const match = /*#__PURE__*/dual(2, (self, {\n  onDie,\n  onEmpty,\n  onFail,\n  onInterrupt,\n  onParallel,\n  onSequential\n}) => {\n  return reduceWithContext(self, void 0, {\n    emptyCase: () => onEmpty,\n    failCase: (_, error) => onFail(error),\n    dieCase: (_, defect) => onDie(defect),\n    interruptCase: (_, fiberId) => onInterrupt(fiberId),\n    sequentialCase: (_, left, right) => onSequential(left, right),\n    parallelCase: (_, left, right) => onParallel(left, right)\n  });\n});\n/** @internal */\nexport const reduce = /*#__PURE__*/dual(3, (self, zero, pf) => {\n  let accumulator = zero;\n  let cause = self;\n  const causes = [];\n  while (cause !== undefined) {\n    const option = pf(accumulator, cause);\n    accumulator = Option.isSome(option) ? option.value : accumulator;\n    switch (cause._tag) {\n      case OpCodes.OP_SEQUENTIAL:\n        {\n          causes.push(cause.right);\n          cause = cause.left;\n          break;\n        }\n      case OpCodes.OP_PARALLEL:\n        {\n          causes.push(cause.right);\n          cause = cause.left;\n          break;\n        }\n      default:\n        {\n          cause = undefined;\n          break;\n        }\n    }\n    if (cause === undefined && causes.length > 0) {\n      cause = causes.pop();\n    }\n  }\n  return accumulator;\n});\n/** @internal */\nexport const reduceWithContext = /*#__PURE__*/dual(3, (self, context, reducer) => {\n  const input = [self];\n  const output = [];\n  while (input.length > 0) {\n    const cause = input.pop();\n    switch (cause._tag) {\n      case OpCodes.OP_EMPTY:\n        {\n          output.push(Either.right(reducer.emptyCase(context)));\n          break;\n        }\n      case OpCodes.OP_FAIL:\n        {\n          output.push(Either.right(reducer.failCase(context, cause.error)));\n          break;\n        }\n      case OpCodes.OP_DIE:\n        {\n          output.push(Either.right(reducer.dieCase(context, cause.defect)));\n          break;\n        }\n      case OpCodes.OP_INTERRUPT:\n        {\n          output.push(Either.right(reducer.interruptCase(context, cause.fiberId)));\n          break;\n        }\n      case OpCodes.OP_SEQUENTIAL:\n        {\n          input.push(cause.right);\n          input.push(cause.left);\n          output.push(Either.left({\n            _tag: OP_SEQUENTIAL_CASE\n          }));\n          break;\n        }\n      case OpCodes.OP_PARALLEL:\n        {\n          input.push(cause.right);\n          input.push(cause.left);\n          output.push(Either.left({\n            _tag: OP_PARALLEL_CASE\n          }));\n          break;\n        }\n    }\n  }\n  const accumulator = [];\n  while (output.length > 0) {\n    const either = output.pop();\n    switch (either._tag) {\n      case \"Left\":\n        {\n          switch (either.left._tag) {\n            case OP_SEQUENTIAL_CASE:\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.sequentialCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n            case OP_PARALLEL_CASE:\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.parallelCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Right\":\n        {\n          accumulator.push(either.right);\n          break;\n        }\n    }\n  }\n  if (accumulator.length === 0) {\n    throw new Error(\"BUG: Cause.reduceWithContext - please report an issue at https://github.com/Effect-TS/effect/issues\");\n  }\n  return accumulator.pop();\n});\n// -----------------------------------------------------------------------------\n// Pretty Printing\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const pretty = (cause, options) => {\n  if (isInterruptedOnly(cause)) {\n    return \"All fibers interrupted without errors.\";\n  }\n  return prettyErrors(cause).map(function (e) {\n    if (options?.renderErrorCause !== true || e.cause === undefined) {\n      return e.stack;\n    }\n    return `${e.stack} {\\n${renderErrorCause(e.cause, \"  \")}\\n}`;\n  }).join(\"\\n\");\n};\nconst renderErrorCause = (cause, prefix) => {\n  const lines = cause.stack.split(\"\\n\");\n  let stack = `${prefix}[cause]: ${lines[0]}`;\n  for (let i = 1, len = lines.length; i < len; i++) {\n    stack += `\\n${prefix}${lines[i]}`;\n  }\n  if (cause.cause) {\n    stack += ` {\\n${renderErrorCause(cause.cause, `${prefix}  `)}\\n${prefix}}`;\n  }\n  return stack;\n};\n/** @internal */\nexport class PrettyError extends globalThis.Error {\n  span = undefined;\n  constructor(originalError) {\n    const originalErrorIsObject = typeof originalError === \"object\" && originalError !== null;\n    const prevLimit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 1;\n    super(prettyErrorMessage(originalError), originalErrorIsObject && \"cause\" in originalError && typeof originalError.cause !== \"undefined\" ? {\n      cause: new PrettyError(originalError.cause)\n    } : undefined);\n    if (this.message === \"\") {\n      this.message = \"An error has occurred\";\n    }\n    Error.stackTraceLimit = prevLimit;\n    this.name = originalError instanceof Error ? originalError.name : \"Error\";\n    if (originalErrorIsObject) {\n      if (spanSymbol in originalError) {\n        this.span = originalError[spanSymbol];\n      }\n      Object.keys(originalError).forEach(key => {\n        if (!(key in this)) {\n          // @ts-expect-error\n          this[key] = originalError[key];\n        }\n      });\n    }\n    this.stack = prettyErrorStack(`${this.name}: ${this.message}`, originalError instanceof Error && originalError.stack ? originalError.stack : \"\", this.span);\n  }\n}\n/**\n * A utility function for generating human-readable error messages from a generic error of type `unknown`.\n *\n * Rules:\n *\n * 1) If the input `u` is already a string, it's considered a message.\n * 2) If `u` is an Error instance with a message defined, it uses the message.\n * 3) If `u` has a user-defined `toString()` method, it uses that method.\n * 4) Otherwise, it uses `Inspectable.stringifyCircular` to produce a string representation and uses it as the error message,\n *   with \"Error\" added as a prefix.\n *\n * @internal\n */\nexport const prettyErrorMessage = u => {\n  // 1)\n  if (typeof u === \"string\") {\n    return u;\n  }\n  // 2)\n  if (typeof u === \"object\" && u !== null && u instanceof Error) {\n    return u.message;\n  }\n  // 3)\n  try {\n    if (hasProperty(u, \"toString\") && isFunction(u[\"toString\"]) && u[\"toString\"] !== Object.prototype.toString && u[\"toString\"] !== globalThis.Array.prototype.toString) {\n      return u[\"toString\"]();\n    }\n  } catch {\n    // something's off, rollback to json\n  }\n  // 4)\n  return stringifyCircular(u);\n};\nconst locationRegex = /\\((.*)\\)/g;\n/** @internal */\nexport const spanToTrace = /*#__PURE__*/globalValue(\"effect/Tracer/spanToTrace\", () => new WeakMap());\nconst prettyErrorStack = (message, stack, span) => {\n  const out = [message];\n  const lines = stack.startsWith(message) ? stack.slice(message.length).split(\"\\n\") : stack.split(\"\\n\");\n  for (let i = 1; i < lines.length; i++) {\n    if (lines[i].includes(\" at new BaseEffectError\") || lines[i].includes(\" at new YieldableError\")) {\n      i++;\n      continue;\n    }\n    if (lines[i].includes(\"Generator.next\")) {\n      break;\n    }\n    if (lines[i].includes(\"effect_internal_function\")) {\n      break;\n    }\n    out.push(lines[i].replace(/at .*effect_instruction_i.*\\((.*)\\)/, \"at $1\").replace(/EffectPrimitive\\.\\w+/, \"<anonymous>\"));\n  }\n  if (span) {\n    let current = span;\n    let i = 0;\n    while (current && current._tag === \"Span\" && i < 10) {\n      const stackFn = spanToTrace.get(current);\n      if (typeof stackFn === \"function\") {\n        const stack = stackFn();\n        if (typeof stack === \"string\") {\n          const locationMatchAll = stack.matchAll(locationRegex);\n          let match = false;\n          for (const [, location] of locationMatchAll) {\n            match = true;\n            out.push(`    at ${current.name} (${location})`);\n          }\n          if (!match) {\n            out.push(`    at ${current.name} (${stack.replace(/^at /, \"\")})`);\n          }\n        } else {\n          out.push(`    at ${current.name}`);\n        }\n      } else {\n        out.push(`    at ${current.name}`);\n      }\n      current = Option.getOrUndefined(current.parent);\n      i++;\n    }\n  }\n  return out.join(\"\\n\");\n};\n/** @internal */\nexport const spanSymbol = /*#__PURE__*/Symbol.for(\"effect/SpanAnnotation\");\n/** @internal */\nexport const prettyErrors = cause => reduceWithContext(cause, void 0, {\n  emptyCase: () => [],\n  dieCase: (_, unknownError) => {\n    return [new PrettyError(unknownError)];\n  },\n  failCase: (_, error) => {\n    return [new PrettyError(error)];\n  },\n  interruptCase: () => [],\n  parallelCase: (_, l, r) => [...l, ...r],\n  sequentialCase: (_, l, r) => [...l, ...r]\n});\n//# sourceMappingURL=cause.js.map","/** @internal */\nexport const OP_STATE_PENDING = \"Pending\";\n/** @internal */\nexport const OP_STATE_DONE = \"Done\";\n//# sourceMappingURL=deferred.js.map","import * as OpCodes from \"./opCodes/deferred.js\";\n/** @internal */\nconst DeferredSymbolKey = \"effect/Deferred\";\n/** @internal */\nexport const DeferredTypeId = /*#__PURE__*/Symbol.for(DeferredSymbolKey);\n/** @internal */\nexport const deferredVariance = {\n  /* c8 ignore next */\n  _E: _ => _,\n  /* c8 ignore next */\n  _A: _ => _\n};\n/** @internal */\nexport const pending = joiners => {\n  return {\n    _tag: OpCodes.OP_STATE_PENDING,\n    joiners\n  };\n};\n/** @internal */\nexport const done = effect => {\n  return {\n    _tag: OpCodes.OP_STATE_DONE,\n    effect\n  };\n};\n//# sourceMappingURL=deferred.js.map","/** @internal */\nexport class SingleShotGen {\n  self;\n  called = false;\n  constructor(self) {\n    this.self = self;\n  }\n  next(a) {\n    return this.called ? {\n      value: a,\n      done: true\n    } : (this.called = true, {\n      value: this.self,\n      done: false\n    });\n  }\n  return(a) {\n    return {\n      value: a,\n      done: true\n    };\n  }\n  throw(e) {\n    throw e;\n  }\n  [Symbol.iterator]() {\n    return new SingleShotGen(this.self);\n  }\n}\n//# sourceMappingURL=singleShotGen.js.map","import * as Arr from \"../Array.js\";\nimport * as Chunk from \"../Chunk.js\";\nimport * as Context from \"../Context.js\";\nimport * as Duration from \"../Duration.js\";\nimport * as Either from \"../Either.js\";\nimport * as Equal from \"../Equal.js\";\nimport * as FiberId from \"../FiberId.js\";\nimport { dual, identity, pipe } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as Hash from \"../Hash.js\";\nimport * as HashMap from \"../HashMap.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\";\nimport * as List from \"../List.js\";\nimport * as MutableRef from \"../MutableRef.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport { hasProperty, isObject, isPromiseLike } from \"../Predicate.js\";\nimport * as RuntimeFlagsPatch from \"../RuntimeFlagsPatch.js\";\nimport { internalCall, YieldWrap } from \"../Utils.js\";\nimport * as blockedRequests_ from \"./blockedRequests.js\";\nimport * as internalCause from \"./cause.js\";\nimport * as deferred from \"./deferred.js\";\nimport * as internalDiffer from \"./differ.js\";\nimport { CommitPrototype, effectVariance, StructuralCommitPrototype } from \"./effectable.js\";\nimport { getBugErrorMessage } from \"./errors.js\";\nimport * as DeferredOpCodes from \"./opCodes/deferred.js\";\nimport * as OpCodes from \"./opCodes/effect.js\";\nimport * as runtimeFlags_ from \"./runtimeFlags.js\";\nimport { SingleShotGen } from \"./singleShotGen.js\";\n// -----------------------------------------------------------------------------\n// Effect\n// -----------------------------------------------------------------------------\n/**\n * @internal\n */\nexport const blocked = (blockedRequests, _continue) => {\n  const effect = new EffectPrimitive(\"Blocked\");\n  effect.effect_instruction_i0 = blockedRequests;\n  effect.effect_instruction_i1 = _continue;\n  return effect;\n};\n/**\n * @internal\n */\nexport const runRequestBlock = blockedRequests => {\n  const effect = new EffectPrimitive(\"RunBlocked\");\n  effect.effect_instruction_i0 = blockedRequests;\n  return effect;\n};\n/** @internal */\nexport const EffectTypeId = /*#__PURE__*/Symbol.for(\"effect/Effect\");\n/** @internal */\nexport class RevertFlags {\n  patch;\n  op;\n  _op = OpCodes.OP_REVERT_FLAGS;\n  constructor(patch, op) {\n    this.patch = patch;\n    this.op = op;\n  }\n}\nclass EffectPrimitive {\n  _op;\n  effect_instruction_i0 = undefined;\n  effect_instruction_i1 = undefined;\n  effect_instruction_i2 = undefined;\n  trace = undefined;\n  [EffectTypeId] = effectVariance;\n  constructor(_op) {\n    this._op = _op;\n  }\n  [Equal.symbol](that) {\n    return this === that;\n  }\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.random(this));\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  toJSON() {\n    return {\n      _id: \"Effect\",\n      _op: this._op,\n      effect_instruction_i0: toJSON(this.effect_instruction_i0),\n      effect_instruction_i1: toJSON(this.effect_instruction_i1),\n      effect_instruction_i2: toJSON(this.effect_instruction_i2)\n    };\n  }\n  toString() {\n    return format(this.toJSON());\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n  [Symbol.iterator]() {\n    return new SingleShotGen(new YieldWrap(this));\n  }\n}\n/** @internal */\nclass EffectPrimitiveFailure {\n  _op;\n  effect_instruction_i0 = undefined;\n  effect_instruction_i1 = undefined;\n  effect_instruction_i2 = undefined;\n  trace = undefined;\n  [EffectTypeId] = effectVariance;\n  constructor(_op) {\n    this._op = _op;\n    // @ts-expect-error\n    this._tag = _op;\n  }\n  [Equal.symbol](that) {\n    return exitIsExit(that) && that._op === \"Failure\" &&\n    // @ts-expect-error\n    Equal.equals(this.effect_instruction_i0, that.effect_instruction_i0);\n  }\n  [Hash.symbol]() {\n    return pipe(\n    // @ts-expect-error\n    Hash.string(this._tag),\n    // @ts-expect-error\n    Hash.combine(Hash.hash(this.effect_instruction_i0)), Hash.cached(this));\n  }\n  get cause() {\n    return this.effect_instruction_i0;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  toJSON() {\n    return {\n      _id: \"Exit\",\n      _tag: this._op,\n      cause: this.cause.toJSON()\n    };\n  }\n  toString() {\n    return format(this.toJSON());\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n  [Symbol.iterator]() {\n    return new SingleShotGen(new YieldWrap(this));\n  }\n}\n/** @internal */\nclass EffectPrimitiveSuccess {\n  _op;\n  effect_instruction_i0 = undefined;\n  effect_instruction_i1 = undefined;\n  effect_instruction_i2 = undefined;\n  trace = undefined;\n  [EffectTypeId] = effectVariance;\n  constructor(_op) {\n    this._op = _op;\n    // @ts-expect-error\n    this._tag = _op;\n  }\n  [Equal.symbol](that) {\n    return exitIsExit(that) && that._op === \"Success\" &&\n    // @ts-expect-error\n    Equal.equals(this.effect_instruction_i0, that.effect_instruction_i0);\n  }\n  [Hash.symbol]() {\n    return pipe(\n    // @ts-expect-error\n    Hash.string(this._tag),\n    // @ts-expect-error\n    Hash.combine(Hash.hash(this.effect_instruction_i0)), Hash.cached(this));\n  }\n  get value() {\n    return this.effect_instruction_i0;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  toJSON() {\n    return {\n      _id: \"Exit\",\n      _tag: this._op,\n      value: toJSON(this.value)\n    };\n  }\n  toString() {\n    return format(this.toJSON());\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n  [Symbol.iterator]() {\n    return new SingleShotGen(new YieldWrap(this));\n  }\n}\n/** @internal */\nexport const isEffect = u => hasProperty(u, EffectTypeId);\n/* @internal */\nexport const withFiberRuntime = withRuntime => {\n  const effect = new EffectPrimitive(OpCodes.OP_WITH_RUNTIME);\n  effect.effect_instruction_i0 = withRuntime;\n  return effect;\n};\n/* @internal */\nexport const acquireUseRelease = /*#__PURE__*/dual(3, (acquire, use, release) => uninterruptibleMask(restore => flatMap(acquire, a => flatMap(exit(suspend(() => restore(use(a)))), exit => {\n  return suspend(() => release(a, exit)).pipe(matchCauseEffect({\n    onFailure: cause => {\n      switch (exit._tag) {\n        case OpCodes.OP_FAILURE:\n          return failCause(internalCause.sequential(exit.effect_instruction_i0, cause));\n        case OpCodes.OP_SUCCESS:\n          return failCause(cause);\n      }\n    },\n    onSuccess: () => exit\n  }));\n}))));\n/* @internal */\nexport const as = /*#__PURE__*/dual(2, (self, value) => flatMap(self, () => succeed(value)));\n/* @internal */\nexport const asVoid = self => as(self, void 0);\n/* @internal */\nexport const custom = function () {\n  const wrapper = new EffectPrimitive(OpCodes.OP_COMMIT);\n  switch (arguments.length) {\n    case 2:\n      {\n        wrapper.effect_instruction_i0 = arguments[0];\n        wrapper.commit = arguments[1];\n        break;\n      }\n    case 3:\n      {\n        wrapper.effect_instruction_i0 = arguments[0];\n        wrapper.effect_instruction_i1 = arguments[1];\n        wrapper.commit = arguments[2];\n        break;\n      }\n    case 4:\n      {\n        wrapper.effect_instruction_i0 = arguments[0];\n        wrapper.effect_instruction_i1 = arguments[1];\n        wrapper.effect_instruction_i2 = arguments[2];\n        wrapper.commit = arguments[3];\n        break;\n      }\n    default:\n      {\n        throw new Error(getBugErrorMessage(\"you're not supposed to end up here\"));\n      }\n  }\n  return wrapper;\n};\n/* @internal */\nexport const unsafeAsync = (register, blockingOn = FiberId.none) => {\n  const effect = new EffectPrimitive(OpCodes.OP_ASYNC);\n  let cancelerRef = undefined;\n  effect.effect_instruction_i0 = resume => {\n    cancelerRef = register(resume);\n  };\n  effect.effect_instruction_i1 = blockingOn;\n  return onInterrupt(effect, _ => isEffect(cancelerRef) ? cancelerRef : void_);\n};\n/* @internal */\nexport const asyncInterrupt = (register, blockingOn = FiberId.none) => suspend(() => unsafeAsync(register, blockingOn));\nconst async_ = (resume, blockingOn = FiberId.none) => {\n  return custom(resume, function () {\n    let backingResume = undefined;\n    let pendingEffect = undefined;\n    function proxyResume(effect) {\n      if (backingResume) {\n        backingResume(effect);\n      } else if (pendingEffect === undefined) {\n        pendingEffect = effect;\n      }\n    }\n    const effect = new EffectPrimitive(OpCodes.OP_ASYNC);\n    effect.effect_instruction_i0 = resume => {\n      backingResume = resume;\n      if (pendingEffect) {\n        resume(pendingEffect);\n      }\n    };\n    effect.effect_instruction_i1 = blockingOn;\n    let cancelerRef = undefined;\n    let controllerRef = undefined;\n    if (this.effect_instruction_i0.length !== 1) {\n      controllerRef = new AbortController();\n      cancelerRef = internalCall(() => this.effect_instruction_i0(proxyResume, controllerRef.signal));\n    } else {\n      cancelerRef = internalCall(() => this.effect_instruction_i0(proxyResume));\n    }\n    return cancelerRef || controllerRef ? onInterrupt(effect, _ => {\n      if (controllerRef) {\n        controllerRef.abort();\n      }\n      return cancelerRef ?? void_;\n    }) : effect;\n  });\n};\nexport { /** @internal */\nasync_ as async };\n/* @internal */\nexport const catchAllCause = /*#__PURE__*/dual(2, (self, f) => {\n  const effect = new EffectPrimitive(OpCodes.OP_ON_FAILURE);\n  effect.effect_instruction_i0 = self;\n  effect.effect_instruction_i1 = f;\n  return effect;\n});\n/* @internal */\nexport const catchAll = /*#__PURE__*/dual(2, (self, f) => matchEffect(self, {\n  onFailure: f,\n  onSuccess: succeed\n}));\n/* @internal */\nexport const catchIf = /*#__PURE__*/dual(3, (self, predicate, f) => catchAllCause(self, cause => {\n  const either = internalCause.failureOrCause(cause);\n  switch (either._tag) {\n    case \"Left\":\n      return predicate(either.left) ? f(either.left) : failCause(cause);\n    case \"Right\":\n      return failCause(either.right);\n  }\n}));\n/* @internal */\nexport const catchSome = /*#__PURE__*/dual(2, (self, pf) => catchAllCause(self, cause => {\n  const either = internalCause.failureOrCause(cause);\n  switch (either._tag) {\n    case \"Left\":\n      return pipe(pf(either.left), Option.getOrElse(() => failCause(cause)));\n    case \"Right\":\n      return failCause(either.right);\n  }\n}));\n/* @internal */\nexport const checkInterruptible = f => withFiberRuntime((_, status) => f(runtimeFlags_.interruption(status.runtimeFlags)));\nconst originalSymbol = /*#__PURE__*/Symbol.for(\"effect/OriginalAnnotation\");\n/* @internal */\nexport const originalInstance = obj => {\n  if (hasProperty(obj, originalSymbol)) {\n    // @ts-expect-error\n    return obj[originalSymbol];\n  }\n  return obj;\n};\n/* @internal */\nexport const capture = (obj, span) => {\n  if (Option.isSome(span)) {\n    return new Proxy(obj, {\n      has(target, p) {\n        return p === internalCause.spanSymbol || p === originalSymbol || p in target;\n      },\n      get(target, p) {\n        if (p === internalCause.spanSymbol) {\n          return span.value;\n        }\n        if (p === originalSymbol) {\n          return obj;\n        }\n        // @ts-expect-error\n        return target[p];\n      }\n    });\n  }\n  return obj;\n};\n/* @internal */\nexport const die = defect => isObject(defect) && !(internalCause.spanSymbol in defect) ? withFiberRuntime(fiber => failCause(internalCause.die(capture(defect, currentSpanFromFiber(fiber))))) : failCause(internalCause.die(defect));\n/* @internal */\nexport const dieMessage = message => failCauseSync(() => internalCause.die(new RuntimeException(message)));\n/* @internal */\nexport const dieSync = evaluate => flatMap(sync(evaluate), die);\n/* @internal */\nexport const either = self => matchEffect(self, {\n  onFailure: e => succeed(Either.left(e)),\n  onSuccess: a => succeed(Either.right(a))\n});\n/* @internal */\nexport const exit = self => matchCause(self, {\n  onFailure: exitFailCause,\n  onSuccess: exitSucceed\n});\n/* @internal */\nexport const fail = error => isObject(error) && !(internalCause.spanSymbol in error) ? withFiberRuntime(fiber => failCause(internalCause.fail(capture(error, currentSpanFromFiber(fiber))))) : failCause(internalCause.fail(error));\n/* @internal */\nexport const failSync = evaluate => flatMap(sync(evaluate), fail);\n/* @internal */\nexport const failCause = cause => {\n  const effect = new EffectPrimitiveFailure(OpCodes.OP_FAILURE);\n  effect.effect_instruction_i0 = cause;\n  return effect;\n};\n/* @internal */\nexport const failCauseSync = evaluate => flatMap(sync(evaluate), failCause);\n/* @internal */\nexport const fiberId = /*#__PURE__*/withFiberRuntime(state => succeed(state.id()));\n/* @internal */\nexport const fiberIdWith = f => withFiberRuntime(state => f(state.id()));\n/* @internal */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  const effect = new EffectPrimitive(OpCodes.OP_ON_SUCCESS);\n  effect.effect_instruction_i0 = self;\n  effect.effect_instruction_i1 = f;\n  return effect;\n});\n/* @internal */\nexport const andThen = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => {\n  const b = typeof f === \"function\" ? f(a) : f;\n  if (isEffect(b)) {\n    return b;\n  } else if (isPromiseLike(b)) {\n    return unsafeAsync(resume => {\n      b.then(a => resume(succeed(a)), e => resume(fail(new UnknownException(e, \"An unknown error occurred in Effect.andThen\"))));\n    });\n  }\n  return succeed(b);\n}));\n/* @internal */\nexport const step = self => {\n  const effect = new EffectPrimitive(\"OnStep\");\n  effect.effect_instruction_i0 = self;\n  return effect;\n};\n/* @internal */\nexport const flatten = self => flatMap(self, identity);\n/* @internal */\nexport const flip = self => matchEffect(self, {\n  onFailure: succeed,\n  onSuccess: fail\n});\n/* @internal */\nexport const matchCause = /*#__PURE__*/dual(2, (self, options) => matchCauseEffect(self, {\n  onFailure: cause => succeed(options.onFailure(cause)),\n  onSuccess: a => succeed(options.onSuccess(a))\n}));\n/* @internal */\nexport const matchCauseEffect = /*#__PURE__*/dual(2, (self, options) => {\n  const effect = new EffectPrimitive(OpCodes.OP_ON_SUCCESS_AND_FAILURE);\n  effect.effect_instruction_i0 = self;\n  effect.effect_instruction_i1 = options.onFailure;\n  effect.effect_instruction_i2 = options.onSuccess;\n  return effect;\n});\n/* @internal */\nexport const matchEffect = /*#__PURE__*/dual(2, (self, options) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const defects = internalCause.defects(cause);\n    if (defects.length > 0) {\n      return failCause(internalCause.electFailures(cause));\n    }\n    const failures = internalCause.failures(cause);\n    if (failures.length > 0) {\n      return options.onFailure(Chunk.unsafeHead(failures));\n    }\n    return failCause(cause);\n  },\n  onSuccess: options.onSuccess\n}));\n/* @internal */\nexport const forEachSequential = /*#__PURE__*/dual(2, (self, f) => suspend(() => {\n  const arr = Arr.fromIterable(self);\n  const ret = Arr.allocate(arr.length);\n  let i = 0;\n  return as(whileLoop({\n    while: () => i < arr.length,\n    body: () => f(arr[i], i),\n    step: b => {\n      ret[i++] = b;\n    }\n  }), ret);\n}));\n/* @internal */\nexport const forEachSequentialDiscard = /*#__PURE__*/dual(2, (self, f) => suspend(() => {\n  const arr = Arr.fromIterable(self);\n  let i = 0;\n  return whileLoop({\n    while: () => i < arr.length,\n    body: () => f(arr[i], i),\n    step: () => {\n      i++;\n    }\n  });\n}));\n/* @internal */\nexport const if_ = /*#__PURE__*/dual(args => typeof args[0] === \"boolean\" || isEffect(args[0]), (self, options) => isEffect(self) ? flatMap(self, b => b ? options.onTrue() : options.onFalse()) : self ? options.onTrue() : options.onFalse());\n/* @internal */\nexport const interrupt = /*#__PURE__*/flatMap(fiberId, fiberId => interruptWith(fiberId));\n/* @internal */\nexport const interruptWith = fiberId => failCause(internalCause.interrupt(fiberId));\n/* @internal */\nexport const interruptible = self => {\n  const effect = new EffectPrimitive(OpCodes.OP_UPDATE_RUNTIME_FLAGS);\n  effect.effect_instruction_i0 = RuntimeFlagsPatch.enable(runtimeFlags_.Interruption);\n  effect.effect_instruction_i1 = () => self;\n  return effect;\n};\n/* @internal */\nexport const interruptibleMask = f => custom(f, function () {\n  const effect = new EffectPrimitive(OpCodes.OP_UPDATE_RUNTIME_FLAGS);\n  effect.effect_instruction_i0 = RuntimeFlagsPatch.enable(runtimeFlags_.Interruption);\n  effect.effect_instruction_i1 = oldFlags => runtimeFlags_.interruption(oldFlags) ? internalCall(() => this.effect_instruction_i0(interruptible)) : internalCall(() => this.effect_instruction_i0(uninterruptible));\n  return effect;\n});\n/* @internal */\nexport const intoDeferred = /*#__PURE__*/dual(2, (self, deferred) => uninterruptibleMask(restore => flatMap(exit(restore(self)), exit => deferredDone(deferred, exit))));\n/* @internal */\nexport const map = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => sync(() => f(a))));\n/* @internal */\nexport const mapBoth = /*#__PURE__*/dual(2, (self, options) => matchEffect(self, {\n  onFailure: e => failSync(() => options.onFailure(e)),\n  onSuccess: a => sync(() => options.onSuccess(a))\n}));\n/* @internal */\nexport const mapError = /*#__PURE__*/dual(2, (self, f) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const either = internalCause.failureOrCause(cause);\n    switch (either._tag) {\n      case \"Left\":\n        {\n          return failSync(() => f(either.left));\n        }\n      case \"Right\":\n        {\n          return failCause(either.right);\n        }\n    }\n  },\n  onSuccess: succeed\n}));\n/* @internal */\nexport const onError = /*#__PURE__*/dual(2, (self, cleanup) => onExit(self, exit => exitIsSuccess(exit) ? void_ : cleanup(exit.effect_instruction_i0)));\n/* @internal */\nexport const onExit = /*#__PURE__*/dual(2, (self, cleanup) => uninterruptibleMask(restore => matchCauseEffect(restore(self), {\n  onFailure: cause1 => {\n    const result = exitFailCause(cause1);\n    return matchCauseEffect(cleanup(result), {\n      onFailure: cause2 => exitFailCause(internalCause.sequential(cause1, cause2)),\n      onSuccess: () => result\n    });\n  },\n  onSuccess: success => {\n    const result = exitSucceed(success);\n    return zipRight(cleanup(result), result);\n  }\n})));\n/* @internal */\nexport const onInterrupt = /*#__PURE__*/dual(2, (self, cleanup) => onExit(self, exitMatch({\n  onFailure: cause => internalCause.isInterruptedOnly(cause) ? asVoid(cleanup(internalCause.interruptors(cause))) : void_,\n  onSuccess: () => void_\n})));\n/* @internal */\nexport const orElse = /*#__PURE__*/dual(2, (self, that) => attemptOrElse(self, that, succeed));\n/* @internal */\nexport const orDie = self => orDieWith(self, identity);\n/* @internal */\nexport const orDieWith = /*#__PURE__*/dual(2, (self, f) => matchEffect(self, {\n  onFailure: e => die(f(e)),\n  onSuccess: succeed\n}));\n/* @internal */\nexport const partitionMap = Arr.partitionMap;\n/* @internal */\nexport const runtimeFlags = /*#__PURE__*/withFiberRuntime((_, status) => succeed(status.runtimeFlags));\n/* @internal */\nexport const succeed = value => {\n  const effect = new EffectPrimitiveSuccess(OpCodes.OP_SUCCESS);\n  effect.effect_instruction_i0 = value;\n  return effect;\n};\n/* @internal */\nexport const suspend = evaluate => {\n  const effect = new EffectPrimitive(OpCodes.OP_COMMIT);\n  effect.commit = evaluate;\n  return effect;\n};\n/* @internal */\nexport const sync = thunk => {\n  const effect = new EffectPrimitive(OpCodes.OP_SYNC);\n  effect.effect_instruction_i0 = thunk;\n  return effect;\n};\n/* @internal */\nexport const tap = /*#__PURE__*/dual(args => args.length === 3 || args.length === 2 && !(isObject(args[1]) && \"onlyEffect\" in args[1]), (self, f) => flatMap(self, a => {\n  const b = typeof f === \"function\" ? f(a) : f;\n  if (isEffect(b)) {\n    return as(b, a);\n  } else if (isPromiseLike(b)) {\n    return unsafeAsync(resume => {\n      b.then(_ => resume(succeed(a)), e => resume(fail(new UnknownException(e, \"An unknown error occurred in Effect.tap\"))));\n    });\n  }\n  return succeed(a);\n}));\n/* @internal */\nexport const transplant = f => withFiberRuntime(state => {\n  const scopeOverride = state.getFiberRef(currentForkScopeOverride);\n  const scope = pipe(scopeOverride, Option.getOrElse(() => state.scope()));\n  return f(fiberRefLocally(currentForkScopeOverride, Option.some(scope)));\n});\n/* @internal */\nexport const attemptOrElse = /*#__PURE__*/dual(3, (self, that, onSuccess) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const defects = internalCause.defects(cause);\n    if (defects.length > 0) {\n      return failCause(Option.getOrThrow(internalCause.keepDefectsAndElectFailures(cause)));\n    }\n    return that();\n  },\n  onSuccess\n}));\n/* @internal */\nexport const uninterruptible = self => {\n  const effect = new EffectPrimitive(OpCodes.OP_UPDATE_RUNTIME_FLAGS);\n  effect.effect_instruction_i0 = RuntimeFlagsPatch.disable(runtimeFlags_.Interruption);\n  effect.effect_instruction_i1 = () => self;\n  return effect;\n};\n/* @internal */\nexport const uninterruptibleMask = f => custom(f, function () {\n  const effect = new EffectPrimitive(OpCodes.OP_UPDATE_RUNTIME_FLAGS);\n  effect.effect_instruction_i0 = RuntimeFlagsPatch.disable(runtimeFlags_.Interruption);\n  effect.effect_instruction_i1 = oldFlags => runtimeFlags_.interruption(oldFlags) ? internalCall(() => this.effect_instruction_i0(interruptible)) : internalCall(() => this.effect_instruction_i0(uninterruptible));\n  return effect;\n});\nconst void_ = /*#__PURE__*/succeed(void 0);\nexport { /* @internal */\nvoid_ as void };\n/* @internal */\nexport const updateRuntimeFlags = patch => {\n  const effect = new EffectPrimitive(OpCodes.OP_UPDATE_RUNTIME_FLAGS);\n  effect.effect_instruction_i0 = patch;\n  effect.effect_instruction_i1 = void 0;\n  return effect;\n};\n/* @internal */\nexport const whenEffect = /*#__PURE__*/dual(2, (self, condition) => flatMap(condition, b => {\n  if (b) {\n    return pipe(self, map(Option.some));\n  }\n  return succeed(Option.none());\n}));\n/* @internal */\nexport const whileLoop = options => {\n  const effect = new EffectPrimitive(OpCodes.OP_WHILE);\n  effect.effect_instruction_i0 = options.while;\n  effect.effect_instruction_i1 = options.body;\n  effect.effect_instruction_i2 = options.step;\n  return effect;\n};\n/* @internal */\nexport const fromIterator = iterator => suspend(() => {\n  const effect = new EffectPrimitive(OpCodes.OP_ITERATOR);\n  effect.effect_instruction_i0 = iterator();\n  return effect;\n});\n/* @internal */\nexport const gen = function () {\n  const f = arguments.length === 1 ? arguments[0] : arguments[1].bind(arguments[0]);\n  return fromIterator(() => f(pipe));\n};\n/** @internal */\nexport const fnUntraced = (body, ...pipeables) => Object.defineProperty(pipeables.length === 0 ? function (...args) {\n  return fromIterator(() => body.apply(this, args));\n} : function (...args) {\n  let effect = fromIterator(() => body.apply(this, args));\n  for (const x of pipeables) {\n    effect = x(effect, ...args);\n  }\n  return effect;\n}, \"length\", {\n  value: body.length,\n  configurable: true\n});\n/* @internal */\nexport const withConcurrency = /*#__PURE__*/dual(2, (self, concurrency) => fiberRefLocally(self, currentConcurrency, concurrency));\n/* @internal */\nexport const withRequestBatching = /*#__PURE__*/dual(2, (self, requestBatching) => fiberRefLocally(self, currentRequestBatching, requestBatching));\n/* @internal */\nexport const withRuntimeFlags = /*#__PURE__*/dual(2, (self, update) => {\n  const effect = new EffectPrimitive(OpCodes.OP_UPDATE_RUNTIME_FLAGS);\n  effect.effect_instruction_i0 = update;\n  effect.effect_instruction_i1 = () => self;\n  return effect;\n});\n/** @internal */\nexport const withTracerEnabled = /*#__PURE__*/dual(2, (effect, enabled) => fiberRefLocally(effect, currentTracerEnabled, enabled));\n/** @internal */\nexport const withTracerTiming = /*#__PURE__*/dual(2, (effect, enabled) => fiberRefLocally(effect, currentTracerTimingEnabled, enabled));\n/* @internal */\nexport const yieldNow = options => {\n  const effect = new EffectPrimitive(OpCodes.OP_YIELD);\n  return typeof options?.priority !== \"undefined\" ? withSchedulingPriority(effect, options.priority) : effect;\n};\n/* @internal */\nexport const zip = /*#__PURE__*/dual(2, (self, that) => flatMap(self, a => map(that, b => [a, b])));\n/* @internal */\nexport const zipFlatten = /*#__PURE__*/dual(2, (self, that) => flatMap(self, a => map(that, b => [...a, b])));\n/* @internal */\nexport const zipLeft = /*#__PURE__*/dual(2, (self, that) => flatMap(self, a => as(that, a)));\n/* @internal */\nexport const zipRight = /*#__PURE__*/dual(2, (self, that) => flatMap(self, () => that));\n/* @internal */\nexport const zipWith = /*#__PURE__*/dual(3, (self, that, f) => flatMap(self, a => map(that, b => f(a, b))));\n/* @internal */\nexport const never = /*#__PURE__*/asyncInterrupt(() => {\n  const interval = setInterval(() => {\n    //\n  }, 2 ** 31 - 1);\n  return sync(() => clearInterval(interval));\n});\n// -----------------------------------------------------------------------------\n// Fiber\n// -----------------------------------------------------------------------------\n/* @internal */\nexport const interruptFiber = self => flatMap(fiberId, fiberId => pipe(self, interruptAsFiber(fiberId)));\n/* @internal */\nexport const interruptAsFiber = /*#__PURE__*/dual(2, (self, fiberId) => flatMap(self.interruptAsFork(fiberId), () => self.await));\n// -----------------------------------------------------------------------------\n// LogLevel\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const logLevelAll = {\n  _tag: \"All\",\n  syslog: 0,\n  label: \"ALL\",\n  ordinal: Number.MIN_SAFE_INTEGER,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const logLevelFatal = {\n  _tag: \"Fatal\",\n  syslog: 2,\n  label: \"FATAL\",\n  ordinal: 50000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const logLevelError = {\n  _tag: \"Error\",\n  syslog: 3,\n  label: \"ERROR\",\n  ordinal: 40000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const logLevelWarning = {\n  _tag: \"Warning\",\n  syslog: 4,\n  label: \"WARN\",\n  ordinal: 30000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const logLevelInfo = {\n  _tag: \"Info\",\n  syslog: 6,\n  label: \"INFO\",\n  ordinal: 20000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const logLevelDebug = {\n  _tag: \"Debug\",\n  syslog: 7,\n  label: \"DEBUG\",\n  ordinal: 10000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const logLevelTrace = {\n  _tag: \"Trace\",\n  syslog: 7,\n  label: \"TRACE\",\n  ordinal: 0,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const logLevelNone = {\n  _tag: \"None\",\n  syslog: 7,\n  label: \"OFF\",\n  ordinal: Number.MAX_SAFE_INTEGER,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const allLogLevels = [logLevelAll, logLevelTrace, logLevelDebug, logLevelInfo, logLevelWarning, logLevelError, logLevelFatal, logLevelNone];\n// -----------------------------------------------------------------------------\n// FiberRef\n// -----------------------------------------------------------------------------\n/** @internal */\nconst FiberRefSymbolKey = \"effect/FiberRef\";\n/** @internal */\nexport const FiberRefTypeId = /*#__PURE__*/Symbol.for(FiberRefSymbolKey);\nconst fiberRefVariance = {\n  /* c8 ignore next */\n  _A: _ => _\n};\n/* @internal */\nexport const fiberRefGet = self => withFiberRuntime(fiber => exitSucceed(fiber.getFiberRef(self)));\n/* @internal */\nexport const fiberRefGetAndSet = /*#__PURE__*/dual(2, (self, value) => fiberRefModify(self, v => [v, value]));\n/* @internal */\nexport const fiberRefGetAndUpdate = /*#__PURE__*/dual(2, (self, f) => fiberRefModify(self, v => [v, f(v)]));\n/* @internal */\nexport const fiberRefGetAndUpdateSome = /*#__PURE__*/dual(2, (self, pf) => fiberRefModify(self, v => [v, Option.getOrElse(pf(v), () => v)]));\n/* @internal */\nexport const fiberRefGetWith = /*#__PURE__*/dual(2, (self, f) => flatMap(fiberRefGet(self), f));\n/* @internal */\nexport const fiberRefSet = /*#__PURE__*/dual(2, (self, value) => fiberRefModify(self, () => [void 0, value]));\n/* @internal */\nexport const fiberRefDelete = self => withFiberRuntime(state => {\n  state.unsafeDeleteFiberRef(self);\n  return void_;\n});\n/* @internal */\nexport const fiberRefReset = self => fiberRefSet(self, self.initial);\n/* @internal */\nexport const fiberRefModify = /*#__PURE__*/dual(2, (self, f) => withFiberRuntime(state => {\n  const [b, a] = f(state.getFiberRef(self));\n  state.setFiberRef(self, a);\n  return succeed(b);\n}));\n/* @internal */\nexport const fiberRefModifySome = (self, def, f) => fiberRefModify(self, v => Option.getOrElse(f(v), () => [def, v]));\n/* @internal */\nexport const fiberRefUpdate = /*#__PURE__*/dual(2, (self, f) => fiberRefModify(self, v => [void 0, f(v)]));\n/* @internal */\nexport const fiberRefUpdateSome = /*#__PURE__*/dual(2, (self, pf) => fiberRefModify(self, v => [void 0, Option.getOrElse(pf(v), () => v)]));\n/* @internal */\nexport const fiberRefUpdateAndGet = /*#__PURE__*/dual(2, (self, f) => fiberRefModify(self, v => {\n  const result = f(v);\n  return [result, result];\n}));\n/* @internal */\nexport const fiberRefUpdateSomeAndGet = /*#__PURE__*/dual(2, (self, pf) => fiberRefModify(self, v => {\n  const result = Option.getOrElse(pf(v), () => v);\n  return [result, result];\n}));\n// circular\n/** @internal */\nconst RequestResolverSymbolKey = \"effect/RequestResolver\";\n/** @internal */\nexport const RequestResolverTypeId = /*#__PURE__*/Symbol.for(RequestResolverSymbolKey);\nconst requestResolverVariance = {\n  /* c8 ignore next */\n  _A: _ => _,\n  /* c8 ignore next */\n  _R: _ => _\n};\n/** @internal */\nexport class RequestResolverImpl {\n  runAll;\n  target;\n  [RequestResolverTypeId] = requestResolverVariance;\n  constructor(runAll, target) {\n    this.runAll = runAll;\n    this.target = target;\n  }\n  [Hash.symbol]() {\n    return Hash.cached(this, this.target ? Hash.hash(this.target) : Hash.random(this));\n  }\n  [Equal.symbol](that) {\n    return this.target ? isRequestResolver(that) && Equal.equals(this.target, that.target) : this === that;\n  }\n  identified(...ids) {\n    return new RequestResolverImpl(this.runAll, Chunk.fromIterable(ids));\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport const isRequestResolver = u => hasProperty(u, RequestResolverTypeId);\n// end\n/** @internal */\nexport const resolverLocally = /*#__PURE__*/dual(3, (use, self, value) => new RequestResolverImpl(requests => fiberRefLocally(use.runAll(requests), self, value), Chunk.make(\"Locally\", use, self, value)));\n/** @internal */\nexport const requestBlockLocally = (self, ref, value) => blockedRequests_.reduce(self, LocallyReducer(ref, value));\nconst LocallyReducer = (ref, value) => ({\n  emptyCase: () => blockedRequests_.empty,\n  parCase: (left, right) => blockedRequests_.par(left, right),\n  seqCase: (left, right) => blockedRequests_.seq(left, right),\n  singleCase: (dataSource, blockedRequest) => blockedRequests_.single(resolverLocally(dataSource, ref, value), blockedRequest)\n});\n/* @internal */\nexport const fiberRefLocally = /*#__PURE__*/dual(3, (use, self, value) => acquireUseRelease(zipLeft(fiberRefGet(self), fiberRefSet(self, value)), () => use, oldValue => fiberRefSet(self, oldValue)));\n/* @internal */\nexport const fiberRefLocallyWith = /*#__PURE__*/dual(3, (use, self, f) => fiberRefGetWith(self, a => fiberRefLocally(use, self, f(a))));\n/** @internal */\nexport const fiberRefUnsafeMake = (initial, options) => fiberRefUnsafeMakePatch(initial, {\n  differ: internalDiffer.update(),\n  fork: options?.fork ?? identity,\n  join: options?.join\n});\n/** @internal */\nexport const fiberRefUnsafeMakeHashSet = initial => {\n  const differ = internalDiffer.hashSet();\n  return fiberRefUnsafeMakePatch(initial, {\n    differ,\n    fork: differ.empty\n  });\n};\n/** @internal */\nexport const fiberRefUnsafeMakeReadonlyArray = initial => {\n  const differ = internalDiffer.readonlyArray(internalDiffer.update());\n  return fiberRefUnsafeMakePatch(initial, {\n    differ,\n    fork: differ.empty\n  });\n};\n/** @internal */\nexport const fiberRefUnsafeMakeContext = initial => {\n  const differ = internalDiffer.environment();\n  return fiberRefUnsafeMakePatch(initial, {\n    differ,\n    fork: differ.empty\n  });\n};\n/** @internal */\nexport const fiberRefUnsafeMakePatch = (initial, options) => {\n  const _fiberRef = {\n    ...CommitPrototype,\n    [FiberRefTypeId]: fiberRefVariance,\n    initial,\n    commit() {\n      return fiberRefGet(this);\n    },\n    diff: (oldValue, newValue) => options.differ.diff(oldValue, newValue),\n    combine: (first, second) => options.differ.combine(first, second),\n    patch: patch => oldValue => options.differ.patch(patch, oldValue),\n    fork: options.fork,\n    join: options.join ?? ((_, n) => n)\n  };\n  return _fiberRef;\n};\n/** @internal */\nexport const fiberRefUnsafeMakeRuntimeFlags = initial => fiberRefUnsafeMakePatch(initial, {\n  differ: runtimeFlags_.differ,\n  fork: runtimeFlags_.differ.empty\n});\n/** @internal */\nexport const currentContext = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentContext\"), () => fiberRefUnsafeMakeContext(Context.empty()));\n/** @internal */\nexport const currentSchedulingPriority = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentSchedulingPriority\"), () => fiberRefUnsafeMake(0));\n/** @internal */\nexport const currentMaxOpsBeforeYield = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentMaxOpsBeforeYield\"), () => fiberRefUnsafeMake(2048));\n/** @internal */\nexport const currentLogAnnotations = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLogAnnotation\"), () => fiberRefUnsafeMake(HashMap.empty()));\n/** @internal */\nexport const currentLogLevel = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLogLevel\"), () => fiberRefUnsafeMake(logLevelInfo));\n/** @internal */\nexport const currentLogSpan = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLogSpan\"), () => fiberRefUnsafeMake(List.empty()));\n/** @internal */\nexport const withSchedulingPriority = /*#__PURE__*/dual(2, (self, scheduler) => fiberRefLocally(self, currentSchedulingPriority, scheduler));\n/** @internal */\nexport const withMaxOpsBeforeYield = /*#__PURE__*/dual(2, (self, scheduler) => fiberRefLocally(self, currentMaxOpsBeforeYield, scheduler));\n/** @internal */\nexport const currentConcurrency = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentConcurrency\"), () => fiberRefUnsafeMake(\"unbounded\"));\n/**\n * @internal\n */\nexport const currentRequestBatching = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentRequestBatching\"), () => fiberRefUnsafeMake(true));\n/** @internal */\nexport const currentUnhandledErrorLogLevel = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentUnhandledErrorLogLevel\"), () => fiberRefUnsafeMake(Option.some(logLevelDebug)));\n/** @internal */\nexport const withUnhandledErrorLogLevel = /*#__PURE__*/dual(2, (self, level) => fiberRefLocally(self, currentUnhandledErrorLogLevel, level));\n/** @internal */\nexport const currentMetricLabels = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentMetricLabels\"), () => fiberRefUnsafeMakeReadonlyArray(Arr.empty()));\n/* @internal */\nexport const metricLabels = /*#__PURE__*/fiberRefGet(currentMetricLabels);\n/** @internal */\nexport const currentForkScopeOverride = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentForkScopeOverride\"), () => fiberRefUnsafeMake(Option.none(), {\n  fork: () => Option.none(),\n  join: (parent, _) => parent\n}));\n/** @internal */\nexport const currentInterruptedCause = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentInterruptedCause\"), () => fiberRefUnsafeMake(internalCause.empty, {\n  fork: () => internalCause.empty,\n  join: (parent, _) => parent\n}));\n/** @internal */\nexport const currentTracerEnabled = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentTracerEnabled\"), () => fiberRefUnsafeMake(true));\n/** @internal */\nexport const currentTracerTimingEnabled = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentTracerTiming\"), () => fiberRefUnsafeMake(true));\n/** @internal */\nexport const currentTracerSpanAnnotations = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentTracerSpanAnnotations\"), () => fiberRefUnsafeMake(HashMap.empty()));\n/** @internal */\nexport const currentTracerSpanLinks = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentTracerSpanLinks\"), () => fiberRefUnsafeMake(Chunk.empty()));\n// -----------------------------------------------------------------------------\n// Scope\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const ScopeTypeId = /*#__PURE__*/Symbol.for(\"effect/Scope\");\n/** @internal */\nexport const CloseableScopeTypeId = /*#__PURE__*/Symbol.for(\"effect/CloseableScope\");\n/* @internal */\nexport const scopeAddFinalizer = (self, finalizer) => self.addFinalizer(() => asVoid(finalizer));\n/* @internal */\nexport const scopeAddFinalizerExit = (self, finalizer) => self.addFinalizer(finalizer);\n/* @internal */\nexport const scopeClose = (self, exit) => self.close(exit);\n/* @internal */\nexport const scopeFork = (self, strategy) => self.fork(strategy);\n// -----------------------------------------------------------------------------\n// Cause\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const causeSquash = self => {\n  return causeSquashWith(identity)(self);\n};\n/** @internal */\nexport const causeSquashWith = /*#__PURE__*/dual(2, (self, f) => {\n  const option = pipe(self, internalCause.failureOption, Option.map(f));\n  switch (option._tag) {\n    case \"None\":\n      {\n        return pipe(internalCause.defects(self), Chunk.head, Option.match({\n          onNone: () => {\n            const interrupts = Arr.fromIterable(internalCause.interruptors(self)).flatMap(fiberId => Arr.fromIterable(FiberId.ids(fiberId)).map(id => `#${id}`));\n            return new InterruptedException(interrupts ? `Interrupted by fibers: ${interrupts.join(\", \")}` : void 0);\n          },\n          onSome: identity\n        }));\n      }\n    case \"Some\":\n      {\n        return option.value;\n      }\n  }\n});\n// -----------------------------------------------------------------------------\n// Errors\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const YieldableError = /*#__PURE__*/function () {\n  class YieldableError extends globalThis.Error {\n    commit() {\n      return fail(this);\n    }\n    toJSON() {\n      const obj = {\n        ...this\n      };\n      if (this.message) obj.message = this.message;\n      if (this.cause) obj.cause = this.cause;\n      return obj;\n    }\n    [NodeInspectSymbol]() {\n      if (this.toString !== globalThis.Error.prototype.toString) {\n        return this.stack ? `${this.toString()}\\n${this.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : this.toString();\n      } else if (\"Bun\" in globalThis) {\n        return internalCause.pretty(internalCause.fail(this), {\n          renderErrorCause: true\n        });\n      }\n      return this;\n    }\n  }\n  Object.assign(YieldableError.prototype, StructuralCommitPrototype);\n  return YieldableError;\n}();\nconst makeException = (proto, tag) => {\n  class Base extends YieldableError {\n    _tag = tag;\n  }\n  Object.assign(Base.prototype, proto);\n  Base.prototype.name = tag;\n  return Base;\n};\n/** @internal */\nexport const RuntimeExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/RuntimeException\");\n/** @internal */\nexport const RuntimeException = /*#__PURE__*/makeException({\n  [RuntimeExceptionTypeId]: RuntimeExceptionTypeId\n}, \"RuntimeException\");\n/** @internal */\nexport const isRuntimeException = u => hasProperty(u, RuntimeExceptionTypeId);\n/** @internal */\nexport const InterruptedExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/InterruptedException\");\n/** @internal */\nexport const InterruptedException = /*#__PURE__*/makeException({\n  [InterruptedExceptionTypeId]: InterruptedExceptionTypeId\n}, \"InterruptedException\");\n/** @internal */\nexport const isInterruptedException = u => hasProperty(u, InterruptedExceptionTypeId);\n/** @internal */\nexport const IllegalArgumentExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/IllegalArgument\");\n/** @internal */\nexport const IllegalArgumentException = /*#__PURE__*/makeException({\n  [IllegalArgumentExceptionTypeId]: IllegalArgumentExceptionTypeId\n}, \"IllegalArgumentException\");\n/** @internal */\nexport const isIllegalArgumentException = u => hasProperty(u, IllegalArgumentExceptionTypeId);\n/** @internal */\nexport const NoSuchElementExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/NoSuchElement\");\n/** @internal */\nexport const NoSuchElementException = /*#__PURE__*/makeException({\n  [NoSuchElementExceptionTypeId]: NoSuchElementExceptionTypeId\n}, \"NoSuchElementException\");\n/** @internal */\nexport const isNoSuchElementException = u => hasProperty(u, NoSuchElementExceptionTypeId);\n/** @internal */\nexport const InvalidPubSubCapacityExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/InvalidPubSubCapacityException\");\n/** @internal */\nexport const InvalidPubSubCapacityException = /*#__PURE__*/makeException({\n  [InvalidPubSubCapacityExceptionTypeId]: InvalidPubSubCapacityExceptionTypeId\n}, \"InvalidPubSubCapacityException\");\n/** @internal */\nexport const ExceededCapacityExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/ExceededCapacityException\");\n/** @internal */\nexport const ExceededCapacityException = /*#__PURE__*/makeException({\n  [ExceededCapacityExceptionTypeId]: ExceededCapacityExceptionTypeId\n}, \"ExceededCapacityException\");\n/** @internal */\nexport const isExceededCapacityException = u => hasProperty(u, ExceededCapacityExceptionTypeId);\n/** @internal */\nexport const isInvalidCapacityError = u => hasProperty(u, InvalidPubSubCapacityExceptionTypeId);\n/** @internal */\nexport const TimeoutExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/Timeout\");\n/** @internal */\nexport const TimeoutException = /*#__PURE__*/makeException({\n  [TimeoutExceptionTypeId]: TimeoutExceptionTypeId\n}, \"TimeoutException\");\n/** @internal */\nexport const timeoutExceptionFromDuration = duration => new TimeoutException(`Operation timed out after '${Duration.format(duration)}'`);\n/** @internal */\nexport const isTimeoutException = u => hasProperty(u, TimeoutExceptionTypeId);\n/** @internal */\nexport const UnknownExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/UnknownException\");\n/** @internal */\nexport const UnknownException = /*#__PURE__*/function () {\n  class UnknownException extends YieldableError {\n    _tag = \"UnknownException\";\n    error;\n    constructor(cause, message) {\n      super(message ?? \"An unknown error occurred\", {\n        cause\n      });\n      this.error = cause;\n    }\n  }\n  Object.assign(UnknownException.prototype, {\n    [UnknownExceptionTypeId]: UnknownExceptionTypeId,\n    name: \"UnknownException\"\n  });\n  return UnknownException;\n}();\n/** @internal */\nexport const isUnknownException = u => hasProperty(u, UnknownExceptionTypeId);\n// -----------------------------------------------------------------------------\n// Exit\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const exitIsExit = u => isEffect(u) && \"_tag\" in u && (u._tag === \"Success\" || u._tag === \"Failure\");\n/** @internal */\nexport const exitIsFailure = self => self._tag === \"Failure\";\n/** @internal */\nexport const exitIsSuccess = self => self._tag === \"Success\";\n/** @internal */\nexport const exitIsInterrupted = self => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return internalCause.isInterrupted(self.effect_instruction_i0);\n    case OpCodes.OP_SUCCESS:\n      return false;\n  }\n};\n/** @internal */\nexport const exitAs = /*#__PURE__*/dual(2, (self, value) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      {\n        return exitFailCause(self.effect_instruction_i0);\n      }\n    case OpCodes.OP_SUCCESS:\n      {\n        return exitSucceed(value);\n      }\n  }\n});\n/** @internal */\nexport const exitAsVoid = self => exitAs(self, void 0);\n/** @internal */\nexport const exitCauseOption = self => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return Option.some(self.effect_instruction_i0);\n    case OpCodes.OP_SUCCESS:\n      return Option.none();\n  }\n};\n/** @internal */\nexport const exitCollectAll = (exits, options) => exitCollectAllInternal(exits, options?.parallel ? internalCause.parallel : internalCause.sequential);\n/** @internal */\nexport const exitDie = defect => exitFailCause(internalCause.die(defect));\n/** @internal */\nexport const exitExists = /*#__PURE__*/dual(2, (self, refinement) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return false;\n    case OpCodes.OP_SUCCESS:\n      return refinement(self.effect_instruction_i0);\n  }\n});\n/** @internal */\nexport const exitFail = error => exitFailCause(internalCause.fail(error));\n/** @internal */\nexport const exitFailCause = cause => {\n  const effect = new EffectPrimitiveFailure(OpCodes.OP_FAILURE);\n  effect.effect_instruction_i0 = cause;\n  return effect;\n};\n/** @internal */\nexport const exitFlatMap = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      {\n        return exitFailCause(self.effect_instruction_i0);\n      }\n    case OpCodes.OP_SUCCESS:\n      {\n        return f(self.effect_instruction_i0);\n      }\n  }\n});\n/** @internal */\nexport const exitFlatMapEffect = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      {\n        return succeed(exitFailCause(self.effect_instruction_i0));\n      }\n    case OpCodes.OP_SUCCESS:\n      {\n        return f(self.effect_instruction_i0);\n      }\n  }\n});\n/** @internal */\nexport const exitFlatten = self => pipe(self, exitFlatMap(identity));\n/** @internal */\nexport const exitForEachEffect = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      {\n        return succeed(exitFailCause(self.effect_instruction_i0));\n      }\n    case OpCodes.OP_SUCCESS:\n      {\n        return exit(f(self.effect_instruction_i0));\n      }\n  }\n});\n/** @internal */\nexport const exitFromEither = either => {\n  switch (either._tag) {\n    case \"Left\":\n      return exitFail(either.left);\n    case \"Right\":\n      return exitSucceed(either.right);\n  }\n};\n/** @internal */\nexport const exitFromOption = option => {\n  switch (option._tag) {\n    case \"None\":\n      return exitFail(void 0);\n    case \"Some\":\n      return exitSucceed(option.value);\n  }\n};\n/** @internal */\nexport const exitGetOrElse = /*#__PURE__*/dual(2, (self, orElse) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return orElse(self.effect_instruction_i0);\n    case OpCodes.OP_SUCCESS:\n      return self.effect_instruction_i0;\n  }\n});\n/** @internal */\nexport const exitInterrupt = fiberId => exitFailCause(internalCause.interrupt(fiberId));\n/** @internal */\nexport const exitMap = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return exitFailCause(self.effect_instruction_i0);\n    case OpCodes.OP_SUCCESS:\n      return exitSucceed(f(self.effect_instruction_i0));\n  }\n});\n/** @internal */\nexport const exitMapBoth = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return exitFailCause(pipe(self.effect_instruction_i0, internalCause.map(onFailure)));\n    case OpCodes.OP_SUCCESS:\n      return exitSucceed(onSuccess(self.effect_instruction_i0));\n  }\n});\n/** @internal */\nexport const exitMapError = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return exitFailCause(pipe(self.effect_instruction_i0, internalCause.map(f)));\n    case OpCodes.OP_SUCCESS:\n      return exitSucceed(self.effect_instruction_i0);\n  }\n});\n/** @internal */\nexport const exitMapErrorCause = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return exitFailCause(f(self.effect_instruction_i0));\n    case OpCodes.OP_SUCCESS:\n      return exitSucceed(self.effect_instruction_i0);\n  }\n});\n/** @internal */\nexport const exitMatch = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return onFailure(self.effect_instruction_i0);\n    case OpCodes.OP_SUCCESS:\n      return onSuccess(self.effect_instruction_i0);\n  }\n});\n/** @internal */\nexport const exitMatchEffect = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      return onFailure(self.effect_instruction_i0);\n    case OpCodes.OP_SUCCESS:\n      return onSuccess(self.effect_instruction_i0);\n  }\n});\n/** @internal */\nexport const exitSucceed = value => {\n  const effect = new EffectPrimitiveSuccess(OpCodes.OP_SUCCESS);\n  effect.effect_instruction_i0 = value;\n  return effect;\n};\n/** @internal */\nexport const exitVoid = /*#__PURE__*/exitSucceed(void 0);\n/** @internal */\nexport const exitZip = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, a2) => [a, a2],\n  onFailure: internalCause.sequential\n}));\n/** @internal */\nexport const exitZipLeft = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, _) => a,\n  onFailure: internalCause.sequential\n}));\n/** @internal */\nexport const exitZipRight = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (_, a2) => a2,\n  onFailure: internalCause.sequential\n}));\n/** @internal */\nexport const exitZipPar = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, a2) => [a, a2],\n  onFailure: internalCause.parallel\n}));\n/** @internal */\nexport const exitZipParLeft = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, _) => a,\n  onFailure: internalCause.parallel\n}));\n/** @internal */\nexport const exitZipParRight = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (_, a2) => a2,\n  onFailure: internalCause.parallel\n}));\n/** @internal */\nexport const exitZipWith = /*#__PURE__*/dual(3, (self, that, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OpCodes.OP_FAILURE:\n      {\n        switch (that._tag) {\n          case OpCodes.OP_SUCCESS:\n            return exitFailCause(self.effect_instruction_i0);\n          case OpCodes.OP_FAILURE:\n            {\n              return exitFailCause(onFailure(self.effect_instruction_i0, that.effect_instruction_i0));\n            }\n        }\n      }\n    case OpCodes.OP_SUCCESS:\n      {\n        switch (that._tag) {\n          case OpCodes.OP_SUCCESS:\n            return exitSucceed(onSuccess(self.effect_instruction_i0, that.effect_instruction_i0));\n          case OpCodes.OP_FAILURE:\n            return exitFailCause(that.effect_instruction_i0);\n        }\n      }\n  }\n});\nconst exitCollectAllInternal = (exits, combineCauses) => {\n  const list = Chunk.fromIterable(exits);\n  if (!Chunk.isNonEmpty(list)) {\n    return Option.none();\n  }\n  return pipe(Chunk.tailNonEmpty(list), Arr.reduce(pipe(Chunk.headNonEmpty(list), exitMap(Chunk.of)), (accumulator, current) => pipe(accumulator, exitZipWith(current, {\n    onSuccess: (list, value) => pipe(list, Chunk.prepend(value)),\n    onFailure: combineCauses\n  }))), exitMap(Chunk.reverse), exitMap(chunk => Chunk.toReadonlyArray(chunk)), Option.some);\n};\n// -----------------------------------------------------------------------------\n// Deferred\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const deferredUnsafeMake = fiberId => {\n  const _deferred = {\n    ...CommitPrototype,\n    [deferred.DeferredTypeId]: deferred.deferredVariance,\n    state: MutableRef.make(deferred.pending([])),\n    commit() {\n      return deferredAwait(this);\n    },\n    blockingOn: fiberId\n  };\n  return _deferred;\n};\n/* @internal */\nexport const deferredMake = () => flatMap(fiberId, id => deferredMakeAs(id));\n/* @internal */\nexport const deferredMakeAs = fiberId => sync(() => deferredUnsafeMake(fiberId));\n/* @internal */\nexport const deferredAwait = self => asyncInterrupt(resume => {\n  const state = MutableRef.get(self.state);\n  switch (state._tag) {\n    case DeferredOpCodes.OP_STATE_DONE:\n      {\n        return resume(state.effect);\n      }\n    case DeferredOpCodes.OP_STATE_PENDING:\n      {\n        // we can push here as the internal state is mutable\n        state.joiners.push(resume);\n        return deferredInterruptJoiner(self, resume);\n      }\n  }\n}, self.blockingOn);\n/* @internal */\nexport const deferredComplete = /*#__PURE__*/dual(2, (self, effect) => intoDeferred(effect, self));\n/* @internal */\nexport const deferredCompleteWith = /*#__PURE__*/dual(2, (self, effect) => sync(() => {\n  const state = MutableRef.get(self.state);\n  switch (state._tag) {\n    case DeferredOpCodes.OP_STATE_DONE:\n      {\n        return false;\n      }\n    case DeferredOpCodes.OP_STATE_PENDING:\n      {\n        MutableRef.set(self.state, deferred.done(effect));\n        for (let i = 0, len = state.joiners.length; i < len; i++) {\n          state.joiners[i](effect);\n        }\n        return true;\n      }\n  }\n}));\n/* @internal */\nexport const deferredDone = /*#__PURE__*/dual(2, (self, exit) => deferredCompleteWith(self, exit));\n/* @internal */\nexport const deferredFail = /*#__PURE__*/dual(2, (self, error) => deferredCompleteWith(self, fail(error)));\n/* @internal */\nexport const deferredFailSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, failSync(evaluate)));\n/* @internal */\nexport const deferredFailCause = /*#__PURE__*/dual(2, (self, cause) => deferredCompleteWith(self, failCause(cause)));\n/* @internal */\nexport const deferredFailCauseSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, failCauseSync(evaluate)));\n/* @internal */\nexport const deferredDie = /*#__PURE__*/dual(2, (self, defect) => deferredCompleteWith(self, die(defect)));\n/* @internal */\nexport const deferredDieSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, dieSync(evaluate)));\n/* @internal */\nexport const deferredInterrupt = self => flatMap(fiberId, fiberId => deferredCompleteWith(self, interruptWith(fiberId)));\n/* @internal */\nexport const deferredInterruptWith = /*#__PURE__*/dual(2, (self, fiberId) => deferredCompleteWith(self, interruptWith(fiberId)));\n/* @internal */\nexport const deferredIsDone = self => sync(() => MutableRef.get(self.state)._tag === DeferredOpCodes.OP_STATE_DONE);\n/* @internal */\nexport const deferredPoll = self => sync(() => {\n  const state = MutableRef.get(self.state);\n  switch (state._tag) {\n    case DeferredOpCodes.OP_STATE_DONE:\n      {\n        return Option.some(state.effect);\n      }\n    case DeferredOpCodes.OP_STATE_PENDING:\n      {\n        return Option.none();\n      }\n  }\n});\n/* @internal */\nexport const deferredSucceed = /*#__PURE__*/dual(2, (self, value) => deferredCompleteWith(self, succeed(value)));\n/* @internal */\nexport const deferredSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, sync(evaluate)));\n/** @internal */\nexport const deferredUnsafeDone = (self, effect) => {\n  const state = MutableRef.get(self.state);\n  if (state._tag === DeferredOpCodes.OP_STATE_PENDING) {\n    MutableRef.set(self.state, deferred.done(effect));\n    for (let i = 0, len = state.joiners.length; i < len; i++) {\n      state.joiners[i](effect);\n    }\n  }\n};\nconst deferredInterruptJoiner = (self, joiner) => sync(() => {\n  const state = MutableRef.get(self.state);\n  if (state._tag === DeferredOpCodes.OP_STATE_PENDING) {\n    const index = state.joiners.indexOf(joiner);\n    if (index >= 0) {\n      // we can splice here as the internal state is mutable\n      state.joiners.splice(index, 1);\n    }\n  }\n});\n// -----------------------------------------------------------------------------\n// Context\n// -----------------------------------------------------------------------------\nconst constContext = /*#__PURE__*/withFiberRuntime(fiber => exitSucceed(fiber.currentContext));\n/* @internal */\nexport const context = () => constContext;\n/* @internal */\nexport const contextWith = f => map(context(), f);\n/* @internal */\nexport const contextWithEffect = f => flatMap(context(), f);\n/* @internal */\nexport const provideContext = /*#__PURE__*/dual(2, (self, context) => fiberRefLocally(currentContext, context)(self));\n/* @internal */\nexport const provideSomeContext = /*#__PURE__*/dual(2, (self, context) => fiberRefLocallyWith(currentContext, parent => Context.merge(parent, context))(self));\n/* @internal */\nexport const mapInputContext = /*#__PURE__*/dual(2, (self, f) => contextWithEffect(context => provideContext(self, f(context))));\n// -----------------------------------------------------------------------------\n// Filtering\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const filterEffectOrElse = /*#__PURE__*/dual(2, (self, options) => flatMap(self, a => flatMap(options.predicate(a), pass => pass ? succeed(a) : options.orElse(a))));\n/** @internal */\nexport const filterEffectOrFail = /*#__PURE__*/dual(2, (self, options) => filterEffectOrElse(self, {\n  predicate: options.predicate,\n  orElse: a => fail(options.orFailWith(a))\n}));\n// -----------------------------------------------------------------------------\n// Tracing\n// -----------------------------------------------------------------------------\n/** @internal */\nexport const currentSpanFromFiber = fiber => {\n  const span = fiber.currentSpan;\n  return span !== undefined && span._tag === \"Span\" ? Option.some(span) : Option.none();\n};\nconst NoopSpanProto = {\n  _tag: \"Span\",\n  spanId: \"noop\",\n  traceId: \"noop\",\n  sampled: false,\n  status: {\n    _tag: \"Ended\",\n    startTime: /*#__PURE__*/BigInt(0),\n    endTime: /*#__PURE__*/BigInt(0),\n    exit: exitVoid\n  },\n  attributes: /*#__PURE__*/new Map(),\n  links: [],\n  kind: \"internal\",\n  attribute() {},\n  event() {},\n  end() {},\n  addLinks() {}\n};\n/** @internal */\nexport const noopSpan = options => Object.assign(Object.create(NoopSpanProto), options);\n//# sourceMappingURL=core.js.map","import * as core from \"./internal/core.js\";\n/**\n * Returns `true` if the specified value is an `Exit`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isExit = core.exitIsExit;\n/**\n * Returns `true` if the specified `Exit` is a `Failure`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isFailure = core.exitIsFailure;\n/**\n * Returns `true` if the specified `Exit` is a `Success`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isSuccess = core.exitIsSuccess;\n/**\n * Returns `true` if the specified exit is a `Failure` **and** the `Cause` of\n * the failure was due to interruption, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const isInterrupted = core.exitIsInterrupted;\n/**\n * Maps the `Success` value of the specified exit to the provided constant\n * value.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const as = core.exitAs;\n/**\n * Maps the `Success` value of the specified exit to a void.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const asVoid = core.exitAsVoid;\n/**\n * Returns a `Some<Cause<E>>` if the specified exit is a `Failure`, `None`\n * otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const causeOption = core.exitCauseOption;\n/**\n * Collects all of the specified exit values into a `Some<Exit<List<A>, E>>`. If\n * the provided iterable contains no elements, `None` will be returned.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const all = core.exitCollectAll;\n/**\n * Constructs a new `Exit.Failure` from the specified unrecoverable defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const die = core.exitDie;\n/**\n * Executes the predicate on the value of the specified exit if it is a\n * `Success`, otherwise returns `false`.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const exists = core.exitExists;\n/**\n * Constructs a new `Exit.Failure` from the specified recoverable error of type\n * `E`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fail = core.exitFail;\n/**\n * Constructs a new `Exit.Failure` from the specified `Cause` of type `E`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const failCause = core.exitFailCause;\n/**\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatMap = core.exitFlatMap;\n/**\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatMapEffect = core.exitFlatMapEffect;\n/**\n * @since 2.0.0\n * @category sequencing\n */\nexport const flatten = core.exitFlatten;\n/**\n * @since 2.0.0\n * @category traversing\n */\nexport const forEachEffect = core.exitForEachEffect;\n/**\n * Converts an `Either<R, L>` into an `Exit<R, L>`.\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const fromEither = core.exitFromEither;\n/**\n * Converts an `Option<A>` into an `Exit<void, A>`.\n *\n * @since 2.0.0\n * @category conversions\n */\nexport const fromOption = core.exitFromOption;\n/**\n * Returns the `A` if specified exit is a `Success`, otherwise returns the\n * alternate `A` value computed from the specified function which receives the\n * `Cause<E>` of the exit `Failure`.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const getOrElse = core.exitGetOrElse;\n/**\n * Constructs a new `Exit.Failure` from the specified `FiberId` indicating that\n * the `Fiber` running an `Effect` workflow was terminated due to interruption.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const interrupt = core.exitInterrupt;\n/**\n * Maps over the `Success` value of the specified exit using the provided\n * function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const map = core.exitMap;\n/**\n * Maps over the `Success` and `Failure` cases of the specified exit using the\n * provided functions.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const mapBoth = core.exitMapBoth;\n/**\n * Maps over the error contained in the `Failure` of the specified exit using\n * the provided function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const mapError = core.exitMapError;\n/**\n * Maps over the `Cause` contained in the `Failure` of the specified exit using\n * the provided function.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const mapErrorCause = core.exitMapErrorCause;\n/**\n * @since 2.0.0\n * @category folding\n */\nexport const match = core.exitMatch;\n/**\n * @since 2.0.0\n * @category folding\n */\nexport const matchEffect = core.exitMatchEffect;\n/**\n * Constructs a new `Exit.Success` containing the specified value of type `A`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const succeed = core.exitSucceed;\nconst void_ = core.exitVoid;\nexport {\n/**\n * Represents an `Exit` which succeeds with `undefined`.\n *\n * @since 2.0.0\n * @category constructors\n */\nvoid_ as void };\n/**\n * Sequentially zips the this result with the specified result or else returns\n * the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zip = core.exitZip;\n/**\n * Sequentially zips the this result with the specified result discarding the\n * second element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipLeft = core.exitZipLeft;\n/**\n * Sequentially zips the this result with the specified result discarding the\n * first element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipRight = core.exitZipRight;\n/**\n * Parallelly zips the this result with the specified result or else returns\n * the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipPar = core.exitZipPar;\n/**\n * Parallelly zips the this result with the specified result discarding the\n * second element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipParLeft = core.exitZipParLeft;\n/**\n * Parallelly zips the this result with the specified result discarding the\n * first element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipParRight = core.exitZipParRight;\n/**\n * Zips this exit together with that exit using the specified combination\n * functions.\n *\n * @since 2.0.0\n * @category zipping\n */\nexport const zipWith = core.exitZipWith;\n//# sourceMappingURL=Exit.js.map","import * as Equal from \"./Equal.js\";\nimport { dual } from \"./Function.js\";\nimport * as Hash from \"./Hash.js\";\nimport { format, NodeInspectSymbol, toJSON } from \"./Inspectable.js\";\nimport * as Option from \"./Option.js\";\nimport { pipeArguments } from \"./Pipeable.js\";\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/MutableHashMap\");\nconst MutableHashMapProto = {\n  [TypeId]: TypeId,\n  [Symbol.iterator]() {\n    return new MutableHashMapIterator(this);\n  },\n  toString() {\n    return format(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"MutableHashMap\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nclass MutableHashMapIterator {\n  self;\n  referentialIterator;\n  bucketIterator;\n  constructor(self) {\n    this.self = self;\n    this.referentialIterator = self.referential[Symbol.iterator]();\n  }\n  next() {\n    if (this.bucketIterator !== undefined) {\n      return this.bucketIterator.next();\n    }\n    const result = this.referentialIterator.next();\n    if (result.done) {\n      this.bucketIterator = new BucketIterator(this.self.buckets.values());\n      return this.next();\n    }\n    return result;\n  }\n  [Symbol.iterator]() {\n    return new MutableHashMapIterator(this.self);\n  }\n}\nclass BucketIterator {\n  backing;\n  constructor(backing) {\n    this.backing = backing;\n  }\n  currentBucket;\n  next() {\n    if (this.currentBucket === undefined) {\n      const result = this.backing.next();\n      if (result.done) {\n        return result;\n      }\n      this.currentBucket = result.value[Symbol.iterator]();\n    }\n    const result = this.currentBucket.next();\n    if (result.done) {\n      this.currentBucket = undefined;\n      return this.next();\n    }\n    return result;\n  }\n}\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const empty = () => {\n  const self = Object.create(MutableHashMapProto);\n  self.referential = new Map();\n  self.buckets = new Map();\n  self.bucketsSize = 0;\n  return self;\n};\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const make = (...entries) => fromIterable(entries);\n/**\n * Creates a new `MutableHashMap` from an iterable collection of key/value pairs.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fromIterable = entries => {\n  const self = empty();\n  for (const [key, value] of entries) {\n    set(self, key, value);\n  }\n  return self;\n};\n/**\n * @since 2.0.0\n * @category elements\n */\nexport const get = /*#__PURE__*/dual(2, (self, key) => {\n  if (Equal.isEqual(key) === false) {\n    return self.referential.has(key) ? Option.some(self.referential.get(key)) : Option.none();\n  }\n  const hash = key[Hash.symbol]();\n  const bucket = self.buckets.get(hash);\n  if (bucket === undefined) {\n    return Option.none();\n  }\n  return getFromBucket(self, bucket, key);\n});\n/**\n * @since 3.8.0\n * @category elements\n */\nexport const keys = self => {\n  const keys = Array.from(self.referential.keys());\n  for (const bucket of self.buckets.values()) {\n    for (let i = 0, len = bucket.length; i < len; i++) {\n      keys.push(bucket[i][0]);\n    }\n  }\n  return keys;\n};\n/**\n * @since 3.8.0\n * @category elements\n */\nexport const values = self => {\n  const values = Array.from(self.referential.values());\n  for (const bucket of self.buckets.values()) {\n    for (let i = 0, len = bucket.length; i < len; i++) {\n      values.push(bucket[i][1]);\n    }\n  }\n  return values;\n};\nconst getFromBucket = (self, bucket, key, remove = false) => {\n  for (let i = 0, len = bucket.length; i < len; i++) {\n    if (key[Equal.symbol](bucket[i][0])) {\n      const value = bucket[i][1];\n      if (remove) {\n        bucket.splice(i, 1);\n        self.bucketsSize--;\n      }\n      return Option.some(value);\n    }\n  }\n  return Option.none();\n};\n/**\n * @since 2.0.0\n * @category elements\n */\nexport const has = /*#__PURE__*/dual(2, (self, key) => Option.isSome(get(self, key)));\n/**\n * @since 2.0.0\n */\nexport const set = /*#__PURE__*/dual(3, (self, key, value) => {\n  if (Equal.isEqual(key) === false) {\n    self.referential.set(key, value);\n    return self;\n  }\n  const hash = key[Hash.symbol]();\n  const bucket = self.buckets.get(hash);\n  if (bucket === undefined) {\n    self.buckets.set(hash, [[key, value]]);\n    self.bucketsSize++;\n    return self;\n  }\n  removeFromBucket(self, bucket, key);\n  bucket.push([key, value]);\n  self.bucketsSize++;\n  return self;\n});\nconst removeFromBucket = (self, bucket, key) => {\n  for (let i = 0, len = bucket.length; i < len; i++) {\n    if (key[Equal.symbol](bucket[i][0])) {\n      bucket.splice(i, 1);\n      self.bucketsSize--;\n      return;\n    }\n  }\n};\n/**\n * Updates the value of the specified key within the `MutableHashMap` if it exists.\n *\n * @since 2.0.0\n */\nexport const modify = /*#__PURE__*/dual(3, (self, key, f) => {\n  if (Equal.isEqual(key) === false) {\n    if (self.referential.has(key)) {\n      self.referential.set(key, f(self.referential.get(key)));\n    }\n    return self;\n  }\n  const hash = key[Hash.symbol]();\n  const bucket = self.buckets.get(hash);\n  if (bucket === undefined) {\n    return self;\n  }\n  const value = getFromBucket(self, bucket, key, true);\n  if (Option.isNone(value)) {\n    return self;\n  }\n  bucket.push([key, f(value.value)]);\n  self.bucketsSize++;\n  return self;\n});\n/**\n * Set or remove the specified key in the `MutableHashMap` using the specified\n * update function.\n *\n * @since 2.0.0\n */\nexport const modifyAt = /*#__PURE__*/dual(3, (self, key, f) => {\n  if (Equal.isEqual(key) === false) {\n    const result = f(get(self, key));\n    if (Option.isSome(result)) {\n      set(self, key, result.value);\n    } else {\n      remove(self, key);\n    }\n    return self;\n  }\n  const hash = key[Hash.symbol]();\n  const bucket = self.buckets.get(hash);\n  if (bucket === undefined) {\n    const result = f(Option.none());\n    return Option.isSome(result) ? set(self, key, result.value) : self;\n  }\n  const result = f(getFromBucket(self, bucket, key, true));\n  if (Option.isNone(result)) {\n    if (bucket.length === 0) {\n      self.buckets.delete(hash);\n    }\n    return self;\n  }\n  bucket.push([key, result.value]);\n  self.bucketsSize++;\n  return self;\n});\n/**\n * @since 2.0.0\n */\nexport const remove = /*#__PURE__*/dual(2, (self, key) => {\n  if (Equal.isEqual(key) === false) {\n    self.referential.delete(key);\n    return self;\n  }\n  const hash = key[Hash.symbol]();\n  const bucket = self.buckets.get(hash);\n  if (bucket === undefined) {\n    return self;\n  }\n  removeFromBucket(self, bucket, key);\n  if (bucket.length === 0) {\n    self.buckets.delete(hash);\n  }\n  return self;\n});\n/**\n * @since 2.0.0\n */\nexport const clear = self => {\n  self.referential.clear();\n  self.buckets.clear();\n  self.bucketsSize = 0;\n  return self;\n};\n/**\n * @since 2.0.0\n * @category elements\n */\nexport const size = self => {\n  return self.referential.size + self.bucketsSize;\n};\n/**\n * @since 2.0.0\n */\nexport const isEmpty = self => size(self) === 0;\n/**\n * @since 2.0.0\n */\nexport const forEach = /*#__PURE__*/dual(2, (self, f) => {\n  self.referential.forEach(f);\n  for (const bucket of self.buckets.values()) {\n    for (const [key, value] of bucket) {\n      f(value, key);\n    }\n  }\n});\n//# sourceMappingURL=MutableHashMap.js.map","import * as Context from \"../Context.js\";\nimport * as Duration from \"../Duration.js\";\nimport { constFalse } from \"../Function.js\";\nimport * as core from \"./core.js\";\n/** @internal */\nconst ClockSymbolKey = \"effect/Clock\";\n/** @internal */\nexport const ClockTypeId = /*#__PURE__*/Symbol.for(ClockSymbolKey);\n/** @internal */\nexport const clockTag = /*#__PURE__*/Context.GenericTag(\"effect/Clock\");\n/** @internal */\nexport const MAX_TIMER_MILLIS = 2 ** 31 - 1;\n/** @internal */\nexport const globalClockScheduler = {\n  unsafeSchedule(task, duration) {\n    const millis = Duration.toMillis(duration);\n    // If the duration is greater than the value allowable by the JS timer\n    // functions, treat the value as an infinite duration\n    if (millis > MAX_TIMER_MILLIS) {\n      return constFalse;\n    }\n    let completed = false;\n    const handle = setTimeout(() => {\n      completed = true;\n      task();\n    }, millis);\n    return () => {\n      clearTimeout(handle);\n      return !completed;\n    };\n  }\n};\nconst performanceNowNanos = /*#__PURE__*/function () {\n  const bigint1e6 = /*#__PURE__*/BigInt(1_000_000);\n  if (typeof performance === \"undefined\") {\n    return () => BigInt(Date.now()) * bigint1e6;\n  }\n  let origin;\n  return () => {\n    if (origin === undefined) {\n      origin = BigInt(Date.now()) * bigint1e6 - BigInt(Math.round(performance.now() * 1_000_000));\n    }\n    return origin + BigInt(Math.round(performance.now() * 1000000));\n  };\n}();\nconst processOrPerformanceNow = /*#__PURE__*/function () {\n  const processHrtime = typeof process === \"object\" && \"hrtime\" in process && typeof process.hrtime.bigint === \"function\" ? process.hrtime : undefined;\n  if (!processHrtime) {\n    return performanceNowNanos;\n  }\n  const origin = /*#__PURE__*/performanceNowNanos() - /*#__PURE__*/processHrtime.bigint();\n  return () => origin + processHrtime.bigint();\n}();\n/** @internal */\nclass ClockImpl {\n  [ClockTypeId] = ClockTypeId;\n  unsafeCurrentTimeMillis() {\n    return Date.now();\n  }\n  unsafeCurrentTimeNanos() {\n    return processOrPerformanceNow();\n  }\n  currentTimeMillis = /*#__PURE__*/core.sync(() => this.unsafeCurrentTimeMillis());\n  currentTimeNanos = /*#__PURE__*/core.sync(() => this.unsafeCurrentTimeNanos());\n  scheduler() {\n    return core.succeed(globalClockScheduler);\n  }\n  sleep(duration) {\n    return core.async(resume => {\n      const canceler = globalClockScheduler.unsafeSchedule(() => resume(core.void), duration);\n      return core.asVoid(core.sync(canceler));\n    });\n  }\n}\n/** @internal */\nexport const make = () => new ClockImpl();\n//# sourceMappingURL=clock.js.map","/** @internal */\nexport const OP_AND = \"And\";\n/** @internal */\nexport const OP_OR = \"Or\";\n/** @internal */\nexport const OP_INVALID_DATA = \"InvalidData\";\n/** @internal */\nexport const OP_MISSING_DATA = \"MissingData\";\n/** @internal */\nexport const OP_SOURCE_UNAVAILABLE = \"SourceUnavailable\";\n/** @internal */\nexport const OP_UNSUPPORTED = \"Unsupported\";\n//# sourceMappingURL=configError.js.map","import * as RA from \"../Array.js\";\nimport * as Either from \"../Either.js\";\nimport { constFalse, constTrue, dual, pipe } from \"../Function.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport * as OpCodes from \"./opCodes/configError.js\";\n/** @internal */\nconst ConfigErrorSymbolKey = \"effect/ConfigError\";\n/** @internal */\nexport const ConfigErrorTypeId = /*#__PURE__*/Symbol.for(ConfigErrorSymbolKey);\n/** @internal */\nexport const proto = {\n  _tag: \"ConfigError\",\n  [ConfigErrorTypeId]: ConfigErrorTypeId\n};\n/** @internal */\nexport const And = (self, that) => {\n  const error = Object.create(proto);\n  error._op = OpCodes.OP_AND;\n  error.left = self;\n  error.right = that;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      return `${this.left} and ${this.right}`;\n    }\n  });\n  Object.defineProperty(error, \"message\", {\n    enumerable: false,\n    get() {\n      return this.toString();\n    }\n  });\n  return error;\n};\n/** @internal */\nexport const Or = (self, that) => {\n  const error = Object.create(proto);\n  error._op = OpCodes.OP_OR;\n  error.left = self;\n  error.right = that;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      return `${this.left} or ${this.right}`;\n    }\n  });\n  Object.defineProperty(error, \"message\", {\n    enumerable: false,\n    get() {\n      return this.toString();\n    }\n  });\n  return error;\n};\n/** @internal */\nexport const InvalidData = (path, message, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._op = OpCodes.OP_INVALID_DATA;\n  error.path = path;\n  error.message = message;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, RA.join(options.pathDelim));\n      return `(Invalid data at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n/** @internal */\nexport const MissingData = (path, message, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._op = OpCodes.OP_MISSING_DATA;\n  error.path = path;\n  error.message = message;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, RA.join(options.pathDelim));\n      return `(Missing data at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n/** @internal */\nexport const SourceUnavailable = (path, message, cause, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._op = OpCodes.OP_SOURCE_UNAVAILABLE;\n  error.path = path;\n  error.message = message;\n  error.cause = cause;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, RA.join(options.pathDelim));\n      return `(Source unavailable at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n/** @internal */\nexport const Unsupported = (path, message, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._op = OpCodes.OP_UNSUPPORTED;\n  error.path = path;\n  error.message = message;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, RA.join(options.pathDelim));\n      return `(Unsupported operation at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n/** @internal */\nexport const isConfigError = u => hasProperty(u, ConfigErrorTypeId);\n/** @internal */\nexport const isAnd = self => self._op === OpCodes.OP_AND;\n/** @internal */\nexport const isOr = self => self._op === OpCodes.OP_OR;\n/** @internal */\nexport const isInvalidData = self => self._op === OpCodes.OP_INVALID_DATA;\n/** @internal */\nexport const isMissingData = self => self._op === OpCodes.OP_MISSING_DATA;\n/** @internal */\nexport const isSourceUnavailable = self => self._op === OpCodes.OP_SOURCE_UNAVAILABLE;\n/** @internal */\nexport const isUnsupported = self => self._op === OpCodes.OP_UNSUPPORTED;\n/** @internal */\nexport const prefixed = /*#__PURE__*/dual(2, (self, prefix) => {\n  switch (self._op) {\n    case OpCodes.OP_AND:\n      {\n        return And(prefixed(self.left, prefix), prefixed(self.right, prefix));\n      }\n    case OpCodes.OP_OR:\n      {\n        return Or(prefixed(self.left, prefix), prefixed(self.right, prefix));\n      }\n    case OpCodes.OP_INVALID_DATA:\n      {\n        return InvalidData([...prefix, ...self.path], self.message);\n      }\n    case OpCodes.OP_MISSING_DATA:\n      {\n        return MissingData([...prefix, ...self.path], self.message);\n      }\n    case OpCodes.OP_SOURCE_UNAVAILABLE:\n      {\n        return SourceUnavailable([...prefix, ...self.path], self.message, self.cause);\n      }\n    case OpCodes.OP_UNSUPPORTED:\n      {\n        return Unsupported([...prefix, ...self.path], self.message);\n      }\n  }\n});\n/** @internal */\nconst IsMissingDataOnlyReducer = {\n  andCase: (_, left, right) => left && right,\n  orCase: (_, left, right) => left && right,\n  invalidDataCase: constFalse,\n  missingDataCase: constTrue,\n  sourceUnavailableCase: constFalse,\n  unsupportedCase: constFalse\n};\n/** @internal */\nexport const reduceWithContext = /*#__PURE__*/dual(3, (self, context, reducer) => {\n  const input = [self];\n  const output = [];\n  while (input.length > 0) {\n    const error = input.pop();\n    switch (error._op) {\n      case OpCodes.OP_AND:\n        {\n          input.push(error.right);\n          input.push(error.left);\n          output.push(Either.left({\n            _op: \"AndCase\"\n          }));\n          break;\n        }\n      case OpCodes.OP_OR:\n        {\n          input.push(error.right);\n          input.push(error.left);\n          output.push(Either.left({\n            _op: \"OrCase\"\n          }));\n          break;\n        }\n      case OpCodes.OP_INVALID_DATA:\n        {\n          output.push(Either.right(reducer.invalidDataCase(context, error.path, error.message)));\n          break;\n        }\n      case OpCodes.OP_MISSING_DATA:\n        {\n          output.push(Either.right(reducer.missingDataCase(context, error.path, error.message)));\n          break;\n        }\n      case OpCodes.OP_SOURCE_UNAVAILABLE:\n        {\n          output.push(Either.right(reducer.sourceUnavailableCase(context, error.path, error.message, error.cause)));\n          break;\n        }\n      case OpCodes.OP_UNSUPPORTED:\n        {\n          output.push(Either.right(reducer.unsupportedCase(context, error.path, error.message)));\n          break;\n        }\n    }\n  }\n  const accumulator = [];\n  while (output.length > 0) {\n    const either = output.pop();\n    switch (either._op) {\n      case \"Left\":\n        {\n          switch (either.left._op) {\n            case \"AndCase\":\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.andCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n            case \"OrCase\":\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.orCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Right\":\n        {\n          accumulator.push(either.right);\n          break;\n        }\n    }\n  }\n  if (accumulator.length === 0) {\n    throw new Error(\"BUG: ConfigError.reduceWithContext - please report an issue at https://github.com/Effect-TS/effect/issues\");\n  }\n  return accumulator.pop();\n});\n/** @internal */\nexport const isMissingDataOnly = self => reduceWithContext(self, void 0, IsMissingDataOnlyReducer);\n//# sourceMappingURL=configError.js.map","import * as RA from \"../../Array.js\";\nimport * as Either from \"../../Either.js\";\nimport { dual, pipe } from \"../../Function.js\";\nimport * as List from \"../../List.js\";\nimport * as Option from \"../../Option.js\";\nimport * as configError from \"../configError.js\";\n/** @internal */\nexport const empty = {\n  _tag: \"Empty\"\n};\n/** @internal */\nexport const andThen = /*#__PURE__*/dual(2, (self, that) => ({\n  _tag: \"AndThen\",\n  first: self,\n  second: that\n}));\n/** @internal */\nexport const mapName = /*#__PURE__*/dual(2, (self, f) => andThen(self, {\n  _tag: \"MapName\",\n  f\n}));\n/** @internal */\nexport const nested = /*#__PURE__*/dual(2, (self, name) => andThen(self, {\n  _tag: \"Nested\",\n  name\n}));\n/** @internal */\nexport const unnested = /*#__PURE__*/dual(2, (self, name) => andThen(self, {\n  _tag: \"Unnested\",\n  name\n}));\n/** @internal */\nexport const patch = /*#__PURE__*/dual(2, (path, patch) => {\n  let input = List.of(patch);\n  let output = path;\n  while (List.isCons(input)) {\n    const patch = input.head;\n    switch (patch._tag) {\n      case \"Empty\":\n        {\n          input = input.tail;\n          break;\n        }\n      case \"AndThen\":\n        {\n          input = List.cons(patch.first, List.cons(patch.second, input.tail));\n          break;\n        }\n      case \"MapName\":\n        {\n          output = RA.map(output, patch.f);\n          input = input.tail;\n          break;\n        }\n      case \"Nested\":\n        {\n          output = RA.prepend(output, patch.name);\n          input = input.tail;\n          break;\n        }\n      case \"Unnested\":\n        {\n          const containsName = pipe(RA.head(output), Option.contains(patch.name));\n          if (containsName) {\n            output = RA.tailNonEmpty(output);\n            input = input.tail;\n          } else {\n            return Either.left(configError.MissingData(output, `Expected ${patch.name} to be in path in ConfigProvider#unnested`));\n          }\n          break;\n        }\n    }\n  }\n  return Either.right(output);\n});\n//# sourceMappingURL=pathPatch.js.map","/** @internal */\nexport const OP_CONSTANT = \"Constant\";\n/** @internal */\nexport const OP_FAIL = \"Fail\";\n/** @internal */\nexport const OP_FALLBACK = \"Fallback\";\n/** @internal */\nexport const OP_DESCRIBED = \"Described\";\n/** @internal */\nexport const OP_LAZY = \"Lazy\";\n/** @internal */\nexport const OP_MAP_OR_FAIL = \"MapOrFail\";\n/** @internal */\nexport const OP_NESTED = \"Nested\";\n/** @internal */\nexport const OP_PRIMITIVE = \"Primitive\";\n/** @internal */\nexport const OP_SEQUENCE = \"Sequence\";\n/** @internal */\nexport const OP_HASHMAP = \"HashMap\";\n/** @internal */\nexport const OP_ZIP_WITH = \"ZipWith\";\n//# sourceMappingURL=config.js.map","import * as Arr from \"../Array.js\";\nimport * as Context from \"../Context.js\";\nimport * as Either from \"../Either.js\";\nimport { dual, pipe } from \"../Function.js\";\nimport * as HashMap from \"../HashMap.js\";\nimport * as HashSet from \"../HashSet.js\";\nimport * as number from \"../Number.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport * as Predicate from \"../Predicate.js\";\nimport * as regexp from \"../RegExp.js\";\nimport * as configError from \"./configError.js\";\nimport * as pathPatch from \"./configProvider/pathPatch.js\";\nimport * as core from \"./core.js\";\nimport * as OpCodes from \"./opCodes/config.js\";\nimport * as StringUtils from \"./string-utils.js\";\nconst concat = (l, r) => [...l, ...r];\n/** @internal */\nconst ConfigProviderSymbolKey = \"effect/ConfigProvider\";\n/** @internal */\nexport const ConfigProviderTypeId = /*#__PURE__*/Symbol.for(ConfigProviderSymbolKey);\n/** @internal */\nexport const configProviderTag = /*#__PURE__*/Context.GenericTag(\"effect/ConfigProvider\");\n/** @internal */\nconst FlatConfigProviderSymbolKey = \"effect/ConfigProviderFlat\";\n/** @internal */\nexport const FlatConfigProviderTypeId = /*#__PURE__*/Symbol.for(FlatConfigProviderSymbolKey);\n/** @internal */\nexport const make = options => ({\n  [ConfigProviderTypeId]: ConfigProviderTypeId,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  ...options\n});\n/** @internal */\nexport const makeFlat = options => ({\n  [FlatConfigProviderTypeId]: FlatConfigProviderTypeId,\n  patch: options.patch,\n  load: (path, config, split = true) => options.load(path, config, split),\n  enumerateChildren: options.enumerateChildren\n});\n/** @internal */\nexport const fromFlat = flat => make({\n  load: config => core.flatMap(fromFlatLoop(flat, Arr.empty(), config, false), chunk => Option.match(Arr.head(chunk), {\n    onNone: () => core.fail(configError.MissingData(Arr.empty(), `Expected a single value having structure: ${config}`)),\n    onSome: core.succeed\n  })),\n  flattened: flat\n});\n/** @internal */\nexport const fromEnv = options => {\n  const {\n    pathDelim,\n    seqDelim\n  } = Object.assign({}, {\n    pathDelim: \"_\",\n    seqDelim: \",\"\n  }, options);\n  const makePathString = path => pipe(path, Arr.join(pathDelim));\n  const unmakePathString = pathString => pathString.split(pathDelim);\n  const getEnv = () => typeof process !== \"undefined\" && \"env\" in process && typeof process.env === \"object\" ? process.env : {};\n  const load = (path, primitive, split = true) => {\n    const pathString = makePathString(path);\n    const current = getEnv();\n    const valueOpt = pathString in current ? Option.some(current[pathString]) : Option.none();\n    return pipe(valueOpt, core.mapError(() => configError.MissingData(path, `Expected ${pathString} to exist in the process context`)), core.flatMap(value => parsePrimitive(value, path, primitive, seqDelim, split)));\n  };\n  const enumerateChildren = path => core.sync(() => {\n    const current = getEnv();\n    const keys = Object.keys(current);\n    const keyPaths = keys.map(value => unmakePathString(value.toUpperCase()));\n    const filteredKeyPaths = keyPaths.filter(keyPath => {\n      for (let i = 0; i < path.length; i++) {\n        const pathComponent = pipe(path, Arr.unsafeGet(i));\n        const currentElement = keyPath[i];\n        if (currentElement === undefined || pathComponent !== currentElement) {\n          return false;\n        }\n      }\n      return true;\n    }).flatMap(keyPath => keyPath.slice(path.length, path.length + 1));\n    return HashSet.fromIterable(filteredKeyPaths);\n  });\n  return fromFlat(makeFlat({\n    load,\n    enumerateChildren,\n    patch: pathPatch.empty\n  }));\n};\n/** @internal */\nexport const fromMap = (map, config) => {\n  const {\n    pathDelim,\n    seqDelim\n  } = Object.assign({\n    seqDelim: \",\",\n    pathDelim: \".\"\n  }, config);\n  const makePathString = path => pipe(path, Arr.join(pathDelim));\n  const unmakePathString = pathString => pathString.split(pathDelim);\n  const mapWithIndexSplit = splitIndexInKeys(map, str => unmakePathString(str), makePathString);\n  const load = (path, primitive, split = true) => {\n    const pathString = makePathString(path);\n    const valueOpt = mapWithIndexSplit.has(pathString) ? Option.some(mapWithIndexSplit.get(pathString)) : Option.none();\n    return pipe(valueOpt, core.mapError(() => configError.MissingData(path, `Expected ${pathString} to exist in the provided map`)), core.flatMap(value => parsePrimitive(value, path, primitive, seqDelim, split)));\n  };\n  const enumerateChildren = path => core.sync(() => {\n    const keyPaths = Arr.fromIterable(mapWithIndexSplit.keys()).map(unmakePathString);\n    const filteredKeyPaths = keyPaths.filter(keyPath => {\n      for (let i = 0; i < path.length; i++) {\n        const pathComponent = pipe(path, Arr.unsafeGet(i));\n        const currentElement = keyPath[i];\n        if (currentElement === undefined || pathComponent !== currentElement) {\n          return false;\n        }\n      }\n      return true;\n    }).flatMap(keyPath => keyPath.slice(path.length, path.length + 1));\n    return HashSet.fromIterable(filteredKeyPaths);\n  });\n  return fromFlat(makeFlat({\n    load,\n    enumerateChildren,\n    patch: pathPatch.empty\n  }));\n};\nconst extend = (leftDef, rightDef, left, right) => {\n  const leftPad = Arr.unfold(left.length, index => index >= right.length ? Option.none() : Option.some([leftDef(index), index + 1]));\n  const rightPad = Arr.unfold(right.length, index => index >= left.length ? Option.none() : Option.some([rightDef(index), index + 1]));\n  const leftExtension = concat(left, leftPad);\n  const rightExtension = concat(right, rightPad);\n  return [leftExtension, rightExtension];\n};\nconst appendConfigPath = (path, config) => {\n  let op = config;\n  if (op._tag === \"Nested\") {\n    const out = path.slice();\n    while (op._tag === \"Nested\") {\n      out.push(op.name);\n      op = op.config;\n    }\n    return out;\n  }\n  return path;\n};\nconst fromFlatLoop = (flat, prefix, config, split) => {\n  const op = config;\n  switch (op._tag) {\n    case OpCodes.OP_CONSTANT:\n      {\n        return core.succeed(Arr.of(op.value));\n      }\n    case OpCodes.OP_DESCRIBED:\n      {\n        return core.suspend(() => fromFlatLoop(flat, prefix, op.config, split));\n      }\n    case OpCodes.OP_FAIL:\n      {\n        return core.fail(configError.MissingData(prefix, op.message));\n      }\n    case OpCodes.OP_FALLBACK:\n      {\n        return pipe(core.suspend(() => fromFlatLoop(flat, prefix, op.first, split)), core.catchAll(error1 => {\n          if (op.condition(error1)) {\n            return pipe(fromFlatLoop(flat, prefix, op.second, split), core.catchAll(error2 => core.fail(configError.Or(error1, error2))));\n          }\n          return core.fail(error1);\n        }));\n      }\n    case OpCodes.OP_LAZY:\n      {\n        return core.suspend(() => fromFlatLoop(flat, prefix, op.config(), split));\n      }\n    case OpCodes.OP_MAP_OR_FAIL:\n      {\n        return core.suspend(() => pipe(fromFlatLoop(flat, prefix, op.original, split), core.flatMap(core.forEachSequential(a => pipe(op.mapOrFail(a), core.mapError(configError.prefixed(appendConfigPath(prefix, op.original))))))));\n      }\n    case OpCodes.OP_NESTED:\n      {\n        return core.suspend(() => fromFlatLoop(flat, concat(prefix, Arr.of(op.name)), op.config, split));\n      }\n    case OpCodes.OP_PRIMITIVE:\n      {\n        return pipe(pathPatch.patch(prefix, flat.patch), core.flatMap(prefix => pipe(flat.load(prefix, op, split), core.flatMap(values => {\n          if (values.length === 0) {\n            const name = pipe(Arr.last(prefix), Option.getOrElse(() => \"<n/a>\"));\n            return core.fail(configError.MissingData([], `Expected ${op.description} with name ${name}`));\n          }\n          return core.succeed(values);\n        }))));\n      }\n    case OpCodes.OP_SEQUENCE:\n      {\n        return pipe(pathPatch.patch(prefix, flat.patch), core.flatMap(patchedPrefix => pipe(flat.enumerateChildren(patchedPrefix), core.flatMap(indicesFrom), core.flatMap(indices => {\n          if (indices.length === 0) {\n            return core.suspend(() => core.map(fromFlatLoop(flat, prefix, op.config, true), Arr.of));\n          }\n          return pipe(core.forEachSequential(indices, index => fromFlatLoop(flat, Arr.append(prefix, `[${index}]`), op.config, true)), core.map(chunkChunk => {\n            const flattened = Arr.flatten(chunkChunk);\n            if (flattened.length === 0) {\n              return Arr.of(Arr.empty());\n            }\n            return Arr.of(flattened);\n          }));\n        }))));\n      }\n    case OpCodes.OP_HASHMAP:\n      {\n        return core.suspend(() => pipe(pathPatch.patch(prefix, flat.patch), core.flatMap(prefix => pipe(flat.enumerateChildren(prefix), core.flatMap(keys => {\n          return pipe(keys, core.forEachSequential(key => fromFlatLoop(flat, concat(prefix, Arr.of(key)), op.valueConfig, split)), core.map(matrix => {\n            if (matrix.length === 0) {\n              return Arr.of(HashMap.empty());\n            }\n            return pipe(transpose(matrix), Arr.map(values => HashMap.fromIterable(Arr.zip(Arr.fromIterable(keys), values))));\n          }));\n        })))));\n      }\n    case OpCodes.OP_ZIP_WITH:\n      {\n        return core.suspend(() => pipe(fromFlatLoop(flat, prefix, op.left, split), core.either, core.flatMap(left => pipe(fromFlatLoop(flat, prefix, op.right, split), core.either, core.flatMap(right => {\n          if (Either.isLeft(left) && Either.isLeft(right)) {\n            return core.fail(configError.And(left.left, right.left));\n          }\n          if (Either.isLeft(left) && Either.isRight(right)) {\n            return core.fail(left.left);\n          }\n          if (Either.isRight(left) && Either.isLeft(right)) {\n            return core.fail(right.left);\n          }\n          if (Either.isRight(left) && Either.isRight(right)) {\n            const path = pipe(prefix, Arr.join(\".\"));\n            const fail = fromFlatLoopFail(prefix, path);\n            const [lefts, rights] = extend(fail, fail, pipe(left.right, Arr.map(Either.right)), pipe(right.right, Arr.map(Either.right)));\n            return pipe(lefts, Arr.zip(rights), core.forEachSequential(([left, right]) => pipe(core.zip(left, right), core.map(([left, right]) => op.zip(left, right)))));\n          }\n          throw new Error(\"BUG: ConfigProvider.fromFlatLoop - please report an issue at https://github.com/Effect-TS/effect/issues\");\n        })))));\n      }\n  }\n};\nconst fromFlatLoopFail = (prefix, path) => index => Either.left(configError.MissingData(prefix, `The element at index ${index} in a sequence at path \"${path}\" was missing`));\n/** @internal */\nexport const mapInputPath = /*#__PURE__*/dual(2, (self, f) => fromFlat(mapInputPathFlat(self.flattened, f)));\nconst mapInputPathFlat = (self, f) => makeFlat({\n  load: (path, config, split = true) => self.load(path, config, split),\n  enumerateChildren: path => self.enumerateChildren(path),\n  patch: pathPatch.mapName(self.patch, f)\n});\n/** @internal */\nexport const nested = /*#__PURE__*/dual(2, (self, name) => fromFlat(makeFlat({\n  load: (path, config) => self.flattened.load(path, config, true),\n  enumerateChildren: path => self.flattened.enumerateChildren(path),\n  patch: pathPatch.nested(self.flattened.patch, name)\n})));\n/** @internal */\nexport const unnested = /*#__PURE__*/dual(2, (self, name) => fromFlat(makeFlat({\n  load: (path, config) => self.flattened.load(path, config, true),\n  enumerateChildren: path => self.flattened.enumerateChildren(path),\n  patch: pathPatch.unnested(self.flattened.patch, name)\n})));\n/** @internal */\nexport const orElse = /*#__PURE__*/dual(2, (self, that) => fromFlat(orElseFlat(self.flattened, () => that().flattened)));\nconst orElseFlat = (self, that) => makeFlat({\n  load: (path, config, split) => pipe(pathPatch.patch(path, self.patch), core.flatMap(patch => self.load(patch, config, split)), core.catchAll(error1 => pipe(core.sync(that), core.flatMap(that => pipe(pathPatch.patch(path, that.patch), core.flatMap(patch => that.load(patch, config, split)), core.catchAll(error2 => core.fail(configError.Or(error1, error2)))))))),\n  enumerateChildren: path => pipe(pathPatch.patch(path, self.patch), core.flatMap(patch => self.enumerateChildren(patch)), core.either, core.flatMap(left => pipe(core.sync(that), core.flatMap(that => pipe(pathPatch.patch(path, that.patch), core.flatMap(patch => that.enumerateChildren(patch)), core.either, core.flatMap(right => {\n    if (Either.isLeft(left) && Either.isLeft(right)) {\n      return core.fail(configError.And(left.left, right.left));\n    }\n    if (Either.isLeft(left) && Either.isRight(right)) {\n      return core.succeed(right.right);\n    }\n    if (Either.isRight(left) && Either.isLeft(right)) {\n      return core.succeed(left.right);\n    }\n    if (Either.isRight(left) && Either.isRight(right)) {\n      return core.succeed(pipe(left.right, HashSet.union(right.right)));\n    }\n    throw new Error(\"BUG: ConfigProvider.orElseFlat - please report an issue at https://github.com/Effect-TS/effect/issues\");\n  })))))),\n  patch: pathPatch.empty\n});\n/** @internal */\nexport const constantCase = self => mapInputPath(self, StringUtils.constantCase);\n/** @internal */\nexport const kebabCase = self => mapInputPath(self, StringUtils.kebabCase);\n/** @internal */\nexport const lowerCase = self => mapInputPath(self, StringUtils.lowerCase);\n/** @internal */\nexport const snakeCase = self => mapInputPath(self, StringUtils.snakeCase);\n/** @internal */\nexport const upperCase = self => mapInputPath(self, StringUtils.upperCase);\n/** @internal */\nexport const within = /*#__PURE__*/dual(3, (self, path, f) => {\n  const unnest = Arr.reduce(path, self, (provider, name) => unnested(provider, name));\n  const nest = Arr.reduceRight(path, f(unnest), (provider, name) => nested(provider, name));\n  return orElse(nest, () => self);\n});\nconst splitPathString = (text, delim) => {\n  const split = text.split(new RegExp(`\\\\s*${regexp.escape(delim)}\\\\s*`));\n  return split;\n};\nconst parsePrimitive = (text, path, primitive, delimiter, split) => {\n  if (!split) {\n    return pipe(primitive.parse(text), core.mapBoth({\n      onFailure: configError.prefixed(path),\n      onSuccess: Arr.of\n    }));\n  }\n  return pipe(splitPathString(text, delimiter), core.forEachSequential(char => primitive.parse(char.trim())), core.mapError(configError.prefixed(path)));\n};\nconst transpose = array => {\n  return Object.keys(array[0]).map(column => array.map(row => row[column]));\n};\nconst indicesFrom = quotedIndices => pipe(core.forEachSequential(quotedIndices, parseQuotedIndex), core.mapBoth({\n  onFailure: () => Arr.empty(),\n  onSuccess: Arr.sort(number.Order)\n}), core.either, core.map(Either.merge));\nconst STR_INDEX_REGEX = /(^.+)(\\[(\\d+)\\])$/;\nconst QUOTED_INDEX_REGEX = /^(\\[(\\d+)\\])$/;\nconst parseQuotedIndex = str => {\n  const match = str.match(QUOTED_INDEX_REGEX);\n  if (match !== null) {\n    const matchedIndex = match[2];\n    return pipe(matchedIndex !== undefined && matchedIndex.length > 0 ? Option.some(matchedIndex) : Option.none(), Option.flatMap(parseInteger));\n  }\n  return Option.none();\n};\nconst splitIndexInKeys = (map, unmakePathString, makePathString) => {\n  const newMap = new Map();\n  for (const [pathString, value] of map) {\n    const keyWithIndex = pipe(unmakePathString(pathString), Arr.flatMap(key => Option.match(splitIndexFrom(key), {\n      onNone: () => Arr.of(key),\n      onSome: ([key, index]) => Arr.make(key, `[${index}]`)\n    })));\n    newMap.set(makePathString(keyWithIndex), value);\n  }\n  return newMap;\n};\nconst splitIndexFrom = key => {\n  const match = key.match(STR_INDEX_REGEX);\n  if (match !== null) {\n    const matchedString = match[1];\n    const matchedIndex = match[3];\n    const optionalString = matchedString !== undefined && matchedString.length > 0 ? Option.some(matchedString) : Option.none();\n    const optionalIndex = pipe(matchedIndex !== undefined && matchedIndex.length > 0 ? Option.some(matchedIndex) : Option.none(), Option.flatMap(parseInteger));\n    return Option.all([optionalString, optionalIndex]);\n  }\n  return Option.none();\n};\nconst parseInteger = str => {\n  const parsedIndex = Number.parseInt(str);\n  return Number.isNaN(parsedIndex) ? Option.none() : Option.some(parsedIndex);\n};\nconst keyName = name => ({\n  _tag: \"KeyName\",\n  name\n});\nconst keyIndex = index => ({\n  _tag: \"KeyIndex\",\n  index\n});\n/** @internal */\nexport const fromJson = json => {\n  const hiddenDelimiter = \"\\ufeff\";\n  const indexedEntries = Arr.map(getIndexedEntries(json), ([key, value]) => [configPathToString(key).join(hiddenDelimiter), value]);\n  return fromMap(new Map(indexedEntries), {\n    pathDelim: hiddenDelimiter,\n    seqDelim: hiddenDelimiter\n  });\n};\nconst configPathToString = path => {\n  const output = [];\n  let i = 0;\n  while (i < path.length) {\n    const component = path[i];\n    if (component._tag === \"KeyName\") {\n      if (i + 1 < path.length) {\n        const nextComponent = path[i + 1];\n        if (nextComponent._tag === \"KeyIndex\") {\n          output.push(`${component.name}[${nextComponent.index}]`);\n          i += 2;\n        } else {\n          output.push(component.name);\n          i += 1;\n        }\n      } else {\n        output.push(component.name);\n        i += 1;\n      }\n    }\n  }\n  return output;\n};\nconst getIndexedEntries = config => {\n  const loopAny = (path, value) => {\n    if (typeof value === \"string\") {\n      return Arr.make([path, value]);\n    }\n    if (typeof value === \"number\" || typeof value === \"boolean\") {\n      return Arr.make([path, String(value)]);\n    }\n    if (Arr.isArray(value)) {\n      return loopArray(path, value);\n    }\n    if (typeof value === \"object\" && value !== null) {\n      return loopObject(path, value);\n    }\n    return Arr.empty();\n  };\n  const loopArray = (path, values) => Arr.match(values, {\n    onEmpty: () => Arr.make([path, \"<nil>\"]),\n    onNonEmpty: Arr.flatMap((value, index) => loopAny(Arr.append(path, keyIndex(index)), value))\n  });\n  const loopObject = (path, value) => Object.entries(value).filter(([, value]) => Predicate.isNotNullable(value)).flatMap(([key, value]) => {\n    const newPath = Arr.append(path, keyName(key));\n    const result = loopAny(newPath, value);\n    if (Arr.isEmptyReadonlyArray(result)) {\n      return Arr.make([newPath, \"\"]);\n    }\n    return result;\n  });\n  return loopObject(Arr.empty(), config);\n};\n//# sourceMappingURL=configProvider.js.map","import * as Context from \"../../Context.js\";\nimport * as core from \"../core.js\";\n/** @internal */\nexport const TypeId = /*#__PURE__*/Symbol.for(\"effect/Console\");\n/** @internal */\nexport const consoleTag = /*#__PURE__*/Context.GenericTag(\"effect/Console\");\n/** @internal */\nexport const defaultConsole = {\n  [TypeId]: TypeId,\n  assert(condition, ...args) {\n    return core.sync(() => {\n      console.assert(condition, ...args);\n    });\n  },\n  clear: /*#__PURE__*/core.sync(() => {\n    console.clear();\n  }),\n  count(label) {\n    return core.sync(() => {\n      console.count(label);\n    });\n  },\n  countReset(label) {\n    return core.sync(() => {\n      console.countReset(label);\n    });\n  },\n  debug(...args) {\n    return core.sync(() => {\n      console.debug(...args);\n    });\n  },\n  dir(item, options) {\n    return core.sync(() => {\n      console.dir(item, options);\n    });\n  },\n  dirxml(...args) {\n    return core.sync(() => {\n      console.dirxml(...args);\n    });\n  },\n  error(...args) {\n    return core.sync(() => {\n      console.error(...args);\n    });\n  },\n  group(options) {\n    return options?.collapsed ? core.sync(() => console.groupCollapsed(options?.label)) : core.sync(() => console.group(options?.label));\n  },\n  groupEnd: /*#__PURE__*/core.sync(() => {\n    console.groupEnd();\n  }),\n  info(...args) {\n    return core.sync(() => {\n      console.info(...args);\n    });\n  },\n  log(...args) {\n    return core.sync(() => {\n      console.log(...args);\n    });\n  },\n  table(tabularData, properties) {\n    return core.sync(() => {\n      console.table(tabularData, properties);\n    });\n  },\n  time(label) {\n    return core.sync(() => console.time(label));\n  },\n  timeEnd(label) {\n    return core.sync(() => console.timeEnd(label));\n  },\n  timeLog(label, ...args) {\n    return core.sync(() => {\n      console.timeLog(label, ...args);\n    });\n  },\n  trace(...args) {\n    return core.sync(() => {\n      console.trace(...args);\n    });\n  },\n  warn(...args) {\n    return core.sync(() => {\n      console.warn(...args);\n    });\n  },\n  unsafe: console\n};\n//# sourceMappingURL=console.js.map","import * as Chunk from \"../Chunk.js\";\nimport * as Context from \"../Context.js\";\nimport { pipe } from \"../Function.js\";\nimport * as Hash from \"../Hash.js\";\nimport * as PCGRandom from \"../Utils.js\";\nimport * as core from \"./core.js\";\n/** @internal */\nconst RandomSymbolKey = \"effect/Random\";\n/** @internal */\nexport const RandomTypeId = /*#__PURE__*/Symbol.for(RandomSymbolKey);\n/** @internal */\nexport const randomTag = /*#__PURE__*/Context.GenericTag(\"effect/Random\");\n/** @internal */\nclass RandomImpl {\n  seed;\n  [RandomTypeId] = RandomTypeId;\n  PRNG;\n  constructor(seed) {\n    this.seed = seed;\n    this.PRNG = new PCGRandom.PCGRandom(seed);\n  }\n  get next() {\n    return core.sync(() => this.PRNG.number());\n  }\n  get nextBoolean() {\n    return core.map(this.next, n => n > 0.5);\n  }\n  get nextInt() {\n    return core.sync(() => this.PRNG.integer(Number.MAX_SAFE_INTEGER));\n  }\n  nextRange(min, max) {\n    return core.map(this.next, n => (max - min) * n + min);\n  }\n  nextIntBetween(min, max) {\n    return core.sync(() => this.PRNG.integer(max - min) + min);\n  }\n  shuffle(elements) {\n    return shuffleWith(elements, n => this.nextIntBetween(0, n));\n  }\n}\nconst shuffleWith = (elements, nextIntBounded) => {\n  return core.suspend(() => pipe(core.sync(() => Array.from(elements)), core.flatMap(buffer => {\n    const numbers = [];\n    for (let i = buffer.length; i >= 2; i = i - 1) {\n      numbers.push(i);\n    }\n    return pipe(numbers, core.forEachSequentialDiscard(n => pipe(nextIntBounded(n), core.map(k => swap(buffer, n - 1, k)))), core.as(Chunk.fromIterable(buffer)));\n  })));\n};\nconst swap = (buffer, index1, index2) => {\n  const tmp = buffer[index1];\n  buffer[index1] = buffer[index2];\n  buffer[index2] = tmp;\n  return buffer;\n};\nexport const make = seed => new RandomImpl(Hash.hash(seed));\n//# sourceMappingURL=random.js.map","/**\n * @since 2.0.0\n */\nimport * as Context from \"../Context.js\";\nimport { constFalse } from \"../Function.js\";\n/** @internal */\nexport const TracerTypeId = /*#__PURE__*/Symbol.for(\"effect/Tracer\");\n/** @internal */\nexport const make = options => ({\n  [TracerTypeId]: TracerTypeId,\n  ...options\n});\n/** @internal */\nexport const tracerTag = /*#__PURE__*/Context.GenericTag(\"effect/Tracer\");\n/** @internal */\nexport const spanTag = /*#__PURE__*/Context.GenericTag(\"effect/ParentSpan\");\nconst randomHexString = /*#__PURE__*/function () {\n  const characters = \"abcdef0123456789\";\n  const charactersLength = characters.length;\n  return function (length) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n}();\n/** @internal */\nexport class NativeSpan {\n  name;\n  parent;\n  context;\n  startTime;\n  kind;\n  _tag = \"Span\";\n  spanId;\n  traceId = \"native\";\n  sampled = true;\n  status;\n  attributes;\n  events = [];\n  links;\n  constructor(name, parent, context, links, startTime, kind) {\n    this.name = name;\n    this.parent = parent;\n    this.context = context;\n    this.startTime = startTime;\n    this.kind = kind;\n    this.status = {\n      _tag: \"Started\",\n      startTime\n    };\n    this.attributes = new Map();\n    this.traceId = parent._tag === \"Some\" ? parent.value.traceId : randomHexString(32);\n    this.spanId = randomHexString(16);\n    this.links = Array.from(links);\n  }\n  end(endTime, exit) {\n    this.status = {\n      _tag: \"Ended\",\n      endTime,\n      exit,\n      startTime: this.status.startTime\n    };\n  }\n  attribute(key, value) {\n    this.attributes.set(key, value);\n  }\n  event(name, startTime, attributes) {\n    this.events.push([name, startTime, attributes ?? {}]);\n  }\n  addLinks(links) {\n    // eslint-disable-next-line no-restricted-syntax\n    this.links.push(...links);\n  }\n}\n/** @internal */\nexport const nativeTracer = /*#__PURE__*/make({\n  span: (name, parent, context, links, startTime, kind) => new NativeSpan(name, parent, context, links, startTime, kind),\n  context: f => f()\n});\n/** @internal */\nexport const externalSpan = options => ({\n  _tag: \"ExternalSpan\",\n  spanId: options.spanId,\n  traceId: options.traceId,\n  sampled: options.sampled ?? true,\n  context: options.context ?? Context.empty()\n});\n/** @internal */\nexport const addSpanStackTrace = options => {\n  if (options?.captureStackTrace === false) {\n    return options;\n  } else if (options?.captureStackTrace !== undefined && typeof options.captureStackTrace !== \"boolean\") {\n    return options;\n  }\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 3;\n  const traceError = new Error();\n  Error.stackTraceLimit = limit;\n  let cache = false;\n  return {\n    ...options,\n    captureStackTrace: () => {\n      if (cache !== false) {\n        return cache;\n      }\n      if (traceError.stack !== undefined) {\n        const stack = traceError.stack.split(\"\\n\");\n        if (stack[3] !== undefined) {\n          cache = stack[3].trim();\n          return cache;\n        }\n      }\n    }\n  };\n};\n/** @internal */\nexport const DisablePropagation = /*#__PURE__*/Context.Reference()(\"effect/Tracer/DisablePropagation\", {\n  defaultValue: constFalse\n});\n//# sourceMappingURL=tracer.js.map","import * as Array from \"../Array.js\";\nimport * as Context from \"../Context.js\";\nimport * as Duration from \"../Duration.js\";\nimport { dual, pipe } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as clock from \"./clock.js\";\nimport * as configProvider from \"./configProvider.js\";\nimport * as core from \"./core.js\";\nimport * as console_ from \"./defaultServices/console.js\";\nimport * as random from \"./random.js\";\nimport * as tracer from \"./tracer.js\";\n/** @internal */\nexport const liveServices = /*#__PURE__*/pipe( /*#__PURE__*/Context.empty(), /*#__PURE__*/Context.add(clock.clockTag, /*#__PURE__*/clock.make()), /*#__PURE__*/Context.add(console_.consoleTag, console_.defaultConsole), /*#__PURE__*/Context.add(random.randomTag, /*#__PURE__*/random.make( /*#__PURE__*/Math.random())), /*#__PURE__*/Context.add(configProvider.configProviderTag, /*#__PURE__*/configProvider.fromEnv()), /*#__PURE__*/Context.add(tracer.tracerTag, tracer.nativeTracer));\n/**\n * The `FiberRef` holding the default `Effect` services.\n *\n * @since 2.0.0\n * @category fiberRefs\n */\nexport const currentServices = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/DefaultServices/currentServices\"), () => core.fiberRefUnsafeMakeContext(liveServices));\n// circular with Clock\n/** @internal */\nexport const sleep = duration => {\n  const decodedDuration = Duration.decode(duration);\n  return clockWith(clock => clock.sleep(decodedDuration));\n};\n/** @internal */\nexport const defaultServicesWith = f => core.withFiberRuntime(fiber => f(fiber.currentDefaultServices));\n/** @internal */\nexport const clockWith = f => defaultServicesWith(services => f(services.unsafeMap.get(clock.clockTag.key)));\n/** @internal */\nexport const currentTimeMillis = /*#__PURE__*/clockWith(clock => clock.currentTimeMillis);\n/** @internal */\nexport const currentTimeNanos = /*#__PURE__*/clockWith(clock => clock.currentTimeNanos);\n/** @internal */\nexport const withClock = /*#__PURE__*/dual(2, (effect, c) => core.fiberRefLocallyWith(currentServices, Context.add(clock.clockTag, c))(effect));\n// circular with ConfigProvider\n/** @internal */\nexport const withConfigProvider = /*#__PURE__*/dual(2, (self, provider) => core.fiberRefLocallyWith(currentServices, Context.add(configProvider.configProviderTag, provider))(self));\n/** @internal */\nexport const configProviderWith = f => defaultServicesWith(services => f(services.unsafeMap.get(configProvider.configProviderTag.key)));\n/** @internal */\nexport const config = config => configProviderWith(_ => _.load(config));\n/** @internal */\nexport const configOrDie = config => core.orDie(configProviderWith(_ => _.load(config)));\n// circular with Random\n/** @internal */\nexport const randomWith = f => defaultServicesWith(services => f(services.unsafeMap.get(random.randomTag.key)));\n/** @internal */\nexport const withRandom = /*#__PURE__*/dual(2, (effect, value) => core.fiberRefLocallyWith(currentServices, Context.add(random.randomTag, value))(effect));\n/** @internal */\nexport const next = /*#__PURE__*/randomWith(random => random.next);\n/** @internal */\nexport const nextInt = /*#__PURE__*/randomWith(random => random.nextInt);\n/** @internal */\nexport const nextBoolean = /*#__PURE__*/randomWith(random => random.nextBoolean);\n/** @internal */\nexport const nextRange = (min, max) => randomWith(random => random.nextRange(min, max));\n/** @internal */\nexport const nextIntBetween = (min, max) => randomWith(random => random.nextIntBetween(min, max));\n/** @internal */\nexport const shuffle = elements => randomWith(random => random.shuffle(elements));\n/** @internal */\nexport const choice = elements => {\n  const array = Array.fromIterable(elements);\n  return core.map(array.length === 0 ? core.fail(new core.NoSuchElementException(\"Cannot select a random element from an empty array\")) : randomWith(random => random.nextIntBetween(0, array.length)), i => array[i]);\n};\n// circular with Tracer\n/** @internal */\nexport const tracerWith = f => defaultServicesWith(services => f(services.unsafeMap.get(tracer.tracerTag.key)));\n/** @internal */\nexport const withTracer = /*#__PURE__*/dual(2, (effect, value) => core.fiberRefLocallyWith(currentServices, Context.add(tracer.tracerTag, value))(effect));\n//# sourceMappingURL=defaultServices.js.map","import * as Arr from \"../Array.js\";\nimport * as Equal from \"../Equal.js\";\nimport { dual, pipe } from \"../Function.js\";\nimport * as HashSet from \"../HashSet.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport * as core from \"./core.js\";\n/** @internal */\nexport function unsafeMake(fiberRefLocals) {\n  return new FiberRefsImpl(fiberRefLocals);\n}\n/** @internal */\nexport function empty() {\n  return unsafeMake(new Map());\n}\n/** @internal */\nexport const FiberRefsSym = /*#__PURE__*/Symbol.for(\"effect/FiberRefs\");\n/** @internal */\nexport class FiberRefsImpl {\n  locals;\n  [FiberRefsSym] = FiberRefsSym;\n  constructor(locals) {\n    this.locals = locals;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nconst findAncestor = (_ref, _parentStack, _childStack, _childModified = false) => {\n  const ref = _ref;\n  let parentStack = _parentStack;\n  let childStack = _childStack;\n  let childModified = _childModified;\n  let ret = undefined;\n  while (ret === undefined) {\n    if (Arr.isNonEmptyReadonlyArray(parentStack) && Arr.isNonEmptyReadonlyArray(childStack)) {\n      const parentFiberId = Arr.headNonEmpty(parentStack)[0];\n      const parentAncestors = Arr.tailNonEmpty(parentStack);\n      const childFiberId = Arr.headNonEmpty(childStack)[0];\n      const childRefValue = Arr.headNonEmpty(childStack)[1];\n      const childAncestors = Arr.tailNonEmpty(childStack);\n      if (parentFiberId.startTimeMillis < childFiberId.startTimeMillis) {\n        childStack = childAncestors;\n        childModified = true;\n      } else if (parentFiberId.startTimeMillis > childFiberId.startTimeMillis) {\n        parentStack = parentAncestors;\n      } else {\n        if (parentFiberId.id < childFiberId.id) {\n          childStack = childAncestors;\n          childModified = true;\n        } else if (parentFiberId.id > childFiberId.id) {\n          parentStack = parentAncestors;\n        } else {\n          ret = [childRefValue, childModified];\n        }\n      }\n    } else {\n      ret = [ref.initial, true];\n    }\n  }\n  return ret;\n};\n/** @internal */\nexport const joinAs = /*#__PURE__*/dual(3, (self, fiberId, that) => {\n  const parentFiberRefs = new Map(self.locals);\n  that.locals.forEach((childStack, fiberRef) => {\n    const childValue = childStack[0][1];\n    if (!childStack[0][0][Equal.symbol](fiberId)) {\n      if (!parentFiberRefs.has(fiberRef)) {\n        if (Equal.equals(childValue, fiberRef.initial)) {\n          return;\n        }\n        parentFiberRefs.set(fiberRef, [[fiberId, fiberRef.join(fiberRef.initial, childValue)]]);\n        return;\n      }\n      const parentStack = parentFiberRefs.get(fiberRef);\n      const [ancestor, wasModified] = findAncestor(fiberRef, parentStack, childStack);\n      if (wasModified) {\n        const patch = fiberRef.diff(ancestor, childValue);\n        const oldValue = parentStack[0][1];\n        const newValue = fiberRef.join(oldValue, fiberRef.patch(patch)(oldValue));\n        if (!Equal.equals(oldValue, newValue)) {\n          let newStack;\n          const parentFiberId = parentStack[0][0];\n          if (parentFiberId[Equal.symbol](fiberId)) {\n            newStack = [[parentFiberId, newValue], ...parentStack.slice(1)];\n          } else {\n            newStack = [[fiberId, newValue], ...parentStack];\n          }\n          parentFiberRefs.set(fiberRef, newStack);\n        }\n      }\n    }\n  });\n  return new FiberRefsImpl(parentFiberRefs);\n});\n/** @internal */\nexport const forkAs = /*#__PURE__*/dual(2, (self, childId) => {\n  const map = new Map();\n  unsafeForkAs(self, map, childId);\n  return new FiberRefsImpl(map);\n});\nconst unsafeForkAs = (self, map, fiberId) => {\n  self.locals.forEach((stack, fiberRef) => {\n    const oldValue = stack[0][1];\n    const newValue = fiberRef.patch(fiberRef.fork)(oldValue);\n    if (Equal.equals(oldValue, newValue)) {\n      map.set(fiberRef, stack);\n    } else {\n      map.set(fiberRef, [[fiberId, newValue], ...stack]);\n    }\n  });\n};\n/** @internal */\nexport const fiberRefs = self => HashSet.fromIterable(self.locals.keys());\n/** @internal */\nexport const setAll = self => core.forEachSequentialDiscard(fiberRefs(self), fiberRef => core.fiberRefSet(fiberRef, getOrDefault(self, fiberRef)));\n/** @internal */\nexport const delete_ = /*#__PURE__*/dual(2, (self, fiberRef) => {\n  const locals = new Map(self.locals);\n  locals.delete(fiberRef);\n  return new FiberRefsImpl(locals);\n});\n/** @internal */\nexport const get = /*#__PURE__*/dual(2, (self, fiberRef) => {\n  if (!self.locals.has(fiberRef)) {\n    return Option.none();\n  }\n  return Option.some(Arr.headNonEmpty(self.locals.get(fiberRef))[1]);\n});\n/** @internal */\nexport const getOrDefault = /*#__PURE__*/dual(2, (self, fiberRef) => pipe(get(self, fiberRef), Option.getOrElse(() => fiberRef.initial)));\n/** @internal */\nexport const updateAs = /*#__PURE__*/dual(2, (self, {\n  fiberId,\n  fiberRef,\n  value\n}) => {\n  if (self.locals.size === 0) {\n    return new FiberRefsImpl(new Map([[fiberRef, [[fiberId, value]]]]));\n  }\n  const locals = new Map(self.locals);\n  unsafeUpdateAs(locals, fiberId, fiberRef, value);\n  return new FiberRefsImpl(locals);\n});\nconst unsafeUpdateAs = (locals, fiberId, fiberRef, value) => {\n  const oldStack = locals.get(fiberRef) ?? [];\n  let newStack;\n  if (Arr.isNonEmptyReadonlyArray(oldStack)) {\n    const [currentId, currentValue] = Arr.headNonEmpty(oldStack);\n    if (currentId[Equal.symbol](fiberId)) {\n      if (Equal.equals(currentValue, value)) {\n        return;\n      } else {\n        newStack = [[fiberId, value], ...oldStack.slice(1)];\n      }\n    } else {\n      newStack = [[fiberId, value], ...oldStack];\n    }\n  } else {\n    newStack = [[fiberId, value]];\n  }\n  locals.set(fiberRef, newStack);\n};\n/** @internal */\nexport const updateManyAs = /*#__PURE__*/dual(2, (self, {\n  entries,\n  forkAs\n}) => {\n  if (self.locals.size === 0) {\n    return new FiberRefsImpl(new Map(entries));\n  }\n  const locals = new Map(self.locals);\n  if (forkAs !== undefined) {\n    unsafeForkAs(self, locals, forkAs);\n  }\n  entries.forEach(([fiberRef, values]) => {\n    if (values.length === 1) {\n      unsafeUpdateAs(locals, values[0][0], fiberRef, values[0][1]);\n    } else {\n      values.forEach(([fiberId, value]) => {\n        unsafeUpdateAs(locals, fiberId, fiberRef, value);\n      });\n    }\n  });\n  return new FiberRefsImpl(locals);\n});\n//# sourceMappingURL=fiberRefs.js.map","import * as internal from \"./internal/fiberRefs.js\";\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const FiberRefsSym = internal.FiberRefsSym;\nconst delete_ = internal.delete_;\nexport {\n/**\n * Deletes the specified `FiberRef` from the `FibterRefs`.\n *\n * @since 2.0.0\n * @category utils\n */\ndelete_ as delete };\n/**\n * Returns a set of each `FiberRef` in this collection.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const fiberRefs = internal.fiberRefs;\n/**\n * Forks this collection of fiber refs as the specified child fiber id. This\n * will potentially modify the value of the fiber refs, as determined by the\n * individual fiber refs that make up the collection.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const forkAs = internal.forkAs;\n/**\n * Gets the value of the specified `FiberRef` in this collection of `FiberRef`\n * values if it exists or `None` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const get = internal.get;\n/**\n * Gets the value of the specified `FiberRef` in this collection of `FiberRef`\n * values if it exists or the `initial` value of the `FiberRef` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nexport const getOrDefault = internal.getOrDefault;\n/**\n * Joins this collection of fiber refs to the specified collection, as the\n * specified fiber id. This will perform diffing and merging to ensure\n * preservation of maximum information from both child and parent refs.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const joinAs = internal.joinAs;\n/**\n * Set each ref to either its value or its default.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const setAll = internal.setAll;\n/**\n * Updates the value of the specified `FiberRef` using the provided `FiberId`\n *\n * @since 2.0.0\n * @category utils\n */\nexport const updateAs = internal.updateAs;\n/**\n * Updates the values of the specified `FiberRef` & value pairs using the provided `FiberId`\n *\n * @since 2.0.0\n * @category utils\n */\nexport const updateManyAs = internal.updateManyAs;\n/**\n * Note: it will not copy the provided Map, make sure to provide a fresh one.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeMake = internal.unsafeMake;\n/**\n * The empty collection of `FiberRef` values.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const empty = internal.empty;\n//# sourceMappingURL=FiberRefs.js.map","import { dual, pipe } from \"./Function.js\";\nimport * as core from \"./internal/core.js\";\nimport * as number from \"./Number.js\";\nimport * as order from \"./Order.js\";\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const All = core.logLevelAll;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Fatal = core.logLevelFatal;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Error = core.logLevelError;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Warning = core.logLevelWarning;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Info = core.logLevelInfo;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Debug = core.logLevelDebug;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Trace = core.logLevelTrace;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const None = core.logLevelNone;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const allLevels = core.allLogLevels;\n/**\n * Temporarily sets a `LogLevel` for an `Effect` workflow.\n *\n * **Details**\n *\n * This function allows you to apply a specific `LogLevel` locally to an\n * `Effect` workflow. Once the workflow completes, the `LogLevel` reverts to its\n * previous state.\n *\n * **When to Use**\n *\n * This is particularly useful when you want to adjust the verbosity of logging\n * for specific parts of your program without affecting the global log level.\n *\n * @example\n * ```ts\n * import { Effect, LogLevel } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   yield* Effect.log(\"message1\")\n *   yield* Effect.gen(function*() {\n *     yield* Effect.log(\"message2\")\n *     yield* Effect.log(\"message3\")\n *   }).pipe(LogLevel.locally(LogLevel.Warning))\n * })\n *\n * Effect.runFork(program)\n * // timestamp=... level=INFO fiber=#0 message=message1\n * // timestamp=... level=WARN fiber=#0 message=message2\n * // timestamp=... level=WARN fiber=#0 message=message3\n * ```\n *\n * @since 2.0.0\n * @category utils\n */\nexport const locally = /*#__PURE__*/dual(2, (use, self) => core.fiberRefLocally(use, core.currentLogLevel, self));\n/**\n * @since 2.0.0\n * @category instances\n */\nexport const Order = /*#__PURE__*/pipe(number.Order, /*#__PURE__*/order.mapInput(level => level.ordinal));\n/**\n * @since 2.0.0\n * @category ordering\n */\nexport const lessThan = /*#__PURE__*/order.lessThan(Order);\n/**\n * @since 2.0.0\n * @category ordering\n */\nexport const lessThanEqual = /*#__PURE__*/order.lessThanOrEqualTo(Order);\n/**\n * @since 2.0.0\n * @category ordering\n */\nexport const greaterThan = /*#__PURE__*/order.greaterThan(Order);\n/**\n * @since 2.0.0\n * @category ordering\n */\nexport const greaterThanEqual = /*#__PURE__*/order.greaterThanOrEqualTo(Order);\n/**\n * @since 2.0.0\n * @category conversions\n */\nexport const fromLiteral = literal => {\n  switch (literal) {\n    case \"All\":\n      return All;\n    case \"Debug\":\n      return Debug;\n    case \"Error\":\n      return Error;\n    case \"Fatal\":\n      return Fatal;\n    case \"Info\":\n      return Info;\n    case \"Trace\":\n      return Trace;\n    case \"None\":\n      return None;\n    case \"Warning\":\n      return Warning;\n  }\n};\n//# sourceMappingURL=LogLevel.js.map","/** @internal */\nexport const make = (label, startTime) => ({\n  label,\n  startTime\n});\n/**\n * Sanitize a given string by replacing spaces, equal signs, and double quotes with underscores.\n *\n * @internal\n */\nexport const formatLabel = key => key.replace(/[\\s=\"]/g, \"_\");\n/** @internal */\nexport const render = now => self => {\n  const label = formatLabel(self.label);\n  return `${label}=${now - self.startTime}ms`;\n};\n//# sourceMappingURL=logSpan.js.map","import * as internal from \"./internal/effectable.js\";\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const EffectTypeId = internal.EffectTypeId;\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const StreamTypeId = internal.StreamTypeId;\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const SinkTypeId = internal.SinkTypeId;\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const ChannelTypeId = internal.ChannelTypeId;\n/**\n * @since 2.0.0\n * @category prototypes\n */\nexport const EffectPrototype = internal.EffectPrototype;\n/**\n * @since 2.0.0\n * @category prototypes\n */\nexport const CommitPrototype = internal.CommitPrototype;\n/**\n * @since 2.0.0\n * @category prototypes\n */\nexport const StructuralCommitPrototype = internal.StructuralCommitPrototype;\nconst Base = internal.Base;\nconst StructuralBase = internal.StructuralBase;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport class Class extends Base {}\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport class StructuralClass extends StructuralBase {}\n//# sourceMappingURL=Effectable.js.map","import * as Arr from \"../../Array.js\";\nimport { equals } from \"../../Equal.js\";\nimport { dual } from \"../../Function.js\";\nimport * as fiberRefs_ from \"../fiberRefs.js\";\n/** @internal */\nexport const OP_EMPTY = \"Empty\";\n/** @internal */\nexport const OP_ADD = \"Add\";\n/** @internal */\nexport const OP_REMOVE = \"Remove\";\n/** @internal */\nexport const OP_UPDATE = \"Update\";\n/** @internal */\nexport const OP_AND_THEN = \"AndThen\";\n/** @internal */\nexport const empty = {\n  _tag: OP_EMPTY\n};\n/** @internal */\nexport const diff = (oldValue, newValue) => {\n  const missingLocals = new Map(oldValue.locals);\n  let patch = empty;\n  for (const [fiberRef, pairs] of newValue.locals.entries()) {\n    const newValue = Arr.headNonEmpty(pairs)[1];\n    const old = missingLocals.get(fiberRef);\n    if (old !== undefined) {\n      const oldValue = Arr.headNonEmpty(old)[1];\n      if (!equals(oldValue, newValue)) {\n        patch = combine({\n          _tag: OP_UPDATE,\n          fiberRef,\n          patch: fiberRef.diff(oldValue, newValue)\n        })(patch);\n      }\n    } else {\n      patch = combine({\n        _tag: OP_ADD,\n        fiberRef,\n        value: newValue\n      })(patch);\n    }\n    missingLocals.delete(fiberRef);\n  }\n  for (const [fiberRef] of missingLocals.entries()) {\n    patch = combine({\n      _tag: OP_REMOVE,\n      fiberRef\n    })(patch);\n  }\n  return patch;\n};\n/** @internal */\nexport const combine = /*#__PURE__*/dual(2, (self, that) => ({\n  _tag: OP_AND_THEN,\n  first: self,\n  second: that\n}));\n/** @internal */\nexport const patch = /*#__PURE__*/dual(3, (self, fiberId, oldValue) => {\n  let fiberRefs = oldValue;\n  let patches = Arr.of(self);\n  while (Arr.isNonEmptyReadonlyArray(patches)) {\n    const head = Arr.headNonEmpty(patches);\n    const tail = Arr.tailNonEmpty(patches);\n    switch (head._tag) {\n      case OP_EMPTY:\n        {\n          patches = tail;\n          break;\n        }\n      case OP_ADD:\n        {\n          fiberRefs = fiberRefs_.updateAs(fiberRefs, {\n            fiberId,\n            fiberRef: head.fiberRef,\n            value: head.value\n          });\n          patches = tail;\n          break;\n        }\n      case OP_REMOVE:\n        {\n          fiberRefs = fiberRefs_.delete_(fiberRefs, head.fiberRef);\n          patches = tail;\n          break;\n        }\n      case OP_UPDATE:\n        {\n          const value = fiberRefs_.getOrDefault(fiberRefs, head.fiberRef);\n          fiberRefs = fiberRefs_.updateAs(fiberRefs, {\n            fiberId,\n            fiberRef: head.fiberRef,\n            value: head.fiberRef.patch(head.patch)(value)\n          });\n          patches = tail;\n          break;\n        }\n      case OP_AND_THEN:\n        {\n          patches = Arr.prepend(head.first)(Arr.prepend(head.second)(tail));\n          break;\n        }\n    }\n  }\n  return fiberRefs;\n});\n//# sourceMappingURL=patch.js.map","import * as Equal from \"../../Equal.js\";\nimport * as Hash from \"../../Hash.js\";\nimport { pipeArguments } from \"../../Pipeable.js\";\nimport { hasProperty } from \"../../Predicate.js\";\n/** @internal */\nconst MetricLabelSymbolKey = \"effect/MetricLabel\";\n/** @internal */\nexport const MetricLabelTypeId = /*#__PURE__*/Symbol.for(MetricLabelSymbolKey);\n/** @internal */\nclass MetricLabelImpl {\n  key;\n  value;\n  [MetricLabelTypeId] = MetricLabelTypeId;\n  _hash;\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this._hash = Hash.string(MetricLabelSymbolKey + this.key + this.value);\n  }\n  [Hash.symbol]() {\n    return this._hash;\n  }\n  [Equal.symbol](that) {\n    return isMetricLabel(that) && this.key === that.key && this.value === that.value;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport const make = (key, value) => {\n  return new MetricLabelImpl(key, value);\n};\n/** @internal */\nexport const isMetricLabel = u => hasProperty(u, MetricLabelTypeId);\n//# sourceMappingURL=label.js.map","import { dual } from \"../Function.js\";\n/** @internal */\nexport const OP_SEQUENTIAL = \"Sequential\";\n/** @internal */\nexport const OP_PARALLEL = \"Parallel\";\n/** @internal */\nexport const OP_PARALLEL_N = \"ParallelN\";\n/** @internal */\nexport const sequential = {\n  _tag: OP_SEQUENTIAL\n};\n/** @internal */\nexport const parallel = {\n  _tag: OP_PARALLEL\n};\n/** @internal */\nexport const parallelN = parallelism => ({\n  _tag: OP_PARALLEL_N,\n  parallelism\n});\n/** @internal */\nexport const isSequential = self => self._tag === OP_SEQUENTIAL;\n/** @internal */\nexport const isParallel = self => self._tag === OP_PARALLEL;\n/** @internal */\nexport const isParallelN = self => self._tag === OP_PARALLEL_N;\n/** @internal */\nexport const match = /*#__PURE__*/dual(2, (self, options) => {\n  switch (self._tag) {\n    case OP_SEQUENTIAL:\n      {\n        return options.onSequential();\n      }\n    case OP_PARALLEL:\n      {\n        return options.onParallel();\n      }\n    case OP_PARALLEL_N:\n      {\n        return options.onParallelN(self.parallelism);\n      }\n  }\n});\n//# sourceMappingURL=executionStrategy.js.map","import * as internal from \"./internal/executionStrategy.js\";\n/**\n * Execute effects sequentially.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const sequential = internal.sequential;\n/**\n * Execute effects in parallel.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const parallel = internal.parallel;\n/**\n * Execute effects in parallel, up to the specified number of concurrent fibers.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const parallelN = internal.parallelN;\n/**\n * Returns `true` if the specified `ExecutionStrategy` is an instance of\n * `Sequential`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isSequential = internal.isSequential;\n/**\n * Returns `true` if the specified `ExecutionStrategy` is an instance of\n * `Sequential`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isParallel = internal.isParallel;\n/**\n * Returns `true` if the specified `ExecutionStrategy` is an instance of\n * `Sequential`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isParallelN = internal.isParallelN;\n/**\n * Folds over the specified `ExecutionStrategy` using the provided case\n * functions.\n *\n * @since 2.0.0\n * @category folding\n */\nexport const match = internal.match;\n//# sourceMappingURL=ExecutionStrategy.js.map","import * as internal from \"./internal/fiberRefs/patch.js\";\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const empty = internal.empty;\n/**\n * Constructs a patch that describes the changes between the specified\n * collections of `FiberRef`\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const diff = internal.diff;\n/**\n * Combines this patch and the specified patch to create a new patch that\n * describes applying the changes from this patch and the specified patch\n * sequentially.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const combine = internal.combine;\n/**\n * Applies the changes described by this patch to the specified collection\n * of `FiberRef` values.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const patch = internal.patch;\n//# sourceMappingURL=FiberRefsPatch.js.map","import * as Equal from \"../Equal.js\";\nimport { pipe } from \"../Function.js\";\nimport * as Hash from \"../Hash.js\";\nimport { hasProperty } from \"../Predicate.js\";\nconst FiberStatusSymbolKey = \"effect/FiberStatus\";\n/** @internal */\nexport const FiberStatusTypeId = /*#__PURE__*/Symbol.for(FiberStatusSymbolKey);\n/** @internal */\nexport const OP_DONE = \"Done\";\n/** @internal */\nexport const OP_RUNNING = \"Running\";\n/** @internal */\nexport const OP_SUSPENDED = \"Suspended\";\nconst DoneHash = /*#__PURE__*/Hash.string(`${FiberStatusSymbolKey}-${OP_DONE}`);\n/** @internal */\nclass Done {\n  [FiberStatusTypeId] = FiberStatusTypeId;\n  _tag = OP_DONE;\n  [Hash.symbol]() {\n    return DoneHash;\n  }\n  [Equal.symbol](that) {\n    return isFiberStatus(that) && that._tag === OP_DONE;\n  }\n}\n/** @internal */\nclass Running {\n  runtimeFlags;\n  [FiberStatusTypeId] = FiberStatusTypeId;\n  _tag = OP_RUNNING;\n  constructor(runtimeFlags) {\n    this.runtimeFlags = runtimeFlags;\n  }\n  [Hash.symbol]() {\n    return pipe(Hash.hash(FiberStatusSymbolKey), Hash.combine(Hash.hash(this._tag)), Hash.combine(Hash.hash(this.runtimeFlags)), Hash.cached(this));\n  }\n  [Equal.symbol](that) {\n    return isFiberStatus(that) && that._tag === OP_RUNNING && this.runtimeFlags === that.runtimeFlags;\n  }\n}\n/** @internal */\nclass Suspended {\n  runtimeFlags;\n  blockingOn;\n  [FiberStatusTypeId] = FiberStatusTypeId;\n  _tag = OP_SUSPENDED;\n  constructor(runtimeFlags, blockingOn) {\n    this.runtimeFlags = runtimeFlags;\n    this.blockingOn = blockingOn;\n  }\n  [Hash.symbol]() {\n    return pipe(Hash.hash(FiberStatusSymbolKey), Hash.combine(Hash.hash(this._tag)), Hash.combine(Hash.hash(this.runtimeFlags)), Hash.combine(Hash.hash(this.blockingOn)), Hash.cached(this));\n  }\n  [Equal.symbol](that) {\n    return isFiberStatus(that) && that._tag === OP_SUSPENDED && this.runtimeFlags === that.runtimeFlags && Equal.equals(this.blockingOn, that.blockingOn);\n  }\n}\n/** @internal */\nexport const done = /*#__PURE__*/new Done();\n/** @internal */\nexport const running = runtimeFlags => new Running(runtimeFlags);\n/** @internal */\nexport const suspended = (runtimeFlags, blockingOn) => new Suspended(runtimeFlags, blockingOn);\n/** @internal */\nexport const isFiberStatus = u => hasProperty(u, FiberStatusTypeId);\n/** @internal */\nexport const isDone = self => self._tag === OP_DONE;\n/** @internal */\nexport const isRunning = self => self._tag === OP_RUNNING;\n/** @internal */\nexport const isSuspended = self => self._tag === OP_SUSPENDED;\n//# sourceMappingURL=fiberStatus.js.map","import * as internal from \"./internal/fiberStatus.js\";\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const FiberStatusTypeId = internal.FiberStatusTypeId;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const done = internal.done;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const running = internal.running;\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const suspended = internal.suspended;\n/**\n * Returns `true` if the specified value is a `FiberStatus`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isFiberStatus = internal.isFiberStatus;\n/**\n * Returns `true` if the specified `FiberStatus` is `Done`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isDone = internal.isDone;\n/**\n * Returns `true` if the specified `FiberStatus` is `Running`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isRunning = internal.isRunning;\n/**\n * Returns `true` if the specified `FiberStatus` is `Suspended`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isSuspended = internal.isSuspended;\n//# sourceMappingURL=FiberStatus.js.map","/**\n * A lightweight alternative to the `Effect` data type, with a subset of the functionality.\n *\n * @since 3.4.0\n * @experimental\n */\nimport * as Arr from \"./Array.js\";\nimport * as Context from \"./Context.js\";\nimport * as Effectable from \"./Effectable.js\";\nimport * as Either from \"./Either.js\";\nimport * as Equal from \"./Equal.js\";\nimport { constTrue, constVoid, dual, identity } from \"./Function.js\";\nimport { globalValue } from \"./GlobalValue.js\";\nimport * as Hash from \"./Hash.js\";\nimport { format, NodeInspectSymbol, toStringUnknown } from \"./Inspectable.js\";\nimport * as InternalContext from \"./internal/context.js\";\nimport * as doNotation from \"./internal/doNotation.js\";\nimport { StructuralPrototype } from \"./internal/effectable.js\";\nimport * as Option from \"./Option.js\";\nimport { pipeArguments } from \"./Pipeable.js\";\nimport { hasProperty, isIterable, isTagged } from \"./Predicate.js\";\nimport { SingleShotGen, YieldWrap, yieldWrapGet } from \"./Utils.js\";\n/**\n * @since 3.4.0\n * @experimental\n * @category type ids\n */\nexport const TypeId = /*#__PURE__*/Symbol.for(\"effect/Micro\");\n/**\n * @since 3.4.0\n * @experimental\n * @category MicroExit\n */\nexport const MicroExitTypeId = /*#__PURE__*/Symbol.for(\"effect/Micro/MicroExit\");\n/**\n * @since 3.4.0\n * @experimental\n * @category guards\n */\nexport const isMicro = u => typeof u === \"object\" && u !== null && TypeId in u;\n// ----------------------------------------------------------------------------\n// MicroCause\n// ----------------------------------------------------------------------------\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const MicroCauseTypeId = /*#__PURE__*/Symbol.for(\"effect/Micro/MicroCause\");\n/**\n * @since 3.6.6\n * @experimental\n * @category guards\n */\nexport const isMicroCause = self => hasProperty(self, MicroCauseTypeId);\nconst microCauseVariance = {\n  _E: identity\n};\nclass MicroCauseImpl extends globalThis.Error {\n  _tag;\n  traces;\n  [MicroCauseTypeId];\n  constructor(_tag, originalError, traces) {\n    const causeName = `MicroCause.${_tag}`;\n    let name;\n    let message;\n    let stack;\n    if (originalError instanceof globalThis.Error) {\n      name = `(${causeName}) ${originalError.name}`;\n      message = originalError.message;\n      const messageLines = message.split(\"\\n\").length;\n      stack = originalError.stack ? `(${causeName}) ${originalError.stack.split(\"\\n\").slice(0, messageLines + 3).join(\"\\n\")}` : `${name}: ${message}`;\n    } else {\n      name = causeName;\n      message = toStringUnknown(originalError, 0);\n      stack = `${name}: ${message}`;\n    }\n    if (traces.length > 0) {\n      stack += `\\n    ${traces.join(\"\\n    \")}`;\n    }\n    super(message);\n    this._tag = _tag;\n    this.traces = traces;\n    this[MicroCauseTypeId] = microCauseVariance;\n    this.name = name;\n    this.stack = stack;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  toString() {\n    return this.stack;\n  }\n  [NodeInspectSymbol]() {\n    return this.stack;\n  }\n}\nclass Fail extends MicroCauseImpl {\n  error;\n  constructor(error, traces = []) {\n    super(\"Fail\", error, traces);\n    this.error = error;\n  }\n}\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeFail = (error, traces = []) => new Fail(error, traces);\nclass Die extends MicroCauseImpl {\n  defect;\n  constructor(defect, traces = []) {\n    super(\"Die\", defect, traces);\n    this.defect = defect;\n  }\n}\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeDie = (defect, traces = []) => new Die(defect, traces);\nclass Interrupt extends MicroCauseImpl {\n  constructor(traces = []) {\n    super(\"Interrupt\", \"interrupted\", traces);\n  }\n}\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeInterrupt = (traces = []) => new Interrupt(traces);\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeIsFail = self => self._tag === \"Fail\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeIsDie = self => self._tag === \"Die\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeIsInterrupt = self => self._tag === \"Interrupt\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeSquash = self => self._tag === \"Fail\" ? self.error : self._tag === \"Die\" ? self.defect : self;\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeWithTrace = /*#__PURE__*/dual(2, (self, trace) => {\n  const traces = [...self.traces, trace];\n  switch (self._tag) {\n    case \"Die\":\n      return causeDie(self.defect, traces);\n    case \"Interrupt\":\n      return causeInterrupt(traces);\n    case \"Fail\":\n      return causeFail(self.error, traces);\n  }\n});\n// ----------------------------------------------------------------------------\n// MicroFiber\n// ----------------------------------------------------------------------------\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const MicroFiberTypeId = /*#__PURE__*/Symbol.for(\"effect/Micro/MicroFiber\");\nconst fiberVariance = {\n  _A: identity,\n  _E: identity\n};\nclass MicroFiberImpl {\n  context;\n  interruptible;\n  [MicroFiberTypeId];\n  _stack = [];\n  _observers = [];\n  _exit;\n  _children;\n  currentOpCount = 0;\n  constructor(context, interruptible = true) {\n    this.context = context;\n    this.interruptible = interruptible;\n    this[MicroFiberTypeId] = fiberVariance;\n  }\n  getRef(ref) {\n    return InternalContext.unsafeGetReference(this.context, ref);\n  }\n  addObserver(cb) {\n    if (this._exit) {\n      cb(this._exit);\n      return constVoid;\n    }\n    this._observers.push(cb);\n    return () => {\n      const index = this._observers.indexOf(cb);\n      if (index >= 0) {\n        this._observers.splice(index, 1);\n      }\n    };\n  }\n  _interrupted = false;\n  unsafeInterrupt() {\n    if (this._exit) {\n      return;\n    }\n    this._interrupted = true;\n    if (this.interruptible) {\n      this.evaluate(exitInterrupt);\n    }\n  }\n  unsafePoll() {\n    return this._exit;\n  }\n  evaluate(effect) {\n    if (this._exit) {\n      return;\n    } else if (this._yielded !== undefined) {\n      const yielded = this._yielded;\n      this._yielded = undefined;\n      yielded();\n    }\n    const exit = this.runLoop(effect);\n    if (exit === Yield) {\n      return;\n    }\n    // the interruptChildren middlware is added in Micro.fork, so it can be\n    // tree-shaken if not used\n    const interruptChildren = fiberMiddleware.interruptChildren && fiberMiddleware.interruptChildren(this);\n    if (interruptChildren !== undefined) {\n      return this.evaluate(flatMap(interruptChildren, () => exit));\n    }\n    this._exit = exit;\n    for (let i = 0; i < this._observers.length; i++) {\n      this._observers[i](exit);\n    }\n    this._observers.length = 0;\n  }\n  runLoop(effect) {\n    let yielding = false;\n    let current = effect;\n    this.currentOpCount = 0;\n    try {\n      while (true) {\n        this.currentOpCount++;\n        if (!yielding && this.getRef(CurrentScheduler).shouldYield(this)) {\n          yielding = true;\n          const prev = current;\n          current = flatMap(yieldNow, () => prev);\n        }\n        current = current[evaluate](this);\n        if (current === Yield) {\n          const yielded = this._yielded;\n          if (MicroExitTypeId in yielded) {\n            this._yielded = undefined;\n            return yielded;\n          }\n          return Yield;\n        }\n      }\n    } catch (error) {\n      if (!hasProperty(current, evaluate)) {\n        return exitDie(`MicroFiber.runLoop: Not a valid effect: ${String(current)}`);\n      }\n      return exitDie(error);\n    }\n  }\n  getCont(symbol) {\n    while (true) {\n      const op = this._stack.pop();\n      if (!op) return undefined;\n      const cont = op[ensureCont] && op[ensureCont](this);\n      if (cont) return {\n        [symbol]: cont\n      };\n      if (op[symbol]) return op;\n    }\n  }\n  // cancel the yielded operation, or for the yielded exit value\n  _yielded = undefined;\n  yieldWith(value) {\n    this._yielded = value;\n    return Yield;\n  }\n  children() {\n    return this._children ??= new Set();\n  }\n}\nconst fiberMiddleware = /*#__PURE__*/globalValue(\"effect/Micro/fiberMiddleware\", () => ({\n  interruptChildren: undefined\n}));\nconst fiberInterruptChildren = fiber => {\n  if (fiber._children === undefined || fiber._children.size === 0) {\n    return undefined;\n  }\n  return fiberInterruptAll(fiber._children);\n};\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const fiberAwait = self => async(resume => sync(self.addObserver(exit => resume(succeed(exit)))));\n/**\n * @since 3.11.2\n * @experimental\n * @category MicroFiber\n */\nexport const fiberJoin = self => flatten(fiberAwait(self));\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const fiberInterrupt = self => suspend(() => {\n  self.unsafeInterrupt();\n  return asVoid(fiberAwait(self));\n});\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const fiberInterruptAll = fibers => suspend(() => {\n  for (const fiber of fibers) fiber.unsafeInterrupt();\n  const iter = fibers[Symbol.iterator]();\n  const wait = suspend(() => {\n    let result = iter.next();\n    while (!result.done) {\n      if (result.value.unsafePoll()) {\n        result = iter.next();\n        continue;\n      }\n      const fiber = result.value;\n      return async(resume => {\n        fiber.addObserver(_ => {\n          resume(wait);\n        });\n      });\n    }\n    return exitVoid;\n  });\n  return wait;\n});\nconst identifier = /*#__PURE__*/Symbol.for(\"effect/Micro/identifier\");\nconst args = /*#__PURE__*/Symbol.for(\"effect/Micro/args\");\nconst evaluate = /*#__PURE__*/Symbol.for(\"effect/Micro/evaluate\");\nconst successCont = /*#__PURE__*/Symbol.for(\"effect/Micro/successCont\");\nconst failureCont = /*#__PURE__*/Symbol.for(\"effect/Micro/failureCont\");\nconst ensureCont = /*#__PURE__*/Symbol.for(\"effect/Micro/ensureCont\");\nconst Yield = /*#__PURE__*/Symbol.for(\"effect/Micro/Yield\");\nconst microVariance = {\n  _A: identity,\n  _E: identity,\n  _R: identity\n};\nconst MicroProto = {\n  ...Effectable.EffectPrototype,\n  _op: \"Micro\",\n  [TypeId]: microVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  [Symbol.iterator]() {\n    return new SingleShotGen(new YieldWrap(this));\n  },\n  toJSON() {\n    return {\n      _id: \"Micro\",\n      op: this[identifier],\n      ...(args in this ? {\n        args: this[args]\n      } : undefined)\n    };\n  },\n  toString() {\n    return format(this);\n  },\n  [NodeInspectSymbol]() {\n    return format(this);\n  }\n};\nfunction defaultEvaluate(_fiber) {\n  return exitDie(`Micro.evaluate: Not implemented`);\n}\nconst makePrimitiveProto = options => ({\n  ...MicroProto,\n  [identifier]: options.op,\n  [evaluate]: options.eval ?? defaultEvaluate,\n  [successCont]: options.contA,\n  [failureCont]: options.contE,\n  [ensureCont]: options.ensure\n});\nconst makePrimitive = options => {\n  const Proto = makePrimitiveProto(options);\n  return function () {\n    const self = Object.create(Proto);\n    self[args] = options.single === false ? arguments : arguments[0];\n    return self;\n  };\n};\nconst makeExit = options => {\n  const Proto = {\n    ...makePrimitiveProto(options),\n    [MicroExitTypeId]: MicroExitTypeId,\n    _tag: options.op,\n    get [options.prop]() {\n      return this[args];\n    },\n    toJSON() {\n      return {\n        _id: \"MicroExit\",\n        _tag: options.op,\n        [options.prop]: this[args]\n      };\n    },\n    [Equal.symbol](that) {\n      return isMicroExit(that) && that._tag === options.op && Equal.equals(this[args], that[args]);\n    },\n    [Hash.symbol]() {\n      return Hash.cached(this, Hash.combine(Hash.string(options.op))(Hash.hash(this[args])));\n    }\n  };\n  return function (value) {\n    const self = Object.create(Proto);\n    self[args] = value;\n    self[successCont] = undefined;\n    self[failureCont] = undefined;\n    self[ensureCont] = undefined;\n    return self;\n  };\n};\n/**\n * Creates a `Micro` effect that will succeed with the specified constant value.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const succeed = /*#__PURE__*/makeExit({\n  op: \"Success\",\n  prop: \"value\",\n  eval(fiber) {\n    const cont = fiber.getCont(successCont);\n    return cont ? cont[successCont](this[args], fiber) : fiber.yieldWith(this);\n  }\n});\n/**\n * Creates a `Micro` effect that will fail with the specified `MicroCause`.\n *\n * @since 3.4.6\n * @experimental\n * @category constructors\n */\nexport const failCause = /*#__PURE__*/makeExit({\n  op: \"Failure\",\n  prop: \"cause\",\n  eval(fiber) {\n    let cont = fiber.getCont(failureCont);\n    while (causeIsInterrupt(this[args]) && cont && fiber.interruptible) {\n      cont = fiber.getCont(failureCont);\n    }\n    return cont ? cont[failureCont](this[args], fiber) : fiber.yieldWith(this);\n  }\n});\n/**\n * Creates a `Micro` effect that fails with the given error.\n *\n * This results in a `Fail` variant of the `MicroCause` type, where the error is\n * tracked at the type level.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const fail = error => failCause(causeFail(error));\n/**\n * Creates a `Micro` effect that succeeds with a lazily evaluated value.\n *\n * If the evaluation of the value throws an error, the effect will fail with a\n * `Die` variant of the `MicroCause` type.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const sync = /*#__PURE__*/makePrimitive({\n  op: \"Sync\",\n  eval(fiber) {\n    const value = this[args]();\n    const cont = fiber.getCont(successCont);\n    return cont ? cont[successCont](value, fiber) : fiber.yieldWith(exitSucceed(value));\n  }\n});\n/**\n * Lazily creates a `Micro` effect from the given side-effect.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const suspend = /*#__PURE__*/makePrimitive({\n  op: \"Suspend\",\n  eval(_fiber) {\n    return this[args]();\n  }\n});\n/**\n * Pause the execution of the current `Micro` effect, and resume it on the next\n * scheduler tick.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const yieldNowWith = /*#__PURE__*/makePrimitive({\n  op: \"Yield\",\n  eval(fiber) {\n    let resumed = false;\n    fiber.getRef(CurrentScheduler).scheduleTask(() => {\n      if (resumed) return;\n      fiber.evaluate(exitVoid);\n    }, this[args] ?? 0);\n    return fiber.yieldWith(() => {\n      resumed = true;\n    });\n  }\n});\n/**\n * Pause the execution of the current `Micro` effect, and resume it on the next\n * scheduler tick.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const yieldNow = /*#__PURE__*/yieldNowWith(0);\n/**\n * Creates a `Micro` effect that will succeed with the value wrapped in `Some`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const succeedSome = a => succeed(Option.some(a));\n/**\n * Creates a `Micro` effect that succeeds with `None`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const succeedNone = /*#__PURE__*/succeed( /*#__PURE__*/Option.none());\n/**\n * Creates a `Micro` effect that will fail with the lazily evaluated `MicroCause`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const failCauseSync = evaluate => suspend(() => failCause(evaluate()));\n/**\n * Creates a `Micro` effect that will die with the specified error.\n *\n * This results in a `Die` variant of the `MicroCause` type, where the error is\n * not tracked at the type level.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const die = defect => exitDie(defect);\n/**\n * Creates a `Micro` effect that will fail with the lazily evaluated error.\n *\n * This results in a `Fail` variant of the `MicroCause` type, where the error is\n * tracked at the type level.\n *\n * @since 3.4.6\n * @experimental\n * @category constructors\n */\nexport const failSync = error => suspend(() => fail(error()));\n/**\n * Converts an `Option` into a `Micro` effect, that will fail with\n * `NoSuchElementException` if the option is `None`. Otherwise, it will succeed with the\n * value of the option.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const fromOption = option => option._tag === \"Some\" ? succeed(option.value) : fail(new NoSuchElementException({}));\n/**\n * Converts an `Either` into a `Micro` effect, that will fail with the left side\n * of the either if it is a `Left`. Otherwise, it will succeed with the right\n * side of the either.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const fromEither = either => either._tag === \"Right\" ? succeed(either.right) : fail(either.left);\nconst void_ = /*#__PURE__*/succeed(void 0);\nexport {\n/**\n * A `Micro` effect that will succeed with `void` (`undefined`).\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nvoid_ as void };\nconst try_ = options => suspend(() => {\n  try {\n    return succeed(options.try());\n  } catch (err) {\n    return fail(options.catch(err));\n  }\n});\nexport {\n/**\n * The `Micro` equivalent of a try / catch block, which allows you to map\n * thrown errors to a specific error type.\n *\n * @example\n * ```ts\n * import { Micro } from \"effect\"\n *\n * Micro.try({\n *   try: () => { throw new Error(\"boom\") },\n *   catch: (cause) => new Error(\"caught\", { cause })\n * })\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\ntry_ as try };\n/**\n * Wrap a `Promise` into a `Micro` effect.\n *\n * Any errors will result in a `Die` variant of the `MicroCause` type, where the\n * error is not tracked at the type level.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const promise = evaluate => asyncOptions(function (resume, signal) {\n  evaluate(signal).then(a => resume(succeed(a)), e => resume(die(e)));\n}, evaluate.length !== 0);\n/**\n * Wrap a `Promise` into a `Micro` effect. Any errors will be caught and\n * converted into a specific error type.\n *\n * @example\n * ```ts\n * import { Micro } from \"effect\"\n *\n * Micro.tryPromise({\n *   try: () => Promise.resolve(\"success\"),\n *   catch: (cause) => new Error(\"caught\", { cause })\n * })\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const tryPromise = options => asyncOptions(function (resume, signal) {\n  try {\n    options.try(signal).then(a => resume(succeed(a)), e => resume(fail(options.catch(e))));\n  } catch (err) {\n    resume(fail(options.catch(err)));\n  }\n}, options.try.length !== 0);\n/**\n * Create a `Micro` effect using the current `MicroFiber`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const withMicroFiber = /*#__PURE__*/makePrimitive({\n  op: \"WithMicroFiber\",\n  eval(fiber) {\n    return this[args](fiber);\n  }\n});\n/**\n * Flush any yielded effects that are waiting to be executed.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const yieldFlush = /*#__PURE__*/withMicroFiber(fiber => {\n  fiber.getRef(CurrentScheduler).flush();\n  return exitVoid;\n});\nconst asyncOptions = /*#__PURE__*/makePrimitive({\n  op: \"Async\",\n  single: false,\n  eval(fiber) {\n    const register = this[args][0];\n    let resumed = false;\n    let yielded = false;\n    const controller = this[args][1] ? new AbortController() : undefined;\n    const onCancel = register(effect => {\n      if (resumed) return;\n      resumed = true;\n      if (yielded) {\n        fiber.evaluate(effect);\n      } else {\n        yielded = effect;\n      }\n    }, controller?.signal);\n    if (yielded !== false) return yielded;\n    yielded = true;\n    fiber._yielded = () => {\n      resumed = true;\n    };\n    if (controller === undefined && onCancel === undefined) {\n      return Yield;\n    }\n    fiber._stack.push(asyncFinalizer(() => {\n      resumed = true;\n      controller?.abort();\n      return onCancel ?? exitVoid;\n    }));\n    return Yield;\n  }\n});\nconst asyncFinalizer = /*#__PURE__*/makePrimitive({\n  op: \"AsyncFinalizer\",\n  ensure(fiber) {\n    if (fiber.interruptible) {\n      fiber.interruptible = false;\n      fiber._stack.push(setInterruptible(true));\n    }\n  },\n  contE(cause, _fiber) {\n    return causeIsInterrupt(cause) ? flatMap(this[args](), () => failCause(cause)) : failCause(cause);\n  }\n});\n/**\n * Create a `Micro` effect from an asynchronous computation.\n *\n * You can return a cleanup effect that will be run when the effect is aborted.\n * It is also passed an `AbortSignal` that is triggered when the effect is\n * aborted.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const async = register => asyncOptions(register, register.length >= 2);\n/**\n * A `Micro` that will never succeed or fail. It wraps `setInterval` to prevent\n * the Javascript runtime from exiting.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const never = /*#__PURE__*/async(function () {\n  const interval = setInterval(constVoid, 2147483646);\n  return sync(() => clearInterval(interval));\n});\n/**\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const gen = (...args) => suspend(() => fromIterator(args.length === 1 ? args[0]() : args[1].call(args[0])));\nconst fromIterator = /*#__PURE__*/makePrimitive({\n  op: \"Iterator\",\n  contA(value, fiber) {\n    const state = this[args].next(value);\n    if (state.done) return succeed(state.value);\n    fiber._stack.push(this);\n    return yieldWrapGet(state.value);\n  },\n  eval(fiber) {\n    return this[successCont](undefined, fiber);\n  }\n});\n// ----------------------------------------------------------------------------\n// mapping & sequencing\n// ----------------------------------------------------------------------------\n/**\n * Create a `Micro` effect that will replace the success value of the given\n * effect.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const as = /*#__PURE__*/dual(2, (self, value) => map(self, _ => value));\n/**\n * Wrap the success value of this `Micro` effect in a `Some`.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const asSome = self => map(self, Option.some);\n/**\n * Swap the error and success types of the `Micro` effect.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const flip = self => matchEffect(self, {\n  onFailure: succeed,\n  onSuccess: fail\n});\n/**\n * A more flexible version of `flatMap` that combines `map` and `flatMap` into a\n * single API.\n *\n * It also lets you directly pass a `Micro` effect, which will be executed after\n * the current effect.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const andThen = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => {\n  const value = isMicro(f) ? f : typeof f === \"function\" ? f(a) : f;\n  return isMicro(value) ? value : succeed(value);\n}));\n/**\n * Execute a side effect from the success value of the `Micro` effect.\n *\n * It is similar to the `andThen` api, but the success value is ignored.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const tap = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => {\n  const value = isMicro(f) ? f : typeof f === \"function\" ? f(a) : f;\n  return isMicro(value) ? as(value, a) : succeed(a);\n}));\n/**\n * Replace the success value of the `Micro` effect with `void`.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const asVoid = self => flatMap(self, _ => exitVoid);\n/**\n * Access the `MicroExit` of the given `Micro` effect.\n *\n * @since 3.4.6\n * @experimental\n * @category mapping & sequencing\n */\nexport const exit = self => matchCause(self, {\n  onFailure: exitFailCause,\n  onSuccess: exitSucceed\n});\n/**\n * Replace the error type of the given `Micro` with the full `MicroCause` object.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const sandbox = self => catchAllCause(self, fail);\n/**\n * Returns an effect that races all the specified effects,\n * yielding the value of the first effect to succeed with a value. Losers of\n * the race will be interrupted immediately\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const raceAll = all => withMicroFiber(parent => async(resume => {\n  const effects = Arr.fromIterable(all);\n  const len = effects.length;\n  let doneCount = 0;\n  let done = false;\n  const fibers = new Set();\n  const causes = [];\n  const onExit = exit => {\n    doneCount++;\n    if (exit._tag === \"Failure\") {\n      causes.push(exit.cause);\n      if (doneCount >= len) {\n        resume(failCause(causes[0]));\n      }\n      return;\n    }\n    done = true;\n    resume(fibers.size === 0 ? exit : flatMap(uninterruptible(fiberInterruptAll(fibers)), () => exit));\n  };\n  for (let i = 0; i < len; i++) {\n    if (done) break;\n    const fiber = unsafeFork(parent, interruptible(effects[i]), true, true);\n    fibers.add(fiber);\n    fiber.addObserver(exit => {\n      fibers.delete(fiber);\n      onExit(exit);\n    });\n  }\n  return fiberInterruptAll(fibers);\n}));\n/**\n * Returns an effect that races all the specified effects,\n * yielding the value of the first effect to succeed or fail. Losers of\n * the race will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const raceAllFirst = all => withMicroFiber(parent => async(resume => {\n  let done = false;\n  const fibers = new Set();\n  const onExit = exit => {\n    done = true;\n    resume(fibers.size === 0 ? exit : flatMap(fiberInterruptAll(fibers), () => exit));\n  };\n  for (const effect of all) {\n    if (done) break;\n    const fiber = unsafeFork(parent, interruptible(effect), true, true);\n    fibers.add(fiber);\n    fiber.addObserver(exit => {\n      fibers.delete(fiber);\n      onExit(exit);\n    });\n  }\n  return fiberInterruptAll(fibers);\n}));\n/**\n * Returns an effect that races two effects, yielding the value of the first\n * effect to succeed. Losers of the race will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const race = /*#__PURE__*/dual(2, (self, that) => raceAll([self, that]));\n/**\n * Returns an effect that races two effects, yielding the value of the first\n * effect to succeed *or* fail. Losers of the race will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const raceFirst = /*#__PURE__*/dual(2, (self, that) => raceAllFirst([self, that]));\n/**\n * Map the success value of this `Micro` effect to another `Micro` effect, then\n * flatten the result.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  const onSuccess = Object.create(OnSuccessProto);\n  onSuccess[args] = self;\n  onSuccess[successCont] = f;\n  return onSuccess;\n});\nconst OnSuccessProto = /*#__PURE__*/makePrimitiveProto({\n  op: \"OnSuccess\",\n  eval(fiber) {\n    fiber._stack.push(this);\n    return this[args];\n  }\n});\n// ----------------------------------------------------------------------------\n// mapping & sequencing\n// ----------------------------------------------------------------------------\n/**\n * Flattens any nested `Micro` effects, merging the error and requirement types.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const flatten = self => flatMap(self, identity);\n/**\n * Transforms the success value of the `Micro` effect with the specified\n * function.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => succeed(f(a))));\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const isMicroExit = u => hasProperty(u, MicroExitTypeId);\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitSucceed = succeed;\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitFailCause = failCause;\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitInterrupt = /*#__PURE__*/exitFailCause( /*#__PURE__*/causeInterrupt());\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitFail = e => exitFailCause(causeFail(e));\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitDie = defect => exitFailCause(causeDie(defect));\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsSuccess = self => self._tag === \"Success\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsFailure = self => self._tag === \"Failure\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsInterrupt = self => exitIsFailure(self) && self.cause._tag === \"Interrupt\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsFail = self => exitIsFailure(self) && self.cause._tag === \"Fail\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsDie = self => exitIsFailure(self) && self.cause._tag === \"Die\";\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitVoid = /*#__PURE__*/exitSucceed(void 0);\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroExit\n */\nexport const exitVoidAll = exits => {\n  for (const exit of exits) {\n    if (exit._tag === \"Failure\") {\n      return exit;\n    }\n  }\n  return exitVoid;\n};\nconst setImmediate = \"setImmediate\" in globalThis ? globalThis.setImmediate : f => setTimeout(f, 0);\n/**\n * @since 3.5.9\n * @experimental\n * @category scheduler\n */\nexport class MicroSchedulerDefault {\n  tasks = [];\n  running = false;\n  /**\n   * @since 3.5.9\n   */\n  scheduleTask(task, _priority) {\n    this.tasks.push(task);\n    if (!this.running) {\n      this.running = true;\n      setImmediate(this.afterScheduled);\n    }\n  }\n  /**\n   * @since 3.5.9\n   */\n  afterScheduled = () => {\n    this.running = false;\n    this.runTasks();\n  };\n  /**\n   * @since 3.5.9\n   */\n  runTasks() {\n    const tasks = this.tasks;\n    this.tasks = [];\n    for (let i = 0, len = tasks.length; i < len; i++) {\n      tasks[i]();\n    }\n  }\n  /**\n   * @since 3.5.9\n   */\n  shouldYield(fiber) {\n    return fiber.currentOpCount >= fiber.getRef(MaxOpsBeforeYield);\n  }\n  /**\n   * @since 3.5.9\n   */\n  flush() {\n    while (this.tasks.length > 0) {\n      this.runTasks();\n    }\n  }\n}\n/**\n * Access the given `Context.Tag` from the environment.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const service = tag => withMicroFiber(fiber => succeed(Context.unsafeGet(fiber.context, tag)));\n/**\n * Access the given `Context.Tag` from the environment, without tracking the\n * dependency at the type level.\n *\n * It will return an `Option` of the service, depending on whether it is\n * available in the environment or not.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const serviceOption = tag => withMicroFiber(fiber => succeed(Context.getOption(fiber.context, tag)));\n/**\n * Update the Context with the given mapping function.\n *\n * @since 3.11.0\n * @experimental\n * @category environment\n */\nexport const updateContext = /*#__PURE__*/dual(2, (self, f) => withMicroFiber(fiber => {\n  const prev = fiber.context;\n  fiber.context = f(prev);\n  return onExit(self, () => {\n    fiber.context = prev;\n    return void_;\n  });\n}));\n/**\n * Update the service for the given `Context.Tag` in the environment.\n *\n * @since 3.11.0\n * @experimental\n * @category environment\n */\nexport const updateService = /*#__PURE__*/dual(3, (self, tag, f) => withMicroFiber(fiber => {\n  const prev = Context.unsafeGet(fiber.context, tag);\n  fiber.context = Context.add(fiber.context, tag, f(prev));\n  return onExit(self, () => {\n    fiber.context = Context.add(fiber.context, tag, prev);\n    return void_;\n  });\n}));\n/**\n * Access the current `Context` from the environment.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const context = () => getContext;\nconst getContext = /*#__PURE__*/withMicroFiber(fiber => succeed(fiber.context));\n/**\n * Merge the given `Context` with the current context.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const provideContext = /*#__PURE__*/dual(2, (self, provided) => updateContext(self, Context.merge(provided)));\n/**\n * Add the provided service to the current context.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const provideService = /*#__PURE__*/dual(3, (self, tag, service) => updateContext(self, Context.add(tag, service)));\n/**\n * Create a service using the provided `Micro` effect, and add it to the\n * current context.\n *\n * @since 3.4.6\n * @experimental\n * @category environment\n */\nexport const provideServiceEffect = /*#__PURE__*/dual(3, (self, tag, acquire) => flatMap(acquire, service => provideService(self, tag, service)));\n// ========================================================================\n// References\n// ========================================================================\n/**\n * @since 3.11.0\n * @experimental\n * @category references\n */\nexport class MaxOpsBeforeYield extends /*#__PURE__*/Context.Reference()(\"effect/Micro/currentMaxOpsBeforeYield\", {\n  defaultValue: () => 2048\n}) {}\n/**\n * @since 3.11.0\n * @experimental\n * @category environment refs\n */\nexport class CurrentConcurrency extends /*#__PURE__*/Context.Reference()(\"effect/Micro/currentConcurrency\", {\n  defaultValue: () => \"unbounded\"\n}) {}\n/**\n * @since 3.11.0\n * @experimental\n * @category environment refs\n */\nexport class CurrentScheduler extends /*#__PURE__*/Context.Reference()(\"effect/Micro/currentScheduler\", {\n  defaultValue: () => new MicroSchedulerDefault()\n}) {}\n/**\n * If you have a `Micro` that uses `concurrency: \"inherit\"`, you can use this\n * api to control the concurrency of that `Micro` when it is run.\n *\n * @example\n * ```ts\n * import * as Micro from \"effect/Micro\"\n *\n * Micro.forEach([1, 2, 3], (n) => Micro.succeed(n), {\n *   concurrency: \"inherit\"\n * }).pipe(\n *   Micro.withConcurrency(2) // use a concurrency of 2\n * )\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category environment refs\n */\nexport const withConcurrency = /*#__PURE__*/dual(2, (self, concurrency) => provideService(self, CurrentConcurrency, concurrency));\n// ----------------------------------------------------------------------------\n// zipping\n// ----------------------------------------------------------------------------\n/**\n * Combine two `Micro` effects into a single effect that produces a tuple of\n * their results.\n *\n * @since 3.4.0\n * @experimental\n * @category zipping\n */\nexport const zip = /*#__PURE__*/dual(args => isMicro(args[1]), (self, that, options) => zipWith(self, that, (a, a2) => [a, a2], options));\n/**\n * The `Micro.zipWith` function combines two `Micro` effects and allows you to\n * apply a function to the results of the combined effects, transforming them\n * into a single value.\n *\n * @since 3.4.3\n * @experimental\n * @category zipping\n */\nexport const zipWith = /*#__PURE__*/dual(args => isMicro(args[1]), (self, that, f, options) => options?.concurrent\n// Use `all` exclusively for concurrent cases, as it introduces additional overhead due to the management of concurrency\n? map(all([self, that], {\n  concurrency: 2\n}), ([a, a2]) => f(a, a2)) : flatMap(self, a => map(that, a2 => f(a, a2))));\n// ----------------------------------------------------------------------------\n// filtering & conditionals\n// ----------------------------------------------------------------------------\n/**\n * Filter the specified effect with the provided function, failing with specified\n * `MicroCause` if the predicate fails.\n *\n * In addition to the filtering capabilities discussed earlier, you have the option to further\n * refine and narrow down the type of the success channel by providing a\n *\n * @since 3.4.0\n * @experimental\n * @category filtering & conditionals\n */\nexport const filterOrFailCause = /*#__PURE__*/dual(args => isMicro(args[0]), (self, refinement, orFailWith) => flatMap(self, a => refinement(a) ? succeed(a) : failCause(orFailWith(a))));\n/**\n * Filter the specified effect with the provided function, failing with specified\n * error if the predicate fails.\n *\n * In addition to the filtering capabilities discussed earlier, you have the option to further\n * refine and narrow down the type of the success channel by providing a\n *\n * @since 3.4.0\n * @experimental\n * @category filtering & conditionals\n */\nexport const filterOrFail = /*#__PURE__*/dual(args => isMicro(args[0]), (self, refinement, orFailWith) => flatMap(self, a => refinement(a) ? succeed(a) : fail(orFailWith(a))));\n/**\n * The moral equivalent of `if (p) exp`.\n *\n * @since 3.4.0\n * @experimental\n * @category filtering & conditionals\n */\nexport const when = /*#__PURE__*/dual(2, (self, condition) => flatMap(isMicro(condition) ? condition : sync(condition), pass => pass ? asSome(self) : succeedNone));\n// ----------------------------------------------------------------------------\n// repetition\n// ----------------------------------------------------------------------------\n/**\n * Repeat the given `Micro` using the provided options.\n *\n * The `while` predicate will be checked after each iteration, and can use the\n * fall `MicroExit` of the effect to determine if the repetition should continue.\n *\n * @since 3.4.6\n * @experimental\n * @category repetition\n */\nexport const repeatExit = /*#__PURE__*/dual(2, (self, options) => suspend(() => {\n  const startedAt = options.schedule ? Date.now() : 0;\n  let attempt = 0;\n  const loop = flatMap(exit(self), exit => {\n    if (options.while !== undefined && !options.while(exit)) {\n      return exit;\n    } else if (options.times !== undefined && attempt >= options.times) {\n      return exit;\n    }\n    attempt++;\n    let delayEffect = yieldNow;\n    if (options.schedule !== undefined) {\n      const elapsed = Date.now() - startedAt;\n      const duration = options.schedule(attempt, elapsed);\n      if (Option.isNone(duration)) {\n        return exit;\n      }\n      delayEffect = sleep(duration.value);\n    }\n    return flatMap(delayEffect, () => loop);\n  });\n  return loop;\n}));\n/**\n * Repeat the given `Micro` effect using the provided options. Only successful\n * results will be repeated.\n *\n * @since 3.4.0\n * @experimental\n * @category repetition\n */\nexport const repeat = /*#__PURE__*/dual(args => isMicro(args[0]), (self, options) => repeatExit(self, {\n  ...options,\n  while: exit => exit._tag === \"Success\" && (options?.while === undefined || options.while(exit.value))\n}));\n/**\n * Replicates the given effect `n` times.\n *\n * @since 3.11.0\n * @experimental\n * @category repetition\n */\nexport const replicate = /*#__PURE__*/dual(2, (self, n) => Array.from({\n  length: n\n}, () => self));\n/**\n * Performs this effect the specified number of times and collects the\n * results.\n *\n * @since 3.11.0\n * @category repetition\n */\nexport const replicateEffect = /*#__PURE__*/dual(args => isMicro(args[0]), (self, n, options) => all(replicate(self, n), options));\n/**\n * Repeat the given `Micro` effect forever, only stopping if the effect fails.\n *\n * @since 3.4.0\n * @experimental\n * @category repetition\n */\nexport const forever = self => repeat(self);\n/**\n * Create a `MicroSchedule` that will stop repeating after the specified number\n * of attempts.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleRecurs = n => attempt => attempt <= n ? Option.some(0) : Option.none();\n/**\n * Create a `MicroSchedule` that will generate a constant delay.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleSpaced = millis => () => Option.some(millis);\n/**\n * Create a `MicroSchedule` that will generate a delay with an exponential backoff.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleExponential = (baseMillis, factor = 2) => attempt => Option.some(Math.pow(factor, attempt) * baseMillis);\n/**\n * Returns a new `MicroSchedule` with an added calculated delay to each delay\n * returned by this schedule.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleAddDelay = /*#__PURE__*/dual(2, (self, f) => (attempt, elapsed) => Option.map(self(attempt, elapsed), duration => duration + f()));\n/**\n * Transform a `MicroSchedule` to one that will have a delay that will never exceed\n * the specified maximum.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleWithMaxDelay = /*#__PURE__*/dual(2, (self, max) => (attempt, elapsed) => Option.map(self(attempt, elapsed), duration => Math.min(duration, max)));\n/**\n * Transform a `MicroSchedule` to one that will stop repeating after the specified\n * amount of time.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleWithMaxElapsed = /*#__PURE__*/dual(2, (self, max) => (attempt, elapsed) => elapsed < max ? self(attempt, elapsed) : Option.none());\n/**\n * Combines two `MicroSchedule`s, by recurring if either schedule wants to\n * recur, using the minimum of the two durations between recurrences.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleUnion = /*#__PURE__*/dual(2, (self, that) => (attempt, elapsed) => Option.zipWith(self(attempt, elapsed), that(attempt, elapsed), (d1, d2) => Math.min(d1, d2)));\n/**\n * Combines two `MicroSchedule`s, by recurring only if both schedules want to\n * recur, using the maximum of the two durations between recurrences.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleIntersect = /*#__PURE__*/dual(2, (self, that) => (attempt, elapsed) => Option.zipWith(self(attempt, elapsed), that(attempt, elapsed), (d1, d2) => Math.max(d1, d2)));\n// ----------------------------------------------------------------------------\n// error handling\n// ----------------------------------------------------------------------------\n/**\n * Catch the full `MicroCause` object of the given `Micro` effect, allowing you to\n * recover from any kind of cause.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchAllCause = /*#__PURE__*/dual(2, (self, f) => {\n  const onFailure = Object.create(OnFailureProto);\n  onFailure[args] = self;\n  onFailure[failureCont] = f;\n  return onFailure;\n});\nconst OnFailureProto = /*#__PURE__*/makePrimitiveProto({\n  op: \"OnFailure\",\n  eval(fiber) {\n    fiber._stack.push(this);\n    return this[args];\n  }\n});\n/**\n * Selectively catch a `MicroCause` object of the given `Micro` effect,\n * using the provided predicate to determine if the failure should be caught.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchCauseIf = /*#__PURE__*/dual(3, (self, predicate, f) => catchAllCause(self, cause => predicate(cause) ? f(cause) : failCause(cause)));\n/**\n * Catch the error of the given `Micro` effect, allowing you to recover from it.\n *\n * It only catches expected errors.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchAll = /*#__PURE__*/dual(2, (self, f) => catchCauseIf(self, causeIsFail, cause => f(cause.error)));\n/**\n * Catch any unexpected errors of the given `Micro` effect, allowing you to recover from them.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchAllDefect = /*#__PURE__*/dual(2, (self, f) => catchCauseIf(self, causeIsDie, die => f(die.defect)));\n/**\n * Perform a side effect using the full `MicroCause` object of the given `Micro`.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const tapErrorCause = /*#__PURE__*/dual(2, (self, f) => tapErrorCauseIf(self, constTrue, f));\n/**\n * Perform a side effect using if a `MicroCause` object matches the specified\n * predicate.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const tapErrorCauseIf = /*#__PURE__*/dual(3, (self, refinement, f) => catchCauseIf(self, refinement, cause => andThen(f(cause), failCause(cause))));\n/**\n * Perform a side effect from expected errors of the given `Micro`.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const tapError = /*#__PURE__*/dual(2, (self, f) => tapErrorCauseIf(self, causeIsFail, fail => f(fail.error)));\n/**\n * Perform a side effect from unexpected errors of the given `Micro`.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const tapDefect = /*#__PURE__*/dual(2, (self, f) => tapErrorCauseIf(self, causeIsDie, die => f(die.defect)));\n/**\n * Catch any expected errors that match the specified predicate.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const catchIf = /*#__PURE__*/dual(3, (self, predicate, f) => catchCauseIf(self, f => causeIsFail(f) && predicate(f.error), fail => f(fail.error)));\n/**\n * Recovers from the specified tagged error.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const catchTag = /*#__PURE__*/dual(3, (self, k, f) => catchIf(self, isTagged(k), f));\n/**\n * Transform the full `MicroCause` object of the given `Micro` effect.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const mapErrorCause = /*#__PURE__*/dual(2, (self, f) => catchAllCause(self, cause => failCause(f(cause))));\n/**\n * Transform any expected errors of the given `Micro` effect.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const mapError = /*#__PURE__*/dual(2, (self, f) => catchAll(self, error => fail(f(error))));\n/**\n * Elevate any expected errors of the given `Micro` effect to unexpected errors,\n * resulting in an error type of `never`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const orDie = self => catchAll(self, die);\n/**\n * Recover from all errors by succeeding with the given value.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const orElseSucceed = /*#__PURE__*/dual(2, (self, f) => catchAll(self, _ => sync(f)));\n/**\n * Ignore any expected errors of the given `Micro` effect, returning `void`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const ignore = self => matchEffect(self, {\n  onFailure: _ => void_,\n  onSuccess: _ => void_\n});\n/**\n * Ignore any expected errors of the given `Micro` effect, returning `void`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const ignoreLogged = self => matchEffect(self, {\n  // eslint-disable-next-line no-console\n  onFailure: error => sync(() => console.error(error)),\n  onSuccess: _ => void_\n});\n/**\n * Replace the success value of the given `Micro` effect with an `Option`,\n * wrapping the success value in `Some` and returning `None` if the effect fails\n * with an expected error.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const option = self => match(self, {\n  onFailure: Option.none,\n  onSuccess: Option.some\n});\n/**\n * Replace the success value of the given `Micro` effect with an `Either`,\n * wrapping the success value in `Right` and wrapping any expected errors with\n * a `Left`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const either = self => match(self, {\n  onFailure: Either.left,\n  onSuccess: Either.right\n});\n/**\n * Retry the given `Micro` effect using the provided options.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const retry = /*#__PURE__*/dual(args => isMicro(args[0]), (self, options) => repeatExit(self, {\n  ...options,\n  while: exit => exit._tag === \"Failure\" && exit.cause._tag === \"Fail\" && (options?.while === undefined || options.while(exit.cause.error))\n}));\n/**\n * Add a stack trace to any failures that occur in the effect. The trace will be\n * added to the `traces` field of the `MicroCause` object.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const withTrace = function () {\n  const prevLimit = globalThis.Error.stackTraceLimit;\n  globalThis.Error.stackTraceLimit = 2;\n  const error = new globalThis.Error();\n  globalThis.Error.stackTraceLimit = prevLimit;\n  function generate(name, cause) {\n    const stack = error.stack;\n    if (!stack) {\n      return cause;\n    }\n    const line = stack.split(\"\\n\")[2]?.trim().replace(/^at /, \"\");\n    if (!line) {\n      return cause;\n    }\n    const lineMatch = line.match(/\\((.*)\\)$/);\n    return causeWithTrace(cause, `at ${name} (${lineMatch ? lineMatch[1] : line})`);\n  }\n  const f = name => self => onError(self, cause => failCause(generate(name, cause)));\n  if (arguments.length === 2) {\n    return f(arguments[1])(arguments[0]);\n  }\n  return f(arguments[0]);\n};\n// ----------------------------------------------------------------------------\n// pattern matching\n// ----------------------------------------------------------------------------\n/**\n * @since 3.4.6\n * @experimental\n * @category pattern matching\n */\nexport const matchCauseEffect = /*#__PURE__*/dual(2, (self, options) => {\n  const primitive = Object.create(OnSuccessAndFailureProto);\n  primitive[args] = self;\n  primitive[successCont] = options.onSuccess;\n  primitive[failureCont] = options.onFailure;\n  return primitive;\n});\nconst OnSuccessAndFailureProto = /*#__PURE__*/makePrimitiveProto({\n  op: \"OnSuccessAndFailure\",\n  eval(fiber) {\n    fiber._stack.push(this);\n    return this[args];\n  }\n});\n/**\n * @since 3.4.6\n * @experimental\n * @category pattern matching\n */\nexport const matchCause = /*#__PURE__*/dual(2, (self, options) => matchCauseEffect(self, {\n  onFailure: cause => sync(() => options.onFailure(cause)),\n  onSuccess: value => sync(() => options.onSuccess(value))\n}));\n/**\n * @since 3.4.6\n * @experimental\n * @category pattern matching\n */\nexport const matchEffect = /*#__PURE__*/dual(2, (self, options) => matchCauseEffect(self, {\n  onFailure: cause => cause._tag === \"Fail\" ? options.onFailure(cause.error) : failCause(cause),\n  onSuccess: options.onSuccess\n}));\n/**\n * @since 3.4.0\n * @experimental\n * @category pattern matching\n */\nexport const match = /*#__PURE__*/dual(2, (self, options) => matchEffect(self, {\n  onFailure: error => sync(() => options.onFailure(error)),\n  onSuccess: value => sync(() => options.onSuccess(value))\n}));\n// ----------------------------------------------------------------------------\n// delays & timeouts\n// ----------------------------------------------------------------------------\n/**\n * Create a `Micro` effect that will sleep for the specified duration.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const sleep = millis => async(resume => {\n  const timeout = setTimeout(() => {\n    resume(void_);\n  }, millis);\n  return sync(() => {\n    clearTimeout(timeout);\n  });\n});\n/**\n * Returns an effect that will delay the execution of this effect by the\n * specified duration.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const delay = /*#__PURE__*/dual(2, (self, millis) => andThen(sleep(millis), self));\n/**\n * Returns an effect that will timeout this effect, that will execute the\n * fallback effect if the timeout elapses before the effect has produced a value.\n *\n * If the timeout elapses, the running effect will be safely interrupted.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const timeoutOrElse = /*#__PURE__*/dual(2, (self, options) => raceFirst(self, andThen(interruptible(sleep(options.duration)), options.onTimeout)));\n/**\n * Returns an effect that will timeout this effect, that will fail with a\n * `TimeoutException` if the timeout elapses before the effect has produced a\n * value.\n *\n * If the timeout elapses, the running effect will be safely interrupted.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const timeout = /*#__PURE__*/dual(2, (self, millis) => timeoutOrElse(self, {\n  duration: millis,\n  onTimeout: () => fail(new TimeoutException())\n}));\n/**\n * Returns an effect that will timeout this effect, succeeding with a `None`\n * if the timeout elapses before the effect has produced a value; and `Some` of\n * the produced value otherwise.\n *\n * If the timeout elapses, the running effect will be safely interrupted.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const timeoutOption = /*#__PURE__*/dual(2, (self, millis) => raceFirst(asSome(self), as(interruptible(sleep(millis)), Option.none())));\n// ----------------------------------------------------------------------------\n// resources & finalization\n// ----------------------------------------------------------------------------\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const MicroScopeTypeId = /*#__PURE__*/Symbol.for(\"effect/Micro/MicroScope\");\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const MicroScope = /*#__PURE__*/Context.GenericTag(\"effect/Micro/MicroScope\");\nclass MicroScopeImpl {\n  [MicroScopeTypeId];\n  state = {\n    _tag: \"Open\",\n    finalizers: /*#__PURE__*/new Set()\n  };\n  constructor() {\n    this[MicroScopeTypeId] = MicroScopeTypeId;\n  }\n  unsafeAddFinalizer(finalizer) {\n    if (this.state._tag === \"Open\") {\n      this.state.finalizers.add(finalizer);\n    }\n  }\n  addFinalizer(finalizer) {\n    return suspend(() => {\n      if (this.state._tag === \"Open\") {\n        this.state.finalizers.add(finalizer);\n        return void_;\n      }\n      return finalizer(this.state.exit);\n    });\n  }\n  unsafeRemoveFinalizer(finalizer) {\n    if (this.state._tag === \"Open\") {\n      this.state.finalizers.delete(finalizer);\n    }\n  }\n  close(microExit) {\n    return suspend(() => {\n      if (this.state._tag === \"Open\") {\n        const finalizers = Array.from(this.state.finalizers).reverse();\n        this.state = {\n          _tag: \"Closed\",\n          exit: microExit\n        };\n        return flatMap(forEach(finalizers, finalizer => exit(finalizer(microExit))), exitVoidAll);\n      }\n      return void_;\n    });\n  }\n  get fork() {\n    return sync(() => {\n      const newScope = new MicroScopeImpl();\n      if (this.state._tag === \"Closed\") {\n        newScope.state = this.state;\n        return newScope;\n      }\n      function fin(exit) {\n        return newScope.close(exit);\n      }\n      this.state.finalizers.add(fin);\n      newScope.unsafeAddFinalizer(_ => sync(() => this.unsafeRemoveFinalizer(fin)));\n      return newScope;\n    });\n  }\n}\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scopeMake = /*#__PURE__*/sync(() => new MicroScopeImpl());\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scopeUnsafeMake = () => new MicroScopeImpl();\n/**\n * Access the current `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scope = /*#__PURE__*/service(MicroScope);\n/**\n * Provide a `MicroScope` to an effect.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const provideScope = /*#__PURE__*/dual(2, (self, scope) => provideService(self, MicroScope, scope));\n/**\n * Provide a `MicroScope` to the given effect, closing it after the effect has\n * finished executing.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scoped = self => suspend(() => {\n  const scope = new MicroScopeImpl();\n  return onExit(provideService(self, MicroScope, scope), exit => scope.close(exit));\n});\n/**\n * Create a resource with a cleanup `Micro` effect, ensuring the cleanup is\n * executed when the `MicroScope` is closed.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const acquireRelease = (acquire, release) => uninterruptible(flatMap(scope, scope => tap(acquire, a => scope.addFinalizer(exit => release(a, exit)))));\n/**\n * Add a finalizer to the current `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const addFinalizer = finalizer => flatMap(scope, scope => scope.addFinalizer(finalizer));\n/**\n * When the `Micro` effect is completed, run the given finalizer effect with the\n * `MicroExit` of the executed effect.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onExit = /*#__PURE__*/dual(2, (self, f) => uninterruptibleMask(restore => matchCauseEffect(restore(self), {\n  onFailure: cause => flatMap(f(exitFailCause(cause)), () => failCause(cause)),\n  onSuccess: a => flatMap(f(exitSucceed(a)), () => succeed(a))\n})));\n/**\n * Regardless of the result of the this `Micro` effect, run the finalizer effect.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const ensuring = /*#__PURE__*/dual(2, (self, finalizer) => onExit(self, _ => finalizer));\n/**\n * When the `Micro` effect is completed, run the given finalizer effect if it\n * matches the specified predicate.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onExitIf = /*#__PURE__*/dual(3, (self, refinement, f) => onExit(self, exit => refinement(exit) ? f(exit) : exitVoid));\n/**\n * When the `Micro` effect fails, run the given finalizer effect with the\n * `MicroCause` of the executed effect.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onError = /*#__PURE__*/dual(2, (self, f) => onExitIf(self, exitIsFailure, exit => f(exit.cause)));\n/**\n * If this `Micro` effect is aborted, run the finalizer effect.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onInterrupt = /*#__PURE__*/dual(2, (self, finalizer) => onExitIf(self, exitIsInterrupt, _ => finalizer));\n/**\n * Acquire a resource, use it, and then release the resource when the `use`\n * effect has completed.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const acquireUseRelease = (acquire, use, release) => uninterruptibleMask(restore => flatMap(acquire, a => flatMap(exit(restore(use(a))), exit => andThen(release(a, exit), exit))));\n// ----------------------------------------------------------------------------\n// interruption\n// ----------------------------------------------------------------------------\n/**\n * Abort the current `Micro` effect.\n *\n * @since 3.4.6\n * @experimental\n * @category interruption\n */\nexport const interrupt = /*#__PURE__*/failCause( /*#__PURE__*/causeInterrupt());\n/**\n * Flag the effect as uninterruptible, which means that when the effect is\n * interrupted, it will be allowed to continue running until completion.\n *\n * @since 3.4.0\n * @experimental\n * @category flags\n */\nexport const uninterruptible = self => withMicroFiber(fiber => {\n  if (!fiber.interruptible) return self;\n  fiber.interruptible = false;\n  fiber._stack.push(setInterruptible(true));\n  return self;\n});\nconst setInterruptible = /*#__PURE__*/makePrimitive({\n  op: \"SetInterruptible\",\n  ensure(fiber) {\n    fiber.interruptible = this[args];\n    if (fiber._interrupted && fiber.interruptible) {\n      return () => exitInterrupt;\n    }\n  }\n});\n/**\n * Flag the effect as interruptible, which means that when the effect is\n * interrupted, it will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category flags\n */\nexport const interruptible = self => withMicroFiber(fiber => {\n  if (fiber.interruptible) return self;\n  fiber.interruptible = true;\n  fiber._stack.push(setInterruptible(false));\n  if (fiber._interrupted) return exitInterrupt;\n  return self;\n});\n/**\n * Wrap the given `Micro` effect in an uninterruptible region, preventing the\n * effect from being aborted.\n *\n * You can use the `restore` function to restore a `Micro` effect to the\n * interruptibility state before the `uninterruptibleMask` was applied.\n *\n * @example\n * ```ts\n * import * as Micro from \"effect/Micro\"\n *\n * Micro.uninterruptibleMask((restore) =>\n *   Micro.sleep(1000).pipe( // uninterruptible\n *     Micro.andThen(restore(Micro.sleep(1000))) // interruptible\n *   )\n * )\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category interruption\n */\nexport const uninterruptibleMask = f => withMicroFiber(fiber => {\n  if (!fiber.interruptible) return f(identity);\n  fiber.interruptible = false;\n  fiber._stack.push(setInterruptible(true));\n  return f(interruptible);\n});\n/**\n * Runs all the provided effects in sequence respecting the structure provided in input.\n *\n * Supports multiple arguments, a single argument tuple / array or record / struct.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const all = (arg, options) => {\n  if (Array.isArray(arg) || isIterable(arg)) {\n    return forEach(arg, identity, options);\n  } else if (options?.discard) {\n    return forEach(Object.values(arg), identity, options);\n  }\n  return suspend(() => {\n    const out = {};\n    return as(forEach(Object.entries(arg), ([key, effect]) => map(effect, value => {\n      out[key] = value;\n    }), {\n      discard: true,\n      concurrency: options?.concurrency\n    }), out);\n  });\n};\n/**\n * @since 3.11.0\n * @experimental\n * @category collecting & elements\n */\nexport const whileLoop = /*#__PURE__*/makePrimitive({\n  op: \"While\",\n  contA(value, fiber) {\n    this[args].step(value);\n    if (this[args].while()) {\n      fiber._stack.push(this);\n      return this[args].body();\n    }\n    return exitVoid;\n  },\n  eval(fiber) {\n    if (this[args].while()) {\n      fiber._stack.push(this);\n      return this[args].body();\n    }\n    return exitVoid;\n  }\n});\n/**\n * For each element of the provided iterable, run the effect and collect the\n * results.\n *\n * If the `discard` option is set to `true`, the results will be discarded and\n * the effect will return `void`.\n *\n * The `concurrency` option can be set to control how many effects are run\n * concurrently. By default, the effects are run sequentially.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const forEach = (iterable, f, options) => withMicroFiber(parent => {\n  const concurrencyOption = options?.concurrency === \"inherit\" ? parent.getRef(CurrentConcurrency) : options?.concurrency ?? 1;\n  const concurrency = concurrencyOption === \"unbounded\" ? Number.POSITIVE_INFINITY : Math.max(1, concurrencyOption);\n  const items = Arr.fromIterable(iterable);\n  let length = items.length;\n  if (length === 0) {\n    return options?.discard ? void_ : succeed([]);\n  }\n  const out = options?.discard ? undefined : new Array(length);\n  let index = 0;\n  if (concurrency === 1) {\n    return as(whileLoop({\n      while: () => index < items.length,\n      body: () => f(items[index], index),\n      step: out ? b => out[index++] = b : _ => index++\n    }), out);\n  }\n  return async(resume => {\n    const fibers = new Set();\n    let result = undefined;\n    let inProgress = 0;\n    let doneCount = 0;\n    let pumping = false;\n    let interrupted = false;\n    function pump() {\n      pumping = true;\n      while (inProgress < concurrency && index < length) {\n        const currentIndex = index;\n        const item = items[currentIndex];\n        index++;\n        inProgress++;\n        try {\n          const child = unsafeFork(parent, f(item, currentIndex), true, true);\n          fibers.add(child);\n          child.addObserver(exit => {\n            fibers.delete(child);\n            if (interrupted) {\n              return;\n            } else if (exit._tag === \"Failure\") {\n              if (result === undefined) {\n                result = exit;\n                length = index;\n                fibers.forEach(fiber => fiber.unsafeInterrupt());\n              }\n            } else if (out !== undefined) {\n              out[currentIndex] = exit.value;\n            }\n            doneCount++;\n            inProgress--;\n            if (doneCount === length) {\n              resume(result ?? succeed(out));\n            } else if (!pumping && inProgress < concurrency) {\n              pump();\n            }\n          });\n        } catch (err) {\n          result = exitDie(err);\n          length = index;\n          fibers.forEach(fiber => fiber.unsafeInterrupt());\n        }\n      }\n      pumping = false;\n    }\n    pump();\n    return suspend(() => {\n      interrupted = true;\n      index = length;\n      return fiberInterruptAll(fibers);\n    });\n  });\n});\n/**\n * Effectfully filter the elements of the provided iterable.\n *\n * Use the `concurrency` option to control how many elements are processed\n * concurrently.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const filter = (iterable, f, options) => filterMap(iterable, a => map(f(a), pass => {\n  pass = options?.negate ? !pass : pass;\n  return pass ? Option.some(a) : Option.none();\n}), options);\n/**\n * Effectfully filter the elements of the provided iterable.\n *\n * Use the `concurrency` option to control how many elements are processed\n * concurrently.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const filterMap = (iterable, f, options) => suspend(() => {\n  const out = [];\n  return as(forEach(iterable, a => map(f(a), o => {\n    if (o._tag === \"Some\") {\n      out.push(o.value);\n    }\n  }), {\n    discard: true,\n    concurrency: options?.concurrency\n  }), out);\n});\n// ----------------------------------------------------------------------------\n// do notation\n// ----------------------------------------------------------------------------\n/**\n * Start a do notation block.\n *\n * @since 3.4.0\n * @experimental\n * @category do notation\n */\nexport const Do = /*#__PURE__*/succeed({});\n/**\n * Bind the success value of this `Micro` effect to the provided name.\n *\n * @since 3.4.0\n * @experimental\n * @category do notation\n */\nexport const bindTo = /*#__PURE__*/doNotation.bindTo(map);\n/**\n * Bind the success value of this `Micro` effect to the provided name.\n *\n * @since 3.4.0\n * @experimental\n * @category do notation\n */\nexport const bind = /*#__PURE__*/doNotation.bind(map, flatMap);\nconst let_ = /*#__PURE__*/doNotation.let_(map);\nexport {\n/**\n * Bind the result of a synchronous computation to the given name.\n *\n * @since 3.4.0\n * @experimental\n * @category do notation\n */\nlet_ as let };\n// ----------------------------------------------------------------------------\n// fibers & forking\n// ----------------------------------------------------------------------------\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * When the parent `Micro` finishes, this `Micro` will be aborted.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const fork = self => withMicroFiber(fiber => {\n  fiberMiddleware.interruptChildren ??= fiberInterruptChildren;\n  return succeed(unsafeFork(fiber, self));\n});\nconst unsafeFork = (parent, effect, immediate = false, daemon = false) => {\n  const child = new MicroFiberImpl(parent.context, parent.interruptible);\n  if (!daemon) {\n    parent.children().add(child);\n    child.addObserver(() => parent.children().delete(child));\n  }\n  if (immediate) {\n    child.evaluate(effect);\n  } else {\n    parent.getRef(CurrentScheduler).scheduleTask(() => child.evaluate(effect), 0);\n  }\n  return child;\n};\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * It will not be aborted when the parent `Micro` finishes.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const forkDaemon = self => withMicroFiber(fiber => succeed(unsafeFork(fiber, self, false, true)));\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * The lifetime of the handle will be attached to the provided `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const forkIn = /*#__PURE__*/dual(2, (self, scope) => uninterruptibleMask(restore => flatMap(scope.fork, scope => tap(restore(forkDaemon(onExit(self, exit => scope.close(exit)))), fiber => scope.addFinalizer(_ => fiberInterrupt(fiber))))));\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * The lifetime of the handle will be attached to the current `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const forkScoped = self => flatMap(scope, scope => forkIn(self, scope));\n// ----------------------------------------------------------------------------\n// execution\n// ----------------------------------------------------------------------------\n/**\n * Execute the `Micro` effect and return a `MicroFiber` that can be awaited, joined,\n * or aborted.\n *\n * You can listen for the result by adding an observer using the handle's\n * `addObserver` method.\n *\n * @example\n * ```ts\n * import * as Micro from \"effect/Micro\"\n *\n * const handle = Micro.succeed(42).pipe(\n *   Micro.delay(1000),\n *   Micro.runFork\n * )\n *\n * handle.addObserver((exit) => {\n *   console.log(exit)\n * })\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category execution\n */\nexport const runFork = (effect, options) => {\n  const fiber = new MicroFiberImpl(CurrentScheduler.context(options?.scheduler ?? new MicroSchedulerDefault()));\n  fiber.evaluate(effect);\n  if (options?.signal) {\n    if (options.signal.aborted) {\n      fiber.unsafeInterrupt();\n    } else {\n      const abort = () => fiber.unsafeInterrupt();\n      options.signal.addEventListener(\"abort\", abort, {\n        once: true\n      });\n      fiber.addObserver(() => options.signal.removeEventListener(\"abort\", abort));\n    }\n  }\n  return fiber;\n};\n/**\n * Execute the `Micro` effect and return a `Promise` that resolves with the\n * `MicroExit` of the computation.\n *\n * @since 3.4.6\n * @experimental\n * @category execution\n */\nexport const runPromiseExit = (effect, options) => new Promise((resolve, _reject) => {\n  const handle = runFork(effect, options);\n  handle.addObserver(resolve);\n});\n/**\n * Execute the `Micro` effect and return a `Promise` that resolves with the\n * successful value of the computation.\n *\n * @since 3.4.0\n * @experimental\n * @category execution\n */\nexport const runPromise = (effect, options) => runPromiseExit(effect, options).then(exit => {\n  if (exit._tag === \"Failure\") {\n    throw exit.cause;\n  }\n  return exit.value;\n});\n/**\n * Attempt to execute the `Micro` effect synchronously and return the `MicroExit`.\n *\n * If any asynchronous effects are encountered, the function will return a\n * `CauseDie` containing the `MicroFiber`.\n *\n * @since 3.4.6\n * @experimental\n * @category execution\n */\nexport const runSyncExit = effect => {\n  const scheduler = new MicroSchedulerDefault();\n  const fiber = runFork(effect, {\n    scheduler\n  });\n  scheduler.flush();\n  return fiber._exit ?? exitDie(fiber);\n};\n/**\n * Attempt to execute the `Micro` effect synchronously and return the success\n * value.\n *\n * @since 3.4.0\n * @experimental\n * @category execution\n */\nexport const runSync = effect => {\n  const exit = runSyncExit(effect);\n  if (exit._tag === \"Failure\") throw exit.cause;\n  return exit.value;\n};\nconst YieldableError = /*#__PURE__*/function () {\n  class YieldableError extends globalThis.Error {}\n  Object.assign(YieldableError.prototype, MicroProto, StructuralPrototype, {\n    [identifier]: \"Failure\",\n    [evaluate]() {\n      return fail(this);\n    },\n    toString() {\n      return this.message ? `${this.name}: ${this.message}` : this.name;\n    },\n    toJSON() {\n      return {\n        ...this\n      };\n    },\n    [NodeInspectSymbol]() {\n      const stack = this.stack;\n      if (stack) {\n        return `${this.toString()}\\n${stack.split(\"\\n\").slice(1).join(\"\\n\")}`;\n      }\n      return this.toString();\n    }\n  });\n  return YieldableError;\n}();\n/**\n * @since 3.4.0\n * @experimental\n * @category errors\n */\nexport const Error = /*#__PURE__*/function () {\n  return class extends YieldableError {\n    constructor(args) {\n      super();\n      if (args) {\n        Object.assign(this, args);\n      }\n    }\n  };\n}();\n/**\n * @since 3.4.0\n * @experimental\n * @category errors\n */\nexport const TaggedError = tag => {\n  class Base extends Error {\n    _tag = tag;\n  }\n  ;\n  Base.prototype.name = tag;\n  return Base;\n};\n/**\n * Represents a checked exception which occurs when an expected element was\n * unable to be found.\n *\n * @since 3.4.4\n * @experimental\n * @category errors\n */\nexport class NoSuchElementException extends /*#__PURE__*/TaggedError(\"NoSuchElementException\") {}\n/**\n * Represents a checked exception which occurs when a timeout occurs.\n *\n * @since 3.4.4\n * @experimental\n * @category errors\n */\nexport class TimeoutException extends /*#__PURE__*/TaggedError(\"TimeoutException\") {}\n//# sourceMappingURL=Micro.js.map","/**\n * @since 2.0.0\n */\nimport { dual } from \"./Function.js\";\nimport { globalValue } from \"./GlobalValue.js\";\nimport * as core from \"./internal/core.js\";\n/**\n * @since 2.0.0\n * @category utils\n */\nexport class PriorityBuckets {\n  /**\n   * @since 2.0.0\n   */\n  buckets = [];\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    const length = this.buckets.length;\n    let bucket = undefined;\n    let index = 0;\n    for (; index < length; index++) {\n      if (this.buckets[index][0] <= priority) {\n        bucket = this.buckets[index];\n      } else {\n        break;\n      }\n    }\n    if (bucket && bucket[0] === priority) {\n      bucket[1].push(task);\n    } else if (index === length) {\n      this.buckets.push([priority, [task]]);\n    } else {\n      this.buckets.splice(index, 0, [priority, [task]]);\n    }\n  }\n}\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport class MixedScheduler {\n  maxNextTickBeforeTimer;\n  /**\n   * @since 2.0.0\n   */\n  running = false;\n  /**\n   * @since 2.0.0\n   */\n  tasks = /*#__PURE__*/new PriorityBuckets();\n  constructor(\n  /**\n   * @since 2.0.0\n   */\n  maxNextTickBeforeTimer) {\n    this.maxNextTickBeforeTimer = maxNextTickBeforeTimer;\n  }\n  /**\n   * @since 2.0.0\n   */\n  starveInternal(depth) {\n    const tasks = this.tasks.buckets;\n    this.tasks.buckets = [];\n    for (const [_, toRun] of tasks) {\n      for (let i = 0; i < toRun.length; i++) {\n        toRun[i]();\n      }\n    }\n    if (this.tasks.buckets.length === 0) {\n      this.running = false;\n    } else {\n      this.starve(depth);\n    }\n  }\n  /**\n   * @since 2.0.0\n   */\n  starve(depth = 0) {\n    if (depth >= this.maxNextTickBeforeTimer) {\n      setTimeout(() => this.starveInternal(0), 0);\n    } else {\n      Promise.resolve(void 0).then(() => this.starveInternal(depth + 1));\n    }\n  }\n  /**\n   * @since 2.0.0\n   */\n  shouldYield(fiber) {\n    return fiber.currentOpCount > fiber.getFiberRef(core.currentMaxOpsBeforeYield) ? fiber.getFiberRef(core.currentSchedulingPriority) : false;\n  }\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    this.tasks.scheduleTask(task, priority);\n    if (!this.running) {\n      this.running = true;\n      this.starve();\n    }\n  }\n}\n/**\n * @since 2.0.0\n * @category schedulers\n */\nexport const defaultScheduler = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Scheduler/defaultScheduler\"), () => new MixedScheduler(2048));\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport class SyncScheduler {\n  /**\n   * @since 2.0.0\n   */\n  tasks = /*#__PURE__*/new PriorityBuckets();\n  /**\n   * @since 2.0.0\n   */\n  deferred = false;\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    if (this.deferred) {\n      defaultScheduler.scheduleTask(task, priority);\n    } else {\n      this.tasks.scheduleTask(task, priority);\n    }\n  }\n  /**\n   * @since 2.0.0\n   */\n  shouldYield(fiber) {\n    return fiber.currentOpCount > fiber.getFiberRef(core.currentMaxOpsBeforeYield) ? fiber.getFiberRef(core.currentSchedulingPriority) : false;\n  }\n  /**\n   * @since 2.0.0\n   */\n  flush() {\n    while (this.tasks.buckets.length > 0) {\n      const tasks = this.tasks.buckets;\n      this.tasks.buckets = [];\n      for (const [_, toRun] of tasks) {\n        for (let i = 0; i < toRun.length; i++) {\n          toRun[i]();\n        }\n      }\n    }\n    this.deferred = true;\n  }\n}\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport class ControlledScheduler {\n  /**\n   * @since 2.0.0\n   */\n  tasks = /*#__PURE__*/new PriorityBuckets();\n  /**\n   * @since 2.0.0\n   */\n  deferred = false;\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    if (this.deferred) {\n      defaultScheduler.scheduleTask(task, priority);\n    } else {\n      this.tasks.scheduleTask(task, priority);\n    }\n  }\n  /**\n   * @since 2.0.0\n   */\n  shouldYield(fiber) {\n    return fiber.currentOpCount > fiber.getFiberRef(core.currentMaxOpsBeforeYield) ? fiber.getFiberRef(core.currentSchedulingPriority) : false;\n  }\n  /**\n   * @since 2.0.0\n   */\n  step() {\n    const tasks = this.tasks.buckets;\n    this.tasks.buckets = [];\n    for (const [_, toRun] of tasks) {\n      for (let i = 0; i < toRun.length; i++) {\n        toRun[i]();\n      }\n    }\n  }\n}\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const makeMatrix = (...record) => {\n  const index = record.sort(([p0], [p1]) => p0 < p1 ? -1 : p0 > p1 ? 1 : 0);\n  return {\n    shouldYield(fiber) {\n      for (const scheduler of record) {\n        const priority = scheduler[1].shouldYield(fiber);\n        if (priority !== false) {\n          return priority;\n        }\n      }\n      return false;\n    },\n    scheduleTask(task, priority) {\n      let scheduler = undefined;\n      for (const i of index) {\n        if (priority >= i[0]) {\n          scheduler = i[1];\n        } else {\n          return (scheduler ?? defaultScheduler).scheduleTask(task, priority);\n        }\n      }\n      return (scheduler ?? defaultScheduler).scheduleTask(task, priority);\n    }\n  };\n};\n/**\n * @since 2.0.0\n * @category utilities\n */\nexport const defaultShouldYield = fiber => {\n  return fiber.currentOpCount > fiber.getFiberRef(core.currentMaxOpsBeforeYield) ? fiber.getFiberRef(core.currentSchedulingPriority) : false;\n};\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const make = (scheduleTask, shouldYield = defaultShouldYield) => ({\n  scheduleTask,\n  shouldYield\n});\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const makeBatched = (callback, shouldYield = defaultShouldYield) => {\n  let running = false;\n  const tasks = new PriorityBuckets();\n  const starveInternal = () => {\n    const tasksToRun = tasks.buckets;\n    tasks.buckets = [];\n    for (const [_, toRun] of tasksToRun) {\n      for (let i = 0; i < toRun.length; i++) {\n        toRun[i]();\n      }\n    }\n    if (tasks.buckets.length === 0) {\n      running = false;\n    } else {\n      starve();\n    }\n  };\n  const starve = () => callback(starveInternal);\n  return make((task, priority) => {\n    tasks.scheduleTask(task, priority);\n    if (!running) {\n      running = true;\n      starve();\n    }\n  }, shouldYield);\n};\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const timer = (ms, shouldYield = defaultShouldYield) => make(task => setTimeout(task, ms), shouldYield);\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const timerBatched = (ms, shouldYield = defaultShouldYield) => makeBatched(task => setTimeout(task, ms), shouldYield);\n/** @internal */\nexport const currentScheduler = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentScheduler\"), () => core.fiberRefUnsafeMake(defaultScheduler));\n/** @internal */\nexport const withScheduler = /*#__PURE__*/dual(2, (self, scheduler) => core.fiberRefLocally(self, currentScheduler, scheduler));\n//# sourceMappingURL=Scheduler.js.map","import { globalValue } from \"../GlobalValue.js\";\nimport { fiberRefUnsafeMake } from \"./core.js\";\n/** @internal */\nexport const currentRequestMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentRequestMap\"), () => fiberRefUnsafeMake(new Map()));\n//# sourceMappingURL=completedRequestMap.js.map","import * as core from \"./core.js\";\n/** @internal */\nexport const match = (concurrency, sequential, unbounded, bounded) => {\n  switch (concurrency) {\n    case undefined:\n      return sequential();\n    case \"unbounded\":\n      return unbounded();\n    case \"inherit\":\n      return core.fiberRefGetWith(core.currentConcurrency, concurrency => concurrency === \"unbounded\" ? unbounded() : concurrency > 1 ? bounded(concurrency) : sequential());\n    default:\n      return concurrency > 1 ? bounded(concurrency) : sequential();\n  }\n};\n/** @internal */\nexport const matchSimple = (concurrency, sequential, concurrent) => {\n  switch (concurrency) {\n    case undefined:\n      return sequential();\n    case \"unbounded\":\n      return concurrent();\n    case \"inherit\":\n      return core.fiberRefGetWith(core.currentConcurrency, concurrency => concurrency === \"unbounded\" || concurrency > 1 ? concurrent() : sequential());\n    default:\n      return concurrency > 1 ? concurrent() : sequential();\n  }\n};\n//# sourceMappingURL=concurrency.js.map","/** @internal */\nexport const OP_INTERRUPT_SIGNAL = \"InterruptSignal\";\n/** @internal */\nexport const OP_STATEFUL = \"Stateful\";\n/** @internal */\nexport const OP_RESUME = \"Resume\";\n/** @internal */\nexport const OP_YIELD_NOW = \"YieldNow\";\n/** @internal */\nexport const interruptSignal = cause => ({\n  _tag: OP_INTERRUPT_SIGNAL,\n  cause\n});\n/** @internal */\nexport const stateful = onFiber => ({\n  _tag: OP_STATEFUL,\n  onFiber\n});\n/** @internal */\nexport const resume = effect => ({\n  _tag: OP_RESUME,\n  effect\n});\n/** @internal */\nexport const yieldNow = () => ({\n  _tag: OP_YIELD_NOW\n});\n//# sourceMappingURL=fiberMessage.js.map","import * as FiberId from \"../FiberId.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as FiberMessage from \"./fiberMessage.js\";\n/** @internal */\nconst FiberScopeSymbolKey = \"effect/FiberScope\";\n/** @internal */\nexport const FiberScopeTypeId = /*#__PURE__*/Symbol.for(FiberScopeSymbolKey);\n/** @internal */\nclass Global {\n  [FiberScopeTypeId] = FiberScopeTypeId;\n  fiberId = FiberId.none;\n  roots = /*#__PURE__*/new Set();\n  add(_runtimeFlags, child) {\n    this.roots.add(child);\n    child.addObserver(() => {\n      this.roots.delete(child);\n    });\n  }\n}\n/** @internal */\nclass Local {\n  fiberId;\n  parent;\n  [FiberScopeTypeId] = FiberScopeTypeId;\n  constructor(fiberId, parent) {\n    this.fiberId = fiberId;\n    this.parent = parent;\n  }\n  add(_runtimeFlags, child) {\n    this.parent.tell(FiberMessage.stateful(parentFiber => {\n      parentFiber.addChild(child);\n      child.addObserver(() => {\n        parentFiber.removeChild(child);\n      });\n    }));\n  }\n}\n/** @internal */\nexport const unsafeMake = fiber => {\n  return new Local(fiber.id(), fiber);\n};\n/** @internal */\nexport const globalScope = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberScope/Global\"), () => new Global());\n//# sourceMappingURL=fiberScope.js.map","import * as Clock from \"../Clock.js\";\nimport * as Either from \"../Either.js\";\nimport * as Exit from \"../Exit.js\";\nimport * as FiberId from \"../FiberId.js\";\nimport * as FiberStatus from \"../FiberStatus.js\";\nimport { dual, pipe } from \"../Function.js\";\nimport * as HashSet from \"../HashSet.js\";\nimport * as number from \"../Number.js\";\nimport * as Option from \"../Option.js\";\nimport * as order from \"../Order.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport * as core from \"./core.js\";\nimport * as effectable from \"./effectable.js\";\nimport * as fiberScope from \"./fiberScope.js\";\nimport * as runtimeFlags from \"./runtimeFlags.js\";\n/** @internal */\nconst FiberSymbolKey = \"effect/Fiber\";\n/** @internal */\nexport const FiberTypeId = /*#__PURE__*/Symbol.for(FiberSymbolKey);\n/** @internal */\nexport const fiberVariance = {\n  /* c8 ignore next */\n  _E: _ => _,\n  /* c8 ignore next */\n  _A: _ => _\n};\n/** @internal */\nconst fiberProto = {\n  [FiberTypeId]: fiberVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nconst RuntimeFiberSymbolKey = \"effect/Fiber\";\n/** @internal */\nexport const RuntimeFiberTypeId = /*#__PURE__*/Symbol.for(RuntimeFiberSymbolKey);\n/** @internal */\nexport const Order = /*#__PURE__*/pipe( /*#__PURE__*/order.tuple(number.Order, number.Order), /*#__PURE__*/order.mapInput(fiber => [fiber.id().startTimeMillis, fiber.id().id]));\n/** @internal */\nexport const isFiber = u => hasProperty(u, FiberTypeId);\n/** @internal */\nexport const isRuntimeFiber = self => RuntimeFiberTypeId in self;\n/** @internal */\nexport const _await = self => self.await;\n/** @internal */\nexport const children = self => self.children;\n/** @internal */\nexport const done = exit => {\n  const _fiber = {\n    ...effectable.CommitPrototype,\n    commit() {\n      return join(this);\n    },\n    ...fiberProto,\n    id: () => FiberId.none,\n    await: core.succeed(exit),\n    children: core.succeed([]),\n    inheritAll: core.void,\n    poll: core.succeed(Option.some(exit)),\n    interruptAsFork: () => core.void\n  };\n  return _fiber;\n};\n/** @internal */\nexport const dump = self => core.map(self.status, status => ({\n  id: self.id(),\n  status\n}));\n/** @internal */\nexport const dumpAll = fibers => core.forEachSequential(fibers, dump);\n/** @internal */\nexport const fail = error => done(Exit.fail(error));\n/** @internal */\nexport const failCause = cause => done(Exit.failCause(cause));\n/** @internal */\nexport const fromEffect = effect => core.map(core.exit(effect), done);\n/** @internal */\nexport const id = self => self.id();\n/** @internal */\nexport const inheritAll = self => self.inheritAll;\n/** @internal */\nexport const interrupted = fiberId => done(Exit.interrupt(fiberId));\n/** @internal */\nexport const interruptAll = fibers => core.flatMap(core.fiberId, fiberId => pipe(fibers, interruptAllAs(fiberId)));\n/** @internal */\nexport const interruptAllAs = /*#__PURE__*/dual(2, (fibers, fiberId) => pipe(core.forEachSequentialDiscard(fibers, interruptAsFork(fiberId)), core.zipRight(pipe(fibers, core.forEachSequentialDiscard(_await)))));\n/** @internal */\nexport const interruptAsFork = /*#__PURE__*/dual(2, (self, fiberId) => self.interruptAsFork(fiberId));\n/** @internal */\nexport const join = self => core.zipLeft(core.flatten(self.await), self.inheritAll);\n/** @internal */\nexport const map = /*#__PURE__*/dual(2, (self, f) => mapEffect(self, a => core.sync(() => f(a))));\n/** @internal */\nexport const mapEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const _fiber = {\n    ...effectable.CommitPrototype,\n    commit() {\n      return join(this);\n    },\n    ...fiberProto,\n    id: () => self.id(),\n    await: core.flatMap(self.await, Exit.forEachEffect(f)),\n    children: self.children,\n    inheritAll: self.inheritAll,\n    poll: core.flatMap(self.poll, result => {\n      switch (result._tag) {\n        case \"None\":\n          return core.succeed(Option.none());\n        case \"Some\":\n          return pipe(Exit.forEachEffect(result.value, f), core.map(Option.some));\n      }\n    }),\n    interruptAsFork: id => self.interruptAsFork(id)\n  };\n  return _fiber;\n});\n/** @internal */\nexport const mapFiber = /*#__PURE__*/dual(2, (self, f) => core.map(self.await, Exit.match({\n  onFailure: cause => failCause(cause),\n  onSuccess: a => f(a)\n})));\n/** @internal */\nexport const match = /*#__PURE__*/dual(2, (self, {\n  onFiber,\n  onRuntimeFiber\n}) => {\n  if (isRuntimeFiber(self)) {\n    return onRuntimeFiber(self);\n  }\n  return onFiber(self);\n});\n/** @internal */\nconst _never = {\n  ...effectable.CommitPrototype,\n  commit() {\n    return join(this);\n  },\n  ...fiberProto,\n  id: () => FiberId.none,\n  await: core.never,\n  children: /*#__PURE__*/core.succeed([]),\n  inheritAll: core.never,\n  poll: /*#__PURE__*/core.succeed( /*#__PURE__*/Option.none()),\n  interruptAsFork: () => core.never\n};\n/** @internal */\nexport const never = _never;\n/** @internal */\nexport const orElse = /*#__PURE__*/dual(2, (self, that) => ({\n  ...effectable.CommitPrototype,\n  commit() {\n    return join(this);\n  },\n  ...fiberProto,\n  id: () => FiberId.getOrElse(self.id(), that.id()),\n  await: core.zipWith(self.await, that.await, (exit1, exit2) => Exit.isSuccess(exit1) ? exit1 : exit2),\n  children: self.children,\n  inheritAll: core.zipRight(that.inheritAll, self.inheritAll),\n  poll: core.zipWith(self.poll, that.poll, (option1, option2) => {\n    switch (option1._tag) {\n      case \"None\":\n        {\n          return Option.none();\n        }\n      case \"Some\":\n        {\n          return Exit.isSuccess(option1.value) ? option1 : option2;\n        }\n    }\n  }),\n  interruptAsFork: id => pipe(core.interruptAsFiber(self, id), core.zipRight(pipe(that, core.interruptAsFiber(id))), core.asVoid)\n}));\n/** @internal */\nexport const orElseEither = /*#__PURE__*/dual(2, (self, that) => orElse(map(self, Either.left), map(that, Either.right)));\n/** @internal */\nexport const poll = self => self.poll;\n// forked from https://github.com/sindresorhus/parse-ms/blob/4da2ffbdba02c6e288c08236695bdece0adca173/index.js\n// MIT License\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n/** @internal */\nconst parseMs = milliseconds => {\n  const roundTowardsZero = milliseconds > 0 ? Math.floor : Math.ceil;\n  return {\n    days: roundTowardsZero(milliseconds / 86400000),\n    hours: roundTowardsZero(milliseconds / 3600000) % 24,\n    minutes: roundTowardsZero(milliseconds / 60000) % 60,\n    seconds: roundTowardsZero(milliseconds / 1000) % 60,\n    milliseconds: roundTowardsZero(milliseconds) % 1000,\n    microseconds: roundTowardsZero(milliseconds * 1000) % 1000,\n    nanoseconds: roundTowardsZero(milliseconds * 1e6) % 1000\n  };\n};\n/** @internal */\nconst renderStatus = status => {\n  if (FiberStatus.isDone(status)) {\n    return \"Done\";\n  }\n  if (FiberStatus.isRunning(status)) {\n    return \"Running\";\n  }\n  const isInterruptible = runtimeFlags.interruptible(status.runtimeFlags) ? \"interruptible\" : \"uninterruptible\";\n  return `Suspended(${isInterruptible})`;\n};\n/** @internal */\nexport const pretty = self => core.flatMap(Clock.currentTimeMillis, now => core.map(dump(self), dump => {\n  const time = now - dump.id.startTimeMillis;\n  const {\n    days,\n    hours,\n    milliseconds,\n    minutes,\n    seconds\n  } = parseMs(time);\n  const lifeMsg = (days === 0 ? \"\" : `${days}d`) + (days === 0 && hours === 0 ? \"\" : `${hours}h`) + (days === 0 && hours === 0 && minutes === 0 ? \"\" : `${minutes}m`) + (days === 0 && hours === 0 && minutes === 0 && seconds === 0 ? \"\" : `${seconds}s`) + `${milliseconds}ms`;\n  const waitMsg = FiberStatus.isSuspended(dump.status) ? (() => {\n    const ids = FiberId.ids(dump.status.blockingOn);\n    return HashSet.size(ids) > 0 ? `waiting on ` + Array.from(ids).map(id => `${id}`).join(\", \") : \"\";\n  })() : \"\";\n  const statusMsg = renderStatus(dump.status);\n  return `[Fiber](#${dump.id.id}) (${lifeMsg}) ${waitMsg}\\n   Status: ${statusMsg}`;\n}));\n/** @internal */\nexport const unsafeRoots = () => Array.from(fiberScope.globalScope.roots);\n/** @internal */\nexport const roots = /*#__PURE__*/core.sync(unsafeRoots);\n/** @internal */\nexport const status = self => self.status;\n/** @internal */\nexport const succeed = value => done(Exit.succeed(value));\nconst void_ = /*#__PURE__*/succeed(void 0);\nexport { /** @internal */\nvoid_ as void };\n/** @internal */\nexport const currentFiberURI = \"effect/FiberCurrent\";\n/** @internal */\nexport const getCurrentFiber = () => Option.fromNullable(globalThis[currentFiberURI]);\n//# sourceMappingURL=fiber.js.map","import * as Arr from \"../Array.js\";\nimport * as Context from \"../Context.js\";\nimport * as FiberRefs from \"../FiberRefs.js\";\nimport { constVoid, dual } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as HashMap from \"../HashMap.js\";\nimport * as Inspectable from \"../Inspectable.js\";\nimport * as List from \"../List.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport * as Cause from \"./cause.js\";\nimport * as defaultServices from \"./defaultServices.js\";\nimport { consoleTag } from \"./defaultServices/console.js\";\nimport * as fiberId_ from \"./fiberId.js\";\nimport * as logSpan_ from \"./logSpan.js\";\n/** @internal */\nconst LoggerSymbolKey = \"effect/Logger\";\n/** @internal */\nexport const LoggerTypeId = /*#__PURE__*/Symbol.for(LoggerSymbolKey);\nconst loggerVariance = {\n  /* c8 ignore next */\n  _Message: _ => _,\n  /* c8 ignore next */\n  _Output: _ => _\n};\n/** @internal */\nexport const makeLogger = log => ({\n  [LoggerTypeId]: loggerVariance,\n  log,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n});\n/** @internal */\nexport const mapInput = /*#__PURE__*/dual(2, (self, f) => makeLogger(options => self.log({\n  ...options,\n  message: f(options.message)\n})));\n/** @internal */\nexport const mapInputOptions = /*#__PURE__*/dual(2, (self, f) => makeLogger(options => self.log(f(options))));\n/** @internal */\nexport const filterLogLevel = /*#__PURE__*/dual(2, (self, f) => makeLogger(options => f(options.logLevel) ? Option.some(self.log(options)) : Option.none()));\n/** @internal */\nexport const map = /*#__PURE__*/dual(2, (self, f) => makeLogger(options => f(self.log(options))));\n/** @internal */\nexport const none = {\n  [LoggerTypeId]: loggerVariance,\n  log: constVoid,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nexport const simple = log => ({\n  [LoggerTypeId]: loggerVariance,\n  log: ({\n    message\n  }) => log(message),\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n});\n/** @internal */\nexport const succeed = value => {\n  return simple(() => value);\n};\n/** @internal */\nexport const sync = evaluate => {\n  return simple(evaluate);\n};\n/** @internal */\nexport const zip = /*#__PURE__*/dual(2, (self, that) => makeLogger(options => [self.log(options), that.log(options)]));\n/** @internal */\nexport const zipLeft = /*#__PURE__*/dual(2, (self, that) => map(zip(self, that), tuple => tuple[0]));\n/** @internal */\nexport const zipRight = /*#__PURE__*/dual(2, (self, that) => map(zip(self, that), tuple => tuple[1]));\n/**\n * Match strings that do not contain any whitespace characters, double quotes,\n * or equal signs.\n *\n * @internal\n */\nconst textOnly = /^[^\\s\"=]*$/;\n/**\n * Used by both {@link stringLogger} and {@link logfmtLogger} to render a log\n * message.\n *\n * @internal\n */\nconst format = (quoteValue, whitespace) => ({\n  annotations,\n  cause,\n  date,\n  fiberId,\n  logLevel,\n  message,\n  spans\n}) => {\n  const formatValue = value => value.match(textOnly) ? value : quoteValue(value);\n  const format = (label, value) => `${logSpan_.formatLabel(label)}=${formatValue(value)}`;\n  const append = (label, value) => \" \" + format(label, value);\n  let out = format(\"timestamp\", date.toISOString());\n  out += append(\"level\", logLevel.label);\n  out += append(\"fiber\", fiberId_.threadName(fiberId));\n  const messages = Arr.ensure(message);\n  for (let i = 0; i < messages.length; i++) {\n    out += append(\"message\", Inspectable.toStringUnknown(messages[i], whitespace));\n  }\n  if (!Cause.isEmptyType(cause)) {\n    out += append(\"cause\", Cause.pretty(cause, {\n      renderErrorCause: true\n    }));\n  }\n  for (const span of spans) {\n    out += \" \" + logSpan_.render(date.getTime())(span);\n  }\n  for (const [label, value] of annotations) {\n    out += append(label, Inspectable.toStringUnknown(value, whitespace));\n  }\n  return out;\n};\n/** @internal */\nconst escapeDoubleQuotes = s => `\"${s.replace(/\\\\([\\s\\S])|(\")/g, \"\\\\$1$2\")}\"`;\n/** @internal */\nexport const stringLogger = /*#__PURE__*/makeLogger( /*#__PURE__*/format(escapeDoubleQuotes));\n/** @internal */\nexport const logfmtLogger = /*#__PURE__*/makeLogger( /*#__PURE__*/format(JSON.stringify, 0));\n/** @internal */\nexport const structuredLogger = /*#__PURE__*/makeLogger(({\n  annotations,\n  cause,\n  date,\n  fiberId,\n  logLevel,\n  message,\n  spans\n}) => {\n  const now = date.getTime();\n  const annotationsObj = {};\n  const spansObj = {};\n  if (HashMap.size(annotations) > 0) {\n    for (const [k, v] of annotations) {\n      annotationsObj[k] = structuredMessage(v);\n    }\n  }\n  if (List.isCons(spans)) {\n    for (const span of spans) {\n      spansObj[span.label] = now - span.startTime;\n    }\n  }\n  const messageArr = Arr.ensure(message);\n  return {\n    message: messageArr.length === 1 ? structuredMessage(messageArr[0]) : messageArr.map(structuredMessage),\n    logLevel: logLevel.label,\n    timestamp: date.toISOString(),\n    cause: Cause.isEmpty(cause) ? undefined : Cause.pretty(cause, {\n      renderErrorCause: true\n    }),\n    annotations: annotationsObj,\n    spans: spansObj,\n    fiberId: fiberId_.threadName(fiberId)\n  };\n});\n/** @internal */\nexport const structuredMessage = u => {\n  switch (typeof u) {\n    case \"bigint\":\n    case \"function\":\n    case \"symbol\":\n      {\n        return String(u);\n      }\n    default:\n      {\n        return Inspectable.toJSON(u);\n      }\n  }\n};\n/** @internal */\nexport const jsonLogger = /*#__PURE__*/map(structuredLogger, Inspectable.stringifyCircular);\n/** @internal */\nexport const isLogger = u => {\n  return typeof u === \"object\" && u != null && LoggerTypeId in u;\n};\nconst withColor = (text, ...colors) => {\n  let out = \"\";\n  for (let i = 0; i < colors.length; i++) {\n    out += `\\x1b[${colors[i]}m`;\n  }\n  return out + text + \"\\x1b[0m\";\n};\nconst withColorNoop = (text, ..._colors) => text;\nconst colors = {\n  bold: \"1\",\n  red: \"31\",\n  green: \"32\",\n  yellow: \"33\",\n  blue: \"34\",\n  cyan: \"36\",\n  white: \"37\",\n  gray: \"90\",\n  black: \"30\",\n  bgBrightRed: \"101\"\n};\nconst logLevelColors = {\n  None: [],\n  All: [],\n  Trace: [colors.gray],\n  Debug: [colors.blue],\n  Info: [colors.green],\n  Warning: [colors.yellow],\n  Error: [colors.red],\n  Fatal: [colors.bgBrightRed, colors.black]\n};\nconst logLevelStyle = {\n  None: \"\",\n  All: \"\",\n  Trace: \"color:gray\",\n  Debug: \"color:blue\",\n  Info: \"color:green\",\n  Warning: \"color:orange\",\n  Error: \"color:red\",\n  Fatal: \"background-color:red;color:white\"\n};\nconst defaultDateFormat = date => `${date.getHours().toString().padStart(2, \"0\")}:${date.getMinutes().toString().padStart(2, \"0\")}:${date.getSeconds().toString().padStart(2, \"0\")}.${date.getMilliseconds().toString().padStart(3, \"0\")}`;\nconst hasProcessStdout = typeof process === \"object\" && process !== null && typeof process.stdout === \"object\" && process.stdout !== null;\nconst processStdoutIsTTY = hasProcessStdout && process.stdout.isTTY === true;\nconst hasProcessStdoutOrDeno = hasProcessStdout || \"Deno\" in globalThis;\n/** @internal */\nexport const prettyLogger = options => {\n  const mode_ = options?.mode ?? \"auto\";\n  const mode = mode_ === \"auto\" ? hasProcessStdoutOrDeno ? \"tty\" : \"browser\" : mode_;\n  const isBrowser = mode === \"browser\";\n  const showColors = typeof options?.colors === \"boolean\" ? options.colors : processStdoutIsTTY || isBrowser;\n  const formatDate = options?.formatDate ?? defaultDateFormat;\n  return isBrowser ? prettyLoggerBrowser({\n    colors: showColors,\n    formatDate\n  }) : prettyLoggerTty({\n    colors: showColors,\n    formatDate,\n    stderr: options?.stderr === true\n  });\n};\nconst prettyLoggerTty = options => {\n  const processIsBun = typeof process === \"object\" && \"isBun\" in process && process.isBun === true;\n  const color = options.colors ? withColor : withColorNoop;\n  return makeLogger(({\n    annotations,\n    cause,\n    context,\n    date,\n    fiberId,\n    logLevel,\n    message: message_,\n    spans\n  }) => {\n    const services = FiberRefs.getOrDefault(context, defaultServices.currentServices);\n    const console = Context.get(services, consoleTag).unsafe;\n    const log = options.stderr === true ? console.error : console.log;\n    const message = Arr.ensure(message_);\n    let firstLine = color(`[${options.formatDate(date)}]`, colors.white) + ` ${color(logLevel.label, ...logLevelColors[logLevel._tag])}` + ` (${fiberId_.threadName(fiberId)})`;\n    if (List.isCons(spans)) {\n      const now = date.getTime();\n      const render = logSpan_.render(now);\n      for (const span of spans) {\n        firstLine += \" \" + render(span);\n      }\n    }\n    firstLine += \":\";\n    let messageIndex = 0;\n    if (message.length > 0) {\n      const firstMaybeString = structuredMessage(message[0]);\n      if (typeof firstMaybeString === \"string\") {\n        firstLine += \" \" + color(firstMaybeString, colors.bold, colors.cyan);\n        messageIndex++;\n      }\n    }\n    log(firstLine);\n    if (!processIsBun) console.group();\n    if (!Cause.isEmpty(cause)) {\n      log(Cause.pretty(cause, {\n        renderErrorCause: true\n      }));\n    }\n    if (messageIndex < message.length) {\n      for (; messageIndex < message.length; messageIndex++) {\n        log(Inspectable.redact(message[messageIndex]));\n      }\n    }\n    if (HashMap.size(annotations) > 0) {\n      for (const [key, value] of annotations) {\n        log(color(`${key}:`, colors.bold, colors.white), Inspectable.redact(value));\n      }\n    }\n    if (!processIsBun) console.groupEnd();\n  });\n};\nconst prettyLoggerBrowser = options => {\n  const color = options.colors ? \"%c\" : \"\";\n  return makeLogger(({\n    annotations,\n    cause,\n    context,\n    date,\n    fiberId,\n    logLevel,\n    message: message_,\n    spans\n  }) => {\n    const services = FiberRefs.getOrDefault(context, defaultServices.currentServices);\n    const console = Context.get(services, consoleTag).unsafe;\n    const message = Arr.ensure(message_);\n    let firstLine = `${color}[${options.formatDate(date)}]`;\n    const firstParams = [];\n    if (options.colors) {\n      firstParams.push(\"color:gray\");\n    }\n    firstLine += ` ${color}${logLevel.label}${color} (${fiberId_.threadName(fiberId)})`;\n    if (options.colors) {\n      firstParams.push(logLevelStyle[logLevel._tag], \"\");\n    }\n    if (List.isCons(spans)) {\n      const now = date.getTime();\n      const render = logSpan_.render(now);\n      for (const span of spans) {\n        firstLine += \" \" + render(span);\n      }\n    }\n    firstLine += \":\";\n    let messageIndex = 0;\n    if (message.length > 0) {\n      const firstMaybeString = structuredMessage(message[0]);\n      if (typeof firstMaybeString === \"string\") {\n        firstLine += ` ${color}${firstMaybeString}`;\n        if (options.colors) {\n          firstParams.push(\"color:deepskyblue\");\n        }\n        messageIndex++;\n      }\n    }\n    console.groupCollapsed(firstLine, ...firstParams);\n    if (!Cause.isEmpty(cause)) {\n      console.error(Cause.pretty(cause, {\n        renderErrorCause: true\n      }));\n    }\n    if (messageIndex < message.length) {\n      for (; messageIndex < message.length; messageIndex++) {\n        console.log(Inspectable.redact(message[messageIndex]));\n      }\n    }\n    if (HashMap.size(annotations) > 0) {\n      for (const [key, value] of annotations) {\n        const redacted = Inspectable.redact(value);\n        if (options.colors) {\n          console.log(`%c${key}:`, \"color:gray\", redacted);\n        } else {\n          console.log(`${key}:`, redacted);\n        }\n      }\n    }\n    console.groupEnd();\n  });\n};\n/** @internal */\nexport const prettyLoggerDefault = /*#__PURE__*/globalValue(\"effect/Logger/prettyLoggerDefault\", () => prettyLogger());\n//# sourceMappingURL=logger.js.map","import * as Arr from \"../../Array.js\";\nimport * as Chunk from \"../../Chunk.js\";\nimport * as Equal from \"../../Equal.js\";\nimport { pipe } from \"../../Function.js\";\nimport * as Hash from \"../../Hash.js\";\nimport { pipeArguments } from \"../../Pipeable.js\";\nimport { hasProperty } from \"../../Predicate.js\";\n/** @internal */\nconst MetricBoundariesSymbolKey = \"effect/MetricBoundaries\";\n/** @internal */\nexport const MetricBoundariesTypeId = /*#__PURE__*/Symbol.for(MetricBoundariesSymbolKey);\n/** @internal */\nclass MetricBoundariesImpl {\n  values;\n  [MetricBoundariesTypeId] = MetricBoundariesTypeId;\n  constructor(values) {\n    this.values = values;\n    this._hash = pipe(Hash.string(MetricBoundariesSymbolKey), Hash.combine(Hash.array(this.values)));\n  }\n  _hash;\n  [Hash.symbol]() {\n    return this._hash;\n  }\n  [Equal.symbol](u) {\n    return isMetricBoundaries(u) && Equal.equals(this.values, u.values);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport const isMetricBoundaries = u => hasProperty(u, MetricBoundariesTypeId);\n/** @internal */\nexport const fromIterable = iterable => {\n  const values = pipe(iterable, Arr.appendAll(Chunk.of(Number.POSITIVE_INFINITY)), Arr.dedupe);\n  return new MetricBoundariesImpl(values);\n};\n/** @internal */\nexport const linear = options => pipe(Arr.makeBy(options.count - 1, i => options.start + i * options.width), Chunk.unsafeFromArray, fromIterable);\n/** @internal */\nexport const exponential = options => pipe(Arr.makeBy(options.count - 1, i => options.start * Math.pow(options.factor, i)), Chunk.unsafeFromArray, fromIterable);\n//# sourceMappingURL=boundaries.js.map","import * as Duration from \"../../Duration.js\";\nimport * as Equal from \"../../Equal.js\";\nimport { pipe } from \"../../Function.js\";\nimport * as Hash from \"../../Hash.js\";\nimport { pipeArguments } from \"../../Pipeable.js\";\nimport { hasProperty } from \"../../Predicate.js\";\n/** @internal */\nconst MetricKeyTypeSymbolKey = \"effect/MetricKeyType\";\n/** @internal */\nexport const MetricKeyTypeTypeId = /*#__PURE__*/Symbol.for(MetricKeyTypeSymbolKey);\n/** @internal */\nconst CounterKeyTypeSymbolKey = \"effect/MetricKeyType/Counter\";\n/** @internal */\nexport const CounterKeyTypeTypeId = /*#__PURE__*/Symbol.for(CounterKeyTypeSymbolKey);\n/** @internal */\nconst FrequencyKeyTypeSymbolKey = \"effect/MetricKeyType/Frequency\";\n/** @internal */\nexport const FrequencyKeyTypeTypeId = /*#__PURE__*/Symbol.for(FrequencyKeyTypeSymbolKey);\n/** @internal */\nconst GaugeKeyTypeSymbolKey = \"effect/MetricKeyType/Gauge\";\n/** @internal */\nexport const GaugeKeyTypeTypeId = /*#__PURE__*/Symbol.for(GaugeKeyTypeSymbolKey);\n/** @internal */\nconst HistogramKeyTypeSymbolKey = \"effect/MetricKeyType/Histogram\";\n/** @internal */\nexport const HistogramKeyTypeTypeId = /*#__PURE__*/Symbol.for(HistogramKeyTypeSymbolKey);\n/** @internal */\nconst SummaryKeyTypeSymbolKey = \"effect/MetricKeyType/Summary\";\n/** @internal */\nexport const SummaryKeyTypeTypeId = /*#__PURE__*/Symbol.for(SummaryKeyTypeSymbolKey);\nconst metricKeyTypeVariance = {\n  /* c8 ignore next */\n  _In: _ => _,\n  /* c8 ignore next */\n  _Out: _ => _\n};\n/** @internal */\nclass CounterKeyType {\n  incremental;\n  bigint;\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [CounterKeyTypeTypeId] = CounterKeyTypeTypeId;\n  constructor(incremental, bigint) {\n    this.incremental = incremental;\n    this.bigint = bigint;\n    this._hash = Hash.string(CounterKeyTypeSymbolKey);\n  }\n  _hash;\n  [Hash.symbol]() {\n    return this._hash;\n  }\n  [Equal.symbol](that) {\n    return isCounterKey(that);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\nconst FrequencyKeyTypeHash = /*#__PURE__*/Hash.string(FrequencyKeyTypeSymbolKey);\n/** @internal */\nclass FrequencyKeyType {\n  preregisteredWords;\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [FrequencyKeyTypeTypeId] = FrequencyKeyTypeTypeId;\n  constructor(preregisteredWords) {\n    this.preregisteredWords = preregisteredWords;\n  }\n  [Hash.symbol]() {\n    return FrequencyKeyTypeHash;\n  }\n  [Equal.symbol](that) {\n    return isFrequencyKey(that);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\nconst GaugeKeyTypeHash = /*#__PURE__*/Hash.string(GaugeKeyTypeSymbolKey);\n/** @internal */\nclass GaugeKeyType {\n  bigint;\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [GaugeKeyTypeTypeId] = GaugeKeyTypeTypeId;\n  constructor(bigint) {\n    this.bigint = bigint;\n  }\n  [Hash.symbol]() {\n    return GaugeKeyTypeHash;\n  }\n  [Equal.symbol](that) {\n    return isGaugeKey(that);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport class HistogramKeyType {\n  boundaries;\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [HistogramKeyTypeTypeId] = HistogramKeyTypeTypeId;\n  constructor(boundaries) {\n    this.boundaries = boundaries;\n    this._hash = pipe(Hash.string(HistogramKeyTypeSymbolKey), Hash.combine(Hash.hash(this.boundaries)));\n  }\n  _hash;\n  [Hash.symbol]() {\n    return this._hash;\n  }\n  [Equal.symbol](that) {\n    return isHistogramKey(that) && Equal.equals(this.boundaries, that.boundaries);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nclass SummaryKeyType {\n  maxAge;\n  maxSize;\n  error;\n  quantiles;\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [SummaryKeyTypeTypeId] = SummaryKeyTypeTypeId;\n  constructor(maxAge, maxSize, error, quantiles) {\n    this.maxAge = maxAge;\n    this.maxSize = maxSize;\n    this.error = error;\n    this.quantiles = quantiles;\n    this._hash = pipe(Hash.string(SummaryKeyTypeSymbolKey), Hash.combine(Hash.hash(this.maxAge)), Hash.combine(Hash.hash(this.maxSize)), Hash.combine(Hash.hash(this.error)), Hash.combine(Hash.array(this.quantiles)));\n  }\n  _hash;\n  [Hash.symbol]() {\n    return this._hash;\n  }\n  [Equal.symbol](that) {\n    return isSummaryKey(that) && Equal.equals(this.maxAge, that.maxAge) && this.maxSize === that.maxSize && this.error === that.error && Equal.equals(this.quantiles, that.quantiles);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport const counter = options => new CounterKeyType(options?.incremental ?? false, options?.bigint ?? false);\n/** @internal */\nexport const frequency = options => new FrequencyKeyType(options?.preregisteredWords ?? []);\n/** @internal */\nexport const gauge = options => new GaugeKeyType(options?.bigint ?? false);\n/** @internal */\nexport const histogram = boundaries => {\n  return new HistogramKeyType(boundaries);\n};\n/** @internal */\nexport const summary = options => {\n  return new SummaryKeyType(Duration.decode(options.maxAge), options.maxSize, options.error, options.quantiles);\n};\n/** @internal */\nexport const isMetricKeyType = u => hasProperty(u, MetricKeyTypeTypeId);\n/** @internal */\nexport const isCounterKey = u => hasProperty(u, CounterKeyTypeTypeId);\n/** @internal */\nexport const isFrequencyKey = u => hasProperty(u, FrequencyKeyTypeTypeId);\n/** @internal */\nexport const isGaugeKey = u => hasProperty(u, GaugeKeyTypeTypeId);\n/** @internal */\nexport const isHistogramKey = u => hasProperty(u, HistogramKeyTypeTypeId);\n/** @internal */\nexport const isSummaryKey = u => hasProperty(u, SummaryKeyTypeTypeId);\n//# sourceMappingURL=keyType.js.map","import * as Arr from \"../../Array.js\";\nimport * as Equal from \"../../Equal.js\";\nimport { dual, pipe } from \"../../Function.js\";\nimport * as Hash from \"../../Hash.js\";\nimport * as Option from \"../../Option.js\";\nimport { pipeArguments } from \"../../Pipeable.js\";\nimport { hasProperty } from \"../../Predicate.js\";\nimport * as metricKeyType from \"./keyType.js\";\nimport * as metricLabel from \"./label.js\";\n/** @internal */\nconst MetricKeySymbolKey = \"effect/MetricKey\";\n/** @internal */\nexport const MetricKeyTypeId = /*#__PURE__*/Symbol.for(MetricKeySymbolKey);\nconst metricKeyVariance = {\n  /* c8 ignore next */\n  _Type: _ => _\n};\nconst arrayEquivilence = /*#__PURE__*/Arr.getEquivalence(Equal.equals);\n/** @internal */\nclass MetricKeyImpl {\n  name;\n  keyType;\n  description;\n  tags;\n  [MetricKeyTypeId] = metricKeyVariance;\n  constructor(name, keyType, description, tags = []) {\n    this.name = name;\n    this.keyType = keyType;\n    this.description = description;\n    this.tags = tags;\n    this._hash = pipe(Hash.string(this.name + this.description), Hash.combine(Hash.hash(this.keyType)), Hash.combine(Hash.array(this.tags)));\n  }\n  _hash;\n  [Hash.symbol]() {\n    return this._hash;\n  }\n  [Equal.symbol](u) {\n    return isMetricKey(u) && this.name === u.name && Equal.equals(this.keyType, u.keyType) && Equal.equals(this.description, u.description) && arrayEquivilence(this.tags, u.tags);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport const isMetricKey = u => hasProperty(u, MetricKeyTypeId);\n/** @internal */\nexport const counter = (name, options) => new MetricKeyImpl(name, metricKeyType.counter(options), Option.fromNullable(options?.description));\n/** @internal */\nexport const frequency = (name, options) => new MetricKeyImpl(name, metricKeyType.frequency(options), Option.fromNullable(options?.description));\n/** @internal */\nexport const gauge = (name, options) => new MetricKeyImpl(name, metricKeyType.gauge(options), Option.fromNullable(options?.description));\n/** @internal */\nexport const histogram = (name, boundaries, description) => new MetricKeyImpl(name, metricKeyType.histogram(boundaries), Option.fromNullable(description));\n/** @internal */\nexport const summary = options => new MetricKeyImpl(options.name, metricKeyType.summary(options), Option.fromNullable(options.description));\n/** @internal */\nexport const tagged = /*#__PURE__*/dual(3, (self, key, value) => taggedWithLabels(self, [metricLabel.make(key, value)]));\n/** @internal */\nexport const taggedWithLabels = /*#__PURE__*/dual(2, (self, extraTags) => extraTags.length === 0 ? self : new MetricKeyImpl(self.name, self.keyType, self.description, Arr.union(self.tags, extraTags)));\n//# sourceMappingURL=key.js.map","import * as Arr from \"../../Array.js\";\nimport * as Equal from \"../../Equal.js\";\nimport { pipe } from \"../../Function.js\";\nimport * as Hash from \"../../Hash.js\";\nimport { pipeArguments } from \"../../Pipeable.js\";\nimport { hasProperty } from \"../../Predicate.js\";\n/** @internal */\nconst MetricStateSymbolKey = \"effect/MetricState\";\n/** @internal */\nexport const MetricStateTypeId = /*#__PURE__*/Symbol.for(MetricStateSymbolKey);\n/** @internal */\nconst CounterStateSymbolKey = \"effect/MetricState/Counter\";\n/** @internal */\nexport const CounterStateTypeId = /*#__PURE__*/Symbol.for(CounterStateSymbolKey);\n/** @internal */\nconst FrequencyStateSymbolKey = \"effect/MetricState/Frequency\";\n/** @internal */\nexport const FrequencyStateTypeId = /*#__PURE__*/Symbol.for(FrequencyStateSymbolKey);\n/** @internal */\nconst GaugeStateSymbolKey = \"effect/MetricState/Gauge\";\n/** @internal */\nexport const GaugeStateTypeId = /*#__PURE__*/Symbol.for(GaugeStateSymbolKey);\n/** @internal */\nconst HistogramStateSymbolKey = \"effect/MetricState/Histogram\";\n/** @internal */\nexport const HistogramStateTypeId = /*#__PURE__*/Symbol.for(HistogramStateSymbolKey);\n/** @internal */\nconst SummaryStateSymbolKey = \"effect/MetricState/Summary\";\n/** @internal */\nexport const SummaryStateTypeId = /*#__PURE__*/Symbol.for(SummaryStateSymbolKey);\nconst metricStateVariance = {\n  /* c8 ignore next */\n  _A: _ => _\n};\n/** @internal */\nclass CounterState {\n  count;\n  [MetricStateTypeId] = metricStateVariance;\n  [CounterStateTypeId] = CounterStateTypeId;\n  constructor(count) {\n    this.count = count;\n  }\n  [Hash.symbol]() {\n    return pipe(Hash.hash(CounterStateSymbolKey), Hash.combine(Hash.hash(this.count)), Hash.cached(this));\n  }\n  [Equal.symbol](that) {\n    return isCounterState(that) && this.count === that.count;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\nconst arrayEquals = /*#__PURE__*/Arr.getEquivalence(Equal.equals);\n/** @internal */\nclass FrequencyState {\n  occurrences;\n  [MetricStateTypeId] = metricStateVariance;\n  [FrequencyStateTypeId] = FrequencyStateTypeId;\n  constructor(occurrences) {\n    this.occurrences = occurrences;\n  }\n  _hash;\n  [Hash.symbol]() {\n    return pipe(Hash.string(FrequencyStateSymbolKey), Hash.combine(Hash.array(Arr.fromIterable(this.occurrences.entries()))), Hash.cached(this));\n  }\n  [Equal.symbol](that) {\n    return isFrequencyState(that) && arrayEquals(Arr.fromIterable(this.occurrences.entries()), Arr.fromIterable(that.occurrences.entries()));\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nclass GaugeState {\n  value;\n  [MetricStateTypeId] = metricStateVariance;\n  [GaugeStateTypeId] = GaugeStateTypeId;\n  constructor(value) {\n    this.value = value;\n  }\n  [Hash.symbol]() {\n    return pipe(Hash.hash(GaugeStateSymbolKey), Hash.combine(Hash.hash(this.value)), Hash.cached(this));\n  }\n  [Equal.symbol](u) {\n    return isGaugeState(u) && this.value === u.value;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport class HistogramState {\n  buckets;\n  count;\n  min;\n  max;\n  sum;\n  [MetricStateTypeId] = metricStateVariance;\n  [HistogramStateTypeId] = HistogramStateTypeId;\n  constructor(buckets, count, min, max, sum) {\n    this.buckets = buckets;\n    this.count = count;\n    this.min = min;\n    this.max = max;\n    this.sum = sum;\n  }\n  [Hash.symbol]() {\n    return pipe(Hash.hash(HistogramStateSymbolKey), Hash.combine(Hash.hash(this.buckets)), Hash.combine(Hash.hash(this.count)), Hash.combine(Hash.hash(this.min)), Hash.combine(Hash.hash(this.max)), Hash.combine(Hash.hash(this.sum)), Hash.cached(this));\n  }\n  [Equal.symbol](that) {\n    return isHistogramState(that) && Equal.equals(this.buckets, that.buckets) && this.count === that.count && this.min === that.min && this.max === that.max && this.sum === that.sum;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport class SummaryState {\n  error;\n  quantiles;\n  count;\n  min;\n  max;\n  sum;\n  [MetricStateTypeId] = metricStateVariance;\n  [SummaryStateTypeId] = SummaryStateTypeId;\n  constructor(error, quantiles, count, min, max, sum) {\n    this.error = error;\n    this.quantiles = quantiles;\n    this.count = count;\n    this.min = min;\n    this.max = max;\n    this.sum = sum;\n  }\n  [Hash.symbol]() {\n    return pipe(Hash.hash(SummaryStateSymbolKey), Hash.combine(Hash.hash(this.error)), Hash.combine(Hash.hash(this.quantiles)), Hash.combine(Hash.hash(this.count)), Hash.combine(Hash.hash(this.min)), Hash.combine(Hash.hash(this.max)), Hash.combine(Hash.hash(this.sum)), Hash.cached(this));\n  }\n  [Equal.symbol](that) {\n    return isSummaryState(that) && this.error === that.error && Equal.equals(this.quantiles, that.quantiles) && this.count === that.count && this.min === that.min && this.max === that.max && this.sum === that.sum;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport const counter = count => new CounterState(count);\n/** @internal */\nexport const frequency = occurrences => {\n  return new FrequencyState(occurrences);\n};\n/** @internal */\nexport const gauge = count => new GaugeState(count);\n/** @internal */\nexport const histogram = options => new HistogramState(options.buckets, options.count, options.min, options.max, options.sum);\n/** @internal */\nexport const summary = options => new SummaryState(options.error, options.quantiles, options.count, options.min, options.max, options.sum);\n/** @internal */\nexport const isMetricState = u => hasProperty(u, MetricStateTypeId);\n/** @internal */\nexport const isCounterState = u => hasProperty(u, CounterStateTypeId);\n/**\n * @since 2.0.0\n * @category refinements\n */\nexport const isFrequencyState = u => hasProperty(u, FrequencyStateTypeId);\n/**\n * @since 2.0.0\n * @category refinements\n */\nexport const isGaugeState = u => hasProperty(u, GaugeStateTypeId);\n/**\n * @since 2.0.0\n * @category refinements\n */\nexport const isHistogramState = u => hasProperty(u, HistogramStateTypeId);\n/**\n * @since 2.0.0\n * @category refinements\n */\nexport const isSummaryState = u => hasProperty(u, SummaryStateTypeId);\n//# sourceMappingURL=state.js.map","import * as Arr from \"../../Array.js\";\nimport * as Duration from \"../../Duration.js\";\nimport { dual, pipe } from \"../../Function.js\";\nimport * as number from \"../../Number.js\";\nimport * as Option from \"../../Option.js\";\nimport { pipeArguments } from \"../../Pipeable.js\";\nimport * as metricState from \"./state.js\";\n/** @internal */\nconst MetricHookSymbolKey = \"effect/MetricHook\";\n/** @internal */\nexport const MetricHookTypeId = /*#__PURE__*/Symbol.for(MetricHookSymbolKey);\nconst metricHookVariance = {\n  /* c8 ignore next */\n  _In: _ => _,\n  /* c8 ignore next */\n  _Out: _ => _\n};\n/** @internal */\nexport const make = options => ({\n  [MetricHookTypeId]: metricHookVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  ...options\n});\n/** @internal */\nexport const onModify = /*#__PURE__*/dual(2, (self, f) => ({\n  [MetricHookTypeId]: metricHookVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  get: self.get,\n  update: self.update,\n  modify: input => {\n    self.modify(input);\n    return f(input);\n  }\n}));\n/** @internal */\nexport const onUpdate = /*#__PURE__*/dual(2, (self, f) => ({\n  [MetricHookTypeId]: metricHookVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  get: self.get,\n  update: input => {\n    self.update(input);\n    return f(input);\n  },\n  modify: self.modify\n}));\nconst bigint0 = /*#__PURE__*/BigInt(0);\n/** @internal */\nexport const counter = key => {\n  let sum = key.keyType.bigint ? bigint0 : 0;\n  const canUpdate = key.keyType.incremental ? key.keyType.bigint ? value => value >= bigint0 : value => value >= 0 : _value => true;\n  const update = value => {\n    if (canUpdate(value)) {\n      sum = sum + value;\n    }\n  };\n  return make({\n    get: () => metricState.counter(sum),\n    update,\n    modify: update\n  });\n};\n/** @internal */\nexport const frequency = key => {\n  const values = new Map();\n  for (const word of key.keyType.preregisteredWords) {\n    values.set(word, 0);\n  }\n  const update = word => {\n    const slotCount = values.get(word) ?? 0;\n    values.set(word, slotCount + 1);\n  };\n  return make({\n    get: () => metricState.frequency(values),\n    update,\n    modify: update\n  });\n};\n/** @internal */\nexport const gauge = (_key, startAt) => {\n  let value = startAt;\n  return make({\n    get: () => metricState.gauge(value),\n    update: v => {\n      value = v;\n    },\n    modify: v => {\n      value = value + v;\n    }\n  });\n};\n/** @internal */\nexport const histogram = key => {\n  const bounds = key.keyType.boundaries.values;\n  const size = bounds.length;\n  const values = new Uint32Array(size + 1);\n  const boundaries = new Float32Array(size);\n  let count = 0;\n  let sum = 0;\n  let min = Number.MAX_VALUE;\n  let max = Number.MIN_VALUE;\n  pipe(bounds, Arr.sort(number.Order), Arr.map((n, i) => {\n    boundaries[i] = n;\n  }));\n  // Insert the value into the right bucket with a binary search\n  const update = value => {\n    let from = 0;\n    let to = size;\n    while (from !== to) {\n      const mid = Math.floor(from + (to - from) / 2);\n      const boundary = boundaries[mid];\n      if (value <= boundary) {\n        to = mid;\n      } else {\n        from = mid;\n      }\n      // The special case when to / from have a distance of one\n      if (to === from + 1) {\n        if (value <= boundaries[from]) {\n          to = from;\n        } else {\n          from = to;\n        }\n      }\n    }\n    values[from] = values[from] + 1;\n    count = count + 1;\n    sum = sum + value;\n    if (value < min) {\n      min = value;\n    }\n    if (value > max) {\n      max = value;\n    }\n  };\n  const getBuckets = () => {\n    const builder = Arr.allocate(size);\n    let cumulated = 0;\n    for (let i = 0; i < size; i++) {\n      const boundary = boundaries[i];\n      const value = values[i];\n      cumulated = cumulated + value;\n      builder[i] = [boundary, cumulated];\n    }\n    return builder;\n  };\n  return make({\n    get: () => metricState.histogram({\n      buckets: getBuckets(),\n      count,\n      min,\n      max,\n      sum\n    }),\n    update,\n    modify: update\n  });\n};\n/** @internal */\nexport const summary = key => {\n  const {\n    error,\n    maxAge,\n    maxSize,\n    quantiles\n  } = key.keyType;\n  const sortedQuantiles = pipe(quantiles, Arr.sort(number.Order));\n  const values = Arr.allocate(maxSize);\n  let head = 0;\n  let count = 0;\n  let sum = 0;\n  let min = Number.MAX_VALUE;\n  let max = Number.MIN_VALUE;\n  // Just before the snapshot we filter out all values older than maxAge\n  const snapshot = now => {\n    const builder = [];\n    // If the buffer is not full yet it contains valid items at the 0..last\n    // indices and null values at the rest of the positions.\n    //\n    // If the buffer is already full then all elements contains a valid\n    // measurement with timestamp.\n    //\n    // At any given point in time we can enumerate all the non-null elements in\n    // the buffer and filter them by timestamp to get a valid view of a time\n    // window.\n    //\n    // The order does not matter because it gets sorted before passing to\n    // `calculateQuantiles`.\n    let i = 0;\n    while (i !== maxSize - 1) {\n      const item = values[i];\n      if (item != null) {\n        const [t, v] = item;\n        const age = Duration.millis(now - t);\n        if (Duration.greaterThanOrEqualTo(age, Duration.zero) && Duration.lessThanOrEqualTo(age, maxAge)) {\n          builder.push(v);\n        }\n      }\n      i = i + 1;\n    }\n    return calculateQuantiles(error, sortedQuantiles, Arr.sort(builder, number.Order));\n  };\n  const observe = (value, timestamp) => {\n    if (maxSize > 0) {\n      head = head + 1;\n      const target = head % maxSize;\n      values[target] = [timestamp, value];\n    }\n    count = count + 1;\n    sum = sum + value;\n    if (value < min) {\n      min = value;\n    }\n    if (value > max) {\n      max = value;\n    }\n  };\n  return make({\n    get: () => metricState.summary({\n      error,\n      quantiles: snapshot(Date.now()),\n      count,\n      min,\n      max,\n      sum\n    }),\n    update: ([value, timestamp]) => observe(value, timestamp),\n    modify: ([value, timestamp]) => observe(value, timestamp)\n  });\n};\n/** @internal */\nconst calculateQuantiles = (error, sortedQuantiles, sortedSamples) => {\n  // The number of samples examined\n  const sampleCount = sortedSamples.length;\n  if (!Arr.isNonEmptyReadonlyArray(sortedQuantiles)) {\n    return Arr.empty();\n  }\n  const head = sortedQuantiles[0];\n  const tail = sortedQuantiles.slice(1);\n  const resolvedHead = resolveQuantile(error, sampleCount, Option.none(), 0, head, sortedSamples);\n  const resolved = Arr.of(resolvedHead);\n  tail.forEach(quantile => {\n    resolved.push(resolveQuantile(error, sampleCount, resolvedHead.value, resolvedHead.consumed, quantile, resolvedHead.rest));\n  });\n  return Arr.map(resolved, rq => [rq.quantile, rq.value]);\n};\n/** @internal */\nconst resolveQuantile = (error, sampleCount, current, consumed, quantile, rest) => {\n  let error_1 = error;\n  let sampleCount_1 = sampleCount;\n  let current_1 = current;\n  let consumed_1 = consumed;\n  let quantile_1 = quantile;\n  let rest_1 = rest;\n  let error_2 = error;\n  let sampleCount_2 = sampleCount;\n  let current_2 = current;\n  let consumed_2 = consumed;\n  let quantile_2 = quantile;\n  let rest_2 = rest;\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    // If the remaining list of samples is empty, there is nothing more to resolve\n    if (!Arr.isNonEmptyReadonlyArray(rest_1)) {\n      return {\n        quantile: quantile_1,\n        value: Option.none(),\n        consumed: consumed_1,\n        rest: []\n      };\n    }\n    // If the quantile is the 100% quantile, we can take the maximum of all the\n    // remaining values as the result\n    if (quantile_1 === 1) {\n      return {\n        quantile: quantile_1,\n        value: Option.some(Arr.lastNonEmpty(rest_1)),\n        consumed: consumed_1 + rest_1.length,\n        rest: []\n      };\n    }\n    // Split into two chunks - the first chunk contains all elements of the same\n    // value as the chunk head\n    const headValue = Arr.headNonEmpty(rest_1); // Get head value since rest_1 is non-empty\n    const sameHead = Arr.span(rest_1, n => n === headValue);\n    // How many elements do we want to accept for this quantile\n    const desired = quantile_1 * sampleCount_1;\n    // The error margin\n    const allowedError = error_1 / 2 * desired;\n    // Taking into account the elements consumed from the samples so far and the\n    // number of same elements at the beginning of the chunk, calculate the number\n    // of elements we would have if we selected the current head as result\n    const candConsumed = consumed_1 + sameHead[0].length;\n    const candError = Math.abs(candConsumed - desired);\n    // If we haven't got enough elements yet, recurse\n    if (candConsumed < desired - allowedError) {\n      error_2 = error_1;\n      sampleCount_2 = sampleCount_1;\n      current_2 = Arr.head(rest_1);\n      consumed_2 = candConsumed;\n      quantile_2 = quantile_1;\n      rest_2 = sameHead[1];\n      error_1 = error_2;\n      sampleCount_1 = sampleCount_2;\n      current_1 = current_2;\n      consumed_1 = consumed_2;\n      quantile_1 = quantile_2;\n      rest_1 = rest_2;\n      continue;\n    }\n    // If consuming this chunk leads to too many elements (rank is too high)\n    if (candConsumed > desired + allowedError) {\n      const valueToReturn = Option.isNone(current_1) ? Option.some(headValue) : current_1;\n      return {\n        quantile: quantile_1,\n        value: valueToReturn,\n        consumed: consumed_1,\n        rest: rest_1\n      };\n    }\n    // If we are in the target interval, select the current head and hand back the leftover after dropping all elements\n    // from the sample chunk that are equal to the current head\n    switch (current_1._tag) {\n      case \"None\":\n        {\n          error_2 = error_1;\n          sampleCount_2 = sampleCount_1;\n          current_2 = Arr.head(rest_1);\n          consumed_2 = candConsumed;\n          quantile_2 = quantile_1;\n          rest_2 = sameHead[1];\n          error_1 = error_2;\n          sampleCount_1 = sampleCount_2;\n          current_1 = current_2;\n          consumed_1 = consumed_2;\n          quantile_1 = quantile_2;\n          rest_1 = rest_2;\n          continue;\n        }\n      case \"Some\":\n        {\n          const prevError = Math.abs(desired - current_1.value);\n          if (candError < prevError) {\n            error_2 = error_1;\n            sampleCount_2 = sampleCount_1;\n            current_2 = Arr.head(rest_1);\n            consumed_2 = candConsumed;\n            quantile_2 = quantile_1;\n            rest_2 = sameHead[1];\n            error_1 = error_2;\n            sampleCount_1 = sampleCount_2;\n            current_1 = current_2;\n            consumed_1 = consumed_2;\n            quantile_1 = quantile_2;\n            rest_1 = rest_2;\n            continue;\n          }\n          return {\n            quantile: quantile_1,\n            value: Option.some(current_1.value),\n            consumed: consumed_1,\n            rest: rest_1\n          };\n        }\n    }\n  }\n  throw new Error(\"BUG: MetricHook.resolveQuantiles - please report an issue at https://github.com/Effect-TS/effect/issues\");\n};\n//# sourceMappingURL=hook.js.map","import { pipeArguments } from \"../../Pipeable.js\";\n/** @internal */\nconst MetricPairSymbolKey = \"effect/MetricPair\";\n/** @internal */\nexport const MetricPairTypeId = /*#__PURE__*/Symbol.for(MetricPairSymbolKey);\nconst metricPairVariance = {\n  /* c8 ignore next */\n  _Type: _ => _\n};\n/** @internal */\nexport const make = (metricKey, metricState) => {\n  return {\n    [MetricPairTypeId]: metricPairVariance,\n    metricKey,\n    metricState,\n    pipe() {\n      return pipeArguments(this, arguments);\n    }\n  };\n};\n/** @internal */\nexport const unsafeMake = (metricKey, metricState) => {\n  return {\n    [MetricPairTypeId]: metricPairVariance,\n    metricKey,\n    metricState,\n    pipe() {\n      return pipeArguments(this, arguments);\n    }\n  };\n};\n//# sourceMappingURL=pair.js.map","import { pipe } from \"../../Function.js\";\nimport * as MutableHashMap from \"../../MutableHashMap.js\";\nimport * as Option from \"../../Option.js\";\nimport * as metricHook from \"./hook.js\";\nimport * as metricKeyType from \"./keyType.js\";\nimport * as metricPair from \"./pair.js\";\n/** @internal */\nconst MetricRegistrySymbolKey = \"effect/MetricRegistry\";\n/** @internal */\nexport const MetricRegistryTypeId = /*#__PURE__*/Symbol.for(MetricRegistrySymbolKey);\n/** @internal */\nclass MetricRegistryImpl {\n  [MetricRegistryTypeId] = MetricRegistryTypeId;\n  map = /*#__PURE__*/MutableHashMap.empty();\n  snapshot() {\n    const result = [];\n    for (const [key, hook] of this.map) {\n      result.push(metricPair.unsafeMake(key, hook.get()));\n    }\n    return result;\n  }\n  get(key) {\n    const hook = pipe(this.map, MutableHashMap.get(key), Option.getOrUndefined);\n    if (hook == null) {\n      if (metricKeyType.isCounterKey(key.keyType)) {\n        return this.getCounter(key);\n      }\n      if (metricKeyType.isGaugeKey(key.keyType)) {\n        return this.getGauge(key);\n      }\n      if (metricKeyType.isFrequencyKey(key.keyType)) {\n        return this.getFrequency(key);\n      }\n      if (metricKeyType.isHistogramKey(key.keyType)) {\n        return this.getHistogram(key);\n      }\n      if (metricKeyType.isSummaryKey(key.keyType)) {\n        return this.getSummary(key);\n      }\n      throw new Error(\"BUG: MetricRegistry.get - unknown MetricKeyType - please report an issue at https://github.com/Effect-TS/effect/issues\");\n    } else {\n      return hook;\n    }\n  }\n  getCounter(key) {\n    let value = pipe(this.map, MutableHashMap.get(key), Option.getOrUndefined);\n    if (value == null) {\n      const counter = metricHook.counter(key);\n      if (!pipe(this.map, MutableHashMap.has(key))) {\n        pipe(this.map, MutableHashMap.set(key, counter));\n      }\n      value = counter;\n    }\n    return value;\n  }\n  getFrequency(key) {\n    let value = pipe(this.map, MutableHashMap.get(key), Option.getOrUndefined);\n    if (value == null) {\n      const frequency = metricHook.frequency(key);\n      if (!pipe(this.map, MutableHashMap.has(key))) {\n        pipe(this.map, MutableHashMap.set(key, frequency));\n      }\n      value = frequency;\n    }\n    return value;\n  }\n  getGauge(key) {\n    let value = pipe(this.map, MutableHashMap.get(key), Option.getOrUndefined);\n    if (value == null) {\n      const gauge = metricHook.gauge(key, key.keyType.bigint ? BigInt(0) : 0);\n      if (!pipe(this.map, MutableHashMap.has(key))) {\n        pipe(this.map, MutableHashMap.set(key, gauge));\n      }\n      value = gauge;\n    }\n    return value;\n  }\n  getHistogram(key) {\n    let value = pipe(this.map, MutableHashMap.get(key), Option.getOrUndefined);\n    if (value == null) {\n      const histogram = metricHook.histogram(key);\n      if (!pipe(this.map, MutableHashMap.has(key))) {\n        pipe(this.map, MutableHashMap.set(key, histogram));\n      }\n      value = histogram;\n    }\n    return value;\n  }\n  getSummary(key) {\n    let value = pipe(this.map, MutableHashMap.get(key), Option.getOrUndefined);\n    if (value == null) {\n      const summary = metricHook.summary(key);\n      if (!pipe(this.map, MutableHashMap.has(key))) {\n        pipe(this.map, MutableHashMap.set(key, summary));\n      }\n      value = summary;\n    }\n    return value;\n  }\n}\n/** @internal */\nexport const make = () => {\n  return new MetricRegistryImpl();\n};\n//# sourceMappingURL=registry.js.map","import * as Arr from \"../Array.js\";\nimport * as Clock from \"../Clock.js\";\nimport * as Duration from \"../Duration.js\";\nimport { constVoid, dual, identity, pipe } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport * as Cause from \"./cause.js\";\nimport * as effect_ from \"./core-effect.js\";\nimport * as core from \"./core.js\";\nimport * as metricBoundaries from \"./metric/boundaries.js\";\nimport * as metricKey from \"./metric/key.js\";\nimport * as metricKeyType from \"./metric/keyType.js\";\nimport * as metricLabel from \"./metric/label.js\";\nimport * as metricRegistry from \"./metric/registry.js\";\n/** @internal */\nconst MetricSymbolKey = \"effect/Metric\";\n/** @internal */\nexport const MetricTypeId = /*#__PURE__*/Symbol.for(MetricSymbolKey);\nconst metricVariance = {\n  /* c8 ignore next */\n  _Type: _ => _,\n  /* c8 ignore next */\n  _In: _ => _,\n  /* c8 ignore next */\n  _Out: _ => _\n};\n/** @internal */\nexport const globalMetricRegistry = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Metric/globalMetricRegistry\"), () => metricRegistry.make());\n/** @internal */\nexport const make = function (keyType, unsafeUpdate, unsafeValue, unsafeModify) {\n  const metric = Object.assign(effect => core.tap(effect, a => update(metric, a)), {\n    [MetricTypeId]: metricVariance,\n    keyType,\n    unsafeUpdate,\n    unsafeValue,\n    unsafeModify,\n    register() {\n      this.unsafeValue([]);\n      return this;\n    },\n    pipe() {\n      return pipeArguments(this, arguments);\n    }\n  });\n  return metric;\n};\n/** @internal */\nexport const mapInput = /*#__PURE__*/dual(2, (self, f) => make(self.keyType, (input, extraTags) => self.unsafeUpdate(f(input), extraTags), self.unsafeValue, (input, extraTags) => self.unsafeModify(f(input), extraTags)));\n/** @internal */\nexport const counter = (name, options) => fromMetricKey(metricKey.counter(name, options));\n/** @internal */\nexport const frequency = (name, options) => fromMetricKey(metricKey.frequency(name, options));\n/** @internal */\nexport const withConstantInput = /*#__PURE__*/dual(2, (self, input) => mapInput(self, () => input));\n/** @internal */\nexport const fromMetricKey = key => {\n  let untaggedHook;\n  const hookCache = new WeakMap();\n  const hook = extraTags => {\n    if (extraTags.length === 0) {\n      if (untaggedHook !== undefined) {\n        return untaggedHook;\n      }\n      untaggedHook = globalMetricRegistry.get(key);\n      return untaggedHook;\n    }\n    let hook = hookCache.get(extraTags);\n    if (hook !== undefined) {\n      return hook;\n    }\n    hook = globalMetricRegistry.get(metricKey.taggedWithLabels(key, extraTags));\n    hookCache.set(extraTags, hook);\n    return hook;\n  };\n  return make(key.keyType, (input, extraTags) => hook(extraTags).update(input), extraTags => hook(extraTags).get(), (input, extraTags) => hook(extraTags).modify(input));\n};\n/** @internal */\nexport const gauge = (name, options) => fromMetricKey(metricKey.gauge(name, options));\n/** @internal */\nexport const histogram = (name, boundaries, description) => fromMetricKey(metricKey.histogram(name, boundaries, description));\n/* @internal */\nexport const increment = self => metricKeyType.isCounterKey(self.keyType) ? update(self, self.keyType.bigint ? BigInt(1) : 1) : modify(self, self.keyType.bigint ? BigInt(1) : 1);\n/* @internal */\nexport const incrementBy = /*#__PURE__*/dual(2, (self, amount) => metricKeyType.isCounterKey(self.keyType) ? update(self, amount) : modify(self, amount));\n/** @internal */\nexport const map = /*#__PURE__*/dual(2, (self, f) => make(self.keyType, self.unsafeUpdate, extraTags => f(self.unsafeValue(extraTags)), self.unsafeModify));\n/** @internal */\nexport const mapType = /*#__PURE__*/dual(2, (self, f) => make(f(self.keyType), self.unsafeUpdate, self.unsafeValue, self.unsafeModify));\n/** @internal */\nexport const modify = /*#__PURE__*/dual(2, (self, input) => core.fiberRefGetWith(core.currentMetricLabels, tags => core.sync(() => self.unsafeModify(input, tags))));\n/* @internal */\nexport const set = /*#__PURE__*/dual(2, (self, value) => update(self, value));\n/** @internal */\nexport const succeed = out => make(void 0, constVoid, () => out, constVoid);\n/** @internal */\nexport const sync = evaluate => make(void 0, constVoid, evaluate, constVoid);\n/** @internal */\nexport const summary = options => withNow(summaryTimestamp(options));\n/** @internal */\nexport const summaryTimestamp = options => fromMetricKey(metricKey.summary(options));\n/** @internal */\nexport const tagged = /*#__PURE__*/dual(3, (self, key, value) => taggedWithLabels(self, [metricLabel.make(key, value)]));\n/** @internal */\nexport const taggedWithLabelsInput = /*#__PURE__*/dual(2, (self, f) => map(make(self.keyType, (input, extraTags) => self.unsafeUpdate(input, Arr.union(f(input), extraTags)), self.unsafeValue, (input, extraTags) => self.unsafeModify(input, Arr.union(f(input), extraTags))), constVoid));\n/** @internal */\nexport const taggedWithLabels = /*#__PURE__*/dual(2, (self, extraTags) => {\n  return make(self.keyType, (input, extraTags1) => self.unsafeUpdate(input, Arr.union(extraTags, extraTags1)), extraTags1 => self.unsafeValue(Arr.union(extraTags, extraTags1)), (input, extraTags1) => self.unsafeModify(input, Arr.union(extraTags, extraTags1)));\n});\n/** @internal */\nexport const timer = (name, description) => {\n  const boundaries = metricBoundaries.exponential({\n    start: 0.5,\n    factor: 2,\n    count: 35\n  });\n  const base = pipe(histogram(name, boundaries, description), tagged(\"time_unit\", \"milliseconds\"));\n  return mapInput(base, Duration.toMillis);\n};\n/** @internal */\nexport const timerWithBoundaries = (name, boundaries, description) => {\n  const base = pipe(histogram(name, metricBoundaries.fromIterable(boundaries), description), tagged(\"time_unit\", \"milliseconds\"));\n  return mapInput(base, Duration.toMillis);\n};\n/* @internal */\nexport const trackAll = /*#__PURE__*/dual(2, (self, input) => effect => core.matchCauseEffect(effect, {\n  onFailure: cause => core.zipRight(update(self, input), core.failCause(cause)),\n  onSuccess: value => core.zipRight(update(self, input), core.succeed(value))\n}));\n/* @internal */\nexport const trackDefect = /*#__PURE__*/dual(2, (self, metric) => trackDefectWith(self, metric, identity));\n/* @internal */\nexport const trackDefectWith = /*#__PURE__*/dual(3, (self, metric, f) => {\n  const updater = defect => update(metric, f(defect));\n  return effect_.tapDefect(self, cause => core.forEachSequentialDiscard(Cause.defects(cause), updater));\n});\n/* @internal */\nexport const trackDuration = /*#__PURE__*/dual(2, (self, metric) => trackDurationWith(self, metric, identity));\n/* @internal */\nexport const trackDurationWith = /*#__PURE__*/dual(3, (self, metric, f) => Clock.clockWith(clock => {\n  const startTime = clock.unsafeCurrentTimeNanos();\n  return core.tap(self, _ => {\n    const endTime = clock.unsafeCurrentTimeNanos();\n    const duration = Duration.nanos(endTime - startTime);\n    return update(metric, f(duration));\n  });\n}));\n/* @internal */\nexport const trackError = /*#__PURE__*/dual(2, (self, metric) => trackErrorWith(self, metric, a => a));\n/* @internal */\nexport const trackErrorWith = /*#__PURE__*/dual(3, (self, metric, f) => {\n  const updater = error => update(metric, f(error));\n  return effect_.tapError(self, updater);\n});\n/* @internal */\nexport const trackSuccess = /*#__PURE__*/dual(2, (self, metric) => trackSuccessWith(self, metric, a => a));\n/* @internal */\nexport const trackSuccessWith = /*#__PURE__*/dual(3, (self, metric, f) => {\n  const updater = value => update(metric, f(value));\n  return core.tap(self, updater);\n});\n/* @internal */\nexport const update = /*#__PURE__*/dual(2, (self, input) => core.fiberRefGetWith(core.currentMetricLabels, tags => core.sync(() => self.unsafeUpdate(input, tags))));\n/* @internal */\nexport const value = self => core.fiberRefGetWith(core.currentMetricLabels, tags => core.sync(() => self.unsafeValue(tags)));\n/** @internal */\nexport const withNow = self => mapInput(self, input => [input, Date.now()]);\n/** @internal */\nexport const zip = /*#__PURE__*/dual(2, (self, that) => make([self.keyType, that.keyType], (input, extraTags) => {\n  const [l, r] = input;\n  self.unsafeUpdate(l, extraTags);\n  that.unsafeUpdate(r, extraTags);\n}, extraTags => [self.unsafeValue(extraTags), that.unsafeValue(extraTags)], (input, extraTags) => {\n  const [l, r] = input;\n  self.unsafeModify(l, extraTags);\n  that.unsafeModify(r, extraTags);\n}));\n/** @internal */\nexport const unsafeSnapshot = () => globalMetricRegistry.snapshot();\n/** @internal */\nexport const snapshot = /*#__PURE__*/core.sync(unsafeSnapshot);\n//# sourceMappingURL=metric.js.map","import { dual } from \"../Function.js\";\nimport { hasProperty } from \"../Predicate.js\";\nimport * as completedRequestMap from \"./completedRequestMap.js\";\nimport * as core from \"./core.js\";\nimport { StructuralPrototype } from \"./effectable.js\";\n/** @internal */\nconst RequestSymbolKey = \"effect/Request\";\n/** @internal */\nexport const RequestTypeId = /*#__PURE__*/Symbol.for(RequestSymbolKey);\nconst requestVariance = {\n  /* c8 ignore next */\n  _E: _ => _,\n  /* c8 ignore next */\n  _A: _ => _\n};\nconst RequestPrototype = {\n  ...StructuralPrototype,\n  [RequestTypeId]: requestVariance\n};\n/** @internal */\nexport const isRequest = u => hasProperty(u, RequestTypeId);\n/** @internal */\nexport const of = () => args => Object.assign(Object.create(RequestPrototype), args);\n/** @internal */\nexport const tagged = tag => args => {\n  const request = Object.assign(Object.create(RequestPrototype), args);\n  request._tag = tag;\n  return request;\n};\n/** @internal */\nexport const Class = /*#__PURE__*/function () {\n  function Class(args) {\n    if (args) {\n      Object.assign(this, args);\n    }\n  }\n  Class.prototype = RequestPrototype;\n  return Class;\n}();\n/** @internal */\nexport const TaggedClass = tag => {\n  return class TaggedClass extends Class {\n    _tag = tag;\n  };\n};\n/** @internal */\nexport const complete = /*#__PURE__*/dual(2, (self, result) => core.fiberRefGetWith(completedRequestMap.currentRequestMap, map => core.sync(() => {\n  if (map.has(self)) {\n    const entry = map.get(self);\n    if (!entry.state.completed) {\n      entry.state.completed = true;\n      core.deferredUnsafeDone(entry.result, result);\n    }\n  }\n})));\n/** @internal */\nexport const completeEffect = /*#__PURE__*/dual(2, (self, effect) => core.matchEffect(effect, {\n  onFailure: error => complete(self, core.exitFail(error)),\n  onSuccess: value => complete(self, core.exitSucceed(value))\n}));\n/** @internal */\nexport const fail = /*#__PURE__*/dual(2, (self, error) => complete(self, core.exitFail(error)));\n/** @internal */\nexport const failCause = /*#__PURE__*/dual(2, (self, cause) => complete(self, core.exitFailCause(cause)));\n/** @internal */\nexport const succeed = /*#__PURE__*/dual(2, (self, value) => complete(self, core.exitSucceed(value)));\n/** @internal */\nexport class Listeners {\n  count = 0;\n  observers = /*#__PURE__*/new Set();\n  interrupted = false;\n  addObserver(f) {\n    this.observers.add(f);\n  }\n  removeObserver(f) {\n    this.observers.delete(f);\n  }\n  increment() {\n    this.count++;\n    this.observers.forEach(f => f(this.count));\n  }\n  decrement() {\n    this.count--;\n    this.observers.forEach(f => f(this.count));\n  }\n}\n/**\n * @internal\n */\nexport const filterOutCompleted = requests => core.fiberRefGetWith(completedRequestMap.currentRequestMap, map => core.succeed(requests.filter(request => !(map.get(request)?.state.completed === true))));\n//# sourceMappingURL=request.js.map","import { pipe } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as MutableRef from \"../MutableRef.js\";\nimport { hasProperty, isTagged } from \"../Predicate.js\";\nimport * as SortedSet from \"../SortedSet.js\";\nimport * as core from \"./core.js\";\n/** @internal */\nconst SupervisorSymbolKey = \"effect/Supervisor\";\n/** @internal */\nexport const SupervisorTypeId = /*#__PURE__*/Symbol.for(SupervisorSymbolKey);\n/** @internal */\nexport const supervisorVariance = {\n  /* c8 ignore next */\n  _T: _ => _\n};\n/** @internal */\nexport class ProxySupervisor {\n  underlying;\n  value0;\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(underlying, value0) {\n    this.underlying = underlying;\n    this.value0 = value0;\n  }\n  get value() {\n    return this.value0;\n  }\n  onStart(context, effect, parent, fiber) {\n    this.underlying.onStart(context, effect, parent, fiber);\n  }\n  onEnd(value, fiber) {\n    this.underlying.onEnd(value, fiber);\n  }\n  onEffect(fiber, effect) {\n    this.underlying.onEffect(fiber, effect);\n  }\n  onSuspend(fiber) {\n    this.underlying.onSuspend(fiber);\n  }\n  onResume(fiber) {\n    this.underlying.onResume(fiber);\n  }\n  map(f) {\n    return new ProxySupervisor(this, pipe(this.value, core.map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n}\n/** @internal */\nexport class Zip {\n  left;\n  right;\n  _tag = \"Zip\";\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(left, right) {\n    this.left = left;\n    this.right = right;\n  }\n  get value() {\n    return core.zip(this.left.value, this.right.value);\n  }\n  onStart(context, effect, parent, fiber) {\n    this.left.onStart(context, effect, parent, fiber);\n    this.right.onStart(context, effect, parent, fiber);\n  }\n  onEnd(value, fiber) {\n    this.left.onEnd(value, fiber);\n    this.right.onEnd(value, fiber);\n  }\n  onEffect(fiber, effect) {\n    this.left.onEffect(fiber, effect);\n    this.right.onEffect(fiber, effect);\n  }\n  onSuspend(fiber) {\n    this.left.onSuspend(fiber);\n    this.right.onSuspend(fiber);\n  }\n  onResume(fiber) {\n    this.left.onResume(fiber);\n    this.right.onResume(fiber);\n  }\n  map(f) {\n    return new ProxySupervisor(this, pipe(this.value, core.map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n}\n/** @internal */\nexport const isZip = self => hasProperty(self, SupervisorTypeId) && isTagged(self, \"Zip\");\n/** @internal */\nexport class Track {\n  [SupervisorTypeId] = supervisorVariance;\n  fibers = /*#__PURE__*/new Set();\n  get value() {\n    return core.sync(() => Array.from(this.fibers));\n  }\n  onStart(_context, _effect, _parent, fiber) {\n    this.fibers.add(fiber);\n  }\n  onEnd(_value, fiber) {\n    this.fibers.delete(fiber);\n  }\n  onEffect(_fiber, _effect) {\n    //\n  }\n  onSuspend(_fiber) {\n    //\n  }\n  onResume(_fiber) {\n    //\n  }\n  map(f) {\n    return new ProxySupervisor(this, pipe(this.value, core.map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n  onRun(execution, _fiber) {\n    return execution();\n  }\n}\n/** @internal */\nexport class Const {\n  effect;\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(effect) {\n    this.effect = effect;\n  }\n  get value() {\n    return this.effect;\n  }\n  onStart(_context, _effect, _parent, _fiber) {\n    //\n  }\n  onEnd(_value, _fiber) {\n    //\n  }\n  onEffect(_fiber, _effect) {\n    //\n  }\n  onSuspend(_fiber) {\n    //\n  }\n  onResume(_fiber) {\n    //\n  }\n  map(f) {\n    return new ProxySupervisor(this, pipe(this.value, core.map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n  onRun(execution, _fiber) {\n    return execution();\n  }\n}\nclass FibersIn {\n  ref;\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(ref) {\n    this.ref = ref;\n  }\n  get value() {\n    return core.sync(() => MutableRef.get(this.ref));\n  }\n  onStart(_context, _effect, _parent, fiber) {\n    pipe(this.ref, MutableRef.set(pipe(MutableRef.get(this.ref), SortedSet.add(fiber))));\n  }\n  onEnd(_value, fiber) {\n    pipe(this.ref, MutableRef.set(pipe(MutableRef.get(this.ref), SortedSet.remove(fiber))));\n  }\n  onEffect(_fiber, _effect) {\n    //\n  }\n  onSuspend(_fiber) {\n    //\n  }\n  onResume(_fiber) {\n    //\n  }\n  map(f) {\n    return new ProxySupervisor(this, pipe(this.value, core.map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n  onRun(execution, _fiber) {\n    return execution();\n  }\n}\n/** @internal */\nexport const unsafeTrack = () => {\n  return new Track();\n};\n/** @internal */\nexport const track = /*#__PURE__*/core.sync(unsafeTrack);\n/** @internal */\nexport const fromEffect = effect => {\n  return new Const(effect);\n};\n/** @internal */\nexport const none = /*#__PURE__*/globalValue(\"effect/Supervisor/none\", () => fromEffect(core.void));\n/** @internal */\nexport const fibersIn = ref => core.sync(() => new FibersIn(ref));\n//# sourceMappingURL=supervisor.js.map","import * as Dual from \"./Function.js\";\nimport * as internal from \"./internal/differ.js\";\nimport * as ChunkPatch from \"./internal/differ/chunkPatch.js\";\nimport * as ContextPatch from \"./internal/differ/contextPatch.js\";\nimport * as HashMapPatch from \"./internal/differ/hashMapPatch.js\";\nimport * as HashSetPatch from \"./internal/differ/hashSetPatch.js\";\nimport * as OrPatch from \"./internal/differ/orPatch.js\";\nimport * as ReadonlyArrayPatch from \"./internal/differ/readonlyArrayPatch.js\";\n/**\n * @since 2.0.0\n * @category symbol\n */\nexport const TypeId = internal.DifferTypeId;\nconst ChunkPatchTypeId = ChunkPatch.ChunkPatchTypeId;\nconst ContextPatchTypeId = ContextPatch.ContextPatchTypeId;\nconst HashMapPatchTypeId = HashMapPatch.HashMapPatchTypeId;\nconst HashSetPatchTypeId = HashSetPatch.HashSetPatchTypeId;\nconst OrPatchTypeId = OrPatch.OrPatchTypeId;\nconst ReadonlyArrayPatchTypeId = ReadonlyArrayPatch.ReadonlyArrayPatchTypeId;\n/**\n * An empty patch that describes no changes.\n *\n * @since 2.0.0\n * @category patch\n */\nexport const empty = self => self.empty;\n/**\n * @since 2.0.0\n * @category patch\n */\nexport const diff = /*#__PURE__*/Dual.dual(3, (self, oldValue, newValue) => self.diff(oldValue, newValue));\n/**\n * Combines two patches to produce a new patch that describes the updates of\n * the first patch and then the updates of the second patch. The combine\n * operation should be associative. In addition, if the combine operation is\n * commutative then joining multiple fibers concurrently will result in\n * deterministic `FiberRef` values.\n *\n * @since 2.0.0\n * @category patch\n */\nexport const combine = /*#__PURE__*/Dual.dual(3, (self, first, second) => self.combine(first, second));\n/**\n * Applies a patch to an old value to produce a new value that is equal to the\n * old value with the updates described by the patch.\n *\n * @since 2.0.0\n * @category patch\n */\nexport const patch = /*#__PURE__*/Dual.dual(3, (self, patch, oldValue) => self.patch(patch, oldValue));\n/**\n * Constructs a new `Differ`.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make = internal.make;\n/**\n * Constructs a differ that knows how to diff `Env` values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const environment = internal.environment;\n/**\n * Constructs a differ that knows how to diff a `Chunk` of values given a\n * differ that knows how to diff the values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const chunk = internal.chunk;\n/**\n * Constructs a differ that knows how to diff a `HashMap` of keys and values given\n * a differ that knows how to diff the values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const hashMap = internal.hashMap;\n/**\n * Constructs a differ that knows how to diff a `HashSet` of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const hashSet = internal.hashSet;\n/**\n * Combines this differ and the specified differ to produce a differ that\n * knows how to diff the sum of their values.\n *\n * @since 2.0.0\n */\nexport const orElseEither = internal.orElseEither;\n/**\n * Constructs a differ that knows how to diff a `ReadonlyArray` of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const readonlyArray = internal.readonlyArray;\n/**\n * Transforms the type of values that this differ knows how to differ using\n * the specified functions that map the new and old value types to each other.\n *\n * @since 2.0.0\n */\nexport const transform = internal.transform;\n/**\n * Constructs a differ that just diffs two values by returning a function that\n * sets the value to the new value. This differ does not support combining\n * multiple updates to the value compositionally and should only be used when\n * there is no compositional way to update them.\n *\n * @since 2.0.0\n */\nexport const update = internal.update;\n/**\n * A variant of `update` that allows specifying the function that will be used\n * to combine old values with new values.\n *\n * @since 2.0.0\n */\nexport const updateWith = internal.updateWith;\n/**\n * Combines this differ and the specified differ to produce a new differ that\n * knows how to diff the product of their values.\n *\n * @since 2.0.0\n */\nexport const zip = internal.zip;\n//# sourceMappingURL=Differ.js.map","import * as Chunk from \"../../Chunk.js\";\nimport * as Differ from \"../../Differ.js\";\nimport * as Equal from \"../../Equal.js\";\nimport { pipe } from \"../../Function.js\";\nimport * as HashSet from \"../../HashSet.js\";\nimport * as supervisor from \"../supervisor.js\";\n/** @internal */\nexport const OP_EMPTY = \"Empty\";\n/** @internal */\nexport const OP_ADD_SUPERVISOR = \"AddSupervisor\";\n/** @internal */\nexport const OP_REMOVE_SUPERVISOR = \"RemoveSupervisor\";\n/** @internal */\nexport const OP_AND_THEN = \"AndThen\";\n/**\n * The empty `SupervisorPatch`.\n *\n * @internal\n */\nexport const empty = {\n  _tag: OP_EMPTY\n};\n/**\n * Combines two patches to produce a new patch that describes applying the\n * updates from this patch and then the updates from the specified patch.\n *\n * @internal\n */\nexport const combine = (self, that) => {\n  return {\n    _tag: OP_AND_THEN,\n    first: self,\n    second: that\n  };\n};\n/**\n * Applies a `SupervisorPatch` to a `Supervisor` to produce a new `Supervisor`.\n *\n * @internal\n */\nexport const patch = (self, supervisor) => {\n  return patchLoop(supervisor, Chunk.of(self));\n};\n/** @internal */\nconst patchLoop = (_supervisor, _patches) => {\n  let supervisor = _supervisor;\n  let patches = _patches;\n  while (Chunk.isNonEmpty(patches)) {\n    const head = Chunk.headNonEmpty(patches);\n    switch (head._tag) {\n      case OP_EMPTY:\n        {\n          patches = Chunk.tailNonEmpty(patches);\n          break;\n        }\n      case OP_ADD_SUPERVISOR:\n        {\n          supervisor = supervisor.zip(head.supervisor);\n          patches = Chunk.tailNonEmpty(patches);\n          break;\n        }\n      case OP_REMOVE_SUPERVISOR:\n        {\n          supervisor = removeSupervisor(supervisor, head.supervisor);\n          patches = Chunk.tailNonEmpty(patches);\n          break;\n        }\n      case OP_AND_THEN:\n        {\n          patches = Chunk.prepend(head.first)(Chunk.prepend(head.second)(Chunk.tailNonEmpty(patches)));\n          break;\n        }\n    }\n  }\n  return supervisor;\n};\n/** @internal */\nconst removeSupervisor = (self, that) => {\n  if (Equal.equals(self, that)) {\n    return supervisor.none;\n  } else {\n    if (supervisor.isZip(self)) {\n      return removeSupervisor(self.left, that).zip(removeSupervisor(self.right, that));\n    } else {\n      return self;\n    }\n  }\n};\n/** @internal */\nconst toSet = self => {\n  if (Equal.equals(self, supervisor.none)) {\n    return HashSet.empty();\n  } else {\n    if (supervisor.isZip(self)) {\n      return pipe(toSet(self.left), HashSet.union(toSet(self.right)));\n    } else {\n      return HashSet.make(self);\n    }\n  }\n};\n/** @internal */\nexport const diff = (oldValue, newValue) => {\n  if (Equal.equals(oldValue, newValue)) {\n    return empty;\n  }\n  const oldSupervisors = toSet(oldValue);\n  const newSupervisors = toSet(newValue);\n  const added = pipe(newSupervisors, HashSet.difference(oldSupervisors), HashSet.reduce(empty, (patch, supervisor) => combine(patch, {\n    _tag: OP_ADD_SUPERVISOR,\n    supervisor\n  })));\n  const removed = pipe(oldSupervisors, HashSet.difference(newSupervisors), HashSet.reduce(empty, (patch, supervisor) => combine(patch, {\n    _tag: OP_REMOVE_SUPERVISOR,\n    supervisor\n  })));\n  return combine(added, removed);\n};\n/** @internal */\nexport const differ = /*#__PURE__*/Differ.make({\n  empty,\n  patch,\n  combine,\n  diff\n});\n//# sourceMappingURL=patch.js.map","import * as RA from \"../Array.js\";\nimport * as Boolean from \"../Boolean.js\";\nimport * as Chunk from \"../Chunk.js\";\nimport * as Context from \"../Context.js\";\nimport * as Deferred from \"../Deferred.js\";\nimport * as Effectable from \"../Effectable.js\";\nimport * as ExecutionStrategy from \"../ExecutionStrategy.js\";\nimport * as FiberId from \"../FiberId.js\";\nimport * as FiberRefs from \"../FiberRefs.js\";\nimport * as FiberRefsPatch from \"../FiberRefsPatch.js\";\nimport * as FiberStatus from \"../FiberStatus.js\";\nimport { dual, identity, pipe } from \"../Function.js\";\nimport { globalValue } from \"../GlobalValue.js\";\nimport * as HashMap from \"../HashMap.js\";\nimport * as HashSet from \"../HashSet.js\";\nimport * as Inspectable from \"../Inspectable.js\";\nimport * as LogLevel from \"../LogLevel.js\";\nimport * as Micro from \"../Micro.js\";\nimport * as MRef from \"../MutableRef.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport * as Predicate from \"../Predicate.js\";\nimport * as Ref from \"../Ref.js\";\nimport * as RuntimeFlagsPatch from \"../RuntimeFlagsPatch.js\";\nimport { currentScheduler } from \"../Scheduler.js\";\nimport { internalCall, yieldWrapGet } from \"../Utils.js\";\nimport * as RequestBlock_ from \"./blockedRequests.js\";\nimport * as internalCause from \"./cause.js\";\nimport * as clock from \"./clock.js\";\nimport { currentRequestMap } from \"./completedRequestMap.js\";\nimport * as concurrency from \"./concurrency.js\";\nimport { configProviderTag } from \"./configProvider.js\";\nimport * as internalEffect from \"./core-effect.js\";\nimport * as core from \"./core.js\";\nimport * as defaultServices from \"./defaultServices.js\";\nimport { consoleTag } from \"./defaultServices/console.js\";\nimport * as executionStrategy from \"./executionStrategy.js\";\nimport * as internalFiber from \"./fiber.js\";\nimport * as FiberMessage from \"./fiberMessage.js\";\nimport * as fiberRefs from \"./fiberRefs.js\";\nimport * as fiberScope from \"./fiberScope.js\";\nimport * as internalLogger from \"./logger.js\";\nimport * as metric from \"./metric.js\";\nimport * as metricBoundaries from \"./metric/boundaries.js\";\nimport * as metricLabel from \"./metric/label.js\";\nimport * as OpCodes from \"./opCodes/effect.js\";\nimport { randomTag } from \"./random.js\";\nimport { complete } from \"./request.js\";\nimport * as runtimeFlags_ from \"./runtimeFlags.js\";\nimport { OpSupervision } from \"./runtimeFlags.js\";\nimport * as supervisor from \"./supervisor.js\";\nimport * as SupervisorPatch from \"./supervisor/patch.js\";\nimport * as tracer from \"./tracer.js\";\nimport * as version from \"./version.js\";\n/** @internal */\nexport const fiberStarted = /*#__PURE__*/metric.counter(\"effect_fiber_started\", {\n  incremental: true\n});\n/** @internal */\nexport const fiberActive = /*#__PURE__*/metric.counter(\"effect_fiber_active\");\n/** @internal */\nexport const fiberSuccesses = /*#__PURE__*/metric.counter(\"effect_fiber_successes\", {\n  incremental: true\n});\n/** @internal */\nexport const fiberFailures = /*#__PURE__*/metric.counter(\"effect_fiber_failures\", {\n  incremental: true\n});\n/** @internal */\nexport const fiberLifetimes = /*#__PURE__*/metric.tagged( /*#__PURE__*/metric.histogram(\"effect_fiber_lifetimes\", /*#__PURE__*/metricBoundaries.exponential({\n  start: 0.5,\n  factor: 2,\n  count: 35\n})), \"time_unit\", \"milliseconds\");\n/** @internal */\nconst EvaluationSignalContinue = \"Continue\";\n/** @internal */\nconst EvaluationSignalDone = \"Done\";\n/** @internal */\nconst EvaluationSignalYieldNow = \"Yield\";\nconst runtimeFiberVariance = {\n  /* c8 ignore next */\n  _E: _ => _,\n  /* c8 ignore next */\n  _A: _ => _\n};\nconst absurd = _ => {\n  throw new Error(`BUG: FiberRuntime - ${Inspectable.toStringUnknown(_)} - please report an issue at https://github.com/Effect-TS/effect/issues`);\n};\nconst YieldedOp = /*#__PURE__*/Symbol.for(\"effect/internal/fiberRuntime/YieldedOp\");\nconst yieldedOpChannel = /*#__PURE__*/globalValue(\"effect/internal/fiberRuntime/yieldedOpChannel\", () => ({\n  currentOp: null\n}));\nconst contOpSuccess = {\n  [OpCodes.OP_ON_SUCCESS]: (_, cont, value) => {\n    return internalCall(() => cont.effect_instruction_i1(value));\n  },\n  [\"OnStep\"]: (_, _cont, value) => {\n    return core.exitSucceed(core.exitSucceed(value));\n  },\n  [OpCodes.OP_ON_SUCCESS_AND_FAILURE]: (_, cont, value) => {\n    return internalCall(() => cont.effect_instruction_i2(value));\n  },\n  [OpCodes.OP_REVERT_FLAGS]: (self, cont, value) => {\n    self.patchRuntimeFlags(self.currentRuntimeFlags, cont.patch);\n    if (runtimeFlags_.interruptible(self.currentRuntimeFlags) && self.isInterrupted()) {\n      return core.exitFailCause(self.getInterruptedCause());\n    } else {\n      return core.exitSucceed(value);\n    }\n  },\n  [OpCodes.OP_WHILE]: (self, cont, value) => {\n    internalCall(() => cont.effect_instruction_i2(value));\n    if (internalCall(() => cont.effect_instruction_i0())) {\n      self.pushStack(cont);\n      return internalCall(() => cont.effect_instruction_i1());\n    } else {\n      return core.void;\n    }\n  },\n  [OpCodes.OP_ITERATOR]: (self, cont, value) => {\n    const state = internalCall(() => cont.effect_instruction_i0.next(value));\n    if (state.done) return core.exitSucceed(state.value);\n    self.pushStack(cont);\n    return yieldWrapGet(state.value);\n  }\n};\nconst drainQueueWhileRunningTable = {\n  [FiberMessage.OP_INTERRUPT_SIGNAL]: (self, runtimeFlags, cur, message) => {\n    self.processNewInterruptSignal(message.cause);\n    return runtimeFlags_.interruptible(runtimeFlags) ? core.exitFailCause(message.cause) : cur;\n  },\n  [FiberMessage.OP_RESUME]: (_self, _runtimeFlags, _cur, _message) => {\n    throw new Error(\"It is illegal to have multiple concurrent run loops in a single fiber\");\n  },\n  [FiberMessage.OP_STATEFUL]: (self, runtimeFlags, cur, message) => {\n    message.onFiber(self, FiberStatus.running(runtimeFlags));\n    return cur;\n  },\n  [FiberMessage.OP_YIELD_NOW]: (_self, _runtimeFlags, cur, _message) => {\n    return core.flatMap(core.yieldNow(), () => cur);\n  }\n};\n/**\n * Executes all requests, submitting requests to each data source in parallel.\n */\nconst runBlockedRequests = self => core.forEachSequentialDiscard(RequestBlock_.flatten(self), requestsByRequestResolver => forEachConcurrentDiscard(RequestBlock_.sequentialCollectionToChunk(requestsByRequestResolver), ([dataSource, sequential]) => {\n  const map = new Map();\n  const arr = [];\n  for (const block of sequential) {\n    arr.push(Chunk.toReadonlyArray(block));\n    for (const entry of block) {\n      map.set(entry.request, entry);\n    }\n  }\n  const flat = arr.flat();\n  return core.fiberRefLocally(invokeWithInterrupt(dataSource.runAll(arr), flat, () => flat.forEach(entry => {\n    entry.listeners.interrupted = true;\n  })), currentRequestMap, map);\n}, false, false));\nconst _version = /*#__PURE__*/version.getCurrentVersion();\n/** @internal */\nexport class FiberRuntime extends Effectable.Class {\n  [internalFiber.FiberTypeId] = internalFiber.fiberVariance;\n  [internalFiber.RuntimeFiberTypeId] = runtimeFiberVariance;\n  _fiberRefs;\n  _fiberId;\n  _queue = /*#__PURE__*/new Array();\n  _children = null;\n  _observers = /*#__PURE__*/new Array();\n  _running = false;\n  _stack = [];\n  _asyncInterruptor = null;\n  _asyncBlockingOn = null;\n  _exitValue = null;\n  _steps = [];\n  _isYielding = false;\n  currentRuntimeFlags;\n  currentOpCount = 0;\n  currentSupervisor;\n  currentScheduler;\n  currentTracer;\n  currentSpan;\n  currentContext;\n  currentDefaultServices;\n  constructor(fiberId, fiberRefs0, runtimeFlags0) {\n    super();\n    this.currentRuntimeFlags = runtimeFlags0;\n    this._fiberId = fiberId;\n    this._fiberRefs = fiberRefs0;\n    if (runtimeFlags_.runtimeMetrics(runtimeFlags0)) {\n      const tags = this.getFiberRef(core.currentMetricLabels);\n      fiberStarted.unsafeUpdate(1, tags);\n      fiberActive.unsafeUpdate(1, tags);\n    }\n    this.refreshRefCache();\n  }\n  commit() {\n    return internalFiber.join(this);\n  }\n  /**\n   * The identity of the fiber.\n   */\n  id() {\n    return this._fiberId;\n  }\n  /**\n   * Begins execution of the effect associated with this fiber on in the\n   * background. This can be called to \"kick off\" execution of a fiber after\n   * it has been created.\n   */\n  resume(effect) {\n    this.tell(FiberMessage.resume(effect));\n  }\n  /**\n   * The status of the fiber.\n   */\n  get status() {\n    return this.ask((_, status) => status);\n  }\n  /**\n   * Gets the fiber runtime flags.\n   */\n  get runtimeFlags() {\n    return this.ask((state, status) => {\n      if (FiberStatus.isDone(status)) {\n        return state.currentRuntimeFlags;\n      }\n      return status.runtimeFlags;\n    });\n  }\n  /**\n   * Returns the current `FiberScope` for the fiber.\n   */\n  scope() {\n    return fiberScope.unsafeMake(this);\n  }\n  /**\n   * Retrieves the immediate children of the fiber.\n   */\n  get children() {\n    return this.ask(fiber => Array.from(fiber.getChildren()));\n  }\n  /**\n   * Gets the fiber's set of children.\n   */\n  getChildren() {\n    if (this._children === null) {\n      this._children = new Set();\n    }\n    return this._children;\n  }\n  /**\n   * Retrieves the interrupted cause of the fiber, which will be `Cause.empty`\n   * if the fiber has not been interrupted.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  getInterruptedCause() {\n    return this.getFiberRef(core.currentInterruptedCause);\n  }\n  /**\n   * Retrieves the whole set of fiber refs.\n   */\n  fiberRefs() {\n    return this.ask(fiber => fiber.getFiberRefs());\n  }\n  /**\n   * Returns an effect that will contain information computed from the fiber\n   * state and status while running on the fiber.\n   *\n   * This allows the outside world to interact safely with mutable fiber state\n   * without locks or immutable data.\n   */\n  ask(f) {\n    return core.suspend(() => {\n      const deferred = core.deferredUnsafeMake(this._fiberId);\n      this.tell(FiberMessage.stateful((fiber, status) => {\n        core.deferredUnsafeDone(deferred, core.sync(() => f(fiber, status)));\n      }));\n      return core.deferredAwait(deferred);\n    });\n  }\n  /**\n   * Adds a message to be processed by the fiber on the fiber.\n   */\n  tell(message) {\n    this._queue.push(message);\n    if (!this._running) {\n      this._running = true;\n      this.drainQueueLaterOnExecutor();\n    }\n  }\n  get await() {\n    return core.async(resume => {\n      const cb = exit => resume(core.succeed(exit));\n      this.tell(FiberMessage.stateful((fiber, _) => {\n        if (fiber._exitValue !== null) {\n          cb(this._exitValue);\n        } else {\n          fiber.addObserver(cb);\n        }\n      }));\n      return core.sync(() => this.tell(FiberMessage.stateful((fiber, _) => {\n        fiber.removeObserver(cb);\n      })));\n    }, this.id());\n  }\n  get inheritAll() {\n    return core.withFiberRuntime((parentFiber, parentStatus) => {\n      const parentFiberId = parentFiber.id();\n      const parentFiberRefs = parentFiber.getFiberRefs();\n      const parentRuntimeFlags = parentStatus.runtimeFlags;\n      const childFiberRefs = this.getFiberRefs();\n      const updatedFiberRefs = fiberRefs.joinAs(parentFiberRefs, parentFiberId, childFiberRefs);\n      parentFiber.setFiberRefs(updatedFiberRefs);\n      const updatedRuntimeFlags = parentFiber.getFiberRef(currentRuntimeFlags);\n      const patch = pipe(runtimeFlags_.diff(parentRuntimeFlags, updatedRuntimeFlags),\n      // Do not inherit WindDown or Interruption!\n      RuntimeFlagsPatch.exclude(runtimeFlags_.Interruption), RuntimeFlagsPatch.exclude(runtimeFlags_.WindDown));\n      return core.updateRuntimeFlags(patch);\n    });\n  }\n  /**\n   * Tentatively observes the fiber, but returns immediately if it is not\n   * already done.\n   */\n  get poll() {\n    return core.sync(() => Option.fromNullable(this._exitValue));\n  }\n  /**\n   * Unsafely observes the fiber, but returns immediately if it is not\n   * already done.\n   */\n  unsafePoll() {\n    return this._exitValue;\n  }\n  /**\n   * In the background, interrupts the fiber as if interrupted from the specified fiber.\n   */\n  interruptAsFork(fiberId) {\n    return core.sync(() => this.tell(FiberMessage.interruptSignal(internalCause.interrupt(fiberId))));\n  }\n  /**\n   * In the background, interrupts the fiber as if interrupted from the specified fiber.\n   */\n  unsafeInterruptAsFork(fiberId) {\n    this.tell(FiberMessage.interruptSignal(internalCause.interrupt(fiberId)));\n  }\n  /**\n   * Adds an observer to the list of observers.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  addObserver(observer) {\n    if (this._exitValue !== null) {\n      observer(this._exitValue);\n    } else {\n      this._observers.push(observer);\n    }\n  }\n  /**\n   * Removes the specified observer from the list of observers that will be\n   * notified when the fiber exits.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  removeObserver(observer) {\n    this._observers = this._observers.filter(o => o !== observer);\n  }\n  /**\n   * Retrieves all fiber refs of the fiber.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  getFiberRefs() {\n    this.setFiberRef(currentRuntimeFlags, this.currentRuntimeFlags);\n    return this._fiberRefs;\n  }\n  /**\n   * Deletes the specified fiber ref.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  unsafeDeleteFiberRef(fiberRef) {\n    this._fiberRefs = fiberRefs.delete_(this._fiberRefs, fiberRef);\n  }\n  /**\n   * Retrieves the state of the fiber ref, or else its initial value.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  getFiberRef(fiberRef) {\n    if (this._fiberRefs.locals.has(fiberRef)) {\n      return this._fiberRefs.locals.get(fiberRef)[0][1];\n    }\n    return fiberRef.initial;\n  }\n  /**\n   * Sets the fiber ref to the specified value.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  setFiberRef(fiberRef, value) {\n    this._fiberRefs = fiberRefs.updateAs(this._fiberRefs, {\n      fiberId: this._fiberId,\n      fiberRef,\n      value\n    });\n    this.refreshRefCache();\n  }\n  refreshRefCache() {\n    this.currentDefaultServices = this.getFiberRef(defaultServices.currentServices);\n    this.currentTracer = this.currentDefaultServices.unsafeMap.get(tracer.tracerTag.key);\n    this.currentSupervisor = this.getFiberRef(currentSupervisor);\n    this.currentScheduler = this.getFiberRef(currentScheduler);\n    this.currentContext = this.getFiberRef(core.currentContext);\n    this.currentSpan = this.currentContext.unsafeMap.get(tracer.spanTag.key);\n  }\n  /**\n   * Wholesale replaces all fiber refs of this fiber.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  setFiberRefs(fiberRefs) {\n    this._fiberRefs = fiberRefs;\n    this.refreshRefCache();\n  }\n  /**\n   * Adds a reference to the specified fiber inside the children set.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  addChild(child) {\n    this.getChildren().add(child);\n  }\n  /**\n   * Removes a reference to the specified fiber inside the children set.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  removeChild(child) {\n    this.getChildren().delete(child);\n  }\n  /**\n   * Transfers all children of this fiber that are currently running to the\n   * specified fiber scope.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself after it has\n   * evaluated the effects but prior to exiting.\n   */\n  transferChildren(scope) {\n    const children = this._children;\n    // Clear the children of the current fiber\n    this._children = null;\n    if (children !== null && children.size > 0) {\n      for (const child of children) {\n        // If the child is still running, add it to the scope\n        if (child._exitValue === null) {\n          scope.add(this.currentRuntimeFlags, child);\n        }\n      }\n    }\n  }\n  /**\n   * On the current thread, executes all messages in the fiber's inbox. This\n   * method may return before all work is done, in the event the fiber executes\n   * an asynchronous operation.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  drainQueueOnCurrentThread() {\n    let recurse = true;\n    while (recurse) {\n      let evaluationSignal = EvaluationSignalContinue;\n      const prev = globalThis[internalFiber.currentFiberURI];\n      globalThis[internalFiber.currentFiberURI] = this;\n      try {\n        while (evaluationSignal === EvaluationSignalContinue) {\n          evaluationSignal = this._queue.length === 0 ? EvaluationSignalDone : this.evaluateMessageWhileSuspended(this._queue.splice(0, 1)[0]);\n        }\n      } finally {\n        this._running = false;\n        globalThis[internalFiber.currentFiberURI] = prev;\n      }\n      // Maybe someone added something to the queue between us checking, and us\n      // giving up the drain. If so, we need to restart the draining, but only\n      // if we beat everyone else to the restart:\n      if (this._queue.length > 0 && !this._running) {\n        this._running = true;\n        if (evaluationSignal === EvaluationSignalYieldNow) {\n          this.drainQueueLaterOnExecutor();\n          recurse = false;\n        } else {\n          recurse = true;\n        }\n      } else {\n        recurse = false;\n      }\n    }\n  }\n  /**\n   * Schedules the execution of all messages in the fiber's inbox.\n   *\n   * This method will return immediately after the scheduling\n   * operation is completed, but potentially before such messages have been\n   * executed.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  drainQueueLaterOnExecutor() {\n    this.currentScheduler.scheduleTask(this.run, this.getFiberRef(core.currentSchedulingPriority));\n  }\n  /**\n   * Drains the fiber's message queue while the fiber is actively running,\n   * returning the next effect to execute, which may be the input effect if no\n   * additional effect needs to be executed.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  drainQueueWhileRunning(runtimeFlags, cur0) {\n    let cur = cur0;\n    while (this._queue.length > 0) {\n      const message = this._queue.splice(0, 1)[0];\n      // @ts-expect-error\n      cur = drainQueueWhileRunningTable[message._tag](this, runtimeFlags, cur, message);\n    }\n    return cur;\n  }\n  /**\n   * Determines if the fiber is interrupted.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  isInterrupted() {\n    return !internalCause.isEmpty(this.getFiberRef(core.currentInterruptedCause));\n  }\n  /**\n   * Adds an interruptor to the set of interruptors that are interrupting this\n   * fiber.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  addInterruptedCause(cause) {\n    const oldSC = this.getFiberRef(core.currentInterruptedCause);\n    this.setFiberRef(core.currentInterruptedCause, internalCause.sequential(oldSC, cause));\n  }\n  /**\n   * Processes a new incoming interrupt signal.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  processNewInterruptSignal(cause) {\n    this.addInterruptedCause(cause);\n    this.sendInterruptSignalToAllChildren();\n  }\n  /**\n   * Interrupts all children of the current fiber, returning an effect that will\n   * await the exit of the children. This method will return null if the fiber\n   * has no children.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  sendInterruptSignalToAllChildren() {\n    if (this._children === null || this._children.size === 0) {\n      return false;\n    }\n    let told = false;\n    for (const child of this._children) {\n      child.tell(FiberMessage.interruptSignal(internalCause.interrupt(this.id())));\n      told = true;\n    }\n    return told;\n  }\n  /**\n   * Interrupts all children of the current fiber, returning an effect that will\n   * await the exit of the children. This method will return null if the fiber\n   * has no children.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  interruptAllChildren() {\n    if (this.sendInterruptSignalToAllChildren()) {\n      const it = this._children.values();\n      this._children = null;\n      let isDone = false;\n      const body = () => {\n        const next = it.next();\n        if (!next.done) {\n          return core.asVoid(next.value.await);\n        } else {\n          return core.sync(() => {\n            isDone = true;\n          });\n        }\n      };\n      return core.whileLoop({\n        while: () => !isDone,\n        body,\n        step: () => {\n          //\n        }\n      });\n    }\n    return null;\n  }\n  reportExitValue(exit) {\n    if (runtimeFlags_.runtimeMetrics(this.currentRuntimeFlags)) {\n      const tags = this.getFiberRef(core.currentMetricLabels);\n      const startTimeMillis = this.id().startTimeMillis;\n      const endTimeMillis = Date.now();\n      fiberLifetimes.unsafeUpdate(endTimeMillis - startTimeMillis, tags);\n      fiberActive.unsafeUpdate(-1, tags);\n      switch (exit._tag) {\n        case OpCodes.OP_SUCCESS:\n          {\n            fiberSuccesses.unsafeUpdate(1, tags);\n            break;\n          }\n        case OpCodes.OP_FAILURE:\n          {\n            fiberFailures.unsafeUpdate(1, tags);\n            break;\n          }\n      }\n    }\n    if (exit._tag === \"Failure\") {\n      const level = this.getFiberRef(core.currentUnhandledErrorLogLevel);\n      if (!internalCause.isInterruptedOnly(exit.cause) && level._tag === \"Some\") {\n        this.log(\"Fiber terminated with an unhandled error\", exit.cause, level);\n      }\n    }\n  }\n  setExitValue(exit) {\n    this._exitValue = exit;\n    this.reportExitValue(exit);\n    for (let i = this._observers.length - 1; i >= 0; i--) {\n      this._observers[i](exit);\n    }\n    this._observers = [];\n  }\n  getLoggers() {\n    return this.getFiberRef(currentLoggers);\n  }\n  log(message, cause, overrideLogLevel) {\n    const logLevel = Option.isSome(overrideLogLevel) ? overrideLogLevel.value : this.getFiberRef(core.currentLogLevel);\n    const minimumLogLevel = this.getFiberRef(currentMinimumLogLevel);\n    if (LogLevel.greaterThan(minimumLogLevel, logLevel)) {\n      return;\n    }\n    const spans = this.getFiberRef(core.currentLogSpan);\n    const annotations = this.getFiberRef(core.currentLogAnnotations);\n    const loggers = this.getLoggers();\n    const contextMap = this.getFiberRefs();\n    if (HashSet.size(loggers) > 0) {\n      const clockService = Context.get(this.getFiberRef(defaultServices.currentServices), clock.clockTag);\n      const date = new Date(clockService.unsafeCurrentTimeMillis());\n      Inspectable.withRedactableContext(contextMap, () => {\n        for (const logger of loggers) {\n          logger.log({\n            fiberId: this.id(),\n            logLevel,\n            message,\n            cause,\n            context: contextMap,\n            spans,\n            annotations,\n            date\n          });\n        }\n      });\n    }\n  }\n  /**\n   * Evaluates a single message on the current thread, while the fiber is\n   * suspended. This method should only be called while evaluation of the\n   * fiber's effect is suspended due to an asynchronous operation.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  evaluateMessageWhileSuspended(message) {\n    switch (message._tag) {\n      case FiberMessage.OP_YIELD_NOW:\n        {\n          return EvaluationSignalYieldNow;\n        }\n      case FiberMessage.OP_INTERRUPT_SIGNAL:\n        {\n          this.processNewInterruptSignal(message.cause);\n          if (this._asyncInterruptor !== null) {\n            this._asyncInterruptor(core.exitFailCause(message.cause));\n            this._asyncInterruptor = null;\n          }\n          return EvaluationSignalContinue;\n        }\n      case FiberMessage.OP_RESUME:\n        {\n          this._asyncInterruptor = null;\n          this._asyncBlockingOn = null;\n          this.evaluateEffect(message.effect);\n          return EvaluationSignalContinue;\n        }\n      case FiberMessage.OP_STATEFUL:\n        {\n          message.onFiber(this, this._exitValue !== null ? FiberStatus.done : FiberStatus.suspended(this.currentRuntimeFlags, this._asyncBlockingOn));\n          return EvaluationSignalContinue;\n        }\n      default:\n        {\n          return absurd(message);\n        }\n    }\n  }\n  /**\n   * Evaluates an effect until completion, potentially asynchronously.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  evaluateEffect(effect0) {\n    this.currentSupervisor.onResume(this);\n    try {\n      let effect = runtimeFlags_.interruptible(this.currentRuntimeFlags) && this.isInterrupted() ? core.exitFailCause(this.getInterruptedCause()) : effect0;\n      while (effect !== null) {\n        const eff = effect;\n        const exit = this.runLoop(eff);\n        if (exit === YieldedOp) {\n          const op = yieldedOpChannel.currentOp;\n          yieldedOpChannel.currentOp = null;\n          if (op._op === OpCodes.OP_YIELD) {\n            if (runtimeFlags_.cooperativeYielding(this.currentRuntimeFlags)) {\n              this.tell(FiberMessage.yieldNow());\n              this.tell(FiberMessage.resume(core.exitVoid));\n              effect = null;\n            } else {\n              effect = core.exitVoid;\n            }\n          } else if (op._op === OpCodes.OP_ASYNC) {\n            // Terminate this evaluation, async resumption will continue evaluation:\n            effect = null;\n          }\n        } else {\n          this.currentRuntimeFlags = pipe(this.currentRuntimeFlags, runtimeFlags_.enable(runtimeFlags_.WindDown));\n          const interruption = this.interruptAllChildren();\n          if (interruption !== null) {\n            effect = core.flatMap(interruption, () => exit);\n          } else {\n            if (this._queue.length === 0) {\n              // No more messages to process, so we will allow the fiber to end life:\n              this.setExitValue(exit);\n            } else {\n              // There are messages, possibly added by the final op executed by\n              // the fiber. To be safe, we should execute those now before we\n              // allow the fiber to end life:\n              this.tell(FiberMessage.resume(exit));\n            }\n            effect = null;\n          }\n        }\n      }\n    } finally {\n      this.currentSupervisor.onSuspend(this);\n    }\n  }\n  /**\n   * Begins execution of the effect associated with this fiber on the current\n   * thread. This can be called to \"kick off\" execution of a fiber after it has\n   * been created, in hopes that the effect can be executed synchronously.\n   *\n   * This is not the normal way of starting a fiber, but it is useful when the\n   * express goal of executing the fiber is to synchronously produce its exit.\n   */\n  start(effect) {\n    if (!this._running) {\n      this._running = true;\n      const prev = globalThis[internalFiber.currentFiberURI];\n      globalThis[internalFiber.currentFiberURI] = this;\n      try {\n        this.evaluateEffect(effect);\n      } finally {\n        this._running = false;\n        globalThis[internalFiber.currentFiberURI] = prev;\n        // Because we're special casing `start`, we have to be responsible\n        // for spinning up the fiber if there were new messages added to\n        // the queue between the completion of the effect and the transition\n        // to the not running state.\n        if (this._queue.length > 0) {\n          this.drainQueueLaterOnExecutor();\n        }\n      }\n    } else {\n      this.tell(FiberMessage.resume(effect));\n    }\n  }\n  /**\n   * Begins execution of the effect associated with this fiber on in the\n   * background, and on the correct thread pool. This can be called to \"kick\n   * off\" execution of a fiber after it has been created, in hopes that the\n   * effect can be executed synchronously.\n   */\n  startFork(effect) {\n    this.tell(FiberMessage.resume(effect));\n  }\n  /**\n   * Takes the current runtime flags, patches them to return the new runtime\n   * flags, and then makes any changes necessary to fiber state based on the\n   * specified patch.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  patchRuntimeFlags(oldRuntimeFlags, patch) {\n    const newRuntimeFlags = runtimeFlags_.patch(oldRuntimeFlags, patch);\n    globalThis[internalFiber.currentFiberURI] = this;\n    this.currentRuntimeFlags = newRuntimeFlags;\n    return newRuntimeFlags;\n  }\n  /**\n   * Initiates an asynchronous operation, by building a callback that will\n   * resume execution, and then feeding that callback to the registration\n   * function, handling error cases and repeated resumptions appropriately.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  initiateAsync(runtimeFlags, asyncRegister) {\n    let alreadyCalled = false;\n    const callback = effect => {\n      if (!alreadyCalled) {\n        alreadyCalled = true;\n        this.tell(FiberMessage.resume(effect));\n      }\n    };\n    if (runtimeFlags_.interruptible(runtimeFlags)) {\n      this._asyncInterruptor = callback;\n    }\n    try {\n      asyncRegister(callback);\n    } catch (e) {\n      callback(core.failCause(internalCause.die(e)));\n    }\n  }\n  pushStack(cont) {\n    this._stack.push(cont);\n    if (cont._op === \"OnStep\") {\n      this._steps.push({\n        refs: this.getFiberRefs(),\n        flags: this.currentRuntimeFlags\n      });\n    }\n  }\n  popStack() {\n    const item = this._stack.pop();\n    if (item) {\n      if (item._op === \"OnStep\") {\n        this._steps.pop();\n      }\n      return item;\n    }\n    return;\n  }\n  getNextSuccessCont() {\n    let frame = this.popStack();\n    while (frame) {\n      if (frame._op !== OpCodes.OP_ON_FAILURE) {\n        return frame;\n      }\n      frame = this.popStack();\n    }\n  }\n  getNextFailCont() {\n    let frame = this.popStack();\n    while (frame) {\n      if (frame._op !== OpCodes.OP_ON_SUCCESS && frame._op !== OpCodes.OP_WHILE && frame._op !== OpCodes.OP_ITERATOR) {\n        return frame;\n      }\n      frame = this.popStack();\n    }\n  }\n  [OpCodes.OP_TAG](op) {\n    return core.sync(() => Context.unsafeGet(this.currentContext, op));\n  }\n  [\"Left\"](op) {\n    return core.fail(op.left);\n  }\n  [\"None\"](_) {\n    return core.fail(new core.NoSuchElementException());\n  }\n  [\"Right\"](op) {\n    return core.exitSucceed(op.right);\n  }\n  [\"Some\"](op) {\n    return core.exitSucceed(op.value);\n  }\n  [\"Micro\"](op) {\n    return core.unsafeAsync(microResume => {\n      let resume = microResume;\n      const fiber = Micro.runFork(Micro.provideContext(op, this.currentContext));\n      fiber.addObserver(exit => {\n        if (exit._tag === \"Success\") {\n          return resume(core.exitSucceed(exit.value));\n        }\n        switch (exit.cause._tag) {\n          case \"Interrupt\":\n            {\n              return resume(core.exitFailCause(internalCause.interrupt(FiberId.none)));\n            }\n          case \"Fail\":\n            {\n              return resume(core.fail(exit.cause.error));\n            }\n          case \"Die\":\n            {\n              return resume(core.die(exit.cause.defect));\n            }\n        }\n      });\n      return core.unsafeAsync(abortResume => {\n        resume = _ => {\n          abortResume(core.void);\n        };\n        fiber.unsafeInterrupt();\n      });\n    });\n  }\n  [OpCodes.OP_SYNC](op) {\n    const value = internalCall(() => op.effect_instruction_i0());\n    const cont = this.getNextSuccessCont();\n    if (cont !== undefined) {\n      if (!(cont._op in contOpSuccess)) {\n        // @ts-expect-error\n        absurd(cont);\n      }\n      // @ts-expect-error\n      return contOpSuccess[cont._op](this, cont, value);\n    } else {\n      yieldedOpChannel.currentOp = core.exitSucceed(value);\n      return YieldedOp;\n    }\n  }\n  [OpCodes.OP_SUCCESS](op) {\n    const oldCur = op;\n    const cont = this.getNextSuccessCont();\n    if (cont !== undefined) {\n      if (!(cont._op in contOpSuccess)) {\n        // @ts-expect-error\n        absurd(cont);\n      }\n      // @ts-expect-error\n      return contOpSuccess[cont._op](this, cont, oldCur.effect_instruction_i0);\n    } else {\n      yieldedOpChannel.currentOp = oldCur;\n      return YieldedOp;\n    }\n  }\n  [OpCodes.OP_FAILURE](op) {\n    const cause = op.effect_instruction_i0;\n    const cont = this.getNextFailCont();\n    if (cont !== undefined) {\n      switch (cont._op) {\n        case OpCodes.OP_ON_FAILURE:\n        case OpCodes.OP_ON_SUCCESS_AND_FAILURE:\n          {\n            if (!(runtimeFlags_.interruptible(this.currentRuntimeFlags) && this.isInterrupted())) {\n              return internalCall(() => cont.effect_instruction_i1(cause));\n            } else {\n              return core.exitFailCause(internalCause.stripFailures(cause));\n            }\n          }\n        case \"OnStep\":\n          {\n            if (!(runtimeFlags_.interruptible(this.currentRuntimeFlags) && this.isInterrupted())) {\n              return core.exitSucceed(core.exitFailCause(cause));\n            } else {\n              return core.exitFailCause(internalCause.stripFailures(cause));\n            }\n          }\n        case OpCodes.OP_REVERT_FLAGS:\n          {\n            this.patchRuntimeFlags(this.currentRuntimeFlags, cont.patch);\n            if (runtimeFlags_.interruptible(this.currentRuntimeFlags) && this.isInterrupted()) {\n              return core.exitFailCause(internalCause.sequential(cause, this.getInterruptedCause()));\n            } else {\n              return core.exitFailCause(cause);\n            }\n          }\n        default:\n          {\n            absurd(cont);\n          }\n      }\n    } else {\n      yieldedOpChannel.currentOp = core.exitFailCause(cause);\n      return YieldedOp;\n    }\n  }\n  [OpCodes.OP_WITH_RUNTIME](op) {\n    return internalCall(() => op.effect_instruction_i0(this, FiberStatus.running(this.currentRuntimeFlags)));\n  }\n  [\"Blocked\"](op) {\n    const refs = this.getFiberRefs();\n    const flags = this.currentRuntimeFlags;\n    if (this._steps.length > 0) {\n      const frames = [];\n      const snap = this._steps[this._steps.length - 1];\n      let frame = this.popStack();\n      while (frame && frame._op !== \"OnStep\") {\n        frames.push(frame);\n        frame = this.popStack();\n      }\n      this.setFiberRefs(snap.refs);\n      this.currentRuntimeFlags = snap.flags;\n      const patchRefs = FiberRefsPatch.diff(snap.refs, refs);\n      const patchFlags = runtimeFlags_.diff(snap.flags, flags);\n      return core.exitSucceed(core.blocked(op.effect_instruction_i0, core.withFiberRuntime(newFiber => {\n        while (frames.length > 0) {\n          newFiber.pushStack(frames.pop());\n        }\n        newFiber.setFiberRefs(FiberRefsPatch.patch(newFiber.id(), newFiber.getFiberRefs())(patchRefs));\n        newFiber.currentRuntimeFlags = runtimeFlags_.patch(patchFlags)(newFiber.currentRuntimeFlags);\n        return op.effect_instruction_i1;\n      })));\n    }\n    return core.uninterruptibleMask(restore => core.flatMap(forkDaemon(core.runRequestBlock(op.effect_instruction_i0)), () => restore(op.effect_instruction_i1)));\n  }\n  [\"RunBlocked\"](op) {\n    return runBlockedRequests(op.effect_instruction_i0);\n  }\n  [OpCodes.OP_UPDATE_RUNTIME_FLAGS](op) {\n    const updateFlags = op.effect_instruction_i0;\n    const oldRuntimeFlags = this.currentRuntimeFlags;\n    const newRuntimeFlags = runtimeFlags_.patch(oldRuntimeFlags, updateFlags);\n    // One more chance to short circuit: if we're immediately going\n    // to interrupt. Interruption will cause immediate reversion of\n    // the flag, so as long as we \"peek ahead\", there's no need to\n    // set them to begin with.\n    if (runtimeFlags_.interruptible(newRuntimeFlags) && this.isInterrupted()) {\n      return core.exitFailCause(this.getInterruptedCause());\n    } else {\n      // Impossible to short circuit, so record the changes\n      this.patchRuntimeFlags(this.currentRuntimeFlags, updateFlags);\n      if (op.effect_instruction_i1) {\n        // Since we updated the flags, we need to revert them\n        const revertFlags = runtimeFlags_.diff(newRuntimeFlags, oldRuntimeFlags);\n        this.pushStack(new core.RevertFlags(revertFlags, op));\n        return internalCall(() => op.effect_instruction_i1(oldRuntimeFlags));\n      } else {\n        return core.exitVoid;\n      }\n    }\n  }\n  [OpCodes.OP_ON_SUCCESS](op) {\n    this.pushStack(op);\n    return op.effect_instruction_i0;\n  }\n  [\"OnStep\"](op) {\n    this.pushStack(op);\n    return op.effect_instruction_i0;\n  }\n  [OpCodes.OP_ON_FAILURE](op) {\n    this.pushStack(op);\n    return op.effect_instruction_i0;\n  }\n  [OpCodes.OP_ON_SUCCESS_AND_FAILURE](op) {\n    this.pushStack(op);\n    return op.effect_instruction_i0;\n  }\n  [OpCodes.OP_ASYNC](op) {\n    this._asyncBlockingOn = op.effect_instruction_i1;\n    this.initiateAsync(this.currentRuntimeFlags, op.effect_instruction_i0);\n    yieldedOpChannel.currentOp = op;\n    return YieldedOp;\n  }\n  [OpCodes.OP_YIELD](op) {\n    this._isYielding = false;\n    yieldedOpChannel.currentOp = op;\n    return YieldedOp;\n  }\n  [OpCodes.OP_WHILE](op) {\n    const check = op.effect_instruction_i0;\n    const body = op.effect_instruction_i1;\n    if (check()) {\n      this.pushStack(op);\n      return body();\n    } else {\n      return core.exitVoid;\n    }\n  }\n  [OpCodes.OP_ITERATOR](op) {\n    return contOpSuccess[OpCodes.OP_ITERATOR](this, op, undefined);\n  }\n  [OpCodes.OP_COMMIT](op) {\n    return internalCall(() => op.commit());\n  }\n  /**\n   * The main run-loop for evaluating effects.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  runLoop(effect0) {\n    let cur = effect0;\n    this.currentOpCount = 0;\n    while (true) {\n      if ((this.currentRuntimeFlags & OpSupervision) !== 0) {\n        this.currentSupervisor.onEffect(this, cur);\n      }\n      if (this._queue.length > 0) {\n        cur = this.drainQueueWhileRunning(this.currentRuntimeFlags, cur);\n      }\n      if (!this._isYielding) {\n        this.currentOpCount += 1;\n        const shouldYield = this.currentScheduler.shouldYield(this);\n        if (shouldYield !== false) {\n          this._isYielding = true;\n          this.currentOpCount = 0;\n          const oldCur = cur;\n          cur = core.flatMap(core.yieldNow({\n            priority: shouldYield\n          }), () => oldCur);\n        }\n      }\n      try {\n        // @ts-expect-error\n        cur = this.currentTracer.context(() => {\n          if (_version !== cur[core.EffectTypeId]._V) {\n            return core.dieMessage(`Cannot execute an Effect versioned ${cur[core.EffectTypeId]._V} with a Runtime of version ${version.getCurrentVersion()}`);\n          }\n          // @ts-expect-error\n          return this[cur._op](cur);\n        }, this);\n        if (cur === YieldedOp) {\n          const op = yieldedOpChannel.currentOp;\n          if (op._op === OpCodes.OP_YIELD || op._op === OpCodes.OP_ASYNC) {\n            return YieldedOp;\n          }\n          yieldedOpChannel.currentOp = null;\n          return op._op === OpCodes.OP_SUCCESS || op._op === OpCodes.OP_FAILURE ? op : core.exitFailCause(internalCause.die(op));\n        }\n      } catch (e) {\n        if (cur !== YieldedOp && !Predicate.hasProperty(cur, \"_op\") || !(cur._op in this)) {\n          cur = core.dieMessage(`Not a valid effect: ${Inspectable.toStringUnknown(cur)}`);\n        } else if (core.isInterruptedException(e)) {\n          cur = core.exitFailCause(internalCause.sequential(internalCause.die(e), internalCause.interrupt(FiberId.none)));\n        } else {\n          cur = core.die(e);\n        }\n      }\n    }\n  }\n  run = () => {\n    this.drainQueueOnCurrentThread();\n  };\n}\n// circular with Logger\n/** @internal */\nexport const currentMinimumLogLevel = /*#__PURE__*/globalValue(\"effect/FiberRef/currentMinimumLogLevel\", () => core.fiberRefUnsafeMake(LogLevel.fromLiteral(\"Info\")));\n/** @internal */\nexport const loggerWithConsoleLog = self => internalLogger.makeLogger(opts => {\n  const services = FiberRefs.getOrDefault(opts.context, defaultServices.currentServices);\n  Context.get(services, consoleTag).unsafe.log(self.log(opts));\n});\n/** @internal */\nexport const loggerWithLeveledLog = self => internalLogger.makeLogger(opts => {\n  const services = FiberRefs.getOrDefault(opts.context, defaultServices.currentServices);\n  const unsafeLogger = Context.get(services, consoleTag).unsafe;\n  switch (opts.logLevel._tag) {\n    case \"Debug\":\n      return unsafeLogger.debug(self.log(opts));\n    case \"Info\":\n      return unsafeLogger.info(self.log(opts));\n    case \"Trace\":\n      return unsafeLogger.trace(self.log(opts));\n    case \"Warning\":\n      return unsafeLogger.warn(self.log(opts));\n    case \"Error\":\n    case \"Fatal\":\n      return unsafeLogger.error(self.log(opts));\n    default:\n      return unsafeLogger.log(self.log(opts));\n  }\n});\n/** @internal */\nexport const loggerWithConsoleError = self => internalLogger.makeLogger(opts => {\n  const services = FiberRefs.getOrDefault(opts.context, defaultServices.currentServices);\n  Context.get(services, consoleTag).unsafe.error(self.log(opts));\n});\n/** @internal */\nexport const defaultLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/defaultLogger\"), () => loggerWithConsoleLog(internalLogger.stringLogger));\n/** @internal */\nexport const jsonLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/jsonLogger\"), () => loggerWithConsoleLog(internalLogger.jsonLogger));\n/** @internal */\nexport const logFmtLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/logFmtLogger\"), () => loggerWithConsoleLog(internalLogger.logfmtLogger));\n/** @internal */\nexport const prettyLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/prettyLogger\"), () => internalLogger.prettyLoggerDefault);\n/** @internal */\nexport const structuredLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/structuredLogger\"), () => loggerWithConsoleLog(internalLogger.structuredLogger));\n/** @internal */\nexport const tracerLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/tracerLogger\"), () => internalLogger.makeLogger(({\n  annotations,\n  cause,\n  context,\n  fiberId,\n  logLevel,\n  message\n}) => {\n  const span = Context.getOption(fiberRefs.getOrDefault(context, core.currentContext), tracer.spanTag);\n  if (span._tag === \"None\" || span.value._tag === \"ExternalSpan\") {\n    return;\n  }\n  const clockService = Context.unsafeGet(fiberRefs.getOrDefault(context, defaultServices.currentServices), clock.clockTag);\n  const attributes = {};\n  for (const [key, value] of annotations) {\n    attributes[key] = value;\n  }\n  attributes[\"effect.fiberId\"] = FiberId.threadName(fiberId);\n  attributes[\"effect.logLevel\"] = logLevel.label;\n  if (cause !== null && cause._tag !== \"Empty\") {\n    attributes[\"effect.cause\"] = internalCause.pretty(cause, {\n      renderErrorCause: true\n    });\n  }\n  span.value.event(Inspectable.toStringUnknown(Array.isArray(message) ? message[0] : message), clockService.unsafeCurrentTimeNanos(), attributes);\n}));\n/** @internal */\nexport const loggerWithSpanAnnotations = self => internalLogger.mapInputOptions(self, options => {\n  const span = Option.flatMap(fiberRefs.get(options.context, core.currentContext), Context.getOption(tracer.spanTag));\n  if (span._tag === \"None\") {\n    return options;\n  }\n  return {\n    ...options,\n    annotations: pipe(options.annotations, HashMap.set(\"effect.traceId\", span.value.traceId), HashMap.set(\"effect.spanId\", span.value.spanId), span.value._tag === \"Span\" ? HashMap.set(\"effect.spanName\", span.value.name) : identity)\n  };\n});\n/** @internal */\nexport const currentLoggers = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLoggers\"), () => core.fiberRefUnsafeMakeHashSet(HashSet.make(defaultLogger, tracerLogger)));\n/** @internal */\nexport const batchedLogger = /*#__PURE__*/dual(3, (self, window, f) => core.flatMap(scope, scope => {\n  let buffer = [];\n  const flush = core.suspend(() => {\n    if (buffer.length === 0) {\n      return core.void;\n    }\n    const arr = buffer;\n    buffer = [];\n    return f(arr);\n  });\n  return core.uninterruptibleMask(restore => pipe(internalEffect.sleep(window), core.zipRight(flush), internalEffect.forever, restore, forkDaemon, core.flatMap(fiber => core.scopeAddFinalizer(scope, core.interruptFiber(fiber))), core.zipRight(addFinalizer(() => flush)), core.as(internalLogger.makeLogger(options => {\n    buffer.push(self.log(options));\n  }))));\n}));\nexport const annotateLogsScoped = function () {\n  if (typeof arguments[0] === \"string\") {\n    return fiberRefLocallyScopedWith(core.currentLogAnnotations, HashMap.set(arguments[0], arguments[1]));\n  }\n  const entries = Object.entries(arguments[0]);\n  return fiberRefLocallyScopedWith(core.currentLogAnnotations, HashMap.mutate(annotations => {\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i];\n      HashMap.set(annotations, key, value);\n    }\n    return annotations;\n  }));\n};\n/** @internal */\nexport const whenLogLevel = /*#__PURE__*/dual(2, (effect, level) => {\n  const requiredLogLevel = typeof level === \"string\" ? LogLevel.fromLiteral(level) : level;\n  return core.withFiberRuntime(fiberState => {\n    const minimumLogLevel = fiberState.getFiberRef(currentMinimumLogLevel);\n    // Imitate the behaviour of `FiberRuntime.log`\n    if (LogLevel.greaterThan(minimumLogLevel, requiredLogLevel)) {\n      return core.succeed(Option.none());\n    }\n    return core.map(effect, Option.some);\n  });\n});\n// circular with Effect\n/* @internal */\nexport const acquireRelease = /*#__PURE__*/dual(args => core.isEffect(args[0]), (acquire, release) => core.uninterruptible(core.tap(acquire, a => addFinalizer(exit => release(a, exit)))));\n/* @internal */\nexport const acquireReleaseInterruptible = /*#__PURE__*/dual(args => core.isEffect(args[0]), (acquire, release) => ensuring(acquire, addFinalizer(exit => release(exit))));\n/* @internal */\nexport const addFinalizer = finalizer => core.withFiberRuntime(runtime => {\n  const acquireRefs = runtime.getFiberRefs();\n  const acquireFlags = runtime.currentRuntimeFlags;\n  return core.flatMap(scope, scope => core.scopeAddFinalizerExit(scope, exit => core.withFiberRuntime(runtimeFinalizer => {\n    const preRefs = runtimeFinalizer.getFiberRefs();\n    const preFlags = runtimeFinalizer.currentRuntimeFlags;\n    const patchRefs = FiberRefsPatch.diff(preRefs, acquireRefs);\n    const patchFlags = runtimeFlags_.diff(preFlags, acquireFlags);\n    const inverseRefs = FiberRefsPatch.diff(acquireRefs, preRefs);\n    runtimeFinalizer.setFiberRefs(FiberRefsPatch.patch(patchRefs, runtimeFinalizer.id(), acquireRefs));\n    return ensuring(core.withRuntimeFlags(finalizer(exit), patchFlags), core.sync(() => {\n      runtimeFinalizer.setFiberRefs(FiberRefsPatch.patch(inverseRefs, runtimeFinalizer.id(), runtimeFinalizer.getFiberRefs()));\n    }));\n  })));\n});\n/* @internal */\nexport const daemonChildren = self => {\n  const forkScope = core.fiberRefLocally(core.currentForkScopeOverride, Option.some(fiberScope.globalScope));\n  return forkScope(self);\n};\n/** @internal */\nconst _existsParFound = /*#__PURE__*/Symbol.for(\"effect/Effect/existsPar/found\");\n/* @internal */\nexport const exists = /*#__PURE__*/dual(args => Predicate.isIterable(args[0]) && !core.isEffect(args[0]), (elements, predicate, options) => concurrency.matchSimple(options?.concurrency, () => core.suspend(() => existsLoop(elements[Symbol.iterator](), 0, predicate)), () => core.matchEffect(forEach(elements, (a, i) => core.if_(predicate(a, i), {\n  onTrue: () => core.fail(_existsParFound),\n  onFalse: () => core.void\n}), options), {\n  onFailure: e => e === _existsParFound ? core.succeed(true) : core.fail(e),\n  onSuccess: () => core.succeed(false)\n})));\nconst existsLoop = (iterator, index, f) => {\n  const next = iterator.next();\n  if (next.done) {\n    return core.succeed(false);\n  }\n  return pipe(core.flatMap(f(next.value, index), b => b ? core.succeed(b) : existsLoop(iterator, index + 1, f)));\n};\n/* @internal */\nexport const filter = /*#__PURE__*/dual(args => Predicate.isIterable(args[0]) && !core.isEffect(args[0]), (elements, predicate, options) => {\n  const predicate_ = options?.negate ? (a, i) => core.map(predicate(a, i), Boolean.not) : predicate;\n  return concurrency.matchSimple(options?.concurrency, () => core.suspend(() => RA.fromIterable(elements).reduceRight((effect, a, i) => core.zipWith(effect, core.suspend(() => predicate_(a, i)), (list, b) => b ? [a, ...list] : list), core.sync(() => new Array()))), () => core.map(forEach(elements, (a, i) => core.map(predicate_(a, i), b => b ? Option.some(a) : Option.none()), options), RA.getSomes));\n});\n// === all\nconst allResolveInput = input => {\n  if (Array.isArray(input) || Predicate.isIterable(input)) {\n    return [input, Option.none()];\n  }\n  const keys = Object.keys(input);\n  const size = keys.length;\n  return [keys.map(k => input[k]), Option.some(values => {\n    const res = {};\n    for (let i = 0; i < size; i++) {\n      ;\n      res[keys[i]] = values[i];\n    }\n    return res;\n  })];\n};\nconst allValidate = (effects, reconcile, options) => {\n  const eitherEffects = [];\n  for (const effect of effects) {\n    eitherEffects.push(core.either(effect));\n  }\n  return core.flatMap(forEach(eitherEffects, identity, {\n    concurrency: options?.concurrency,\n    batching: options?.batching,\n    concurrentFinalizers: options?.concurrentFinalizers\n  }), eithers => {\n    const none = Option.none();\n    const size = eithers.length;\n    const errors = new Array(size);\n    const successes = new Array(size);\n    let errored = false;\n    for (let i = 0; i < size; i++) {\n      const either = eithers[i];\n      if (either._tag === \"Left\") {\n        errors[i] = Option.some(either.left);\n        errored = true;\n      } else {\n        successes[i] = either.right;\n        errors[i] = none;\n      }\n    }\n    if (errored) {\n      return reconcile._tag === \"Some\" ? core.fail(reconcile.value(errors)) : core.fail(errors);\n    } else if (options?.discard) {\n      return core.void;\n    }\n    return reconcile._tag === \"Some\" ? core.succeed(reconcile.value(successes)) : core.succeed(successes);\n  });\n};\nconst allEither = (effects, reconcile, options) => {\n  const eitherEffects = [];\n  for (const effect of effects) {\n    eitherEffects.push(core.either(effect));\n  }\n  if (options?.discard) {\n    return forEach(eitherEffects, identity, {\n      concurrency: options?.concurrency,\n      batching: options?.batching,\n      discard: true,\n      concurrentFinalizers: options?.concurrentFinalizers\n    });\n  }\n  return core.map(forEach(eitherEffects, identity, {\n    concurrency: options?.concurrency,\n    batching: options?.batching,\n    concurrentFinalizers: options?.concurrentFinalizers\n  }), eithers => reconcile._tag === \"Some\" ? reconcile.value(eithers) : eithers);\n};\n/* @internal */\nexport const all = (arg, options) => {\n  const [effects, reconcile] = allResolveInput(arg);\n  if (options?.mode === \"validate\") {\n    return allValidate(effects, reconcile, options);\n  } else if (options?.mode === \"either\") {\n    return allEither(effects, reconcile, options);\n  }\n  return options?.discard !== true && reconcile._tag === \"Some\" ? core.map(forEach(effects, identity, options), reconcile.value) : forEach(effects, identity, options);\n};\n/* @internal */\nexport const allWith = options => arg => all(arg, options);\n/* @internal */\nexport const allSuccesses = (elements, options) => core.map(all(RA.fromIterable(elements).map(core.exit), options), RA.filterMap(exit => core.exitIsSuccess(exit) ? Option.some(exit.effect_instruction_i0) : Option.none()));\n/* @internal */\nexport const replicate = /*#__PURE__*/dual(2, (self, n) => Array.from({\n  length: n\n}, () => self));\n/* @internal */\nexport const replicateEffect = /*#__PURE__*/dual(args => core.isEffect(args[0]), (self, n, options) => all(replicate(self, n), options));\n/* @internal */\nexport const forEach = /*#__PURE__*/dual(args => Predicate.isIterable(args[0]), (self, f, options) => core.withFiberRuntime(r => {\n  const isRequestBatchingEnabled = options?.batching === true || options?.batching === \"inherit\" && r.getFiberRef(core.currentRequestBatching);\n  if (options?.discard) {\n    return concurrency.match(options.concurrency, () => finalizersMaskInternal(ExecutionStrategy.sequential, options?.concurrentFinalizers)(restore => isRequestBatchingEnabled ? forEachConcurrentDiscard(self, (a, i) => restore(f(a, i)), true, false, 1) : core.forEachSequentialDiscard(self, (a, i) => restore(f(a, i)))), () => finalizersMaskInternal(ExecutionStrategy.parallel, options?.concurrentFinalizers)(restore => forEachConcurrentDiscard(self, (a, i) => restore(f(a, i)), isRequestBatchingEnabled, false)), n => finalizersMaskInternal(ExecutionStrategy.parallelN(n), options?.concurrentFinalizers)(restore => forEachConcurrentDiscard(self, (a, i) => restore(f(a, i)), isRequestBatchingEnabled, false, n)));\n  }\n  return concurrency.match(options?.concurrency, () => finalizersMaskInternal(ExecutionStrategy.sequential, options?.concurrentFinalizers)(restore => isRequestBatchingEnabled ? forEachParN(self, 1, (a, i) => restore(f(a, i)), true) : core.forEachSequential(self, (a, i) => restore(f(a, i)))), () => finalizersMaskInternal(ExecutionStrategy.parallel, options?.concurrentFinalizers)(restore => forEachParUnbounded(self, (a, i) => restore(f(a, i)), isRequestBatchingEnabled)), n => finalizersMaskInternal(ExecutionStrategy.parallelN(n), options?.concurrentFinalizers)(restore => forEachParN(self, n, (a, i) => restore(f(a, i)), isRequestBatchingEnabled)));\n}));\n/* @internal */\nexport const forEachParUnbounded = (self, f, batching) => core.suspend(() => {\n  const as = RA.fromIterable(self);\n  const array = new Array(as.length);\n  const fn = (a, i) => core.flatMap(f(a, i), b => core.sync(() => array[i] = b));\n  return core.zipRight(forEachConcurrentDiscard(as, fn, batching, false), core.succeed(array));\n});\n/** @internal */\nexport const forEachConcurrentDiscard = (self, f, batching, processAll, n) => core.uninterruptibleMask(restore => core.transplant(graft => core.withFiberRuntime(parent => {\n  let todos = Array.from(self).reverse();\n  let target = todos.length;\n  if (target === 0) {\n    return core.void;\n  }\n  let counter = 0;\n  let interrupted = false;\n  const fibersCount = n ? Math.min(todos.length, n) : todos.length;\n  const fibers = new Set();\n  const results = new Array();\n  const interruptAll = () => fibers.forEach(fiber => {\n    fiber.currentScheduler.scheduleTask(() => {\n      fiber.unsafeInterruptAsFork(parent.id());\n    }, 0);\n  });\n  const startOrder = new Array();\n  const joinOrder = new Array();\n  const residual = new Array();\n  const collectExits = () => {\n    const exits = results.filter(({\n      exit\n    }) => exit._tag === \"Failure\").sort((a, b) => a.index < b.index ? -1 : a.index === b.index ? 0 : 1).map(({\n      exit\n    }) => exit);\n    if (exits.length === 0) {\n      exits.push(core.exitVoid);\n    }\n    return exits;\n  };\n  const runFiber = (eff, interruptImmediately = false) => {\n    const runnable = core.uninterruptible(graft(eff));\n    const fiber = unsafeForkUnstarted(runnable, parent, parent.currentRuntimeFlags, fiberScope.globalScope);\n    parent.currentScheduler.scheduleTask(() => {\n      if (interruptImmediately) {\n        fiber.unsafeInterruptAsFork(parent.id());\n      }\n      fiber.resume(runnable);\n    }, 0);\n    return fiber;\n  };\n  const onInterruptSignal = () => {\n    if (!processAll) {\n      target -= todos.length;\n      todos = [];\n    }\n    interrupted = true;\n    interruptAll();\n  };\n  const stepOrExit = batching ? core.step : core.exit;\n  const processingFiber = runFiber(core.async(resume => {\n    const pushResult = (res, index) => {\n      if (res._op === \"Blocked\") {\n        residual.push(res);\n      } else {\n        results.push({\n          index,\n          exit: res\n        });\n        if (res._op === \"Failure\" && !interrupted) {\n          onInterruptSignal();\n        }\n      }\n    };\n    const next = () => {\n      if (todos.length > 0) {\n        const a = todos.pop();\n        let index = counter++;\n        const returnNextElement = () => {\n          const a = todos.pop();\n          index = counter++;\n          return core.flatMap(core.yieldNow(), () => core.flatMap(stepOrExit(restore(f(a, index))), onRes));\n        };\n        const onRes = res => {\n          if (todos.length > 0) {\n            pushResult(res, index);\n            if (todos.length > 0) {\n              return returnNextElement();\n            }\n          }\n          return core.succeed(res);\n        };\n        const todo = core.flatMap(stepOrExit(restore(f(a, index))), onRes);\n        const fiber = runFiber(todo);\n        startOrder.push(fiber);\n        fibers.add(fiber);\n        if (interrupted) {\n          fiber.currentScheduler.scheduleTask(() => {\n            fiber.unsafeInterruptAsFork(parent.id());\n          }, 0);\n        }\n        fiber.addObserver(wrapped => {\n          let exit;\n          if (wrapped._op === \"Failure\") {\n            exit = wrapped;\n          } else {\n            exit = wrapped.effect_instruction_i0;\n          }\n          joinOrder.push(fiber);\n          fibers.delete(fiber);\n          pushResult(exit, index);\n          if (results.length === target) {\n            resume(core.succeed(Option.getOrElse(core.exitCollectAll(collectExits(), {\n              parallel: true\n            }), () => core.exitVoid)));\n          } else if (residual.length + results.length === target) {\n            const exits = collectExits();\n            const requests = residual.map(blocked => blocked.effect_instruction_i0).reduce(RequestBlock_.par);\n            resume(core.succeed(core.blocked(requests, forEachConcurrentDiscard([Option.getOrElse(core.exitCollectAll(exits, {\n              parallel: true\n            }), () => core.exitVoid), ...residual.map(blocked => blocked.effect_instruction_i1)], i => i, batching, true, n))));\n          } else {\n            next();\n          }\n        });\n      }\n    };\n    for (let i = 0; i < fibersCount; i++) {\n      next();\n    }\n  }));\n  return core.asVoid(core.onExit(core.flatten(restore(internalFiber.join(processingFiber))), core.exitMatch({\n    onFailure: cause => {\n      onInterruptSignal();\n      const target = residual.length + 1;\n      const concurrency = Math.min(typeof n === \"number\" ? n : residual.length, residual.length);\n      const toPop = Array.from(residual);\n      return core.async(cb => {\n        const exits = [];\n        let count = 0;\n        let index = 0;\n        const check = (index, hitNext) => exit => {\n          exits[index] = exit;\n          count++;\n          if (count === target) {\n            cb(core.exitSucceed(core.exitFailCause(cause)));\n          }\n          if (toPop.length > 0 && hitNext) {\n            next();\n          }\n        };\n        const next = () => {\n          runFiber(toPop.pop(), true).addObserver(check(index, true));\n          index++;\n        };\n        processingFiber.addObserver(check(index, false));\n        index++;\n        for (let i = 0; i < concurrency; i++) {\n          next();\n        }\n      });\n    },\n    onSuccess: () => core.forEachSequential(joinOrder, f => f.inheritAll)\n  })));\n})));\n/* @internal */\nexport const forEachParN = (self, n, f, batching) => core.suspend(() => {\n  const as = RA.fromIterable(self);\n  const array = new Array(as.length);\n  const fn = (a, i) => core.map(f(a, i), b => array[i] = b);\n  return core.zipRight(forEachConcurrentDiscard(as, fn, batching, false, n), core.succeed(array));\n});\n/* @internal */\nexport const fork = self => core.withFiberRuntime((state, status) => core.succeed(unsafeFork(self, state, status.runtimeFlags)));\n/* @internal */\nexport const forkDaemon = self => forkWithScopeOverride(self, fiberScope.globalScope);\n/* @internal */\nexport const forkWithErrorHandler = /*#__PURE__*/dual(2, (self, handler) => fork(core.onError(self, cause => {\n  const either = internalCause.failureOrCause(cause);\n  switch (either._tag) {\n    case \"Left\":\n      return handler(either.left);\n    case \"Right\":\n      return core.failCause(either.right);\n  }\n})));\n/** @internal */\nexport const unsafeFork = (effect, parentFiber, parentRuntimeFlags, overrideScope = null) => {\n  const childFiber = unsafeMakeChildFiber(effect, parentFiber, parentRuntimeFlags, overrideScope);\n  childFiber.resume(effect);\n  return childFiber;\n};\n/** @internal */\nexport const unsafeForkUnstarted = (effect, parentFiber, parentRuntimeFlags, overrideScope = null) => {\n  const childFiber = unsafeMakeChildFiber(effect, parentFiber, parentRuntimeFlags, overrideScope);\n  return childFiber;\n};\n/** @internal */\nexport const unsafeMakeChildFiber = (effect, parentFiber, parentRuntimeFlags, overrideScope = null) => {\n  const childId = FiberId.unsafeMake();\n  const parentFiberRefs = parentFiber.getFiberRefs();\n  const childFiberRefs = fiberRefs.forkAs(parentFiberRefs, childId);\n  const childFiber = new FiberRuntime(childId, childFiberRefs, parentRuntimeFlags);\n  const childContext = fiberRefs.getOrDefault(childFiberRefs, core.currentContext);\n  const supervisor = childFiber.currentSupervisor;\n  supervisor.onStart(childContext, effect, Option.some(parentFiber), childFiber);\n  childFiber.addObserver(exit => supervisor.onEnd(exit, childFiber));\n  const parentScope = overrideScope !== null ? overrideScope : pipe(parentFiber.getFiberRef(core.currentForkScopeOverride), Option.getOrElse(() => parentFiber.scope()));\n  parentScope.add(parentRuntimeFlags, childFiber);\n  return childFiber;\n};\n/* @internal */\nconst forkWithScopeOverride = (self, scopeOverride) => core.withFiberRuntime((parentFiber, parentStatus) => core.succeed(unsafeFork(self, parentFiber, parentStatus.runtimeFlags, scopeOverride)));\n/* @internal */\nexport const mergeAll = /*#__PURE__*/dual(args => Predicate.isFunction(args[2]), (elements, zero, f, options) => concurrency.matchSimple(options?.concurrency, () => RA.fromIterable(elements).reduce((acc, a, i) => core.zipWith(acc, a, (acc, a) => f(acc, a, i)), core.succeed(zero)), () => core.flatMap(Ref.make(zero), acc => core.flatMap(forEach(elements, (effect, i) => core.flatMap(effect, a => Ref.update(acc, b => f(b, a, i))), options), () => Ref.get(acc)))));\n/* @internal */\nexport const partition = /*#__PURE__*/dual(args => Predicate.isIterable(args[0]), (elements, f, options) => pipe(forEach(elements, (a, i) => core.either(f(a, i)), options), core.map(chunk => core.partitionMap(chunk, identity))));\n/* @internal */\nexport const validateAll = /*#__PURE__*/dual(args => Predicate.isIterable(args[0]), (elements, f, options) => core.flatMap(partition(elements, f, {\n  concurrency: options?.concurrency,\n  batching: options?.batching,\n  concurrentFinalizers: options?.concurrentFinalizers\n}), ([es, bs]) => RA.isNonEmptyArray(es) ? core.fail(es) : options?.discard ? core.void : core.succeed(bs)));\n/* @internal */\nexport const raceAll = all => {\n  const list = Chunk.fromIterable(all);\n  if (!Chunk.isNonEmpty(list)) {\n    return core.dieSync(() => new core.IllegalArgumentException(`Received an empty collection of effects`));\n  }\n  const self = Chunk.headNonEmpty(list);\n  const effects = Chunk.tailNonEmpty(list);\n  const inheritAll = res => pipe(internalFiber.inheritAll(res[1]), core.as(res[0]));\n  return pipe(core.deferredMake(), core.flatMap(done => pipe(Ref.make(effects.length), core.flatMap(fails => core.uninterruptibleMask(restore => pipe(fork(core.interruptible(self)), core.flatMap(head => pipe(effects, core.forEachSequential(effect => fork(core.interruptible(effect))), core.map(fibers => Chunk.unsafeFromArray(fibers)), core.map(tail => pipe(tail, Chunk.prepend(head))), core.tap(fibers => pipe(fibers, RA.reduce(core.void, (effect, fiber) => pipe(effect, core.zipRight(pipe(internalFiber._await(fiber), core.flatMap(raceAllArbiter(fibers, fiber, done, fails)), fork, core.asVoid)))))), core.flatMap(fibers => pipe(restore(pipe(Deferred.await(done), core.flatMap(inheritAll))), core.onInterrupt(() => pipe(fibers, RA.reduce(core.void, (effect, fiber) => pipe(effect, core.zipLeft(core.interruptFiber(fiber))))))))))))))));\n};\nconst raceAllArbiter = (fibers, winner, deferred, fails) => exit => core.exitMatchEffect(exit, {\n  onFailure: cause => pipe(Ref.modify(fails, fails => [fails === 0 ? pipe(core.deferredFailCause(deferred, cause), core.asVoid) : core.void, fails - 1]), core.flatten),\n  onSuccess: value => pipe(core.deferredSucceed(deferred, [value, winner]), core.flatMap(set => set ? pipe(Chunk.fromIterable(fibers), RA.reduce(core.void, (effect, fiber) => fiber === winner ? effect : pipe(effect, core.zipLeft(core.interruptFiber(fiber))))) : core.void))\n});\n/* @internal */\nexport const reduceEffect = /*#__PURE__*/dual(args => Predicate.isIterable(args[0]) && !core.isEffect(args[0]), (elements, zero, f, options) => concurrency.matchSimple(options?.concurrency, () => RA.fromIterable(elements).reduce((acc, a, i) => core.zipWith(acc, a, (acc, a) => f(acc, a, i)), zero), () => core.suspend(() => pipe(mergeAll([zero, ...elements], Option.none(), (acc, elem, i) => {\n  switch (acc._tag) {\n    case \"None\":\n      {\n        return Option.some(elem);\n      }\n    case \"Some\":\n      {\n        return Option.some(f(acc.value, elem, i));\n      }\n  }\n}, options), core.map(option => {\n  switch (option._tag) {\n    case \"None\":\n      {\n        throw new Error(\"BUG: Effect.reduceEffect - please report an issue at https://github.com/Effect-TS/effect/issues\");\n      }\n    case \"Some\":\n      {\n        return option.value;\n      }\n  }\n})))));\n/* @internal */\nexport const parallelFinalizers = self => core.contextWithEffect(context => Option.match(Context.getOption(context, scopeTag), {\n  onNone: () => self,\n  onSome: scope => {\n    switch (scope.strategy._tag) {\n      case \"Parallel\":\n        return self;\n      case \"Sequential\":\n      case \"ParallelN\":\n        return core.flatMap(core.scopeFork(scope, ExecutionStrategy.parallel), inner => scopeExtend(self, inner));\n    }\n  }\n}));\n/* @internal */\nexport const parallelNFinalizers = parallelism => self => core.contextWithEffect(context => Option.match(Context.getOption(context, scopeTag), {\n  onNone: () => self,\n  onSome: scope => {\n    if (scope.strategy._tag === \"ParallelN\" && scope.strategy.parallelism === parallelism) {\n      return self;\n    }\n    return core.flatMap(core.scopeFork(scope, ExecutionStrategy.parallelN(parallelism)), inner => scopeExtend(self, inner));\n  }\n}));\n/* @internal */\nexport const finalizersMask = strategy => self => finalizersMaskInternal(strategy, true)(self);\n/* @internal */\nexport const finalizersMaskInternal = (strategy, concurrentFinalizers) => self => core.contextWithEffect(context => Option.match(Context.getOption(context, scopeTag), {\n  onNone: () => self(identity),\n  onSome: scope => {\n    if (concurrentFinalizers === true) {\n      const patch = strategy._tag === \"Parallel\" ? parallelFinalizers : strategy._tag === \"Sequential\" ? sequentialFinalizers : parallelNFinalizers(strategy.parallelism);\n      switch (scope.strategy._tag) {\n        case \"Parallel\":\n          return patch(self(parallelFinalizers));\n        case \"Sequential\":\n          return patch(self(sequentialFinalizers));\n        case \"ParallelN\":\n          return patch(self(parallelNFinalizers(scope.strategy.parallelism)));\n      }\n    } else {\n      return self(identity);\n    }\n  }\n}));\n/* @internal */\nexport const scopeWith = f => core.flatMap(scopeTag, f);\n/** @internal */\nexport const scopedWith = f => core.flatMap(scopeMake(), scope => core.onExit(f(scope), exit => scope.close(exit)));\n/* @internal */\nexport const scopedEffect = effect => core.flatMap(scopeMake(), scope => scopeUse(effect, scope));\n/* @internal */\nexport const sequentialFinalizers = self => core.contextWithEffect(context => Option.match(Context.getOption(context, scopeTag), {\n  onNone: () => self,\n  onSome: scope => {\n    switch (scope.strategy._tag) {\n      case \"Sequential\":\n        return self;\n      case \"Parallel\":\n      case \"ParallelN\":\n        return core.flatMap(core.scopeFork(scope, ExecutionStrategy.sequential), inner => scopeExtend(self, inner));\n    }\n  }\n}));\n/* @internal */\nexport const tagMetricsScoped = (key, value) => labelMetricsScoped([metricLabel.make(key, value)]);\n/* @internal */\nexport const labelMetricsScoped = labels => fiberRefLocallyScopedWith(core.currentMetricLabels, old => RA.union(old, labels));\n/* @internal */\nexport const using = /*#__PURE__*/dual(2, (self, use) => scopedWith(scope => core.flatMap(scopeExtend(self, scope), use)));\n/** @internal */\nexport const validate = /*#__PURE__*/dual(args => core.isEffect(args[1]), (self, that, options) => validateWith(self, that, (a, b) => [a, b], options));\n/** @internal */\nexport const validateWith = /*#__PURE__*/dual(args => core.isEffect(args[1]), (self, that, f, options) => core.flatten(zipWithOptions(core.exit(self), core.exit(that), (ea, eb) => core.exitZipWith(ea, eb, {\n  onSuccess: f,\n  onFailure: (ca, cb) => options?.concurrent ? internalCause.parallel(ca, cb) : internalCause.sequential(ca, cb)\n}), options)));\n/* @internal */\nexport const validateAllPar = /*#__PURE__*/dual(2, (elements, f) => core.flatMap(partition(elements, f), ([es, bs]) => es.length === 0 ? core.succeed(bs) : core.fail(es)));\n/* @internal */\nexport const validateAllParDiscard = /*#__PURE__*/dual(2, (elements, f) => core.flatMap(partition(elements, f), ([es, _]) => es.length === 0 ? core.void : core.fail(es)));\n/* @internal */\nexport const validateFirst = /*#__PURE__*/dual(args => Predicate.isIterable(args[0]), (elements, f, options) => core.flip(forEach(elements, (a, i) => core.flip(f(a, i)), options)));\n/* @internal */\nexport const withClockScoped = c => fiberRefLocallyScopedWith(defaultServices.currentServices, Context.add(clock.clockTag, c));\n/* @internal */\nexport const withRandomScoped = value => fiberRefLocallyScopedWith(defaultServices.currentServices, Context.add(randomTag, value));\n/* @internal */\nexport const withConfigProviderScoped = provider => fiberRefLocallyScopedWith(defaultServices.currentServices, Context.add(configProviderTag, provider));\n/* @internal */\nexport const withEarlyRelease = self => scopeWith(parent => core.flatMap(core.scopeFork(parent, executionStrategy.sequential), child => pipe(self, scopeExtend(child), core.map(value => [core.fiberIdWith(fiberId => core.scopeClose(child, core.exitInterrupt(fiberId))), value]))));\n/** @internal */\nexport const zipOptions = /*#__PURE__*/dual(args => core.isEffect(args[1]), (self, that, options) => zipWithOptions(self, that, (a, b) => [a, b], options));\n/** @internal */\nexport const zipLeftOptions = /*#__PURE__*/dual(args => core.isEffect(args[1]), (self, that, options) => {\n  if (options?.concurrent !== true && (options?.batching === undefined || options.batching === false)) {\n    return core.zipLeft(self, that);\n  }\n  return zipWithOptions(self, that, (a, _) => a, options);\n});\n/** @internal */\nexport const zipRightOptions = /*#__PURE__*/dual(args => core.isEffect(args[1]), (self, that, options) => {\n  if (options?.concurrent !== true && (options?.batching === undefined || options.batching === false)) {\n    return core.zipRight(self, that);\n  }\n  return zipWithOptions(self, that, (_, b) => b, options);\n});\n/** @internal */\nexport const zipWithOptions = /*#__PURE__*/dual(args => core.isEffect(args[1]), (self, that, f, options) => core.map(all([self, that], {\n  concurrency: options?.concurrent ? 2 : 1,\n  batching: options?.batching,\n  concurrentFinalizers: options?.concurrentFinalizers\n}), ([a, a2]) => f(a, a2)));\n/* @internal */\nexport const withRuntimeFlagsScoped = update => {\n  if (update === RuntimeFlagsPatch.empty) {\n    return core.void;\n  }\n  return pipe(core.runtimeFlags, core.flatMap(runtimeFlags => {\n    const updatedRuntimeFlags = runtimeFlags_.patch(runtimeFlags, update);\n    const revertRuntimeFlags = runtimeFlags_.diff(updatedRuntimeFlags, runtimeFlags);\n    return pipe(core.updateRuntimeFlags(update), core.zipRight(addFinalizer(() => core.updateRuntimeFlags(revertRuntimeFlags))), core.asVoid);\n  }), core.uninterruptible);\n};\n// circular with Scope\n/** @internal */\nexport const scopeTag = /*#__PURE__*/Context.GenericTag(\"effect/Scope\");\n/* @internal */\nexport const scope = scopeTag;\nconst scopeUnsafeAddFinalizer = (scope, fin) => {\n  if (scope.state._tag === \"Open\") {\n    scope.state.finalizers.set({}, fin);\n  }\n};\nconst ScopeImplProto = {\n  [core.ScopeTypeId]: core.ScopeTypeId,\n  [core.CloseableScopeTypeId]: core.CloseableScopeTypeId,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  fork(strategy) {\n    return core.sync(() => {\n      const newScope = scopeUnsafeMake(strategy);\n      if (this.state._tag === \"Closed\") {\n        newScope.state = this.state;\n        return newScope;\n      }\n      const key = {};\n      const fin = exit => newScope.close(exit);\n      this.state.finalizers.set(key, fin);\n      scopeUnsafeAddFinalizer(newScope, _ => core.sync(() => {\n        if (this.state._tag === \"Open\") {\n          this.state.finalizers.delete(key);\n        }\n      }));\n      return newScope;\n    });\n  },\n  close(exit) {\n    return core.suspend(() => {\n      if (this.state._tag === \"Closed\") {\n        return core.void;\n      }\n      const finalizers = Array.from(this.state.finalizers.values()).reverse();\n      this.state = {\n        _tag: \"Closed\",\n        exit\n      };\n      if (finalizers.length === 0) {\n        return core.void;\n      }\n      return executionStrategy.isSequential(this.strategy) ? pipe(core.forEachSequential(finalizers, fin => core.exit(fin(exit))), core.flatMap(results => pipe(core.exitCollectAll(results), Option.map(core.exitAsVoid), Option.getOrElse(() => core.exitVoid)))) : executionStrategy.isParallel(this.strategy) ? pipe(forEachParUnbounded(finalizers, fin => core.exit(fin(exit)), false), core.flatMap(results => pipe(core.exitCollectAll(results, {\n        parallel: true\n      }), Option.map(core.exitAsVoid), Option.getOrElse(() => core.exitVoid)))) : pipe(forEachParN(finalizers, this.strategy.parallelism, fin => core.exit(fin(exit)), false), core.flatMap(results => pipe(core.exitCollectAll(results, {\n        parallel: true\n      }), Option.map(core.exitAsVoid), Option.getOrElse(() => core.exitVoid))));\n    });\n  },\n  addFinalizer(fin) {\n    return core.suspend(() => {\n      if (this.state._tag === \"Closed\") {\n        return fin(this.state.exit);\n      }\n      this.state.finalizers.set({}, fin);\n      return core.void;\n    });\n  }\n};\nconst scopeUnsafeMake = (strategy = executionStrategy.sequential) => {\n  const scope = Object.create(ScopeImplProto);\n  scope.strategy = strategy;\n  scope.state = {\n    _tag: \"Open\",\n    finalizers: new Map()\n  };\n  return scope;\n};\n/* @internal */\nexport const scopeMake = (strategy = executionStrategy.sequential) => core.sync(() => scopeUnsafeMake(strategy));\n/* @internal */\nexport const scopeExtend = /*#__PURE__*/dual(2, (effect, scope) => core.mapInputContext(effect,\n// @ts-expect-error\nContext.merge(Context.make(scopeTag, scope))));\n/* @internal */\nexport const scopeUse = /*#__PURE__*/dual(2, (effect, scope) => pipe(effect, scopeExtend(scope), core.onExit(exit => scope.close(exit))));\n// circular with Supervisor\n/** @internal */\nexport const fiberRefUnsafeMakeSupervisor = initial => core.fiberRefUnsafeMakePatch(initial, {\n  differ: SupervisorPatch.differ,\n  fork: SupervisorPatch.empty\n});\n// circular with FiberRef\n/* @internal */\nexport const fiberRefLocallyScoped = /*#__PURE__*/dual(2, (self, value) => core.asVoid(acquireRelease(core.flatMap(core.fiberRefGet(self), oldValue => core.as(core.fiberRefSet(self, value), oldValue)), oldValue => core.fiberRefSet(self, oldValue))));\n/* @internal */\nexport const fiberRefLocallyScopedWith = /*#__PURE__*/dual(2, (self, f) => core.fiberRefGetWith(self, a => fiberRefLocallyScoped(self, f(a))));\n/* @internal */\nexport const fiberRefMake = (initial, options) => fiberRefMakeWith(() => core.fiberRefUnsafeMake(initial, options));\n/* @internal */\nexport const fiberRefMakeWith = ref => acquireRelease(core.tap(core.sync(ref), ref => core.fiberRefUpdate(ref, identity)), fiberRef => core.fiberRefDelete(fiberRef));\n/* @internal */\nexport const fiberRefMakeContext = initial => fiberRefMakeWith(() => core.fiberRefUnsafeMakeContext(initial));\n/* @internal */\nexport const fiberRefMakeRuntimeFlags = initial => fiberRefMakeWith(() => core.fiberRefUnsafeMakeRuntimeFlags(initial));\n/** @internal */\nexport const currentRuntimeFlags = /*#__PURE__*/core.fiberRefUnsafeMakeRuntimeFlags(runtimeFlags_.none);\n/** @internal */\nexport const currentSupervisor = /*#__PURE__*/fiberRefUnsafeMakeSupervisor(supervisor.none);\n// circular with Fiber\n/* @internal */\nexport const fiberAwaitAll = fibers => forEach(fibers, internalFiber._await);\n/** @internal */\nexport const fiberAll = fibers => {\n  const _fiberAll = {\n    ...Effectable.CommitPrototype,\n    commit() {\n      return internalFiber.join(this);\n    },\n    [internalFiber.FiberTypeId]: internalFiber.fiberVariance,\n    id: () => RA.fromIterable(fibers).reduce((id, fiber) => FiberId.combine(id, fiber.id()), FiberId.none),\n    await: core.exit(forEachParUnbounded(fibers, fiber => core.flatten(fiber.await), false)),\n    children: core.map(forEachParUnbounded(fibers, fiber => fiber.children, false), RA.flatten),\n    inheritAll: core.forEachSequentialDiscard(fibers, fiber => fiber.inheritAll),\n    poll: core.map(core.forEachSequential(fibers, fiber => fiber.poll), RA.reduceRight(Option.some(core.exitSucceed(new Array())), (optionB, optionA) => {\n      switch (optionA._tag) {\n        case \"None\":\n          {\n            return Option.none();\n          }\n        case \"Some\":\n          {\n            switch (optionB._tag) {\n              case \"None\":\n                {\n                  return Option.none();\n                }\n              case \"Some\":\n                {\n                  return Option.some(core.exitZipWith(optionA.value, optionB.value, {\n                    onSuccess: (a, chunk) => [a, ...chunk],\n                    onFailure: internalCause.parallel\n                  }));\n                }\n            }\n          }\n      }\n    })),\n    interruptAsFork: fiberId => core.forEachSequentialDiscard(fibers, fiber => fiber.interruptAsFork(fiberId))\n  };\n  return _fiberAll;\n};\n/* @internal */\nexport const fiberInterruptFork = self => core.asVoid(forkDaemon(core.interruptFiber(self)));\n/* @internal */\nexport const fiberJoinAll = fibers => internalFiber.join(fiberAll(fibers));\n/* @internal */\nexport const fiberScoped = self => acquireRelease(core.succeed(self), core.interruptFiber);\n//\n// circular race\n//\n/** @internal */\nexport const raceWith = /*#__PURE__*/dual(3, (self, other, options) => raceFibersWith(self, other, {\n  onSelfWin: (winner, loser) => core.flatMap(winner.await, exit => {\n    switch (exit._tag) {\n      case OpCodes.OP_SUCCESS:\n        {\n          return core.flatMap(winner.inheritAll, () => options.onSelfDone(exit, loser));\n        }\n      case OpCodes.OP_FAILURE:\n        {\n          return options.onSelfDone(exit, loser);\n        }\n    }\n  }),\n  onOtherWin: (winner, loser) => core.flatMap(winner.await, exit => {\n    switch (exit._tag) {\n      case OpCodes.OP_SUCCESS:\n        {\n          return core.flatMap(winner.inheritAll, () => options.onOtherDone(exit, loser));\n        }\n      case OpCodes.OP_FAILURE:\n        {\n          return options.onOtherDone(exit, loser);\n        }\n    }\n  })\n}));\n/** @internal */\nexport const disconnect = self => core.uninterruptibleMask(restore => core.fiberIdWith(fiberId => core.flatMap(forkDaemon(restore(self)), fiber => pipe(restore(internalFiber.join(fiber)), core.onInterrupt(() => pipe(fiber, internalFiber.interruptAsFork(fiberId)))))));\n/** @internal */\nexport const race = /*#__PURE__*/dual(2, (self, that) => core.fiberIdWith(parentFiberId => raceWith(self, that, {\n  onSelfDone: (exit, right) => core.exitMatchEffect(exit, {\n    onFailure: cause => pipe(internalFiber.join(right), internalEffect.mapErrorCause(cause2 => internalCause.parallel(cause, cause2))),\n    onSuccess: value => pipe(right, core.interruptAsFiber(parentFiberId), core.as(value))\n  }),\n  onOtherDone: (exit, left) => core.exitMatchEffect(exit, {\n    onFailure: cause => pipe(internalFiber.join(left), internalEffect.mapErrorCause(cause2 => internalCause.parallel(cause2, cause))),\n    onSuccess: value => pipe(left, core.interruptAsFiber(parentFiberId), core.as(value))\n  })\n})));\n/** @internal */\nexport const raceFibersWith = /*#__PURE__*/dual(3, (self, other, options) => core.withFiberRuntime((parentFiber, parentStatus) => {\n  const parentRuntimeFlags = parentStatus.runtimeFlags;\n  const raceIndicator = MRef.make(true);\n  const leftFiber = unsafeMakeChildFiber(self, parentFiber, parentRuntimeFlags, options.selfScope);\n  const rightFiber = unsafeMakeChildFiber(other, parentFiber, parentRuntimeFlags, options.otherScope);\n  return core.async(cb => {\n    leftFiber.addObserver(() => completeRace(leftFiber, rightFiber, options.onSelfWin, raceIndicator, cb));\n    rightFiber.addObserver(() => completeRace(rightFiber, leftFiber, options.onOtherWin, raceIndicator, cb));\n    leftFiber.startFork(self);\n    rightFiber.startFork(other);\n  }, FiberId.combine(leftFiber.id(), rightFiber.id()));\n}));\nconst completeRace = (winner, loser, cont, ab, cb) => {\n  if (MRef.compareAndSet(true, false)(ab)) {\n    cb(cont(winner, loser));\n  }\n};\n/** @internal */\nexport const ensuring = /*#__PURE__*/dual(2, (self, finalizer) => core.uninterruptibleMask(restore => core.matchCauseEffect(restore(self), {\n  onFailure: cause1 => core.matchCauseEffect(finalizer, {\n    onFailure: cause2 => core.failCause(internalCause.sequential(cause1, cause2)),\n    onSuccess: () => core.failCause(cause1)\n  }),\n  onSuccess: a => core.as(finalizer, a)\n})));\n/** @internal */\nexport const invokeWithInterrupt = (self, entries, onInterrupt) => core.fiberIdWith(id => core.flatMap(core.flatMap(forkDaemon(core.interruptible(self)), processing => core.async(cb => {\n  const counts = entries.map(_ => _.listeners.count);\n  const checkDone = () => {\n    if (counts.every(count => count === 0)) {\n      if (entries.every(_ => {\n        if (_.result.state.current._tag === \"Pending\") {\n          return true;\n        } else if (_.result.state.current._tag === \"Done\" && core.exitIsExit(_.result.state.current.effect) && _.result.state.current.effect._tag === \"Failure\" && internalCause.isInterrupted(_.result.state.current.effect.cause)) {\n          return true;\n        } else {\n          return false;\n        }\n      })) {\n        cleanup.forEach(f => f());\n        onInterrupt?.();\n        cb(core.interruptFiber(processing));\n      }\n    }\n  };\n  processing.addObserver(exit => {\n    cleanup.forEach(f => f());\n    cb(exit);\n  });\n  const cleanup = entries.map((r, i) => {\n    const observer = count => {\n      counts[i] = count;\n      checkDone();\n    };\n    r.listeners.addObserver(observer);\n    return () => r.listeners.removeObserver(observer);\n  });\n  checkDone();\n  return core.sync(() => {\n    cleanup.forEach(f => f());\n  });\n})), () => core.suspend(() => {\n  const residual = entries.flatMap(entry => {\n    if (!entry.state.completed) {\n      return [entry];\n    }\n    return [];\n  });\n  return core.forEachSequentialDiscard(residual, entry => complete(entry.request, core.exitInterrupt(id)));\n})));\n/** @internal */\nexport const interruptWhenPossible = /*#__PURE__*/dual(2, (self, all) => core.fiberRefGetWith(currentRequestMap, map => core.suspend(() => {\n  const entries = RA.fromIterable(all).flatMap(_ => map.has(_) ? [map.get(_)] : []);\n  return invokeWithInterrupt(self, entries);\n})));\n// circular Tracer\n/** @internal */\nexport const makeSpanScoped = (name, options) => {\n  options = tracer.addSpanStackTrace(options);\n  return core.uninterruptible(core.withFiberRuntime(fiber => {\n    const scope = Context.unsafeGet(fiber.getFiberRef(core.currentContext), scopeTag);\n    const span = internalEffect.unsafeMakeSpan(fiber, name, options);\n    const timingEnabled = fiber.getFiberRef(core.currentTracerTimingEnabled);\n    const clock_ = Context.get(fiber.getFiberRef(defaultServices.currentServices), clock.clockTag);\n    return core.as(core.scopeAddFinalizerExit(scope, exit => internalEffect.endSpan(span, exit, clock_, timingEnabled)), span);\n  }));\n};\n/* @internal */\nexport const withTracerScoped = value => fiberRefLocallyScopedWith(defaultServices.currentServices, Context.add(tracer.tracerTag, value));\n/** @internal */\nexport const withSpanScoped = function () {\n  const dataFirst = typeof arguments[0] !== \"string\";\n  const name = dataFirst ? arguments[1] : arguments[0];\n  const options = tracer.addSpanStackTrace(dataFirst ? arguments[2] : arguments[1]);\n  if (dataFirst) {\n    const self = arguments[0];\n    return core.flatMap(makeSpanScoped(name, tracer.addSpanStackTrace(options)), span => internalEffect.provideService(self, tracer.spanTag, span));\n  }\n  return self => core.flatMap(makeSpanScoped(name, tracer.addSpanStackTrace(options)), span => internalEffect.provideService(self, tracer.spanTag, span));\n};\n//# sourceMappingURL=fiberRuntime.js.map","import * as internal from \"./internal/cause.js\";\nimport * as core from \"./internal/core.js\";\n/**\n * A unique symbol identifying the `Cause` type.\n *\n * **Details**\n *\n * This provides a symbol that helps identify instances of the `Cause` data\n * type. This can be used for advanced operations such as refining types or\n * building internal utilities that check whether an unknown value is a `Cause`.\n *\n * @see {@link isCause} Check if a value is a `Cause`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const CauseTypeId = internal.CauseTypeId;\n/**\n * A unique symbol identifying the `RuntimeException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies a `RuntimeException`. This is\n * typically used internally by the library to recognize checked exceptions that\n * occur during runtime.\n *\n * @see {@link RuntimeException} Create or work with a `RuntimeException`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const RuntimeExceptionTypeId = core.RuntimeExceptionTypeId;\n/**\n * A unique symbol identifying the `InterruptedException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies an `InterruptedException`. This is\n * typically used internally to recognize when a fiber has been interrupted,\n * helping the framework handle interruption logic correctly.\n *\n * @see {@link InterruptedException} Create or work with an `InterruptedException`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const InterruptedExceptionTypeId = core.InterruptedExceptionTypeId;\n/**\n * A unique symbol identifying the `IllegalArgumentException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies an `IllegalArgumentException`. This is\n * often used in scenarios where invalid arguments are supplied to methods that\n * expect specific input.\n *\n * @see {@link IllegalArgumentException} Create or work with an `IllegalArgumentException`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const IllegalArgumentExceptionTypeId = core.IllegalArgumentExceptionTypeId;\n/**\n * A unique symbol identifying the `NoSuchElementException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies a `NoSuchElementException`. It helps\n * differentiate cases where a required element is missing within a data\n * structure.\n *\n * @see {@link NoSuchElementException} Create or work with a `NoSuchElementException`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const NoSuchElementExceptionTypeId = core.NoSuchElementExceptionTypeId;\n/**\n * A unique symbol identifying the `InvalidPubSubCapacityException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies an `InvalidPubSubCapacityException`.\n * It indicates an error related to an invalid capacity passed to a `PubSub`\n * structure.\n *\n * @see {@link InvalidPubSubCapacityException} Create or work with an `InvalidPubSubCapacityException`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const InvalidPubSubCapacityExceptionTypeId = core.InvalidPubSubCapacityExceptionTypeId;\n/**\n * A unique symbol identifying the `ExceededCapacityException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies an `ExceededCapacityException`. It\n * denotes situations where a resource has exceeded its configured capacity\n * limit.\n *\n * @see {@link ExceededCapacityException} Create or work with an `ExceededCapacityException`\n *\n * @since 3.5.0\n * @category Symbols\n */\nexport const ExceededCapacityExceptionTypeId = core.ExceededCapacityExceptionTypeId;\n/**\n * A unique symbol identifying the `TimeoutException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies a `TimeoutException`. It helps the\n * framework recognize errors related to operations that fail to complete within\n * a given timeframe.\n *\n * @see {@link TimeoutException} Create or work with a `TimeoutException`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const TimeoutExceptionTypeId = core.TimeoutExceptionTypeId;\n/**\n * A unique symbol identifying the `UnknownException` type.\n *\n * **Details**\n *\n * This provides a symbol that identifies an `UnknownException`. It is typically\n * used for generic or unexpected errors that do not fit other specific\n * exception categories.\n *\n * @see {@link UnknownException} Create or work with an `UnknownException`\n *\n * @since 2.0.0\n * @category Symbols\n */\nexport const UnknownExceptionTypeId = core.UnknownExceptionTypeId;\n/**\n * Creates an error that occurs at runtime, extendable for other exception\n * types.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const YieldableError = core.YieldableError;\n/**\n * Creates an `Empty` cause.\n *\n * **Details**\n *\n * This function returns a cause that signifies \"no error.\" It's commonly used\n * to represent an absence of failure conditions.\n *\n * @see {@link isEmpty} Check if a `Cause` is empty\n *\n * @since 2.0.0\n * @category Constructors\n */\nexport const empty = internal.empty;\n/**\n * Creates a `Fail` cause from an expected error.\n *\n * **Details**\n *\n * This function constructs a `Cause` carrying an error of type `E`. It's used\n * when you want to represent a known or anticipated failure in your effectful\n * computations.\n *\n * @see {@link isFailure} Check if a `Cause` contains a failure\n *\n * @since 2.0.0\n * @category Constructors\n */\nexport const fail = internal.fail;\n/**\n * Creates a `Die` cause from an unexpected error.\n *\n * **Details**\n *\n * This function wraps an unhandled or unknown defect (like a runtime crash)\n * into a `Cause`. It's useful for capturing unforeseen issues in a structured\n * way.\n *\n * @see {@link isDie} Check if a `Cause` contains a defect\n *\n * @since 2.0.0\n * @category Constructors\n */\nexport const die = internal.die;\n/**\n * Creates an `Interrupt` cause from a `FiberId`.\n *\n * **Details**\n *\n * This function represents a fiber that has been interrupted. It stores the\n * identifier of the interrupted fiber, enabling precise tracking of concurrent\n * cancellations.\n *\n * @see {@link isInterrupted} Check if a `Cause` contains an interruption\n *\n * @since 2.0.0\n * @category Constructors\n */\nexport const interrupt = internal.interrupt;\n/**\n * Combines two `Cause`s in parallel.\n *\n * **Details**\n *\n * This function merges two errors that occurred simultaneously. Instead of\n * discarding one error, both are retained, allowing for richer error reporting\n * and debugging.\n *\n * @see {@link isParallelType} Check if a `Cause` is a `Parallel`\n *\n * @since 2.0.0\n * @category Constructors\n */\nexport const parallel = internal.parallel;\n/**\n * Combines two `Cause`s sequentially.\n *\n * **Details**\n *\n * This function merges two errors that occurred in sequence, such as a main\n * error followed by a finalization error. It preserves both errors for complete\n * failure information.\n *\n * @see {@link isSequentialType} Check if a `Cause` is a `Sequential`\n *\n * @since 2.0.0\n * @category Constructors\n */\nexport const sequential = internal.sequential;\n/**\n * Checks if a value is a `Cause`.\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isCause = internal.isCause;\n/**\n * Checks if a `Cause` is an `Empty` type.\n *\n * @see {@link empty} Create a new `Empty` cause\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isEmptyType = internal.isEmptyType;\n/**\n * Checks if a `Cause` is a `Fail` type.\n *\n * @see {@link fail} Create a new `Fail` cause\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isFailType = internal.isFailType;\n/**\n * Checks if a `Cause` is a `Die` type.\n *\n * @see {@link die} Create a new `Die` cause\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isDieType = internal.isDieType;\n/**\n * Checks if a `Cause` is an `Interrupt` type.\n *\n * @see {@link interrupt} Create an `Interrupt` cause\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isInterruptType = internal.isInterruptType;\n/**\n * Checks if a `Cause` is a `Sequential` type.\n *\n * @see {@link sequential} Combine two `Cause`s sequentially\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isSequentialType = internal.isSequentialType;\n/**\n * Checks if a `Cause` is a `Parallel` type.\n *\n * @see {@link parallel} Combine two `Cause`s in parallel\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isParallelType = internal.isParallelType;\n/**\n * Calculates the size of a `Cause`.\n *\n * **Details**\n *\n * This function returns the total number of `Cause` nodes in the semiring\n * structure, reflecting how many individual error elements are recorded.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const size = internal.size;\n/**\n * Checks if a `Cause` is entirely empty.\n *\n * **Details**\n *\n * This function returns `true` if the `Cause` contains no errors, defects, or\n * interruptions. It's helpful for verifying if a computation truly had no\n * failures.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const isEmpty = internal.isEmpty;\n/**\n * Checks if a `Cause` contains a failure.\n *\n * **Details**\n *\n * This function returns `true` if the `Cause` includes any `Fail` error. It's\n * commonly used to confirm whether a workflow encountered an anticipated error\n * versus just defects or interruptions.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const isFailure = internal.isFailure;\n/**\n * Checks if a `Cause` contains a defect.\n *\n * **Details**\n *\n * This function returns `true` if the `Cause` includes any unexpected or\n * unhandled errors (`Die`). It's useful for differentiating known failures from\n * unexpected ones.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const isDie = internal.isDie;\n/**\n * Checks if a `Cause` contains an interruption.\n *\n * **Details**\n *\n * This function returns `true` if the `Cause` includes any fiber interruptions.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const isInterrupted = internal.isInterrupted;\n/**\n * Checks if a `Cause` contains only interruptions.\n *\n * **Details**\n *\n * This function returns `true` if the `Cause` has been interrupted but does not\n * contain any other failures, such as `Fail` or `Die`. It's helpful for\n * verifying purely \"cancellation\" scenarios.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const isInterruptedOnly = internal.isInterruptedOnly;\n/**\n * Extracts all recoverable errors of type `E` from a `Cause`.\n *\n * **Details**\n *\n * This function returns a chunk of errors, providing a list of all `Fail`\n * values found in the cause. It's useful for collecting all known failures for\n * logging or combined error handling.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const failures = internal.failures;\n/**\n * Extracts all unrecoverable defects from a `Cause`.\n *\n * **Details**\n *\n * This function returns a chunk of values representing unexpected errors\n * (`Die`). It's handy for capturing or logging unanticipated failures that\n * might need special handling, such as bug reports.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const defects = internal.defects;\n/**\n * Collects all `FiberId`s responsible for interrupting a fiber.\n *\n * **Details**\n *\n * This function returns a set of IDs indicating which fibers caused\n * interruptions within this `Cause`. It's useful for debugging concurrency\n * issues or tracing cancellations.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const interruptors = internal.interruptors;\n/**\n * Retrieves the first `Fail` error in a `Cause`, if present.\n *\n * **Details**\n *\n * This function returns an `Option` containing the first recoverable error\n * (`E`) from the cause. It's often used to quickly check if there's a primary\n * error to handle or display.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const failureOption = internal.failureOption;\n/**\n * Splits a `Cause` into either its first `Fail` error or the rest of the cause\n * (which might only contain `Die` or `Interrupt`).\n *\n * **Details**\n *\n * This function either returns the checked error (`E`) or the remaining\n * `Cause<never>` with defects/interruptions. It helps you decide if there's a\n * recoverable path or if only unhandled issues remain.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const failureOrCause = internal.failureOrCause;\n/**\n * Strips out failures with an error of `None` from a `Cause<Option<E>>`.\n *\n * **Details**\n *\n * This function turns a `Cause<Option<E>>` into an `Option<Cause<E>>`. If the\n * cause only contains failures of `None`, it becomes `None`; otherwise, it\n * returns a `Cause` of the remaining errors. It's helpful when working with\n * optional errors and filtering out certain error paths.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const flipCauseOption = internal.flipCauseOption;\n/**\n * Retrieves the first `Die` defect in a `Cause`, if present.\n *\n * **Details**\n *\n * This function returns an `Option` containing the first unexpected failure\n * (`Die`) discovered. It's helpful for diagnosing the primary defect in a chain\n * of errors.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const dieOption = internal.dieOption;\n/**\n * Retrieves the first `Interrupt` in a `Cause`, if present.\n *\n * **Details**\n *\n * This function returns an `Option` with the first fiber interruption\n * discovered. This is particularly useful for concurrency analysis or debugging\n * cancellations.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const interruptOption = internal.interruptOption;\n/**\n * Removes all `Fail` and `Interrupt` nodes, keeping only defects (`Die`) in a\n * `Cause`.\n *\n * **Details**\n *\n * This function strips a cause of recoverable errors and interruptions, leaving\n * only unexpected failures. If no defects remain, it returns `None`. It's\n * valuable for focusing only on unanticipated problems when both known errors\n * and defects could occur.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const keepDefects = internal.keepDefects;\n// TODO(4.0): remove? what's the point of this API?\n/**\n * Linearizes a `Cause` into a set of parallel causes, each containing a\n * sequential chain of failures.\n *\n * **Details**\n *\n * This function reorganizes the cause structure so that you can analyze each\n * parallel branch separately, even if they have multiple sequential errors.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const linearize = internal.linearize;\n/**\n * Removes `Fail` and `Interrupt` nodes from a `Cause`, keeping only defects\n * (`Die`).\n *\n * **Details**\n *\n * This function is similar to `keepDefects` but returns a `Cause<never>`\n * directly, which can still store `Die` or finalizer-related defects. It's\n * helpful for analyzing only the irrecoverable portion of the error.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const stripFailures = internal.stripFailures;\n/**\n * Removes matching defects from a `Cause` using a partial function, returning\n * the remainder.\n *\n * **Details**\n *\n * This function applies a user-defined extraction function to each defect\n * (`Die`). If the function matches the defect, that defect is removed. If all\n * defects match, the result is `None`. Otherwise, you get a `Cause` with the\n * unmatched defects.\n *\n * @since 2.0.0\n * @category Getters\n */\nexport const stripSomeDefects = internal.stripSomeDefects;\n/**\n * Replaces any errors in a `Cause` with a provided constant error.\n *\n * **Details**\n *\n * This function transforms all `Fail` errors into the specified error value,\n * preserving the structure of the `Cause`. It's useful when you no longer need\n * the original error details but still want to keep the cause shape.\n *\n * @see {@link map} Apply a custom transformation to `Fail` errors\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const as = internal.as;\n/**\n * Transforms the errors in a `Cause` using a user-provided function.\n *\n * **Details**\n *\n * This function applies `f` to each `Fail` error while leaving defects (`Die`)\n * and interruptions untouched. It's useful for changing or simplifying error\n * types in your effectful workflows.\n *\n * @see {@link as} Replace errors with a single constant\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const map = internal.map;\n/**\n * Transforms errors in a `Cause` into new causes.\n *\n * **Details**\n *\n * This function applies a function `f` to each `Fail` error, converting it into\n * a new `Cause`. This is especially powerful for merging or restructuring error\n * types while preserving or combining cause information.\n *\n * @see {@link map} Apply a simpler transformation to errors\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const flatMap = internal.flatMap;\n/**\n * Sequences two `Cause`s. The second `Cause` can be dependent on the result of\n * the first `Cause`.\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const andThen = internal.andThen;\n/**\n * Flattens a nested `Cause` structure.\n *\n * **Details**\n *\n * This function takes a `Cause<Cause<E>>` and merges the layers into a single\n * `Cause<E>`. It's useful for eliminating additional nesting created by\n * repeated transformations or compositions.\n *\n * @see {@link flatMap} Compose nested causes\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const flatten = internal.flatten;\n/**\n * Checks if the current `Cause` contains or is equal to another `Cause`.\n *\n * **Details**\n *\n * This function returns `true` if `that` cause is part of or the same as\n * the current `Cause`. It's useful when you need to check for specific\n * error patterns or deduplicate repeated failures.\n *\n * @since 2.0.0\n * @category Elements\n */\nexport const contains = internal.contains;\n/**\n * Extracts the most \"important\" defect from a `Cause`.\n *\n * **Details**\n *\n * This function reduces a `Cause` to a single, prioritized defect. It evaluates\n * the `Cause` in the following order of priority:\n *\n * 1. If the `Cause` contains a failure (e.g., from `Effect.fail`), it returns\n *    the raw error value.\n * 2. If there is no failure, it looks for the first defect (e.g., from\n *    `Effect.die`).\n * 3. If neither of the above is present, and the `Cause` stems from an\n *    interruption, it creates and returns an `InterruptedException`.\n *\n * This function ensures you can always extract a meaningful representation of\n * the primary issue from a potentially complex `Cause` structure.\n *\n * **When to Use**\n *\n * Use this function when you need to extract the most relevant error or defect\n * from a `Cause`, especially in scenarios where multiple errors or defects may\n * be present. It's particularly useful for simplifying error reporting or\n * logging.\n *\n * @see {@link squashWith} Allows transforming failures into defects when squashing.\n *\n * @since 2.0.0\n * @category Destructors\n */\nexport const squash = core.causeSquash;\n/**\n * Extracts the most \"important\" defect from a `Cause`, transforming failures\n * into defects using a provided function.\n *\n * **Details**\n *\n * This function reduces a `Cause` to a single, prioritized defect, while\n * allowing you to transform recoverable failures into defects through a custom\n * function. It processes the `Cause` in the following order:\n *\n * 1. If the `Cause` contains a failure (e.g., from `Effect.fail`), it applies\n *    the provided function `f` to the error to transform it into a defect.\n * 2. If there is no failure, it looks for the first defect (e.g., from\n *    `Effect.die`) and returns it.\n * 3. If neither is present and the `Cause` stems from an interruption, it\n *    returns an `InterruptedException`.\n *\n * This function is particularly useful when you need custom handling or\n * transformation of errors while processing a `Cause`.\n *\n * @see {@link squash} Extracts the most \"important\" defect without transforming failures.\n *\n * @since 2.0.0\n * @category Destructors\n */\nexport const squashWith = core.causeSquashWith;\n/**\n * Searches a `Cause` using a partial function to extract information.\n *\n * **Details**\n *\n * This function allows you to search through a `Cause` using a custom partial\n * function. The partial function is applied to the `Cause`, and if it matches,\n * the result is returned wrapped in a `Some`. If no match is found, the result\n * is `None`.\n *\n * This is particularly useful when you are only interested in specific types of\n * errors, defects, or interruption causes within a potentially complex `Cause`\n * structure. By leveraging a partial function, you can focus on extracting only\n * the relevant information you care about.\n *\n * The partial function should return an `Option` indicating whether it matched\n * and the value it extracted.\n *\n * @since 2.0.0\n * @category Elements\n */\nexport const find = internal.find;\n/**\n * Preserves parts of a `Cause` that match a given predicate.\n *\n * **Details**\n *\n * This function allows you to retain only the parts of a `Cause` structure that\n * match a specified predicate or refinement. Any parts of the `Cause` that do\n * not match the provided condition are excluded from the result.\n *\n * You can use this function in two ways:\n * - With a `Predicate`: A function that evaluates whether a `Cause` should be\n *   retained based on its value.\n * - With a `Refinement`: A more specific predicate that can refine the type of\n *   the `Cause`.\n *\n * This is useful when you need to extract specific types of errors, defects, or\n * interruptions from a `Cause` while discarding unrelated parts.\n *\n * @since 2.0.0\n * @category Filtering\n */\nexport const filter = internal.filter;\n/**\n * Transforms a `Cause` into a single value using custom handlers for each\n * possible case.\n *\n * **Details**\n *\n * This function processes a `Cause` by applying a set of custom handlers to\n * each possible type of cause: `Empty`, `Fail`, `Die`, `Interrupt`,\n * `Sequential`, and `Parallel`. The result of this function is a single value\n * of type `Z`. This function allows you to define exactly how to handle each\n * part of a `Cause`, whether it's a failure, defect, interruption, or a\n * combination of these.\n *\n * The options parameter provides handlers for:\n * - `onEmpty`: Handles the case where the cause is `Empty`, meaning no errors\n *   occurred.\n * - `onFail`: Processes a failure with an error of type `E`.\n * - `onDie`: Processes a defect (unexpected error).\n * - `onInterrupt`: Handles a fiber interruption, providing the `FiberId` of the\n *   interruption.\n * - `onSequential`: Combines two sequential causes into a single value of type\n *   `Z`.\n * - `onParallel`: Combines two parallel causes into a single value of type `Z`.\n *\n * @since 2.0.0\n * @category Matching\n */\nexport const match = internal.match;\n/**\n * Combines all parts of a `Cause` into a single value by starting with an\n * initial value.\n *\n * **Details**\n *\n * This function processes a `Cause` by starting with an initial value (`zero`)\n * and applying a custom function (`pf`) to combine all elements of the `Cause`\n * into a single result of type `Z`. The custom function determines how each\n * part of the `Cause` contributes to the final result. The function can return\n * an `Option` to either continue combining values or skip specific parts of the\n * `Cause`.\n *\n * This function is useful for tasks such as:\n * - Aggregating error messages from a `Cause` into a single string.\n * - Summarizing the structure of a `Cause` into a simplified result.\n * - Filtering or processing only specific parts of a `Cause`.\n *\n * The reduction proceeds in a top-down manner, visiting all nodes in the\n * `Cause` structure. This gives you complete control over how each part of the\n * `Cause` contributes to the final result.\n *\n * @since 2.0.0\n * @category Reducing\n */\nexport const reduce = internal.reduce;\n/**\n * Combines all parts of a `Cause` into a single value using a custom reducer\n * and a context.\n *\n * **Details**\n *\n * This function allows you to reduce a `Cause` into a single value of type `Z`\n * using a custom `CauseReducer`. A `CauseReducer` provides methods to handle\n * specific parts of the `Cause`, such as failures, defects, or interruptions.\n * Additionally, this function provides access to a `context` value, which can\n * be used to carry information or maintain state during the reduction process.\n *\n * This is particularly useful when the reduction process needs additional\n * context or configuration, such as:\n * - Aggregating error details with dynamic formatting.\n * - Collecting logs or statistics about the `Cause`.\n * - Performing stateful transformations based on the `context`.\n *\n * @see {@link reduce} To reduce a `Cause` without additional context.\n *\n * @since 2.0.0\n * @category Reducing\n */\nexport const reduceWithContext = internal.reduceWithContext;\n/**\n * Creates an error that indicates a `Fiber` was interrupted.\n *\n * **Details**\n *\n * This function constructs an `InterruptedException` recognized by the Effect\n * runtime. It is usually thrown or returned when a fiber's execution is\n * interrupted by external events or by another fiber. This is particularly\n * helpful in concurrent programs where fibers may halt each other before\n * completion.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const InterruptedException = core.InterruptedException;\n/**\n * Checks if a given unknown value is an `InterruptedException`.\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isInterruptedException = core.isInterruptedException;\n/**\n * Creates an error indicating an invalid method argument.\n *\n * **Details**\n *\n * This function constructs an `IllegalArgumentException`. It is typically\n * thrown or returned when an operation receives improper inputs, such as\n * out-of-range values or invalid object states.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const IllegalArgumentException = core.IllegalArgumentException;\n/**\n * Checks if a given unknown value is an `IllegalArgumentException`.\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isIllegalArgumentException = core.isIllegalArgumentException;\n/**\n * Creates an error indicating a missing element.\n *\n * **Details**\n *\n * This function constructs a `NoSuchElementException`. It helps you clearly\n * communicate that a required element is unavailable.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const NoSuchElementException = core.NoSuchElementException;\n/**\n * Checks if a given unknown value is a `NoSuchElementException`.\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isNoSuchElementException = core.isNoSuchElementException;\n/**\n * Creates an error for general runtime errors.\n *\n * **Details**\n *\n * This function constructs a `RuntimeException`, for errors that occur at\n * runtime but are not specifically typed or categorized as interruptions,\n * missing elements, or invalid arguments. It helps unify a wide range of\n * unexpected conditions under a single, recognizable error type.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const RuntimeException = core.RuntimeException;\n/**\n * Checks if a given unknown value is a `RuntimeException`.\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isRuntimeException = core.isRuntimeException;\n/**\n * Creates an error for operations that exceed their expected time.\n *\n * **Details**\n *\n * This function constructs a `TimeoutException`. It is typically used to signal\n * that an operation or fiber did not complete within a designated time limit,\n * allowing you to handle slow or hanging processes.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const TimeoutException = core.TimeoutException;\n/**\n * Checks if a given unknown value is a `TimeoutException`.\n *\n * @since 3.15.0\n * @category Guards\n */\nexport const isTimeoutException = core.isTimeoutException;\n/**\n * Creates an instance of `UnknownException`, an error object used to handle\n * unknown errors such as those from rejected promises.\n *\n * **Details**\n *\n * This function constructs an `UnknownException` with flexible behavior for\n * managing the error message and cause.\n *\n * The required `error` argument is passed as the `cause` to the global `Error`\n * constructor, ensuring that the original cause is preserved in the error chain\n * for debugging purposes. This ensures that the origin stack trace is\n * preserved.\n *\n * The `error` argument is always stored in the `error` property of the\n * `UnknownException` instance for reference, regardless of its type.\n *\n * Additionally, if you provide a `message` argument, it is used as the error\n * message. If no `message` is provided, the error message defaults to `\"An\n * unknown error occurred\"`.\n *\n * **When to Use**\n *\n * Use this function when you need to handle unexpected or unknown errors in\n * your application, particularly when the source of the error might not provide\n * a clear message. This is useful for wrapping generic errors thrown from\n * promises or external APIs.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const UnknownException = core.UnknownException;\n/**\n * Checks if a given unknown value is an `UnknownException`.\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isUnknownException = core.isUnknownException;\n/**\n * Creates an error indicating resource capacity has been exceeded.\n *\n * **Details**\n *\n * This function constructs an `ExceededCapacityException`, signifying that an\n * operation or resource usage surpassed established limits. This can be\n * essential for concurrency or resource management situations, ensuring your\n * application doesn't go beyond acceptable thresholds.\n *\n * @since 3.5.0\n * @category Errors\n */\nexport const ExceededCapacityException = core.ExceededCapacityException;\n/**\n * Checks if a given unknown value is an `ExceededCapacityException`.\n *\n * @since 3.5.0\n * @category Guards\n */\nexport const isExceededCapacityException = core.isExceededCapacityException;\n/**\n * Converts a `Cause` into a human-readable string.\n *\n * **Details**\n *\n * This function pretty-prints the entire `Cause`, including any failures,\n * defects, and interruptions. It can be especially helpful for logging,\n * debugging, or displaying structured errors to users.\n *\n * You can optionally pass `options` to configure how the error cause is\n * rendered. By default, it includes essential details of all errors in the\n * `Cause`.\n *\n * @see {@link prettyErrors} Get a list of `PrettyError` objects instead of a single string.\n *\n * @since 2.0.0\n * @category Formatting\n */\nexport const pretty = internal.pretty;\n/**\n * Returns a list of prettified errors (`PrettyError`) from a `Cause`.\n *\n * **Details**\n *\n * This function inspects the entire `Cause` and produces an array of\n * `PrettyError` objects. Each object may include additional metadata, such as a\n * `Span`, to provide deeper insights into where and how the error occurred.\n *\n * @since 3.2.0\n * @category Formatting\n */\nexport const prettyErrors = internal.prettyErrors;\n/**\n * Retrieves the original, unproxied error instance from an error object.\n *\n * **Details**\n *\n * This function returns the underlying error object without any\n * library-specific wrapping or proxying that might occur during error handling.\n * This can be essential if you need direct access to the error's native\n * properties, such as stack traces or custom data fields, for detailed\n * debugging or integration with external systems.\n *\n * @since 2.0.0\n * @category Errors\n */\nexport const originalError = core.originalInstance;\n//# sourceMappingURL=Cause.js.map","/**\n * @since 2.0.0\n */\nimport * as core from \"./internal/core.js\";\nimport * as fiberRuntime from \"./internal/fiberRuntime.js\";\n/**\n * A unique identifier for the `Scope` type.\n *\n * @since 2.0.0\n * @category symbols\n */\nexport const ScopeTypeId = core.ScopeTypeId;\n/**\n * A unique identifier for the `CloseableScope` type.\n *\n * @since 2.0.0\n * @category symbols\n */\nexport const CloseableScopeTypeId = core.CloseableScopeTypeId;\n/**\n * A tag representing the current `Scope` in the environment.\n *\n * @since 2.0.0\n * @category context\n */\nexport const Scope = fiberRuntime.scopeTag;\n/**\n * Adds a finalizer to this scope. The finalizer is guaranteed to be run when\n * the scope is closed. Use this when the finalizer does not need to know the\n * `Exit` value that the scope is closed with.\n *\n * @see {@link addFinalizerExit}\n *\n * @since 2.0.0\n * @category utils\n */\nexport const addFinalizer = core.scopeAddFinalizer;\n/**\n * Adds a finalizer to this scope. The finalizer receives the `Exit` value\n * when the scope is closed, allowing it to perform different actions based\n * on the exit status.\n *\n * @see {@link addFinalizer}\n *\n * @since 2.0.0\n * @category utils\n */\nexport const addFinalizerExit = core.scopeAddFinalizerExit;\n/**\n * Closes this scope with the specified exit value, running all finalizers that\n * have been added to the scope.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const close = core.scopeClose;\n/**\n * Extends the scope of an `Effect` that requires a scope into this scope.\n * It provides this scope to the effect but does not close the scope when the\n * effect completes execution. This allows extending a scoped value into a\n * larger scope.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const extend = fiberRuntime.scopeExtend;\n/**\n * Forks a new child scope with the specified execution strategy. The child scope\n * will automatically be closed when this scope is closed.\n *\n * @since 2.0.0\n * @category utils\n */\nexport const fork = core.scopeFork;\n/**\n * Provides this closeable scope to an `Effect` that requires a scope,\n * guaranteeing that the scope is closed with the result of that effect as\n * soon as the effect completes execution, whether by success, failure, or\n * interruption.\n *\n * @since 2.0.0\n * @category destructors\n */\nexport const use = fiberRuntime.scopeUse;\n/**\n * Creates a new closeable scope where finalizers will run according to the\n * specified `ExecutionStrategy`. If no execution strategy is provided, `sequential`\n * will be used by default.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make = fiberRuntime.scopeMake;\n//# sourceMappingURL=Scope.js.map","import * as core from \"./internal/core.js\";\nimport * as internal from \"./internal/data.js\";\nimport { StructuralPrototype } from \"./internal/effectable.js\";\nimport * as Predicate from \"./Predicate.js\";\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Data, Equal } from \"effect\"\n *\n * const alice = Data.struct({ name: \"Alice\", age: 30 })\n *\n * const bob = Data.struct({ name: \"Bob\", age: 40 })\n *\n * assert.deepStrictEqual(Equal.equals(alice, alice), true)\n * assert.deepStrictEqual(Equal.equals(alice, Data.struct({ name: \"Alice\", age: 30 })), true)\n *\n * assert.deepStrictEqual(Equal.equals(alice, { name: \"Alice\", age: 30 }), false)\n * assert.deepStrictEqual(Equal.equals(alice, bob), false)\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const struct = internal.struct;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const unsafeStruct = as => Object.setPrototypeOf(as, StructuralPrototype);\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Data, Equal } from \"effect\"\n *\n * const alice = Data.tuple(\"Alice\", 30)\n *\n * const bob = Data.tuple(\"Bob\", 40)\n *\n * assert.deepStrictEqual(Equal.equals(alice, alice), true)\n * assert.deepStrictEqual(Equal.equals(alice, Data.tuple(\"Alice\", 30)), true)\n *\n * assert.deepStrictEqual(Equal.equals(alice, [\"Alice\", 30]), false)\n * assert.deepStrictEqual(Equal.equals(alice, bob), false)\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const tuple = (...as) => unsafeArray(as);\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Data, Equal } from \"effect\"\n *\n * const alice = Data.struct({ name: \"Alice\", age: 30 })\n * const bob = Data.struct({ name: \"Bob\", age: 40 })\n *\n * const persons = Data.array([alice, bob])\n *\n * assert.deepStrictEqual(\n *   Equal.equals(\n *     persons,\n *     Data.array([\n *       Data.struct({ name: \"Alice\", age: 30 }),\n *       Data.struct({ name: \"Bob\", age: 40 })\n *     ])\n *   ),\n *   true\n * )\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const array = as => unsafeArray(as.slice(0));\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const unsafeArray = as => Object.setPrototypeOf(as, internal.ArrayProto);\nconst _case = () => args => args === undefined ? Object.create(StructuralPrototype) : struct(args);\nexport {\n/**\n * Provides a constructor for the specified `Case`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Data, Equal } from \"effect\"\n *\n * interface Person {\n *   readonly name: string\n * }\n *\n * // Creating a constructor for the specified Case\n * const Person = Data.case<Person>()\n *\n * // Creating instances of Person\n * const mike1 = Person({ name: \"Mike\" })\n * const mike2 = Person({ name: \"Mike\" })\n * const john = Person({ name: \"John\" })\n *\n * // Checking equality\n * assert.deepStrictEqual(Equal.equals(mike1, mike2), true)\n * assert.deepStrictEqual(Equal.equals(mike1, john), false)\n *\n * ```\n * @since 2.0.0\n * @category constructors\n */\n_case as case };\n/**\n * Provides a tagged constructor for the specified `Case`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Data } from \"effect\"\n *\n * interface Person {\n *   readonly _tag: \"Person\" // the tag\n *   readonly name: string\n * }\n *\n * const Person = Data.tagged<Person>(\"Person\")\n *\n * const mike = Person({ name: \"Mike\" })\n *\n * assert.deepEqual(mike, { _tag: \"Person\", name: \"Mike\" })\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const tagged = tag => args => {\n  const value = args === undefined ? Object.create(StructuralPrototype) : struct(args);\n  value._tag = tag;\n  return value;\n};\n/**\n * Provides a constructor for a Case Class.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Data, Equal } from \"effect\"\n *\n * class Person extends Data.Class<{ readonly name: string }> {}\n *\n * // Creating instances of Person\n * const mike1 = new Person({ name: \"Mike\" })\n * const mike2 = new Person({ name: \"Mike\" })\n * const john = new Person({ name: \"John\" })\n *\n * // Checking equality\n * assert.deepStrictEqual(Equal.equals(mike1, mike2), true)\n * assert.deepStrictEqual(Equal.equals(mike1, john), false)\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const Class = internal.Structural;\n/**\n * Provides a Tagged constructor for a Case Class.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Data, Equal } from \"effect\"\n *\n * class Person extends Data.TaggedClass(\"Person\")<{ readonly name: string }> {}\n *\n * // Creating instances of Person\n * const mike1 = new Person({ name: \"Mike\" })\n * const mike2 = new Person({ name: \"Mike\" })\n * const john = new Person({ name: \"John\" })\n *\n * // Checking equality\n * assert.deepStrictEqual(Equal.equals(mike1, mike2), true)\n * assert.deepStrictEqual(Equal.equals(mike1, john), false)\n *\n * assert.deepStrictEqual(mike1._tag, \"Person\")\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const TaggedClass = tag => {\n  class Base extends Class {\n    _tag = tag;\n  }\n  return Base;\n};\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const Structural = internal.Structural;\n/**\n * Create a constructor for a tagged union of `Data` structs.\n *\n * You can also pass a `TaggedEnum.WithGenerics` if you want to add generics to\n * the constructor.\n *\n * @example\n * ```ts\n * import { Data } from \"effect\"\n *\n * const { BadRequest, NotFound } = Data.taggedEnum<\n *   | { readonly _tag: \"BadRequest\"; readonly status: 400; readonly message: string }\n *   | { readonly _tag: \"NotFound\"; readonly status: 404; readonly message: string }\n * >()\n *\n * const notFound = NotFound({ status: 404, message: \"Not Found\" })\n * ```\n *\n * @example\n * import { Data } from \"effect\"\n *\n * type MyResult<E, A> = Data.TaggedEnum<{\n *   Failure: { readonly error: E }\n *   Success: { readonly value: A }\n * }>\n * interface MyResultDefinition extends Data.TaggedEnum.WithGenerics<2> {\n *   readonly taggedEnum: MyResult<this[\"A\"], this[\"B\"]>\n * }\n * const { Failure, Success } = Data.taggedEnum<MyResultDefinition>()\n *\n * const success = Success({ value: 1 })\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const taggedEnum = () => new Proxy({}, {\n  get(_target, tag, _receiver) {\n    if (tag === \"$is\") {\n      return Predicate.isTagged;\n    } else if (tag === \"$match\") {\n      return taggedMatch;\n    }\n    return tagged(tag);\n  }\n});\nfunction taggedMatch() {\n  if (arguments.length === 1) {\n    const cases = arguments[0];\n    return function (value) {\n      return cases[value._tag](value);\n    };\n  }\n  const value = arguments[0];\n  const cases = arguments[1];\n  return cases[value._tag](value);\n}\n/**\n * Provides a constructor for a Case Class.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const Error = /*#__PURE__*/function () {\n  const plainArgsSymbol = /*#__PURE__*/Symbol.for(\"effect/Data/Error/plainArgs\");\n  const O = {\n    BaseEffectError: class extends core.YieldableError {\n      constructor(args) {\n        super(args?.message, args?.cause ? {\n          cause: args.cause\n        } : undefined);\n        if (args) {\n          Object.assign(this, args);\n          Object.defineProperty(this, plainArgsSymbol, {\n            value: args,\n            enumerable: false\n          });\n        }\n      }\n      toJSON() {\n        return {\n          ...this[plainArgsSymbol],\n          ...this\n        };\n      }\n    }\n  };\n  return O.BaseEffectError;\n}();\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const TaggedError = tag => {\n  const O = {\n    BaseEffectError: class extends Error {\n      _tag = tag;\n    }\n  };\n  O.BaseEffectError.prototype.name = tag;\n  return O.BaseEffectError;\n};\n//# sourceMappingURL=Data.js.map","import * as Context from \"../Context.js\";\nimport { equals } from \"../Equal.js\";\nimport * as Exit from \"../Exit.js\";\nimport * as Fiber from \"../Fiber.js\";\nimport * as FiberId from \"../FiberId.js\";\nimport * as FiberRefs from \"../FiberRefs.js\";\nimport { dual, pipe } from \"../Function.js\";\nimport * as Inspectable from \"../Inspectable.js\";\nimport * as Option from \"../Option.js\";\nimport { pipeArguments } from \"../Pipeable.js\";\nimport * as Predicate from \"../Predicate.js\";\nimport * as scheduler_ from \"../Scheduler.js\";\nimport * as scope_ from \"../Scope.js\";\nimport * as InternalCause from \"./cause.js\";\nimport * as core from \"./core.js\";\nimport * as executionStrategy from \"./executionStrategy.js\";\nimport * as FiberRuntime from \"./fiberRuntime.js\";\nimport * as fiberScope from \"./fiberScope.js\";\nimport * as OpCodes from \"./opCodes/effect.js\";\nimport * as runtimeFlags from \"./runtimeFlags.js\";\nimport * as supervisor_ from \"./supervisor.js\";\nconst makeDual = f => function () {\n  if (arguments.length === 1) {\n    const runtime = arguments[0];\n    return (effect, ...args) => f(runtime, effect, ...args);\n  }\n  return f.apply(this, arguments);\n};\n/** @internal */\nexport const unsafeFork = /*#__PURE__*/makeDual((runtime, self, options) => {\n  const fiberId = FiberId.unsafeMake();\n  const fiberRefUpdates = [[core.currentContext, [[fiberId, runtime.context]]]];\n  if (options?.scheduler) {\n    fiberRefUpdates.push([scheduler_.currentScheduler, [[fiberId, options.scheduler]]]);\n  }\n  let fiberRefs = FiberRefs.updateManyAs(runtime.fiberRefs, {\n    entries: fiberRefUpdates,\n    forkAs: fiberId\n  });\n  if (options?.updateRefs) {\n    fiberRefs = options.updateRefs(fiberRefs, fiberId);\n  }\n  const fiberRuntime = new FiberRuntime.FiberRuntime(fiberId, fiberRefs, runtime.runtimeFlags);\n  let effect = self;\n  if (options?.scope) {\n    effect = core.flatMap(scope_.fork(options.scope, executionStrategy.sequential), closeableScope => core.zipRight(core.scopeAddFinalizer(closeableScope, core.fiberIdWith(id => equals(id, fiberRuntime.id()) ? core.void : core.interruptAsFiber(fiberRuntime, id))), core.onExit(self, exit => scope_.close(closeableScope, exit))));\n  }\n  const supervisor = fiberRuntime.currentSupervisor;\n  // we can compare by reference here as _supervisor.none is wrapped with globalValue\n  if (supervisor !== supervisor_.none) {\n    supervisor.onStart(runtime.context, effect, Option.none(), fiberRuntime);\n    fiberRuntime.addObserver(exit => supervisor.onEnd(exit, fiberRuntime));\n  }\n  fiberScope.globalScope.add(runtime.runtimeFlags, fiberRuntime);\n  // Only an explicit false will prevent immediate execution\n  if (options?.immediate === false) {\n    fiberRuntime.resume(effect);\n  } else {\n    fiberRuntime.start(effect);\n  }\n  return fiberRuntime;\n});\n/** @internal */\nexport const unsafeRunCallback = /*#__PURE__*/makeDual((runtime, effect, options = {}) => {\n  const fiberRuntime = unsafeFork(runtime, effect, options);\n  if (options.onExit) {\n    fiberRuntime.addObserver(exit => {\n      options.onExit(exit);\n    });\n  }\n  return (id, cancelOptions) => unsafeRunCallback(runtime)(pipe(fiberRuntime, Fiber.interruptAs(id ?? FiberId.none)), {\n    ...cancelOptions,\n    onExit: cancelOptions?.onExit ? exit => cancelOptions.onExit(Exit.flatten(exit)) : undefined\n  });\n});\n/** @internal */\nexport const unsafeRunSync = /*#__PURE__*/makeDual((runtime, effect) => {\n  const result = unsafeRunSyncExit(runtime)(effect);\n  if (result._tag === \"Failure\") {\n    throw fiberFailure(result.effect_instruction_i0);\n  }\n  return result.effect_instruction_i0;\n});\nclass AsyncFiberExceptionImpl extends Error {\n  fiber;\n  _tag = \"AsyncFiberException\";\n  constructor(fiber) {\n    super(`Fiber #${fiber.id().id} cannot be resolved synchronously. This is caused by using runSync on an effect that performs async work`);\n    this.fiber = fiber;\n    this.name = this._tag;\n    this.stack = this.message;\n  }\n}\nconst asyncFiberException = fiber => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 0;\n  const error = new AsyncFiberExceptionImpl(fiber);\n  Error.stackTraceLimit = limit;\n  return error;\n};\n/** @internal */\nexport const isAsyncFiberException = u => Predicate.isTagged(u, \"AsyncFiberException\") && \"fiber\" in u;\n/** @internal */\nexport const FiberFailureId = /*#__PURE__*/Symbol.for(\"effect/Runtime/FiberFailure\");\n/** @internal */\nexport const FiberFailureCauseId = /*#__PURE__*/Symbol.for(\"effect/Runtime/FiberFailure/Cause\");\nclass FiberFailureImpl extends Error {\n  [FiberFailureId];\n  [FiberFailureCauseId];\n  constructor(cause) {\n    const head = InternalCause.prettyErrors(cause)[0];\n    super(head?.message || \"An error has occurred\");\n    this[FiberFailureId] = FiberFailureId;\n    this[FiberFailureCauseId] = cause;\n    this.name = head ? `(FiberFailure) ${head.name}` : \"FiberFailure\";\n    if (head?.stack) {\n      this.stack = head.stack;\n    }\n  }\n  toJSON() {\n    return {\n      _id: \"FiberFailure\",\n      cause: this[FiberFailureCauseId].toJSON()\n    };\n  }\n  toString() {\n    return \"(FiberFailure) \" + InternalCause.pretty(this[FiberFailureCauseId], {\n      renderErrorCause: true\n    });\n  }\n  [Inspectable.NodeInspectSymbol]() {\n    return this.toString();\n  }\n}\n/** @internal */\nexport const fiberFailure = cause => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 0;\n  const error = new FiberFailureImpl(cause);\n  Error.stackTraceLimit = limit;\n  return error;\n};\n/** @internal */\nexport const isFiberFailure = u => Predicate.hasProperty(u, FiberFailureId);\nconst fastPath = effect => {\n  const op = effect;\n  switch (op._op) {\n    case \"Failure\":\n    case \"Success\":\n      {\n        // @ts-expect-error\n        return op;\n      }\n    case \"Left\":\n      {\n        return core.exitFail(op.left);\n      }\n    case \"Right\":\n      {\n        return core.exitSucceed(op.right);\n      }\n    case \"Some\":\n      {\n        return core.exitSucceed(op.value);\n      }\n    case \"None\":\n      {\n        // @ts-expect-error\n        return core.exitFail(core.NoSuchElementException());\n      }\n  }\n};\n/** @internal */\nexport const unsafeRunSyncExit = /*#__PURE__*/makeDual((runtime, effect) => {\n  const op = fastPath(effect);\n  if (op) {\n    return op;\n  }\n  const scheduler = new scheduler_.SyncScheduler();\n  const fiberRuntime = unsafeFork(runtime)(effect, {\n    scheduler\n  });\n  scheduler.flush();\n  const result = fiberRuntime.unsafePoll();\n  if (result) {\n    return result;\n  }\n  return core.exitDie(core.capture(asyncFiberException(fiberRuntime), core.currentSpanFromFiber(fiberRuntime)));\n});\n/** @internal */\nexport const unsafeRunPromise = /*#__PURE__*/makeDual((runtime, effect, options) => unsafeRunPromiseExit(runtime, effect, options).then(result => {\n  switch (result._tag) {\n    case OpCodes.OP_SUCCESS:\n      {\n        return result.effect_instruction_i0;\n      }\n    case OpCodes.OP_FAILURE:\n      {\n        throw fiberFailure(result.effect_instruction_i0);\n      }\n  }\n}));\n/** @internal */\nexport const unsafeRunPromiseExit = /*#__PURE__*/makeDual((runtime, effect, options) => new Promise(resolve => {\n  const op = fastPath(effect);\n  if (op) {\n    resolve(op);\n  }\n  const fiber = unsafeFork(runtime)(effect);\n  fiber.addObserver(exit => {\n    resolve(exit);\n  });\n  if (options?.signal !== undefined) {\n    if (options.signal.aborted) {\n      fiber.unsafeInterruptAsFork(fiber.id());\n    } else {\n      options.signal.addEventListener(\"abort\", () => {\n        fiber.unsafeInterruptAsFork(fiber.id());\n      }, {\n        once: true\n      });\n    }\n  }\n}));\n/** @internal */\nexport class RuntimeImpl {\n  context;\n  runtimeFlags;\n  fiberRefs;\n  constructor(context, runtimeFlags, fiberRefs) {\n    this.context = context;\n    this.runtimeFlags = runtimeFlags;\n    this.fiberRefs = fiberRefs;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n/** @internal */\nexport const make = options => new RuntimeImpl(options.context, options.runtimeFlags, options.fiberRefs);\n/** @internal */\nexport const runtime = () => core.withFiberRuntime((state, status) => core.succeed(new RuntimeImpl(state.getFiberRef(core.currentContext), status.runtimeFlags, state.getFiberRefs())));\n/** @internal */\nexport const defaultRuntimeFlags = /*#__PURE__*/runtimeFlags.make(runtimeFlags.Interruption, runtimeFlags.CooperativeYielding, runtimeFlags.RuntimeMetrics);\n/** @internal */\nexport const defaultRuntime = /*#__PURE__*/make({\n  context: /*#__PURE__*/Context.empty(),\n  runtimeFlags: defaultRuntimeFlags,\n  fiberRefs: /*#__PURE__*/FiberRefs.empty()\n});\n/** @internal */\nexport const updateRuntimeFlags = /*#__PURE__*/dual(2, (self, f) => make({\n  context: self.context,\n  runtimeFlags: f(self.runtimeFlags),\n  fiberRefs: self.fiberRefs\n}));\n/** @internal */\nexport const disableRuntimeFlag = /*#__PURE__*/dual(2, (self, flag) => updateRuntimeFlags(self, runtimeFlags.disable(flag)));\n/** @internal */\nexport const enableRuntimeFlag = /*#__PURE__*/dual(2, (self, flag) => updateRuntimeFlags(self, runtimeFlags.enable(flag)));\n/** @internal */\nexport const updateContext = /*#__PURE__*/dual(2, (self, f) => make({\n  context: f(self.context),\n  runtimeFlags: self.runtimeFlags,\n  fiberRefs: self.fiberRefs\n}));\n/** @internal */\nexport const provideService = /*#__PURE__*/dual(3, (self, tag, service) => updateContext(self, Context.add(tag, service)));\n/** @internal */\nexport const updateFiberRefs = /*#__PURE__*/dual(2, (self, f) => make({\n  context: self.context,\n  runtimeFlags: self.runtimeFlags,\n  fiberRefs: f(self.fiberRefs)\n}));\n/** @internal */\nexport const setFiberRef = /*#__PURE__*/dual(3, (self, fiberRef, value) => updateFiberRefs(self, FiberRefs.updateAs({\n  fiberId: FiberId.none,\n  fiberRef,\n  value\n})));\n/** @internal */\nexport const deleteFiberRef = /*#__PURE__*/dual(2, (self, fiberRef) => updateFiberRefs(self, FiberRefs.delete(fiberRef)));\n/** @internal */\nexport const unsafeRunEffect = /*#__PURE__*/unsafeRunCallback(defaultRuntime);\n/** @internal */\nexport const unsafeForkEffect = /*#__PURE__*/unsafeFork(defaultRuntime);\n/** @internal */\nexport const unsafeRunPromiseEffect = /*#__PURE__*/unsafeRunPromise(defaultRuntime);\n/** @internal */\nexport const unsafeRunPromiseExitEffect = /*#__PURE__*/unsafeRunPromiseExit(defaultRuntime);\n/** @internal */\nexport const unsafeRunSyncEffect = /*#__PURE__*/unsafeRunSync(defaultRuntime);\n/** @internal */\nexport const unsafeRunSyncExitEffect = /*#__PURE__*/unsafeRunSyncExit(defaultRuntime);\n// circular with Effect\n/** @internal */\nexport const asyncEffect = register => core.suspend(() => {\n  let cleanup = undefined;\n  return core.flatMap(core.deferredMake(), deferred => core.flatMap(runtime(), runtime => core.uninterruptibleMask(restore => core.zipRight(FiberRuntime.fork(restore(core.matchCauseEffect(register(cb => unsafeRunCallback(runtime)(core.intoDeferred(cb, deferred))), {\n    onFailure: cause => core.deferredFailCause(deferred, cause),\n    onSuccess: cleanup_ => {\n      cleanup = cleanup_;\n      return core.void;\n    }\n  }))), restore(core.onInterrupt(core.deferredAwait(deferred), () => cleanup ?? core.void))))));\n});\n//# sourceMappingURL=runtime.js.map","import { dual } from \"./Function.js\";\nimport * as internalCause from \"./internal/cause.js\";\nimport * as console_ from \"./internal/console.js\";\nimport { TagProto } from \"./internal/context.js\";\nimport * as effect from \"./internal/core-effect.js\";\nimport * as core from \"./internal/core.js\";\nimport * as defaultServices from \"./internal/defaultServices.js\";\nimport * as circular from \"./internal/effect/circular.js\";\nimport * as fiberRuntime from \"./internal/fiberRuntime.js\";\nimport * as layer from \"./internal/layer.js\";\nimport * as option_ from \"./internal/option.js\";\nimport * as query from \"./internal/query.js\";\nimport * as runtime_ from \"./internal/runtime.js\";\nimport * as schedule_ from \"./internal/schedule.js\";\nimport * as internalTracer from \"./internal/tracer.js\";\nimport * as Request from \"./Request.js\";\nimport * as Scheduler from \"./Scheduler.js\";\nimport { isGeneratorFunction } from \"./Utils.js\";\n/**\n * @since 2.0.0\n * @category Symbols\n */\nexport const EffectTypeId = core.EffectTypeId;\n/**\n * Checks if a given value is an `Effect` value.\n *\n * **When to Use**\n *\n * This function can be useful for checking the type of a value before\n * attempting to operate on it as an `Effect` value. For example, you could use\n * `Effect.isEffect` to check the type of a value before using it as an argument\n * to a function that expects an `Effect` value.\n *\n * @since 2.0.0\n * @category Guards\n */\nexport const isEffect = core.isEffect;\n/**\n * Returns an effect that caches its result for a specified `Duration`,\n * known as \"timeToLive\" (TTL).\n *\n * **Details**\n *\n * This function is used to cache the result of an effect for a specified amount\n * of time. This means that the first time the effect is evaluated, its result\n * is computed and stored.\n *\n * If the effect is evaluated again within the specified `timeToLive`, the\n * cached result will be used, avoiding recomputation.\n *\n * After the specified duration has passed, the cache expires, and the effect\n * will be recomputed upon the next evaluation.\n *\n * **When to Use**\n *\n * Use this function when you have an effect that involves costly operations or\n * computations, and you want to avoid repeating them within a short time frame.\n *\n * It's ideal for scenarios where the result of an effect doesn't change\n * frequently and can be reused for a specified duration.\n *\n * By caching the result, you can improve efficiency and reduce unnecessary\n * computations, especially in performance-critical applications.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * let i = 1\n * const expensiveTask = Effect.promise<string>(() => {\n *   console.log(\"expensive task...\")\n *   return new Promise((resolve) => {\n *     setTimeout(() => {\n *       resolve(`result ${i++}`)\n *     }, 100)\n *   })\n * })\n *\n * const program = Effect.gen(function* () {\n *   const cached = yield* Effect.cachedWithTTL(expensiveTask, \"150 millis\")\n *   yield* cached.pipe(Effect.andThen(Console.log))\n *   yield* cached.pipe(Effect.andThen(Console.log))\n *   yield* Effect.sleep(\"100 millis\")\n *   yield* cached.pipe(Effect.andThen(Console.log))\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // expensive task...\n * // result 1\n * // result 1\n * // expensive task...\n * // result 2\n * ```\n *\n * @see {@link cached} for a similar function that caches the result\n * indefinitely.\n * @see {@link cachedInvalidateWithTTL} for a similar function that includes an\n * additional effect for manually invalidating the cached value.\n *\n * @since 2.0.0\n * @category Caching\n */\nexport const cachedWithTTL = circular.cached;\n/**\n * Caches an effect's result for a specified duration and allows manual\n * invalidation before expiration.\n *\n * **Details**\n *\n * This function behaves similarly to {@link cachedWithTTL} by caching the\n * result of an effect for a specified period of time. However, it introduces an\n * additional feature: it provides an effect that allows you to manually\n * invalidate the cached result before it naturally expires.\n *\n * This gives you more control over the cache, allowing you to refresh the\n * result when needed, even if the original cache has not yet expired.\n *\n * Once the cache is invalidated, the next time the effect is evaluated, the\n * result will be recomputed, and the cache will be refreshed.\n *\n * **When to Use**\n *\n * Use this function when you have an effect whose result needs to be cached for\n * a certain period, but you also want the option to refresh the cache manually\n * before the expiration time.\n *\n * This is useful when you need to ensure that the cached data remains valid for\n * a certain period but still want to invalidate it if the underlying data\n * changes or if you want to force a recomputation.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * let i = 1\n * const expensiveTask = Effect.promise<string>(() => {\n *   console.log(\"expensive task...\")\n *   return new Promise((resolve) => {\n *     setTimeout(() => {\n *       resolve(`result ${i++}`)\n *     }, 100)\n *   })\n * })\n *\n * const program = Effect.gen(function* () {\n *   const [cached, invalidate] = yield* Effect.cachedInvalidateWithTTL(\n *     expensiveTask,\n *     \"1 hour\"\n *   )\n *   yield* cached.pipe(Effect.andThen(Console.log))\n *   yield* cached.pipe(Effect.andThen(Console.log))\n *   yield* invalidate\n *   yield* cached.pipe(Effect.andThen(Console.log))\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // expensive task...\n * // result 1\n * // result 1\n * // expensive task...\n * // result 2\n * ```\n *\n * @see {@link cached} for a similar function that caches the result\n * indefinitely.\n * @see {@link cachedWithTTL} for a similar function that caches the result for\n * a specified duration but does not include an effect for manual invalidation.\n *\n * @since 2.0.0\n * @category Caching\n */\nexport const cachedInvalidateWithTTL = circular.cachedInvalidateWithTTL;\n/**\n * Returns an effect that lazily computes a result and caches it for subsequent\n * evaluations.\n *\n * **Details**\n *\n * This function wraps an effect and ensures that its result is computed only\n * once. Once the result is computed, it is cached, meaning that subsequent\n * evaluations of the same effect will return the cached result without\n * re-executing the logic.\n *\n * **When to Use**\n *\n * Use this function when you have an expensive or time-consuming operation that\n * you want to avoid repeating. The first evaluation will compute the result,\n * and all following evaluations will immediately return the cached value,\n * improving performance and reducing unnecessary work.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * let i = 1\n * const expensiveTask = Effect.promise<string>(() => {\n *   console.log(\"expensive task...\")\n *   return new Promise((resolve) => {\n *     setTimeout(() => {\n *       resolve(`result ${i++}`)\n *     }, 100)\n *   })\n * })\n *\n * const program = Effect.gen(function* () {\n *   console.log(\"non-cached version:\")\n *   yield* expensiveTask.pipe(Effect.andThen(Console.log))\n *   yield* expensiveTask.pipe(Effect.andThen(Console.log))\n *   console.log(\"cached version:\")\n *   const cached = yield* Effect.cached(expensiveTask)\n *   yield* cached.pipe(Effect.andThen(Console.log))\n *   yield* cached.pipe(Effect.andThen(Console.log))\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // non-cached version:\n * // expensive task...\n * // result 1\n * // expensive task...\n * // result 2\n * // cached version:\n * // expensive task...\n * // result 3\n * // result 3\n * ```\n *\n * @see {@link cachedWithTTL} for a similar function that includes a\n * time-to-live duration for the cached value.\n * @see {@link cachedInvalidateWithTTL} for a similar function that includes an\n * additional effect for manually invalidating the cached value.\n *\n * @since 2.0.0\n * @category Caching\n */\nexport const cached = effect.memoize;\n/**\n * Returns a memoized version of a function with effects, reusing results for\n * the same inputs.\n *\n * **Details**\n *\n * This function creates a memoized version of a given function that performs an\n * effect. Memoization ensures that once a result is computed for a specific\n * input, it is stored and reused for subsequent calls with the same input,\n * reducing the need to recompute the result.\n *\n * The function can optionally take an `Equivalence` parameter to\n * determine how inputs are compared for caching purposes.\n *\n * **When to Use**\n *\n * Use this function when you have a function that performs an effect and you\n * want to avoid recomputing the result for the same input multiple times.\n *\n * It's ideal for functions that produce deterministic results based on their\n * inputs, and you want to improve performance by caching the output.\n *\n * This is particularly useful in scenarios where the function involves\n * expensive calculations or operations that should be avoided after the first\n * execution with the same parameters.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Random } from \"effect\"\n *\n * const program = Effect.gen(function* () {\n *   const randomNumber = (n: number) => Random.nextIntBetween(1, n)\n *   console.log(\"non-memoized version:\")\n *   console.log(yield* randomNumber(10))\n *   console.log(yield* randomNumber(10))\n *\n *   console.log(\"memoized version:\")\n *   const memoized = yield* Effect.cachedFunction(randomNumber)\n *   console.log(yield* memoized(10))\n *   console.log(yield* memoized(10))\n * })\n *\n * Effect.runFork(program)\n * // Example Output:\n * // non-memoized version:\n * // 2\n * // 8\n * // memoized version:\n * // 5\n * // 5\n * ```\n *\n * @since 2.0.0\n * @category Caching\n */\nexport const cachedFunction = circular.cachedFunction;\n/**\n * Returns an effect that executes only once, regardless of how many times it's\n * called.\n *\n * **Details**\n *\n * This function ensures that a specific effect is executed only a single time,\n * no matter how many times it is invoked. The result of the effect will be\n * cached, and subsequent calls to the effect will immediately return the cached\n * result without re-executing the original logic.\n *\n * **When to Use**\n *\n * Use this function when you need to perform a task only once, regardless of\n * how many times the effect is triggered. It's particularly useful when you\n * have initialization tasks, logging, or other one-time actions that should not\n * be repeated. This can help optimize performance and avoid redundant actions.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const program = Effect.gen(function* () {\n *   const task1 = Console.log(\"task1\")\n *   yield* Effect.repeatN(task1, 2)\n *   const task2 = yield* Effect.once(Console.log(\"task2\"))\n *   yield* Effect.repeatN(task2, 2)\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // task1\n * // task1\n * // task1\n * // task2\n * ```\n *\n * @since 2.0.0\n * @category Caching\n */\nexport const once = effect.once;\n/**\n * Combines multiple effects into one, returning results based on the input\n * structure.\n *\n * **Details**\n *\n * Use this function when you need to run multiple effects and combine their\n * results into a single output. It supports tuples, iterables, structs, and\n * records, making it flexible for different input types.\n *\n * For instance, if the input is a tuple:\n *\n * ```ts skip-type-checking\n * //         ┌─── a tuple of effects\n * //         ▼\n * Effect.all([effect1, effect2, ...])\n * ```\n *\n * the effects are executed sequentially, and the result is a new effect\n * containing the results as a tuple. The results in the tuple match the order\n * of the effects passed to `Effect.all`.\n *\n * **Concurrency**\n *\n * You can control the execution order (e.g., sequential vs. concurrent) using\n * the `concurrency` option.\n *\n * **Short-Circuiting Behavior**\n *\n * This function stops execution on the first error it encounters, this is\n * called \"short-circuiting\". If any effect in the collection fails, the\n * remaining effects will not run, and the error will be propagated. To change\n * this behavior, you can use the `mode` option, which allows all effects to run\n * and collect results as `Either` or `Option`.\n *\n * **The `mode` option**\n *\n * The `{ mode: \"either\" }` option changes the behavior of `Effect.all` to\n * ensure all effects run, even if some fail. Instead of stopping on the first\n * failure, this mode collects both successes and failures, returning an array\n * of `Either` instances where each result is either a `Right` (success) or a\n * `Left` (failure).\n *\n * Similarly, the `{ mode: \"validate\" }` option uses `Option` to indicate\n * success or failure. Each effect returns `None` for success and `Some` with\n * the error for failure.\n *\n * **Example** (Combining Effects in Tuples)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const tupleOfEffects = [\n *   Effect.succeed(42).pipe(Effect.tap(Console.log)),\n *   Effect.succeed(\"Hello\").pipe(Effect.tap(Console.log))\n * ] as const\n *\n * //      ┌─── Effect<[number, string], never, never>\n * //      ▼\n * const resultsAsTuple = Effect.all(tupleOfEffects)\n *\n * Effect.runPromise(resultsAsTuple).then(console.log)\n * // Output:\n * // 42\n * // Hello\n * // [ 42, 'Hello' ]\n * ```\n *\n * **Example** (Combining Effects in Iterables)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const iterableOfEffects: Iterable<Effect.Effect<number>> = [1, 2, 3].map(\n *   (n) => Effect.succeed(n).pipe(Effect.tap(Console.log))\n * )\n *\n * //      ┌─── Effect<number[], never, never>\n * //      ▼\n * const resultsAsArray = Effect.all(iterableOfEffects)\n *\n * Effect.runPromise(resultsAsArray).then(console.log)\n * // Output:\n * // 1\n * // 2\n * // 3\n * // [ 1, 2, 3 ]\n * ```\n *\n * **Example** (Combining Effects in Structs)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const structOfEffects = {\n *   a: Effect.succeed(42).pipe(Effect.tap(Console.log)),\n *   b: Effect.succeed(\"Hello\").pipe(Effect.tap(Console.log))\n * }\n *\n * //      ┌─── Effect<{ a: number; b: string; }, never, never>\n * //      ▼\n * const resultsAsStruct = Effect.all(structOfEffects)\n *\n * Effect.runPromise(resultsAsStruct).then(console.log)\n * // Output:\n * // 42\n * // Hello\n * // { a: 42, b: 'Hello' }\n * ```\n *\n * **Example** (Combining Effects in Records)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const recordOfEffects: Record<string, Effect.Effect<number>> = {\n *   key1: Effect.succeed(1).pipe(Effect.tap(Console.log)),\n *   key2: Effect.succeed(2).pipe(Effect.tap(Console.log))\n * }\n *\n * //      ┌─── Effect<{ [x: string]: number; }, never, never>\n * //      ▼\n * const resultsAsRecord = Effect.all(recordOfEffects)\n *\n * Effect.runPromise(resultsAsRecord).then(console.log)\n * // Output:\n * // 1\n * // 2\n * // { key1: 1, key2: 2 }\n * ```\n *\n * **Example** (Short-Circuiting Behavior)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const program = Effect.all([\n *   Effect.succeed(\"Task1\").pipe(Effect.tap(Console.log)),\n *   Effect.fail(\"Task2: Oh no!\").pipe(Effect.tap(Console.log)),\n *   // Won't execute due to earlier failure\n *   Effect.succeed(\"Task3\").pipe(Effect.tap(Console.log))\n * ])\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // Task1\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Fail', failure: 'Task2: Oh no!' }\n * // }\n * ```\n *\n * **Example** (Collecting Results with `mode: \"either\"`)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const effects = [\n *   Effect.succeed(\"Task1\").pipe(Effect.tap(Console.log)),\n *   Effect.fail(\"Task2: Oh no!\").pipe(Effect.tap(Console.log)),\n *   Effect.succeed(\"Task3\").pipe(Effect.tap(Console.log))\n * ]\n *\n * const program = Effect.all(effects, { mode: \"either\" })\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // Task1\n * // Task3\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Success',\n * //   value: [\n * //     { _id: 'Either', _tag: 'Right', right: 'Task1' },\n * //     { _id: 'Either', _tag: 'Left', left: 'Task2: Oh no!' },\n * //     { _id: 'Either', _tag: 'Right', right: 'Task3' }\n * //   ]\n * // }\n * ```\n *\n * **Example** (Collecting Results with `mode: \"validate\"`)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const effects = [\n *   Effect.succeed(\"Task1\").pipe(Effect.tap(Console.log)),\n *   Effect.fail(\"Task2: Oh no!\").pipe(Effect.tap(Console.log)),\n *   Effect.succeed(\"Task3\").pipe(Effect.tap(Console.log))\n * ]\n *\n * const program = Effect.all(effects, { mode: \"validate\" })\n *\n * Effect.runPromiseExit(program).then((result) => console.log(\"%o\", result))\n * // Output:\n * // Task1\n * // Task3\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Fail',\n * //     failure: [\n * //       { _id: 'Option', _tag: 'None' },\n * //       { _id: 'Option', _tag: 'Some', value: 'Task2: Oh no!' },\n * //       { _id: 'Option', _tag: 'None' }\n * //     ]\n * //   }\n * // }\n * ```\n *\n * @see {@link forEach} for iterating over elements and applying an effect.\n * @see {@link allWith} for a data-last version of this function.\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const all = fiberRuntime.all;\n/**\n * A data-last version of {@link all}, designed for use in pipelines.\n *\n * **When to Use**\n *\n * This function enables you to combine multiple effects and customize execution\n * options such as concurrency levels. This version is useful in functional\n * pipelines where you first define your data and then apply operations to it.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, pipe } from \"effect\"\n *\n * const task1 = Effect.succeed(1).pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Effect.log(\"task1 done\"))\n * )\n *\n * const task2 = Effect.succeed(\"hello\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Effect.log(\"task2 done\"))\n * )\n *\n * const program = pipe(\n *   [task1, task2],\n *   // Run both effects concurrently using the concurrent option\n *   Effect.allWith({ concurrency: 2 })\n * )\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // timestamp=... level=INFO fiber=#3 message=\"task2 done\"\n * // timestamp=... level=INFO fiber=#2 message=\"task1 done\"\n * // [ 1, 'hello' ]\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const allWith = fiberRuntime.allWith;\n/**\n * Evaluates and runs each effect in the iterable, collecting only the\n * successful results while discarding failures.\n *\n * **Details**\n *\n * This function function processes an iterable of effects and runs each one. If\n * an effect is successful, its result is collected; if it fails, the result is\n * discarded. This ensures that only successful outcomes are kept.\n *\n * **Options**\n *\n * The function also allows you to customize how the effects are handled by\n * specifying options such as concurrency, batching, and how finalizers behave.\n * These options provide flexibility in running the effects concurrently or\n * adjusting other execution details.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const tasks = [\n *   Effect.succeed(1),\n *   Effect.fail(\"Error 1\"),\n *   Effect.succeed(2),\n *   Effect.fail(\"Error 2\")\n * ]\n *\n * const program = Effect.gen(function*() {\n *   const successfulResults = yield* Effect.allSuccesses(tasks)\n *   console.log(successfulResults)\n * })\n *\n * Effect.runFork(program)\n * // Output: [1, 2]\n *\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const allSuccesses = fiberRuntime.allSuccesses;\n/**\n * Drops elements until the effectful predicate returns `true`.\n *\n * **Details**\n *\n * This function processes a collection of elements and uses an effectful\n * predicate to determine when to stop dropping elements. It drops elements from\n * the beginning of the collection until the predicate returns `true`.\n *\n * The predicate is a function that takes an element and its index in the\n * collection and returns an effect that evaluates to a boolean.\n *\n * Once the predicate returns `true`, the remaining elements of the collection\n * are returned.\n *\n * **Note**: The first element for which the predicate returns `true` is also\n * dropped.\n *\n * **When to Use**\n *\n * This function allows you to conditionally skip over a part of the collection\n * based on some criteria defined in the predicate.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5, 6]\n * const predicate = (n: number, i: number) => Effect.succeed(n > 3)\n *\n * const program = Effect.gen(function*() {\n *   const result = yield* Effect.dropUntil(numbers, predicate)\n *   console.log(result)\n * })\n *\n * Effect.runFork(program)\n * // Output: [5, 6]\n * ```\n *\n * @see {@link dropWhile} for a similar function that drops elements while the\n * predicate returns `true`.\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const dropUntil = effect.dropUntil;\n/**\n * Drops elements as long as the predicate returns `true`.\n *\n * **Details**\n *\n * This function processes a collection of elements and uses a predicate to\n * decide whether to drop an element.\n *\n * The predicate is a function that takes an element and its index, and it\n * returns an effect that evaluates to a boolean.\n *\n * As long as the predicate returns `true`, elements will continue to be dropped\n * from the collection.\n *\n * Once the predicate returns `false`, the remaining elements are kept.\n *\n * **When to Use**\n *\n * This function allows you to discard elements from the start of a collection\n * based on a condition, and only keep the rest when the condition no longer\n * holds.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5, 6]\n * const predicate = (n: number, i: number) => Effect.succeed(n <= 3)\n *\n * const program = Effect.gen(function*() {\n *   const result = yield* Effect.dropWhile(numbers, predicate)\n *   console.log(result)\n * })\n *\n * Effect.runFork(program)\n * // Output: [4, 5, 6]\n * ```\n *\n * @see {@link dropUntil} for a similar function that drops elements until the\n * predicate returns `true`.\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const dropWhile = effect.dropWhile;\n/**\n * Takes elements from a collection until the effectful predicate returns\n * `true`.\n *\n * **Details**\n *\n * This function processes a collection of elements and uses an effectful\n * predicate to decide when to stop taking elements. The elements are taken from\n * the beginning of the collection until the predicate returns `true`.\n *\n * The predicate is a function that takes an element and its index in the\n * collection, and returns an effect that resolves to a boolean.\n *\n * Once the predicate returns `true`, the remaining elements of the collection\n * are discarded, and the function stops taking more elements.\n *\n * **Note**: The first element for which the predicate returns `true` is also\n * included in the result.\n *\n * **When to Use**\n *\n * Use this function when you want to conditionally take elements from a\n * collection based on a dynamic condition. For example, you may want to collect\n * numbers from a list until a certain threshold is reached, or gather items\n * until a specific condition is met.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5, 6]\n * const predicate = (n: number, i: number) => Effect.succeed(n > 3)\n *\n * const program = Effect.gen(function*() {\n *   const result = yield* Effect.takeUntil(numbers, predicate)\n *   console.log(result)\n * })\n *\n * Effect.runFork(program)\n * // Output: [ 1, 2, 3, 4 ]\n * ```\n *\n * @see {@link takeWhile} for a similar function that takes elements while the\n * predicate returns `true`.\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const takeUntil = effect.takeUntil;\n/**\n * Takes elements as long as the predicate returns `true`.\n *\n * **Details**\n *\n * This function processes a collection of elements and uses a predicate to\n * decide whether to take an element.\n *\n * The predicate is a function that takes an element and its index, and it\n * returns an effect that evaluates to a boolean.\n *\n * As long as the predicate returns `true`, elements will continue to be taken\n * from the collection.\n *\n * Once the predicate returns `false`, the remaining elements are discarded.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5, 6]\n * const predicate = (n: number, i: number) => Effect.succeed(n <= 3)\n *\n * const program = Effect.gen(function*() {\n *   const result = yield* Effect.takeWhile(numbers, predicate)\n *   console.log(result)\n * })\n *\n * Effect.runFork(program)\n * // Output: [1, 2, 3]\n * ```\n *\n * @see {@link takeUntil} for a similar function that takes elements until the predicate returns `true`.\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const takeWhile = effect.takeWhile;\n/**\n * Determines whether all elements of the iterable satisfy the effectful\n * predicate.\n *\n * **Details**\n *\n * This function checks whether every element in a given collection (an\n * iterable) satisfies a condition defined by an effectful predicate.\n *\n * The predicate is a function that takes an element and its index, and it\n * returns an effect that evaluates to a boolean.\n *\n * The function will process each element and return `true` if all elements\n * satisfy the predicate; otherwise, it returns `false`.\n *\n * **When to Use**\n *\n * This function is useful when you need to verify that all items in a\n * collection meet certain criteria, even when the evaluation of each item\n * involves effects, such as asynchronous checks or complex computations.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [2, 4, 6, 8]\n * const predicate = (n: number, i: number) => Effect.succeed(n % 2 === 0)\n *\n * const program = Effect.gen(function*() {\n *   const allEven = yield* Effect.every(numbers, predicate)\n *   console.log(allEven)\n * })\n *\n * Effect.runFork(program)\n * // Output: true\n * ```\n *\n * @see {@link exists} for a similar function that returns a boolean indicating\n * whether **any** element satisfies the predicate.\n *\n * @since 2.0.0\n * @category Condition Checking\n */\nexport const every = effect.every;\n/**\n * Determines whether any element of the iterable satisfies the effectual\n * predicate.\n *\n * **Details**\n *\n * This function checks whether any element in a given collection (an iterable)\n * satisfies a condition defined by an effectful predicate.\n *\n * The predicate is a function that takes an element and its index, and it\n * returns an effect that evaluates to a boolean.\n *\n * The function will process each element, and if any element satisfies the\n * predicate (returns `true`), the function will immediately return `true`.\n *\n * If none of the elements satisfy the condition, it will return `false`.\n *\n * **When to Use**\n *\n * This function allows you to quickly check for a condition in a collection\n * without having to manually iterate over it.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4]\n * const predicate = (n: number, i: number) => Effect.succeed(n > 2)\n *\n * const program = Effect.gen(function*() {\n *   const hasLargeNumber = yield* Effect.exists(numbers, predicate)\n *   console.log(hasLargeNumber)\n * })\n *\n * Effect.runFork(program)\n * // Output: true\n * ```\n *\n * @see {@link every} for a similar function that checks if **all** elements\n * satisfy the predicate.\n *\n * @since 2.0.0\n * @category Condition Checking\n */\nexport const exists = fiberRuntime.exists;\n/**\n * Filters an iterable using the specified effectful predicate.\n *\n * **Details**\n *\n * This function filters a collection (an iterable) by applying an effectful\n * predicate.\n *\n * The predicate is a function that takes an element and its index, and it\n * returns an effect that evaluates to a boolean.\n *\n * The function processes each element in the collection and keeps only those\n * that satisfy the condition defined by the predicate.\n *\n * **Options**\n *\n * You can also adjust the behavior with options such as concurrency, batching,\n * or whether to negate the condition.\n *\n * **When to Use**\n *\n * This function allows you to selectively keep or remove elements based on a\n * condition that may involve asynchronous or side-effect-causing operations.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5]\n * const predicate = (n: number, i: number) => Effect.succeed(n % 2 === 0)\n *\n * const program = Effect.gen(function*() {\n *   const result = yield* Effect.filter(numbers, predicate)\n *   console.log(result)\n * })\n *\n * Effect.runFork(program)\n * // Output: [2, 4]\n * ```\n *\n * @since 2.0.0\n * @category Filtering\n */\nexport const filter = fiberRuntime.filter;\n/**\n * Filters and maps elements sequentially in one operation.\n *\n * This function processes each element one by one. It applies a function that\n * returns an `Option` to each element. If the function returns `Some`, the\n * element is kept; if it returns `None`, the element is removed. The operation\n * is done sequentially for each element.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect, Option } from \"effect\"\n *\n * const task = (n: number) =>\n *   Effect.succeed(n).pipe(\n *     Effect.delay(1000 - (n * 100)),\n *     Effect.tap(Console.log(`task${n} done`))\n *   )\n *\n * const program = Effect.filterMap(\n *   [task(1), task(2), task(3), task(4)],\n *   (n) => n % 2 === 0 ? Option.some(n) : Option.none()\n * )\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // task1 done\n * // task2 done\n * // task3 done\n * // task4 done\n * // [ 2, 4 ]\n * ```\n *\n * @since 2.0.0\n * @category Filtering\n */\nexport const filterMap = effect.filterMap;\n/**\n * Returns the first element that satisfies the effectful predicate.\n *\n * **Details**\n *\n * This function processes a collection of elements and applies an effectful\n * predicate to each element.\n *\n * The predicate is a function that takes an element and its index in the\n * collection, and it returns an effect that evaluates to a boolean.\n *\n * The function stops as soon as it finds the first element for which the\n * predicate returns `true` and returns that element wrapped in an `Option`.\n *\n * If no element satisfies the predicate, the result will be `None`.\n *\n * **When to Use**\n *\n * This function allows you to efficiently find an element that meets a specific\n * condition, even when the evaluation involves effects like asynchronous\n * operations or side effects.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5]\n * const predicate = (n: number, i: number) => Effect.succeed(n > 3)\n *\n * const program = Effect.gen(function*() {\n *   const result = yield* Effect.findFirst(numbers, predicate)\n *   console.log(result)\n * })\n *\n * Effect.runFork(program)\n * // Output: { _id: 'Option', _tag: 'Some', value: 4 }\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const findFirst = effect.findFirst;\n/**\n * Executes an effectful operation for each element in an `Iterable`.\n *\n * **Details**\n *\n * This function applies a provided operation to each element in the iterable,\n * producing a new effect that returns an array of results.\n *\n * If any effect fails, the iteration stops immediately (short-circuiting), and\n * the error is propagated.\n *\n * **Concurrency**\n *\n * The `concurrency` option controls how many operations are performed\n * concurrently. By default, the operations are performed sequentially.\n *\n * **Discarding Results**\n *\n * If the `discard` option is set to `true`, the intermediate results are not\n * collected, and the final result of the operation is `void`.\n *\n * **Example** (Applying Effects to Iterable Elements)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const result = Effect.forEach([1, 2, 3, 4, 5], (n, index) =>\n *   Console.log(`Currently at index ${index}`).pipe(Effect.as(n * 2))\n * )\n *\n * Effect.runPromise(result).then(console.log)\n * // Output:\n * // Currently at index 0\n * // Currently at index 1\n * // Currently at index 2\n * // Currently at index 3\n * // Currently at index 4\n * // [ 2, 4, 6, 8, 10 ]\n * ```\n *\n * **Example** (Discarding Results)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * // Apply effects but discard the results\n * const result = Effect.forEach(\n *   [1, 2, 3, 4, 5],\n *   (n, index) =>\n *     Console.log(`Currently at index ${index}`).pipe(Effect.as(n * 2)),\n *   { discard: true }\n * )\n *\n * Effect.runPromise(result).then(console.log)\n * // Output:\n * // Currently at index 0\n * // Currently at index 1\n * // Currently at index 2\n * // Currently at index 3\n * // Currently at index 4\n * // undefined\n * ```\n *\n * @see {@link all} for combining multiple effects into one.\n *\n * @since 2.0.0\n * @category Looping\n */\nexport const forEach = fiberRuntime.forEach;\n/**\n * Returns the first element of the iterable if the collection is non-empty, or\n * fails with the error `NoSuchElementException` if the collection is empty.\n *\n * **When to Use**\n *\n * This function is useful when you need to retrieve the first item from a\n * collection and want to handle the case where the collection might be empty\n * without causing an unhandled exception.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * // Simulate an async operation\n * const fetchNumbers = Effect.succeed([1, 2, 3]).pipe(Effect.delay(\"100 millis\"))\n *\n * const program = Effect.gen(function*() {\n *   const firstElement = yield* Effect.head(fetchNumbers)\n *   console.log(firstElement)\n * })\n *\n * Effect.runFork(program)\n * // Output: 1\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const head = effect.head;\n/**\n * Merges an `Iterable<Effect<A, E, R>>` to a single effect.\n *\n * **Details**\n *\n * This function takes an iterable of effects and combines them into a single\n * effect. It does this by iterating over each effect in the collection and\n * applying a function that accumulates results into a \"zero\" value, which\n * starts with an initial value and is updated with each effect's success.\n *\n * The provided function `f` is called for each element in the iterable,\n * allowing you to specify how to combine the results.\n *\n * **Options**\n *\n * The function also allows you to customize how the effects are handled by\n * specifying options such as concurrency, batching, and how finalizers behave.\n * These options provide flexibility in running the effects concurrently or\n * adjusting other execution details.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const numbers = [Effect.succeed(1), Effect.succeed(2), Effect.succeed(3)]\n * const add = (sum: number, value: number, i: number) => sum + value\n * const zero = 0\n *\n * const program = Effect.gen(function*() {\n *   const total = yield* Effect.mergeAll(numbers, zero, add)\n *   console.log(total)\n * })\n *\n * Effect.runFork(program)\n * // Output: 6\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const mergeAll = fiberRuntime.mergeAll;\n/**\n * Processes an iterable and applies an effectful function to each element,\n * categorizing the results into successes and failures.\n *\n * **Details**\n *\n * This function processes each element in the provided iterable by applying an\n * effectful function to it. The results are then categorized into two separate\n * lists: one for failures and another for successes. This separation allows you\n * to handle the two categories differently. Failures are collected in a list\n * without interrupting the processing of the remaining elements, so the\n * operation continues even if some elements fail. This is particularly useful\n * when you need to handle both successful and failed results separately,\n * without stopping the entire process on encountering a failure.\n *\n * **When to Use**\n *\n * Use this function when you want to process a collection of items and handle\n * errors or failures without interrupting the processing of other items. It's\n * useful when you need to distinguish between successful and failed results and\n * process them separately, for example, when logging errors while continuing to\n * work with valid data. The function ensures that failures are captured, while\n * successes are processed normally.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<[string[], number[]], never, never>\n * //      ▼\n * const program = Effect.partition([0, 1, 2, 3, 4], (n) => {\n *   if (n % 2 === 0) {\n *     return Effect.succeed(n)\n *   } else {\n *     return Effect.fail(`${n} is not even`)\n *   }\n * })\n *\n * Effect.runPromise(program).then(console.log, console.error)\n * // Output:\n * // [ [ '1 is not even', '3 is not even' ], [ 0, 2, 4 ] ]\n * ```\n *\n * @see {@link validateAll} for a function that either collects all failures or all successes.\n * @see {@link validateFirst} for a function that stops at the first success.\n *\n * @since 2.0.0\n * @category Error Accumulation\n */\nexport const partition = fiberRuntime.partition;\n/**\n * Reduces an `Iterable<A>` using an effectual function `f`, working\n * sequentially from left to right.\n *\n * **Details**\n *\n * This function takes an iterable and applies a function `f` to each element in\n * the iterable. The function works sequentially, starting with an initial value\n * `zero` and then combining it with each element in the collection. The\n * provided function `f` is called for each element in the iterable, allowing\n * you to accumulate a result based on the current value and the element being\n * processed.\n *\n * **When to Use**\n *\n * The function is often used for operations like summing a collection of\n * numbers or combining results from multiple tasks. It ensures that operations\n * are performed one after the other, maintaining the order of the elements.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const processOrder = (id: number) =>\n *   Effect.succeed({ id, price: 100 * id })\n *     .pipe(Effect.tap(() => Console.log(`Order ${id} processed`)), Effect.delay(500 - (id * 100)))\n *\n * const program = Effect.reduce(\n *   [1, 2, 3, 4],\n *   0,\n *   (acc, id, i) =>\n *     processOrder(id)\n *       .pipe(Effect.map((order) => acc + order.price))\n * )\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // Order 1 processed\n * // Order 2 processed\n * // Order 3 processed\n * // Order 4 processed\n * // 1000\n * ```\n *\n * @see {@link reduceWhile} for a similar function that stops the process based on a predicate.\n * @see {@link reduceRight} for a similar function that works from right to left.\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const reduce = effect.reduce;\n/**\n * Reduces an `Iterable<A>` using an effectual function `body`, working\n * sequentially from left to right, stopping the process early when the\n * predicate `while` is not satisfied.\n *\n * **Details**\n *\n * This function processes a collection of elements, applying a function `body`\n * to reduce them to a single value, starting from the first element. It checks\n * the value of the accumulator against a predicate (`while`). If at any point\n * the predicate returns `false`, the reduction stops, and the accumulated\n * result is returned.\n *\n * **When to Use**\n *\n * Use this function when you need to reduce a collection of elements, but only\n * continue the process as long as a certain condition holds true. For example,\n * if you want to sum values in a list but stop as soon as the sum exceeds a\n * certain threshold, you can use this function.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const processOrder = (id: number) =>\n *   Effect.succeed({ id, price: 100 * id })\n *     .pipe(Effect.tap(() => Console.log(`Order ${id} processed`)), Effect.delay(500 - (id * 100)))\n *\n * const program = Effect.reduceWhile(\n *   [1, 2, 3, 4],\n *   0,\n *   {\n *     body: (acc, id, i) =>\n *       processOrder(id)\n *         .pipe(Effect.map((order) => acc + order.price)),\n *     while: (acc) => acc < 500\n *   }\n * )\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // Order 1 processed\n * // Order 2 processed\n * // Order 3 processed\n * // 600\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const reduceWhile = effect.reduceWhile;\n/**\n * Reduces an `Iterable<A>` using an effectual function `f`, working\n * sequentially from right to left.\n *\n * **Details**\n *\n * This function takes an iterable and applies a function `f` to each element in\n * the iterable. The function works sequentially, starting with an initial value\n * `zero` and then combining it with each element in the collection. The\n * provided function `f` is called for each element in the iterable, allowing\n * you to accumulate a result based on the current value and the element being\n * processed.\n *\n * **When to Use**\n *\n * The function is often used for operations like summing a collection of\n * numbers or combining results from multiple tasks. It ensures that operations\n * are performed one after the other, maintaining the order of the elements.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const processOrder = (id: number) =>\n *   Effect.succeed({ id, price: 100 * id })\n *     .pipe(Effect.tap(() => Console.log(`Order ${id} processed`)), Effect.delay(500 - (id * 100)))\n *\n * const program = Effect.reduceRight(\n *   [1, 2, 3, 4],\n *   0,\n *   (id, acc, i) =>\n *     processOrder(id)\n *       .pipe(Effect.map((order) => acc + order.price))\n * )\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // Order 4 processed\n * // Order 3 processed\n * // Order 2 processed\n * // Order 1 processed\n * // 1000\n * ```\n *\n * @see {@link reduce} for a similar function that works from left to right.\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const reduceRight = effect.reduceRight;\n/**\n * Reduces an `Iterable<Effect<A, E, R>>` to a single effect.\n *\n * **Details**\n *\n * This function processes a collection of effects and combines them into one\n * single effect. It starts with an initial effect (`zero`) and applies a\n * function `f` to each element in the collection.\n *\n * **Options**\n *\n * The function also allows you to customize how the effects are handled by\n * specifying options such as concurrency, batching, and how finalizers behave.\n * These options provide flexibility in running the effects concurrently or\n * adjusting other execution details.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const processOrder = (id: number) =>\n *   Effect.succeed({ id, price: 100 * id })\n *     .pipe(Effect.tap(() => Console.log(`Order ${id} processed`)), Effect.delay(500 - (id * 100)))\n *\n * const program = Effect.reduceEffect(\n *   [processOrder(1), processOrder(2), processOrder(3), processOrder(4)],\n *   Effect.succeed(0),\n *   (acc, order, i) => acc + order.price\n * )\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // Order 1 processed\n * // Order 2 processed\n * // Order 3 processed\n * // Order 4 processed\n * // 1000\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const reduceEffect = fiberRuntime.reduceEffect;\n/**\n * Replicates the given effect `n` times.\n *\n * **Details**\n *\n * This function takes an effect and replicates it a specified number of times\n * (`n`). The result is an array of `n` effects, each of which is identical to\n * the original effect.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const task = Effect.succeed(\"Hello, World!\").pipe(\n *   Effect.tap(Console.log)\n * )\n *\n * const program = Effect.gen(function*() {\n *   // Replicate the task 3 times\n *   const tasks = Effect.replicate(task, 3)\n *   for (const t of tasks) {\n *     // Run each task\n *     yield* t\n *   }\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // Hello, World!\n * // Hello, World!\n * // Hello, World!\n * ```\n *\n * @since 2.0.0\n */\nexport const replicate = fiberRuntime.replicate;\n/**\n * Performs this effect the specified number of times and collects the results.\n *\n * **Details**\n *\n * This function repeats an effect multiple times and collects the results into\n * an array. You specify how many times to execute the effect, and it runs that\n * many times, either in sequence or concurrently depending on the provided\n * options.\n *\n * **Options**\n *\n * If the `discard` option is set to `true`, the intermediate results are not\n * collected, and the final result of the operation is `void`.\n *\n * The function also allows you to customize how the effects are handled by\n * specifying options such as concurrency, batching, and how finalizers behave.\n * These options provide flexibility in running the effects concurrently or\n * adjusting other execution details.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * let counter = 0\n *\n * const task = Effect.sync(() => ++counter).pipe(\n *   Effect.tap(() => Console.log(`Task completed`))\n * )\n *\n * const program = Effect.gen(function*() {\n *   // Replicate the task 3 times and collect the results\n *   const results = yield* Effect.replicateEffect(task, 3)\n *   yield* Console.log(`Results: ${results.join(\", \")}`)\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // Task completed\n * // Task completed\n * // Task completed\n * // Results: 1, 2, 3\n * ```\n *\n * @since 2.0.0\n * @category Collecting\n */\nexport const replicateEffect = fiberRuntime.replicateEffect;\n/**\n * Applies an effectful operation to each element in a collection while\n * collecting both successes and failures.\n *\n * **Details**\n *\n * This function allows you to apply an effectful operation to every item in a\n * collection.\n *\n * Unlike {@link forEach}, which would stop at the first error, this function\n * continues processing all elements, accumulating both successes and failures.\n *\n * **When to Use**\n *\n * Use this function when you want to process every item in a collection, even\n * if some items fail. This is particularly useful when you need to perform\n * operations on all elements without halting due to an error.\n *\n * Keep in mind that if there are any failures, **all successes will be lost**,\n * so this function is not suitable when you need to keep the successful results\n * in case of errors.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * //      ┌─── Effect<number[], [string, ...string[]], never>\n * //      ▼\n * const program = Effect.validateAll([1, 2, 3, 4, 5], (n) => {\n *   if (n < 4) {\n *     return Console.log(`item ${n}`).pipe(Effect.as(n))\n *   } else {\n *     return Effect.fail(`${n} is not less that 4`)\n *   }\n * })\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // item 1\n * // item 2\n * // item 3\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Fail',\n * //     failure: [ '4 is not less that 4', '5 is not less that 4' ]\n * //   }\n * // }\n * ```\n *\n * @see {@link forEach} for a similar function that stops at the first error.\n * @see {@link partition} when you need to separate successes and failures\n * instead of losing successes with errors.\n *\n * @since 2.0.0\n * @category Error Accumulation\n */\nexport const validateAll = fiberRuntime.validateAll;\n/**\n * This function is similar to {@link validateAll} but with a key difference: it\n * returns the first successful result or all errors if none of the operations\n * succeed.\n *\n * **Details**\n *\n * This function processes a collection of elements and applies an effectful\n * operation to each. Unlike {@link validateAll}, which accumulates both\n * successes and failures, `Effect.validateFirst` stops and returns the first\n * success it encounters. If no success occurs, it returns all accumulated\n * errors. This can be useful when you are interested in the first successful\n * result and want to avoid processing further once a valid result is found.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * //      ┌─── Effect<number, string[], never>\n * //      ▼\n * const program = Effect.validateFirst([1, 2, 3, 4, 5], (n) => {\n *   if (n < 4) {\n *     return Effect.fail(`${n} is not less that 4`)\n *   } else {\n *     return Console.log(`item ${n}`).pipe(Effect.as(n))\n *   }\n * })\n *\n * Effect.runPromise(program).then(console.log, console.error)\n * // Output:\n * // item 4\n * // 4\n * ```\n *\n * @see {@link validateAll} for a similar function that accumulates all results.\n * @see {@link firstSuccessOf} for a similar function that processes multiple\n * effects and returns the first successful one or the last error.\n *\n * @since 2.0.0\n * @category Error Accumulation\n */\nexport const validateFirst = fiberRuntime.validateFirst;\n/**\n * Creates an `Effect` from a callback-based asynchronous function.\n *\n * **Details**\n *\n * The `resume` function:\n * - Must be called exactly once. Any additional calls will be ignored.\n * - Can return an optional `Effect` that will be run if the `Fiber` executing\n *   this `Effect` is interrupted. This can be useful in scenarios where you\n *   need to handle resource cleanup if the operation is interrupted.\n * - Can receive an `AbortSignal` to handle interruption if needed.\n *\n * The `FiberId` of the fiber that may complete the async callback may also be\n * specified using the `blockingOn` argument. This is called the \"blocking\n * fiber\" because it suspends the fiber executing the `async` effect (i.e.\n * semantically blocks the fiber from making progress). Specifying this fiber id\n * in cases where it is known will improve diagnostics, but not affect the\n * behavior of the returned effect.\n *\n * **When to Use**\n *\n * Use `Effect.async` when dealing with APIs that use callback-style instead of\n * `async/await` or `Promise`.\n *\n * **Example** (Wrapping a Callback API)\n *\n * ```ts\n * import { Effect } from \"effect\"\n * import * as NodeFS from \"node:fs\"\n *\n * const readFile = (filename: string) =>\n *   Effect.async<Buffer, Error>((resume) => {\n *     NodeFS.readFile(filename, (error, data) => {\n *       if (error) {\n *         // Resume with a failed Effect if an error occurs\n *         resume(Effect.fail(error))\n *       } else {\n *         // Resume with a succeeded Effect if successful\n *         resume(Effect.succeed(data))\n *       }\n *     })\n *   })\n *\n * //      ┌─── Effect<Buffer, Error, never>\n * //      ▼\n * const program = readFile(\"example.txt\")\n * ```\n *\n * **Example** (Handling Interruption with Cleanup)\n *\n * ```ts\n * import { Effect, Fiber } from \"effect\"\n * import * as NodeFS from \"node:fs\"\n *\n * // Simulates a long-running operation to write to a file\n * const writeFileWithCleanup = (filename: string, data: string) =>\n *   Effect.async<void, Error>((resume) => {\n *     const writeStream = NodeFS.createWriteStream(filename)\n *\n *     // Start writing data to the file\n *     writeStream.write(data)\n *\n *     // When the stream is finished, resume with success\n *     writeStream.on(\"finish\", () => resume(Effect.void))\n *\n *     // In case of an error during writing, resume with failure\n *     writeStream.on(\"error\", (err) => resume(Effect.fail(err)))\n *\n *     // Handle interruption by returning a cleanup effect\n *     return Effect.sync(() => {\n *       console.log(`Cleaning up ${filename}`)\n *       NodeFS.unlinkSync(filename)\n *     })\n *   })\n *\n * const program = Effect.gen(function* () {\n *   const fiber = yield* Effect.fork(\n *     writeFileWithCleanup(\"example.txt\", \"Some long data...\")\n *   )\n *   // Simulate interrupting the fiber after 1 second\n *   yield* Effect.sleep(\"1 second\")\n *   yield* Fiber.interrupt(fiber) // This will trigger the cleanup\n * })\n *\n * // Run the program\n * Effect.runPromise(program)\n * // Output:\n * // Cleaning up example.txt\n * ```\n *\n * **Example** (Handling Interruption with AbortSignal)\n *\n * ```ts\n * import { Effect, Fiber } from \"effect\"\n *\n * // A task that supports interruption using AbortSignal\n * const interruptibleTask = Effect.async<void, Error>((resume, signal) => {\n *   // Handle interruption\n *   signal.addEventListener(\"abort\", () => {\n *     console.log(\"Abort signal received\")\n *     clearTimeout(timeoutId)\n *   })\n *\n *   // Simulate a long-running task\n *   const timeoutId = setTimeout(() => {\n *     console.log(\"Operation completed\")\n *     resume(Effect.void)\n *   }, 2000)\n * })\n *\n * const program = Effect.gen(function* () {\n *   const fiber = yield* Effect.fork(interruptibleTask)\n *   // Simulate interrupting the fiber after 1 second\n *   yield* Effect.sleep(\"1 second\")\n *   yield* Fiber.interrupt(fiber)\n * })\n *\n * // Run the program\n * Effect.runPromise(program)\n * // Output:\n * // Abort signal received\n * ```\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const async = core.async;\n/**\n * A variant of {@link async} where the registration function may return an `Effect`.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const asyncEffect = runtime_.asyncEffect;\n/**\n * Low level constructor that enables for custom stack tracing cutpoints.\n *\n * It is meant to be called with a bag of instructions that become available in\n * the \"this\" of the effect.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const throwingFunction = () => { throw new Error() }\n * const blowUp = Effect.custom(throwingFunction, function() {\n *   return Effect.succeed(this.effect_instruction_i0())\n * })\n * ```\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const custom = core.custom;\n/**\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const withFiberRuntime = core.withFiberRuntime;\n/**\n * Creates an `Effect` that represents a recoverable error.\n *\n * **When to Use**\n *\n * Use this function to explicitly signal an error in an `Effect`. The error\n * will keep propagating unless it is handled. You can handle the error with\n * functions like {@link catchAll} or {@link catchTag}.\n *\n * **Example** (Creating a Failed Effect)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<never, Error, never>\n * //      ▼\n * const failure = Effect.fail(\n *   new Error(\"Operation failed due to network error\")\n * )\n * ```\n *\n * @see {@link succeed} to create an effect that represents a successful value.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const fail = core.fail;\n/**\n * Creates an `Effect` that fails with the specified error, evaluated lazily.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const failSync = core.failSync;\n/**\n * Creates an `Effect` that fails with the specified `Cause`.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const failCause = core.failCause;\n/**\n * Creates an `Effect` that fails with the specified `Cause`, evaluated lazily.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const failCauseSync = core.failCauseSync;\n/**\n * Creates an effect that terminates a fiber with a specified error.\n *\n * **Details**\n *\n * This function is used to signal a defect, which represents a critical and\n * unexpected error in the code. When invoked, it produces an effect that does\n * not handle the error and instead terminates the fiber.\n *\n * The error channel of the resulting effect is of type `never`, indicating that\n * it cannot recover from this failure.\n *\n * **When to Use**\n *\n * Use this function when encountering unexpected conditions in your code that\n * should not be handled as regular errors but instead represent unrecoverable\n * defects.\n *\n * **Example** (Terminating on Division by Zero with a Specified Error)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const divide = (a: number, b: number) =>\n *   b === 0\n *     ? Effect.die(new Error(\"Cannot divide by zero\"))\n *     : Effect.succeed(a / b)\n *\n * //      ┌─── Effect<number, never, never>\n * //      ▼\n * const program = divide(1, 0)\n *\n * Effect.runPromise(program).catch(console.error)\n * // Output:\n * // (FiberFailure) Error: Cannot divide by zero\n * //   ...stack trace...\n * ```\n *\n * @see {@link dieSync} for a variant that throws a specified error, evaluated\n * lazily.\n * @see {@link dieMessage} for a variant that throws a `RuntimeException` with a\n * message.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const die = core.die;\n/**\n * Creates an effect that terminates a fiber with a `RuntimeException`\n * containing the specified message.\n *\n * **Details**\n *\n * This function is used to signal a defect, representing a critical and\n * unexpected error in the code. When invoked, it produces an effect that\n * terminates the fiber with a `RuntimeException` carrying the given message.\n *\n * The resulting effect has an error channel of type `never`, indicating it does\n * not handle or recover from the error.\n *\n * **When to Use**\n *\n * Use this function when you want to terminate a fiber due to an unrecoverable\n * defect and include a clear explanation in the message.\n *\n * **Example** (Terminating on Division by Zero with a Specified Message)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const divide = (a: number, b: number) =>\n *   b === 0\n *     ? Effect.dieMessage(\"Cannot divide by zero\")\n *     : Effect.succeed(a / b)\n *\n * //      ┌─── Effect<number, never, never>\n * //      ▼\n * const program = divide(1, 0)\n *\n * Effect.runPromise(program).catch(console.error)\n * // Output:\n * // (FiberFailure) RuntimeException: Cannot divide by zero\n * //   ...stack trace...\n * ```\n *\n * @see {@link die} for a variant that throws a specified error.\n * @see {@link dieSync} for a variant that throws a specified error, evaluated\n * lazily.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const dieMessage = core.dieMessage;\n/**\n * Creates an effect that dies with the specified error, evaluated lazily.\n *\n * **Details**\n *\n * This function allows you to create an effect that will terminate with a fatal error.\n * The error is provided as a lazy argument, meaning it will only be evaluated when the effect runs.\n *\n * @see {@link die} if you don't need to evaluate the error lazily.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const dieSync = core.dieSync;\n/**\n * Provides a way to write effectful code using generator functions, simplifying\n * control flow and error handling.\n *\n * **When to Use**\n *\n * `Effect.gen` allows you to write code that looks and behaves like synchronous\n * code, but it can handle asynchronous tasks, errors, and complex control flow\n * (like loops and conditions). It helps make asynchronous code more readable\n * and easier to manage.\n *\n * The generator functions work similarly to `async/await` but with more\n * explicit control over the execution of effects. You can `yield*` values from\n * effects and return the final result at the end.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const addServiceCharge = (amount: number) => amount + 1\n *\n * const applyDiscount = (\n *   total: number,\n *   discountRate: number\n * ): Effect.Effect<number, Error> =>\n *   discountRate === 0\n *     ? Effect.fail(new Error(\"Discount rate cannot be zero\"))\n *     : Effect.succeed(total - (total * discountRate) / 100)\n *\n * const fetchTransactionAmount = Effect.promise(() => Promise.resolve(100))\n *\n * const fetchDiscountRate = Effect.promise(() => Promise.resolve(5))\n *\n * export const program = Effect.gen(function* () {\n *   const transactionAmount = yield* fetchTransactionAmount\n *   const discountRate = yield* fetchDiscountRate\n *   const discountedAmount = yield* applyDiscount(\n *     transactionAmount,\n *     discountRate\n *   )\n *   const finalAmount = addServiceCharge(discountedAmount)\n *   return `Final amount to charge: ${finalAmount}`\n * })\n * ```\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const gen = core.gen;\n/**\n * An effect that that runs indefinitely and never produces any result. The\n * moral equivalent of `while(true) {}`, only without the wasted CPU cycles.\n *\n * **When to Use**\n *\n * It could be useful for long-running background tasks or to simulate waiting\n * behavior without actually consuming resources. This effect is ideal for cases\n * where you want to keep the program alive or in a certain state without\n * performing any active work.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const never = core.never;\n/**\n * Ensures the `Option` is `None`, returning `void`. Otherwise, raises a\n * `NoSuchElementException`.\n *\n * **Details**\n *\n * This function checks if the provided `Option` is `None`. If it is, it returns\n * an effect that produces no result (i.e., `void`). If the `Option` is not\n * `None` (i.e., it contains a value), the function will raise a\n * `NoSuchElementException` error.\n *\n * **When to Use**\n *\n * This is useful when you want to ensure that a certain value is absent (i.e.,\n * `None`) before continuing execution, and to handle cases where the value is\n * unexpectedly present.\n *\n * @since 2.0.0\n */\nexport const none = effect.none;\n/**\n * Creates an `Effect` that represents an asynchronous computation guaranteed to\n * succeed.\n *\n * **Details**\n *\n * The provided function (`thunk`) returns a `Promise` that should never reject; if it does, the error\n * will be treated as a \"defect\".\n *\n * This defect is not a standard error but indicates a flaw in the logic that\n * was expected to be error-free. You can think of it similar to an unexpected\n * crash in the program, which can be further managed or logged using tools like\n * {@link catchAllDefect}.\n *\n * **Interruptions**\n *\n * An optional `AbortSignal` can be provided to allow for interruption of the\n * wrapped `Promise` API.\n *\n * **When to Use**\n *\n * Use this function when you are sure the operation will not reject.\n *\n * **Example** (Delayed Message)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const delay = (message: string) =>\n *   Effect.promise<string>(\n *     () =>\n *       new Promise((resolve) => {\n *         setTimeout(() => {\n *           resolve(message)\n *         }, 2000)\n *       })\n *   )\n *\n * //      ┌─── Effect<string, never, never>\n * //      ▼\n * const program = delay(\"Async operation completed successfully!\")\n * ```\n *\n * @see {@link tryPromise} for a version that can handle failures.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const promise = effect.promise;\n/**\n * Creates an `Effect` that always succeeds with a given value.\n *\n * **When to Use**\n *\n * Use this function when you need an effect that completes successfully with a\n * specific value without any errors or external dependencies.\n *\n * **Example** (Creating a Successful Effect)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * // Creating an effect that represents a successful scenario\n * //\n * //      ┌─── Effect<number, never, never>\n * //      ▼\n * const success = Effect.succeed(42)\n * ```\n *\n * @see {@link fail} to create an effect that represents a failure.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const succeed = core.succeed;\n/**\n * Returns an effect which succeeds with `None`.\n *\n * **When to Use**\n *\n * Use this function when you need to represent the absence of a value in your\n * code, especially when working with optional data. This can be helpful when\n * you want to indicate that no result is available without throwing an error or\n * performing additional logic.\n *\n * @see {@link succeedSome} to create an effect that succeeds with a `Some` value.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const succeedNone = effect.succeedNone;\n/**\n * Returns an effect which succeeds with the value wrapped in a `Some`.\n *\n * @see {@link succeedNone} for a similar function that returns `None` when the value is absent.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const succeedSome = effect.succeedSome;\n/**\n * Delays the creation of an `Effect` until it is actually needed.\n *\n * **Details**\n *\n * The `Effect.suspend` function takes a thunk that represents the effect and\n * wraps it in a suspended effect. This means the effect will not be created\n * until it is explicitly needed, which is helpful in various scenarios:\n * - **Lazy Evaluation**: Helps optimize performance by deferring computations,\n *   especially when the effect might not be needed, or when its computation is\n *   expensive. This also ensures that any side effects or scoped captures are\n *   re-executed on each invocation.\n * - **Handling Circular Dependencies**: Useful in managing circular\n *   dependencies, such as recursive functions that need to avoid eager\n *   evaluation to prevent stack overflow.\n * - **Unifying Return Types**: Can help TypeScript unify return types in\n *   situations where multiple branches of logic return different effects,\n *   simplifying type inference.\n *\n * **When to Use**\n *\n * Use this function when you need to defer the evaluation of an effect until it\n * is required. This is particularly useful for optimizing expensive\n * computations, managing circular dependencies, or resolving type inference\n * issues.\n *\n * **Example** (Lazy Evaluation with Side Effects)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * let i = 0\n *\n * const bad = Effect.succeed(i++)\n *\n * const good = Effect.suspend(() => Effect.succeed(i++))\n *\n * console.log(Effect.runSync(bad)) // Output: 0\n * console.log(Effect.runSync(bad)) // Output: 0\n *\n * console.log(Effect.runSync(good)) // Output: 1\n * console.log(Effect.runSync(good)) // Output: 2\n * ```\n *\n * **Example** (Recursive Fibonacci)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const blowsUp = (n: number): Effect.Effect<number> =>\n *   n < 2\n *     ? Effect.succeed(1)\n *     : Effect.zipWith(blowsUp(n - 1), blowsUp(n - 2), (a, b) => a + b)\n *\n * console.log(Effect.runSync(blowsUp(32)))\n * // crash: JavaScript heap out of memory\n *\n * const allGood = (n: number): Effect.Effect<number> =>\n *   n < 2\n *     ? Effect.succeed(1)\n *     : Effect.zipWith(\n *         Effect.suspend(() => allGood(n - 1)),\n *         Effect.suspend(() => allGood(n - 2)),\n *         (a, b) => a + b\n *       )\n *\n * console.log(Effect.runSync(allGood(32)))\n * // Output: 3524578\n * ```\n *\n * **Example** (Using Effect.suspend to Help TypeScript Infer Types)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //   Without suspend, TypeScript may struggle with type inference.\n * //   Inferred type:\n * //     (a: number, b: number) =>\n * //       Effect<never, Error, never> | Effect<number, never, never>\n * const withoutSuspend = (a: number, b: number) =>\n *   b === 0\n *     ? Effect.fail(new Error(\"Cannot divide by zero\"))\n *     : Effect.succeed(a / b)\n *\n * //   Using suspend to unify return types.\n * //   Inferred type:\n * //     (a: number, b: number) => Effect<number, Error, never>\n * const withSuspend = (a: number, b: number) =>\n *   Effect.suspend(() =>\n *     b === 0\n *       ? Effect.fail(new Error(\"Cannot divide by zero\"))\n *       : Effect.succeed(a / b)\n *   )\n * ```\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const suspend = core.suspend;\n/**\n * Creates an `Effect` that represents a synchronous side-effectful computation.\n *\n * **Details**\n *\n * The provided function (`thunk`) must not throw errors; if it does, the error\n * will be treated as a \"defect\".\n *\n * This defect is not a standard error but indicates a flaw in the logic that\n * was expected to be error-free. You can think of it similar to an unexpected\n * crash in the program, which can be further managed or logged using tools like\n * {@link catchAllDefect}.\n *\n * **When to Use**\n *\n * Use this function when you are sure the operation will not fail.\n *\n * **Example** (Logging a Message)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const log = (message: string) =>\n *   Effect.sync(() => {\n *     console.log(message) // side effect\n *   })\n *\n * //      ┌─── Effect<void, never, never>\n * //      ▼\n * const program = log(\"Hello, World!\")\n * ```\n *\n * @see {@link try_ | try} for a version that can handle failures.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const sync = core.sync;\nconst _void = core.void;\nexport {\n/**\n * Represents an effect that does nothing and produces no value.\n *\n * **When to Use**\n *\n * Use this effect when you need to represent an effect that does nothing.\n * This is useful in scenarios where you need to satisfy an effect-based\n * interface or control program flow without performing any operations. For\n * example, it can be used in situations where you want to return an effect\n * from a function but do not need to compute or return any result.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\n_void as void };\n/**\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const yieldNow = core.yieldNow;\nconst _catch = effect._catch;\nexport {\n/**\n * Recovers from a specified error by catching it and handling it with a provided function.\n *\n * **Details**\n *\n * This function allows you to recover from specific errors that occur during\n * the execution of an effect. It works by catching a specific type of error\n * (identified by a discriminator) and then handling it using a provided\n * handler function. The handler can return a new effect that helps recover\n * from the error, allowing the program to continue. If the error doesn't\n * match the specified type, the function allows the original effect to\n * continue as it was.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * class NetworkError {\n *   readonly _tag = \"NetworkError\"\n * }\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n * }\n *\n * // Simulate an effect that may fail\n * const task: Effect.Effect<never, NetworkError | ValidationError, never> = Effect.fail(new NetworkError())\n *\n * const program = Effect.gen(function*() {\n *   const result = yield* Effect.catch(task, \"_tag\", {\n *     failure: \"NetworkError\",\n *     onFailure: (error) => Effect.succeed(`recovered from error: ${error._tag}`)\n *   })\n *   console.log(`Result: ${result}`)\n * })\n *\n * Effect.runFork(program)\n * // Output: Result: recovered from error: NetworkError\n * ```\n *\n * @see {@link catchTag} for a version that can recover from errors based on a `_tag` discriminator.\n *\n * @since 2.0.0\n * @category Error handling\n */\n_catch as catch };\n/**\n * Handles all errors in an effect by providing a fallback effect.\n *\n * **Details**\n *\n * This function catches any errors that may occur during the execution of an\n * effect and allows you to handle them by specifying a fallback effect. This\n * ensures that the program continues without failing by recovering from errors\n * using the provided fallback logic.\n *\n * **Note**: This function only handles recoverable errors. It will not recover\n * from unrecoverable defects.\n *\n * **Example** (Providing Recovery Logic for Recoverable Errors)\n *\n * ```ts\n * import { Effect, Random } from \"effect\"\n *\n * class HttpError {\n *   readonly _tag = \"HttpError\"\n * }\n *\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n * }\n *\n * //      ┌─── Effect<string, HttpError | ValidationError, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const n1 = yield* Random.next\n *   const n2 = yield* Random.next\n *   if (n1 < 0.5) {\n *     yield* Effect.fail(new HttpError())\n *   }\n *   if (n2 < 0.5) {\n *     yield* Effect.fail(new ValidationError())\n *   }\n *   return \"some result\"\n * })\n *\n * //      ┌─── Effect<string, never, never>\n * //      ▼\n * const recovered = program.pipe(\n *   Effect.catchAll((error) =>\n *     Effect.succeed(`Recovering from ${error._tag}`)\n *   )\n * )\n * ```\n *\n * @see {@link catchAllCause} for a version that can recover from both\n * recoverable and unrecoverable errors.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchAll = core.catchAll;\n/**\n * Handles both recoverable and unrecoverable errors by providing a recovery\n * effect.\n *\n * **When to Use**\n *\n * The `catchAllCause` function allows you to handle all errors, including\n * unrecoverable defects, by providing a recovery effect. The recovery logic is\n * based on the `Cause` of the error, which provides detailed information about\n * the failure.\n *\n * **When to Recover from Defects**\n *\n * Defects are unexpected errors that typically shouldn't be recovered from, as\n * they often indicate serious issues. However, in some cases, such as\n * dynamically loaded plugins, controlled recovery might be needed.\n *\n * **Example** (Recovering from All Errors)\n *\n * ```ts\n * import { Cause, Effect } from \"effect\"\n *\n * // Define an effect that may fail with a recoverable or unrecoverable error\n * const program = Effect.fail(\"Something went wrong!\")\n *\n * // Recover from all errors by examining the cause\n * const recovered = program.pipe(\n *   Effect.catchAllCause((cause) =>\n *     Cause.isFailure(cause)\n *       ? Effect.succeed(\"Recovered from a regular error\")\n *       : Effect.succeed(\"Recovered from a defect\")\n *   )\n * )\n *\n * Effect.runPromise(recovered).then(console.log)\n * // Output: \"Recovered from a regular error\"\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchAllCause = core.catchAllCause;\n/**\n * Recovers from all defects using a provided recovery function.\n *\n * **When to Use**\n *\n * There is no sensible way to recover from defects. This method should be used\n * only at the boundary between Effect and an external system, to transmit\n * information on a defect for diagnostic or explanatory purposes.\n *\n * **Details**\n *\n * `catchAllDefect` allows you to handle defects, which are unexpected errors\n * that usually cause the program to terminate. This function lets you recover\n * from these defects by providing a function that handles the error. However,\n * it does not handle expected errors (like those from {@link fail}) or\n * execution interruptions (like those from {@link interrupt}).\n *\n * **When to Recover from Defects**\n *\n * Defects are unexpected errors that typically shouldn't be recovered from, as\n * they often indicate serious issues. However, in some cases, such as\n * dynamically loaded plugins, controlled recovery might be needed.\n *\n * **Example** (Handling All Defects)\n *\n * ```ts\n * import { Effect, Cause, Console } from \"effect\"\n *\n * // Simulating a runtime error\n * const task = Effect.dieMessage(\"Boom!\")\n *\n * const program = Effect.catchAllDefect(task, (defect) => {\n *   if (Cause.isRuntimeException(defect)) {\n *     return Console.log(\n *       `RuntimeException defect caught: ${defect.message}`\n *     )\n *   }\n *   return Console.log(\"Unknown defect caught.\")\n * })\n *\n * // We get an Exit.Success because we caught all defects\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // RuntimeException defect caught: Boom!\n * // {\n * //   _id: \"Exit\",\n * //   _tag: \"Success\",\n * //   value: undefined\n * // }\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchAllDefect = effect.catchAllDefect;\n/**\n * Recovers from specific errors based on a predicate.\n *\n * **When to Use**\n *\n * `catchIf` works similarly to {@link catchSome}, but it allows you to\n * recover from errors by providing a predicate function. If the predicate\n * matches the error, the recovery effect is applied. This function doesn't\n * alter the error type, so the resulting effect still carries the original\n * error type unless a user-defined type guard is used to narrow the type.\n *\n * **Example** (Catching Specific Errors with a Predicate)\n *\n * ```ts\n * import { Effect, Random } from \"effect\"\n *\n * class HttpError {\n *   readonly _tag = \"HttpError\"\n * }\n *\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n * }\n *\n * //      ┌─── Effect<string, HttpError | ValidationError, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const n1 = yield* Random.next\n *   const n2 = yield* Random.next\n *   if (n1 < 0.5) {\n *     yield* Effect.fail(new HttpError())\n *   }\n *   if (n2 < 0.5) {\n *     yield* Effect.fail(new ValidationError())\n *   }\n *   return \"some result\"\n * })\n *\n * //      ┌─── Effect<string, ValidationError, never>\n * //      ▼\n * const recovered = program.pipe(\n *   Effect.catchIf(\n *     // Only handle HttpError errors\n *     (error) => error._tag === \"HttpError\",\n *     () => Effect.succeed(\"Recovering from HttpError\")\n *   )\n * )\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchIf = core.catchIf;\n/**\n * Catches and recovers from specific types of errors, allowing you to attempt\n * recovery only for certain errors.\n *\n * **Details**\n *\n * `catchSome` lets you selectively catch and handle errors of certain\n * types by providing a recovery effect for specific errors. If the error\n * matches a condition, recovery is attempted; if not, it doesn't affect the\n * program. This function doesn't alter the error type, meaning the error type\n * remains the same as in the original effect.\n *\n * **Example** (Handling Specific Errors with Effect.catchSome)\n *\n * ```ts\n * import { Effect, Random, Option } from \"effect\"\n *\n * class HttpError {\n *   readonly _tag = \"HttpError\"\n * }\n *\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n * }\n *\n * //      ┌─── Effect<string, HttpError | ValidationError, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const n1 = yield* Random.next\n *   const n2 = yield* Random.next\n *   if (n1 < 0.5) {\n *     yield* Effect.fail(new HttpError())\n *   }\n *   if (n2 < 0.5) {\n *     yield* Effect.fail(new ValidationError())\n *   }\n *   return \"some result\"\n * })\n *\n * //      ┌─── Effect<string, HttpError | ValidationError, never>\n * //      ▼\n * const recovered = program.pipe(\n *   Effect.catchSome((error) => {\n *     // Only handle HttpError errors\n *     if (error._tag === \"HttpError\") {\n *       return Option.some(Effect.succeed(\"Recovering from HttpError\"))\n *     } else {\n *       return Option.none()\n *     }\n *   })\n * )\n * ```\n *\n * @see {@link catchIf} for a version that allows you to recover from errors based on a predicate.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchSome = core.catchSome;\n/**\n * Recovers from specific causes using a provided partial function.\n *\n * @see {@link catchSome} for a version that allows you to recover from errors.\n * @see {@link catchSomeDefect} for a version that allows you to recover from defects.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchSomeCause = effect.catchSomeCause;\n/**\n * Recovers from specific defects using a provided partial function.\n *\n * **Details**\n *\n * `catchSomeDefect` allows you to handle specific defects, which are\n * unexpected errors that can cause the program to stop. It uses a partial\n * function to catch only certain defects and ignores others. The function does\n * not handle expected errors (such as those caused by {@link fail}) or\n * interruptions in execution (like those caused by {@link interrupt}).\n *\n * This function provides a way to handle certain types of defects while\n * allowing others to propagate and cause failure in the program.\n *\n * **Note**: There is no sensible way to recover from defects. This method\n * should be used only at the boundary between Effect and an external system, to\n * transmit information on a defect for diagnostic or explanatory purposes.\n *\n * **How the Partial Function Works**\n *\n * The function provided to `catchSomeDefect` acts as a filter and a handler for defects:\n * - It receives the defect as an input.\n * - If the defect matches a specific condition (e.g., a certain error type), the function returns\n *   an `Option.some` containing the recovery logic.\n * - If the defect does not match, the function returns `Option.none`, allowing the defect to propagate.\n *\n * **Example** (Handling Specific Defects)\n *\n * ```ts\n * import { Effect, Cause, Option, Console } from \"effect\"\n *\n * // Simulating a runtime error\n * const task = Effect.dieMessage(\"Boom!\")\n *\n * const program = Effect.catchSomeDefect(task, (defect) => {\n *   if (Cause.isIllegalArgumentException(defect)) {\n *     return Option.some(\n *       Console.log(\n *         `Caught an IllegalArgumentException defect: ${defect.message}`\n *       )\n *     )\n *   }\n *   return Option.none()\n * })\n *\n * // Since we are only catching IllegalArgumentException\n * // we will get an Exit.Failure because we simulated a runtime error.\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Die',\n * //     defect: { _tag: 'RuntimeException' }\n * //   }\n * // }\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchSomeDefect = effect.catchSomeDefect;\n/**\n * Catches and handles specific errors by their `_tag` field, which is used as a\n * discriminator.\n *\n * **When to Use**\n *\n * `catchTag` is useful when your errors are tagged with a readonly `_tag` field\n * that identifies the error type. You can use this function to handle specific\n * error types by matching the `_tag` value. This allows for precise error\n * handling, ensuring that only specific errors are caught and handled.\n *\n * The error type must have a readonly `_tag` field to use `catchTag`. This\n * field is used to identify and match errors.\n *\n * **Example** (Handling Errors by Tag)\n *\n * ```ts\n * import { Effect, Random } from \"effect\"\n *\n * class HttpError {\n *   readonly _tag = \"HttpError\"\n * }\n *\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n * }\n *\n * //      ┌─── Effect<string, HttpError | ValidationError, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const n1 = yield* Random.next\n *   const n2 = yield* Random.next\n *   if (n1 < 0.5) {\n *     yield* Effect.fail(new HttpError())\n *   }\n *   if (n2 < 0.5) {\n *     yield* Effect.fail(new ValidationError())\n *   }\n *   return \"some result\"\n * })\n *\n * //      ┌─── Effect<string, ValidationError, never>\n * //      ▼\n * const recovered = program.pipe(\n *   // Only handle HttpError errors\n *   Effect.catchTag(\"HttpError\", (_HttpError) =>\n *     Effect.succeed(\"Recovering from HttpError\")\n *   )\n * )\n * ```\n *\n * @see {@link catchTags} for a version that allows you to handle multiple error\n * types at once.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchTag = effect.catchTag;\n/**\n * Handles multiple errors in a single block of code using their `_tag` field.\n *\n * **When to Use**\n *\n * `catchTags` is a convenient way to handle multiple error types at\n * once. Instead of using {@link catchTag} multiple times, you can pass an\n * object where each key is an error type's `_tag`, and the value is the handler\n * for that specific error. This allows you to catch and recover from multiple\n * error types in a single call.\n *\n * The error type must have a readonly `_tag` field to use `catchTag`. This\n * field is used to identify and match errors.\n *\n * **Example** (Handling Multiple Tagged Error Types at Once)\n *\n * ```ts\n * import { Effect, Random } from \"effect\"\n *\n * class HttpError {\n *   readonly _tag = \"HttpError\"\n * }\n *\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n * }\n *\n * //      ┌─── Effect<string, HttpError | ValidationError, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const n1 = yield* Random.next\n *   const n2 = yield* Random.next\n *   if (n1 < 0.5) {\n *     yield* Effect.fail(new HttpError())\n *   }\n *   if (n2 < 0.5) {\n *     yield* Effect.fail(new ValidationError())\n *   }\n *   return \"some result\"\n * })\n *\n * //      ┌─── Effect<string, never, never>\n * //      ▼\n * const recovered = program.pipe(\n *   Effect.catchTags({\n *     HttpError: (_HttpError) =>\n *       Effect.succeed(`Recovering from HttpError`),\n *     ValidationError: (_ValidationError) =>\n *       Effect.succeed(`Recovering from ValidationError`)\n *   })\n * )\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const catchTags = effect.catchTags;\n/**\n * Retrieves the cause of a failure in an effect.\n *\n * **Details**\n *\n * This function allows you to expose the detailed cause of an effect, which\n * includes a more precise representation of failures, such as error messages\n * and defects.\n *\n * **When to Use**\n *\n * This function is helpful when you need to inspect the cause of a failure in\n * an effect, giving you more information than just the error message. It can be\n * used to log, handle, or analyze failures in more detail, including\n * distinguishing between different types of defects (e.g., runtime exceptions,\n * interruptions, etc.).\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * //      ┌─── Effect<number, string, never>\n * //      ▼\n * const program = Effect.fail(\"Oh uh!\").pipe(Effect.as(2))\n *\n * //      ┌─── Effect<void, never, never>\n * //      ▼\n * const recovered = Effect.gen(function* () {\n *   const cause = yield* Effect.cause(program)\n *   yield* Console.log(cause)\n * })\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const cause = effect.cause;\n/**\n * Runs an effect repeatedly until it succeeds, ignoring errors.\n *\n * **Details**\n *\n * This function takes an effect and runs it repeatedly until the effect\n * successfully completes. If the effect fails, it will ignore the error and\n * retry the operation. This is useful when you need to perform a task that may\n * fail occasionally, but you want to keep trying until it eventually succeeds.\n * It works by repeatedly executing the effect until it no longer throws an\n * error.\n *\n * **When to Use**\n *\n * Use this function when you want to retry an operation multiple times until it\n * succeeds. It is helpful in cases where the operation may fail temporarily\n * (e.g., a network request), and you want to keep trying without handling or\n * worrying about the errors.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * let counter = 0\n *\n * const effect = Effect.try(() => {\n *   counter++\n *   if (counter < 3) {\n *     console.log(\"running effect\")\n *     throw new Error(\"error\")\n *   } else {\n *     console.log(\"effect done\")\n *     return \"some result\"\n *   }\n * })\n *\n * const program = Effect.eventually(effect)\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // running effect\n * // running effect\n * // effect done\n * // some result\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const eventually = effect.eventually;\n/**\n * Discards both the success and failure values of an effect.\n *\n * **When to Use**\n *\n * `ignore` allows you to run an effect without caring about its result, whether\n * it succeeds or fails. This is useful when you only care about the side\n * effects of the effect and do not need to handle or process its outcome.\n *\n * **Example** (Using Effect.ignore to Discard Values)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<number, string, never>\n * //      ▼\n * const task = Effect.fail(\"Uh oh!\").pipe(Effect.as(5))\n *\n * //      ┌─── Effect<void, never, never>\n * //      ▼\n * const program = Effect.ignore(task)\n * ```\n *\n * @see {@link ignoreLogged} to log failures while ignoring them.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const ignore = effect.ignore;\n/**\n * Ignores the result of an effect but logs any failures.\n *\n * **Details**\n *\n * This function takes an effect and returns a new effect that ignores whether\n * the original effect succeeds or fails. However, if the effect fails, it will\n * log the failure at the Debug level, so you can keep track of any issues that\n * arise.\n *\n * **When to Use**\n *\n * This is useful in scenarios where you want to continue with your program\n * regardless of the result of the effect, but you still want to be aware of\n * potential failures that may need attention later.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const ignoreLogged = effect.ignoreLogged;\n/**\n * Combines all errors from concurrent operations into a single error.\n *\n * **Details**\n *\n * This function is used when you have multiple operations running at the same\n * time, and you want to capture all the errors that occur across those\n * operations. Instead of handling each error separately, it combines all the\n * errors into one unified error.\n *\n * **When to Use**\n *\n * When using this function, any errors that occur in the concurrently running\n * operations will be grouped together into a single error. This helps simplify\n * error handling in cases where you don't need to differentiate between each\n * failure, but simply want to know that multiple failures occurred.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const fail1 = Effect.fail(\"Oh uh!\")\n * const fail2 = Effect.fail(\"Oh no!\")\n * const die = Effect.dieMessage(\"Boom!\")\n *\n * // Run all effects concurrently and capture all errors\n * const program = Effect.all([fail1, fail2, die], {\n *   concurrency: \"unbounded\"\n * }).pipe(Effect.asVoid, Effect.parallelErrors)\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Fail', failure: [ 'Oh uh!', 'Oh no!' ] }\n * // }\n * ```\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const parallelErrors = effect.parallelErrors;\n/**\n * Transforms an effect to expose detailed error causes.\n *\n * **Details**\n *\n * This function enhances an effect by providing detailed information about any\n * error, defect, or interruption that may occur during its execution. It\n * modifies the error channel of the effect so that it includes a full cause of\n * the failure, wrapped in a `Cause<E>` type.\n *\n * After applying this function, you can use operators like {@link catchAll} and\n * {@link catchTags} to handle specific types of errors.\n *\n * If you no longer need the detailed cause information, you can revert the\n * changes using {@link unsandbox} to return to the original error-handling\n * behavior.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * //      ┌─── Effect<string, Error, never>\n * //      ▼\n * const task = Effect.fail(new Error(\"Oh uh!\")).pipe(\n *   Effect.as(\"primary result\")\n * )\n *\n * //      ┌─── Effect<string, Cause<Error>, never>\n * //      ▼\n * const sandboxed = Effect.sandbox(task)\n *\n * const program = Effect.catchTags(sandboxed, {\n *   Die: (cause) =>\n *     Console.log(`Caught a defect: ${cause.defect}`).pipe(\n *       Effect.as(\"fallback result on defect\")\n *     ),\n *   Interrupt: (cause) =>\n *     Console.log(`Caught a defect: ${cause.fiberId}`).pipe(\n *       Effect.as(\"fallback result on fiber interruption\")\n *     ),\n *   Fail: (cause) =>\n *     Console.log(`Caught a defect: ${cause.error}`).pipe(\n *       Effect.as(\"fallback result on failure\")\n *     )\n * })\n *\n * // Restore the original error handling with unsandbox\n * const main = Effect.unsandbox(program)\n *\n * Effect.runPromise(main).then(console.log)\n * // Output:\n * // Caught a defect: Oh uh!\n * // fallback result on failure\n * ```\n *\n * @see {@link unsandbox} to restore the original error handling.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const sandbox = effect.sandbox;\n/**\n * Retries a failing effect based on a defined retry policy.\n *\n * **Details**\n *\n * The `Effect.retry` function takes an effect and a {@link Schedule} policy,\n * and will automatically retry the effect if it fails, following the rules of\n * the policy.\n *\n * If the effect ultimately succeeds, the result will be returned.\n *\n * If the maximum retries are exhausted and the effect still fails, the failure\n * is propagated.\n *\n * **When to Use**\n *\n * This can be useful when dealing with intermittent failures, such as network\n * issues or temporary resource unavailability. By defining a retry policy, you\n * can control the number of retries, the delay between them, and when to stop\n * retrying.\n *\n * **Example** (Retrying with a Fixed Delay)\n *\n * ```ts\n * import { Effect, Schedule } from \"effect\"\n *\n * let count = 0\n *\n * // Simulates an effect with possible failures\n * const task = Effect.async<string, Error>((resume) => {\n *   if (count <= 2) {\n *     count++\n *     console.log(\"failure\")\n *     resume(Effect.fail(new Error()))\n *   } else {\n *     console.log(\"success\")\n *     resume(Effect.succeed(\"yay!\"))\n *   }\n * })\n *\n * // Define a repetition policy using a fixed delay between retries\n * const policy = Schedule.fixed(\"100 millis\")\n *\n * const repeated = Effect.retry(task, policy)\n *\n * Effect.runPromise(repeated).then(console.log)\n * // Output:\n * // failure\n * // failure\n * // failure\n * // success\n * // yay!\n * ```\n *\n * **Example** (Retrying a Task up to 5 times)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * let count = 0\n *\n * // Simulates an effect with possible failures\n * const task = Effect.async<string, Error>((resume) => {\n *   if (count <= 2) {\n *     count++\n *     console.log(\"failure\")\n *     resume(Effect.fail(new Error()))\n *   } else {\n *     console.log(\"success\")\n *     resume(Effect.succeed(\"yay!\"))\n *   }\n * })\n *\n * // Retry the task up to 5 times\n * Effect.runPromise(Effect.retry(task, { times: 5 })).then(console.log)\n * // Output:\n * // failure\n * // failure\n * // failure\n * // success\n * ```\n *\n * **Example** (Retrying Until a Specific Condition is Met)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * let count = 0\n *\n * // Define an effect that simulates varying error on each invocation\n * const action = Effect.failSync(() => {\n *   console.log(`Action called ${++count} time(s)`)\n *   return `Error ${count}`\n * })\n *\n * // Retry the action until a specific condition is met\n * const program = Effect.retry(action, {\n *   until: (err) => err === \"Error 3\"\n * })\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // Action called 1 time(s)\n * // Action called 2 time(s)\n * // Action called 3 time(s)\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Fail', failure: 'Error 3' }\n * // }\n * ```\n *\n * @see {@link retryOrElse} for a version that allows you to run a fallback.\n * @see {@link repeat} if your retry condition is based on successful outcomes rather than errors.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const retry = schedule_.retry_combined;\n/**\n * Retries a failing effect and runs a fallback effect if retries are exhausted.\n *\n * **Details**\n *\n * The `Effect.retryOrElse` function attempts to retry a failing effect multiple\n * times according to a defined {@link Schedule} policy.\n *\n * If the retries are exhausted and the effect still fails, it runs a fallback\n * effect instead.\n *\n * **When to Use**\n *\n * This function is useful when you want to handle failures gracefully by\n * specifying an alternative action after repeated failures.\n *\n * **Example** (Retrying with Fallback)\n *\n * ```ts\n * import { Effect, Schedule, Console } from \"effect\"\n *\n * let count = 0\n *\n * // Simulates an effect with possible failures\n * const task = Effect.async<string, Error>((resume) => {\n *   if (count <= 2) {\n *     count++\n *     console.log(\"failure\")\n *     resume(Effect.fail(new Error()))\n *   } else {\n *     console.log(\"success\")\n *     resume(Effect.succeed(\"yay!\"))\n *   }\n * })\n *\n * // Retry the task with a delay between retries and a maximum of 2 retries\n * const policy = Schedule.addDelay(Schedule.recurs(2), () => \"100 millis\")\n *\n * // If all retries fail, run the fallback effect\n * const repeated = Effect.retryOrElse(\n *   task,\n *   policy,\n *   // fallback\n *   () => Console.log(\"orElse\").pipe(Effect.as(\"default value\"))\n * )\n *\n * Effect.runPromise(repeated).then(console.log)\n * // Output:\n * // failure\n * // failure\n * // failure\n * // orElse\n * // default value\n * ```\n *\n * @see {@link retry} for a version that does not run a fallback effect.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const retryOrElse = schedule_.retryOrElse_Effect;\nconst try_ = effect.try_;\nexport {\n/**\n * Creates an `Effect` that represents a synchronous computation that might\n * fail.\n *\n * **When to Use**\n *\n * In situations where you need to perform synchronous operations that might\n * fail, such as parsing JSON, you can use the `try` constructor. This\n * constructor is designed to handle operations that could throw exceptions by\n * capturing those exceptions and transforming them into manageable errors.\n *\n * **Error Handling**\n *\n * There are two ways to handle errors with `try`:\n *\n * 1. If you don't provide a `catch` function, the error is caught and the\n *    effect fails with an `UnknownException`.\n * 2. If you provide a `catch` function, the error is caught and the `catch`\n *    function maps it to an error of type `E`.\n *\n * **Example** (Safe JSON Parsing)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const parse = (input: string) =>\n *   // This might throw an error if input is not valid JSON\n *   Effect.try(() => JSON.parse(input))\n *\n * //      ┌─── Effect<any, UnknownException, never>\n * //      ▼\n * const program = parse(\"\")\n *\n * ```\n *\n * **Example** (Custom Error Handling)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const parse = (input: string) =>\n *   Effect.try({\n *     // JSON.parse may throw for bad input\n *     try: () => JSON.parse(input),\n *     // remap the error\n *     catch: (unknown) => new Error(`something went wrong ${unknown}`)\n *   })\n *\n * //      ┌─── Effect<any, Error, never>\n * //      ▼\n * const program = parse(\"\")\n * ```\n *\n * @see {@link sync} if the effectful computation is synchronous and does not\n * throw errors.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\ntry_ as try };\n/**\n * Returns an effect that maps its success using the specified side-effecting\n * `try` function, converting any errors into typed failed effects using the\n * `catch` function.\n *\n * @see {@link tryPromise} for a version that works with asynchronous computations.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const tryMap = effect.tryMap;\n/**\n * Returns an effect that maps its success using the specified side-effecting\n * `try` function, converting any promise rejections into typed failed effects\n * using the `catch` function.\n *\n * An optional `AbortSignal` can be provided to allow for interruption of the\n * wrapped `Promise` API.\n *\n * @see {@link tryMap} for a version that works with synchronous computations.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const tryMapPromise = effect.tryMapPromise;\n/**\n * Creates an `Effect` that represents an asynchronous computation that might\n * fail.\n *\n * **When to Use**\n *\n * In situations where you need to perform asynchronous operations that might\n * fail, such as fetching data from an API, you can use the `tryPromise`\n * constructor. This constructor is designed to handle operations that could\n * throw exceptions by capturing those exceptions and transforming them into\n * manageable errors.\n *\n * **Error Handling**\n *\n * There are two ways to handle errors with `tryPromise`:\n *\n * 1. If you don't provide a `catch` function, the error is caught and the\n *    effect fails with an `UnknownException`.\n * 2. If you provide a `catch` function, the error is caught and the `catch`\n *    function maps it to an error of type `E`.\n *\n * **Interruptions**\n *\n * An optional `AbortSignal` can be provided to allow for interruption of the\n * wrapped `Promise` API.\n *\n * **Example** (Fetching a TODO Item)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const getTodo = (id: number) =>\n *   // Will catch any errors and propagate them as UnknownException\n *   Effect.tryPromise(() =>\n *     fetch(`https://jsonplaceholder.typicode.com/todos/${id}`)\n *   )\n *\n * //      ┌─── Effect<Response, UnknownException, never>\n * //      ▼\n * const program = getTodo(1)\n * ```\n *\n * **Example** (Custom Error Handling)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const getTodo = (id: number) =>\n *   Effect.tryPromise({\n *     try: () => fetch(`https://jsonplaceholder.typicode.com/todos/${id}`),\n *     // remap the error\n *     catch: (unknown) => new Error(`something went wrong ${unknown}`)\n *   })\n *\n * //      ┌─── Effect<Response, Error, never>\n * //      ▼\n * const program = getTodo(1)\n * ```\n *\n * @see {@link promise} if the effectful computation is asynchronous and does not throw errors.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const tryPromise = effect.tryPromise;\n/**\n * The `unsandbox` function is used to revert an effect that has been\n * sandboxed by {@link sandbox}. When you apply `unsandbox`, the\n * effect's error channel is restored to its original state, without the\n * detailed `Cause<E>` information. This means that any underlying causes of\n * errors, defects, or fiber interruptions are no longer exposed in the error\n * channel.\n *\n * This function is useful when you want to remove the detailed error tracking\n * provided by `sandbox` and return to the standard error handling for\n * your effect. Once unsandboxed, the effect behaves as if `sandbox` was\n * never applied.\n *\n * @see {@link sandbox} to expose the full cause of failures, defects, or interruptions.\n *\n * @since 2.0.0\n * @category Error handling\n */\nexport const unsandbox = effect.unsandbox;\n/**\n * Allows interruption of the current fiber, even in uninterruptible regions.\n *\n * **Details**\n *\n * This effect checks whether any other fibers are attempting to interrupt the\n * current fiber. If so, it allows the current fiber to perform a\n * self-interruption.\n *\n * **When to Use**\n *\n * This is useful in situations where you want to allow interruption to happen\n * even in regions of the code that are normally uninterruptible.\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const allowInterrupt = effect.allowInterrupt;\n/**\n * Checks if interruption is allowed and executes a callback accordingly.\n *\n * **Details**\n *\n * This function checks the current interrupt status of the running fiber. It\n * then calls the provided callback, passing a boolean indicating whether\n * interruption is allowed.\n *\n * **When to Use**\n *\n * This is useful for handling specific logic based on whether the current\n * operation can be interrupted, such as when performing asynchronous operations\n * or handling cancellation.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   yield* Effect.checkInterruptible((isInterruptible) => {\n *     if (isInterruptible) {\n *       return Console.log(\"You can interrupt this operation.\")\n *     } else {\n *       return Console.log(\"This operation cannot be interrupted.\")\n *     }\n *   })\n * })\n *\n * Effect.runPromise(program)\n * // Output: You can interrupt this operation.\n *\n * Effect.runPromise(program.pipe(Effect.uninterruptible))\n * // Output: This operation cannot be interrupted.\n *\n * ```\n *\n *  @since 2.0.0\n * @category Interruption\n */\nexport const checkInterruptible = core.checkInterruptible;\n/**\n * Provides a way to handle timeouts in uninterruptible effects, allowing them\n * to continue in the background while the main control flow proceeds with the\n * timeout error.\n *\n * **Details**\n *\n * The `disconnect` function allows an uninterruptible effect to continue\n * running in the background, while enabling the main control flow to\n * immediately recognize a timeout condition. This is useful when you want to\n * avoid blocking the program due to long-running tasks, especially when those\n * tasks do not need to affect the flow of the rest of the program.\n *\n * Without `disconnect`, an uninterruptible effect will ignore the\n * timeout and continue executing until it completes. The timeout error will\n * only be assessed after the effect finishes, which can cause delays in\n * recognizing a timeout.\n *\n * With `disconnect`, the uninterruptible effect proceeds in the\n * background while the main program flow can immediately handle the timeout\n * error or trigger alternative logic. This enables faster timeout handling\n * without waiting for the completion of the long-running task.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const longRunningTask = Effect.gen(function* () {\n *   console.log(\"Start heavy processing...\")\n *   yield* Effect.sleep(\"5 seconds\") // Simulate a long process\n *   console.log(\"Heavy processing done.\")\n *   return \"Data processed\"\n * })\n *\n * const timedEffect = longRunningTask.pipe(\n *   Effect.uninterruptible,\n *   // Allows the task to finish in the background if it times out\n *   Effect.disconnect,\n *   Effect.timeout(\"1 second\")\n * )\n *\n * Effect.runPromiseExit(timedEffect).then(console.log)\n * // Output:\n * // Start heavy processing...\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Fail',\n * //     failure: { _tag: 'TimeoutException' }\n * //   }\n * // }\n * // Heavy processing done.\n * ```\n *\n * @see {@link timeout} for a version that interrupts the effect.\n * @see {@link uninterruptible} for creating an uninterruptible effect.\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const disconnect = fiberRuntime.disconnect;\n/**\n * Represents an effect that interrupts the current fiber.\n *\n * **Details**\n *\n * This effect models the explicit interruption of the fiber in which it runs.\n * When executed, it causes the fiber to stop its operation immediately,\n * capturing the interruption details such as the fiber's ID and its start time.\n * The resulting interruption can be observed in the `Exit` type if the effect\n * is run with functions like {@link runPromiseExit}.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const program = Effect.gen(function* () {\n *   console.log(\"start\")\n *   yield* Effect.sleep(\"2 seconds\")\n *   yield* Effect.interrupt\n *   console.log(\"done\")\n *   return \"some result\"\n * })\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // start\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Interrupt',\n * //     fiberId: {\n * //       _id: 'FiberId',\n * //       _tag: 'Runtime',\n * //       id: 0,\n * //       startTimeMillis: ...\n * //     }\n * //   }\n * // }\n * ```\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const interrupt = core.interrupt;\n/**\n * @since 2.0.0\n * @category Interruption\n */\nexport const interruptWith = core.interruptWith;\n/**\n * Marks an effect as interruptible.\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const interruptible = core.interruptible;\n/**\n * This function behaves like {@link interruptible}, but it also provides a\n * `restore` function. This function can be used to restore the interruptibility\n * of any specific region of code.\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const interruptibleMask = core.interruptibleMask;\n/**\n * Registers a cleanup effect to run when an effect is interrupted.\n *\n * **Details**\n *\n * This function allows you to specify an effect to run when the fiber is\n * interrupted. This effect will be executed when the fiber is interrupted,\n * allowing you to perform cleanup or other actions.\n *\n * **Example** (Running a Cleanup Action on Interruption)\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * // This handler is executed when the fiber is interrupted\n * const handler = Effect.onInterrupt((_fibers) => Console.log(\"Cleanup completed\"))\n *\n * const success = Console.log(\"Task completed\").pipe(Effect.as(\"some result\"), handler)\n *\n * Effect.runFork(success)\n * // Output:\n * // Task completed\n *\n * const failure = Console.log(\"Task failed\").pipe(Effect.andThen(Effect.fail(\"some error\")), handler)\n *\n * Effect.runFork(failure)\n * // Output:\n * // Task failed\n *\n * const interruption = Console.log(\"Task interrupted\").pipe(Effect.andThen(Effect.interrupt), handler)\n *\n * Effect.runFork(interruption)\n * // Output:\n * // Task interrupted\n * // Cleanup completed\n * ```\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const onInterrupt = core.onInterrupt;\n/**\n * Marks an effect as uninterruptible.\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const uninterruptible = core.uninterruptible;\n/**\n * This function behaves like {@link uninterruptible}, but it also provides a\n * `restore` function. This function can be used to restore the interruptibility\n * of any specific region of code.\n *\n * @since 2.0.0\n * @category Interruption\n */\nexport const uninterruptibleMask = core.uninterruptibleMask;\n/**\n * Transforms a `Predicate` function into an `Effect` returning the input value if the predicate returns `true`\n * or failing with specified error if the predicate fails\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * // succeeds with `1`\n * Effect.liftPredicate(1, isPositive, n => `${n} is not positive`)\n *\n * // fails with `\"0 is not positive\"`\n * Effect.liftPredicate(0, isPositive, n => `${n} is not positive`)\n * ```\n *\n * @category Condition Checking\n * @since 3.4.0\n */\nexport const liftPredicate = effect.liftPredicate;\n/**\n * Replaces the value inside an effect with a constant value.\n *\n * **Details**\n *\n * This function allows you to ignore the original value inside an effect and\n * replace it with a constant value.\n *\n * **When to Use**\n *\n * It is useful when you no longer need the value produced by an effect but want\n * to ensure that the effect completes successfully with a specific constant\n * result instead. For instance, you can replace the value produced by a\n * computation with a predefined value, ignoring what was calculated before.\n *\n * **Example** (Replacing a Value)\n *\n * ```ts\n * import { pipe, Effect } from \"effect\"\n *\n * // Replaces the value 5 with the constant \"new value\"\n * const program = pipe(Effect.succeed(5), Effect.as(\"new value\"))\n *\n * Effect.runPromise(program).then(console.log)\n * // Output: \"new value\"\n * ```\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const as = core.as;\n/**\n * This function maps the success value of an `Effect` value to a `Some` value\n * in an `Option` value. If the original `Effect` value fails, the returned\n * `Effect` value will also fail.\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const asSome = effect.asSome;\n/**\n * This function maps the error value of an `Effect` value to a `Some` value\n * in an `Option` value. If the original `Effect` value succeeds, the returned\n * `Effect` value will also succeed.\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const asSomeError = effect.asSomeError;\n/**\n * This function maps the success value of an `Effect` value to `void`. If the\n * original `Effect` value succeeds, the returned `Effect` value will also\n * succeed. If the original `Effect` value fails, the returned `Effect` value\n * will fail with the same error.\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const asVoid = core.asVoid;\n/**\n * Swaps the success and error channels of an effect.\n *\n * **Details**\n *\n * This function reverses the flow of an effect by swapping its success and\n * error channels. The success value becomes an error, and the error value\n * becomes a success.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<number, string, never>\n * //      ▼\n * const program = Effect.fail(\"Oh uh!\").pipe(Effect.as(2))\n *\n * //      ┌─── Effect<string, number, never>\n * //      ▼\n * const flipped = Effect.flip(program)\n * ```\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const flip = core.flip;\n/**\n * Swaps the error/value parameters, applies the function `f` and flips the\n * parameters back\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const flipWith = effect.flipWith;\n/**\n * Transforms the value inside an effect by applying a function to it.\n *\n * **Syntax**\n *\n * ```ts skip-type-checking\n * const mappedEffect = pipe(myEffect, Effect.map(transformation))\n * // or\n * const mappedEffect = Effect.map(myEffect, transformation)\n * // or\n * const mappedEffect = myEffect.pipe(Effect.map(transformation))\n * ```\n *\n * **Details**\n *\n * `map` takes a function and applies it to the value contained within an\n * effect, creating a new effect with the transformed value.\n *\n * It's important to note that effects are immutable, meaning that the original\n * effect is not modified. Instead, a new effect is returned with the updated\n * value.\n *\n * **Example** (Adding a Service Charge)\n *\n * ```ts\n * import { pipe, Effect } from \"effect\"\n *\n * const addServiceCharge = (amount: number) => amount + 1\n *\n * const fetchTransactionAmount = Effect.promise(() => Promise.resolve(100))\n *\n * const finalAmount = pipe(\n *   fetchTransactionAmount,\n *   Effect.map(addServiceCharge)\n * )\n *\n * Effect.runPromise(finalAmount).then(console.log)\n * // Output: 101\n * ```\n *\n * @see {@link mapError} for a version that operates on the error channel.\n * @see {@link mapBoth} for a version that operates on both channels.\n * @see {@link flatMap} or {@link andThen} for a version that can return a new effect.\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const map = core.map;\n/**\n * Applies a stateful transformation to each element of a collection, producing\n * new elements along with an updated state.\n *\n * **When to Use**\n *\n * Use `mapAccum` when you need to process each element of a collection while\n * keeping track of some state across iterations.\n *\n * **Details**\n *\n * `mapAccum` takes an initial state (`initial`) and a function (`f`) that is\n * applied to each element. This function returns a new state and a transformed\n * element. The final effect produces both the accumulated state and the\n * transformed collection.\n *\n * If the input collection is a non-empty array, the return type will match the\n * input collection type.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * // Define an initial state and a transformation function\n * const initialState = 0\n *\n * const transformation = (state: number, element: string) =>\n *   Effect.succeed<[number, string]>([state + element.length, element.toUpperCase()])\n *\n * // Apply mapAccum to transform an array of strings\n * const program = Effect.mapAccum([\"a\", \"bb\", \"ccc\"], initialState, transformation)\n *\n * Effect.runPromise(program).then(([finalState, transformedCollection]) => {\n *   console.log(finalState)\n *   console.log(transformedCollection)\n * })\n * // Output:\n * // 6\n * // [ 'A', 'BB', 'CCC' ]\n * ```\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const mapAccum = effect.mapAccum;\n/**\n * Applies transformations to both the success and error channels of an effect.\n *\n * **Details**\n *\n * This function takes two map functions as arguments: one for the error channel\n * and one for the success channel. You can use it when you want to modify both\n * the error and the success values without altering the overall success or\n * failure status of the effect.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<number, string, never>\n * //      ▼\n * const simulatedTask = Effect.fail(\"Oh no!\").pipe(Effect.as(1))\n *\n * //      ┌─── Effect<boolean, Error, never>\n * //      ▼\n * const modified = Effect.mapBoth(simulatedTask, {\n *   onFailure: (message) => new Error(message),\n *   onSuccess: (n) => n > 0\n * })\n * ```\n *\n * @see {@link map} for a version that operates on the success channel.\n * @see {@link mapError} for a version that operates on the error channel.\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const mapBoth = core.mapBoth;\n/**\n * Transforms or modifies the error produced by an effect without affecting its\n * success value.\n *\n * **When to Use**\n *\n * This function is helpful when you want to enhance the error with additional\n * information, change the error type, or apply custom error handling while\n * keeping the original behavior of the effect's success values intact. It only\n * operates on the error channel and leaves the success channel unchanged.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<number, string, never>\n * //      ▼\n * const simulatedTask = Effect.fail(\"Oh no!\").pipe(Effect.as(1))\n *\n * //      ┌─── Effect<number, Error, never>\n * //      ▼\n * const mapped = Effect.mapError(\n *   simulatedTask,\n *   (message) => new Error(message)\n * )\n * ```\n *\n * @see {@link map} for a version that operates on the success channel.\n * @see {@link mapBoth} for a version that operates on both channels.\n * @see {@link orElseFail} if you want to replace the error with a new one.\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const mapError = core.mapError;\n/**\n * Maps the cause of failure of an effect using a specified function.\n *\n * @see {@link sandbox} for a version that exposes the full cause of failures, defects, or interruptions.\n * @see {@link catchAllCause} for a version that can recover from all types of defects.\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const mapErrorCause = effect.mapErrorCause;\n/**\n * Combines both success and error channels of an effect into a single outcome.\n *\n * **Details**\n *\n * This function transforms an effect that may fail into one that always returns\n * a value, where both success and failure outcomes are handled as values in the\n * success channel.\n *\n * **When to Use**\n *\n * This can be useful when you want to continue execution regardless of the\n * error type and still capture both successful results and errors as part of\n * the outcome.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<number, string, never>\n * //      ▼\n * const program = Effect.fail(\"Oh uh!\").pipe(Effect.as(2))\n *\n * //      ┌─── Effect<number | string, never, never>\n * //      ▼\n * const recovered = Effect.merge(program)\n * ```\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const merge = effect.merge;\n/**\n * Returns a new effect with the boolean value of this effect negated.\n *\n * @since 2.0.0\n * @category Mapping\n */\nexport const negate = effect.negate;\n/**\n * Creates a scoped resource using an `acquire` and `release` effect.\n *\n * **Details**\n *\n * This function helps manage resources by combining two `Effect` values: one\n * for acquiring the resource and one for releasing it.\n *\n * `acquireRelease` does the following:\n *\n *   1. Ensures that the effect that acquires the resource will not be\n *      interrupted. Note that acquisition may still fail due to internal\n *      reasons (such as an uncaught exception).\n *   2. Ensures that the `release` effect will not be interrupted, and will be\n *      executed as long as the acquisition effect successfully acquires the\n *      resource.\n *\n * If the `acquire` function succeeds, the `release` function is added to the\n * list of finalizers for the scope. This ensures that the release will happen\n * automatically when the scope is closed.\n *\n * Both `acquire` and `release` run uninterruptibly, meaning they cannot be\n * interrupted while they are executing.\n *\n * Additionally, the `release` function can be influenced by the exit value when\n * the scope closes, allowing for custom handling of how the resource is\n * released based on the execution outcome.\n *\n * **When to Use**\n *\n * This function is used to ensure that an effect that represents the\n * acquisition of a resource (for example, opening a file, launching a thread,\n * etc.) will not be interrupted, and that the resource will always be released\n * when the `Effect` completes execution.\n *\n * **Example** (Defining a Simple Resource)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * // Define an interface for a resource\n * interface MyResource {\n *   readonly contents: string\n *   readonly close: () => Promise<void>\n * }\n *\n * // Simulate resource acquisition\n * const getMyResource = (): Promise<MyResource> =>\n *   Promise.resolve({\n *     contents: \"lorem ipsum\",\n *     close: () =>\n *       new Promise((resolve) => {\n *         console.log(\"Resource released\")\n *         resolve()\n *       })\n *   })\n *\n * // Define how the resource is acquired\n * const acquire = Effect.tryPromise({\n *   try: () =>\n *     getMyResource().then((res) => {\n *       console.log(\"Resource acquired\")\n *       return res\n *     }),\n *   catch: () => new Error(\"getMyResourceError\")\n * })\n *\n * // Define how the resource is released\n * const release = (res: MyResource) => Effect.promise(() => res.close())\n *\n * // Create the resource management workflow\n * //\n * //      ┌─── Effect<MyResource, Error, Scope>\n * //      ▼\n * const resource = Effect.acquireRelease(acquire, release)\n * ```\n *\n * @see {@link acquireUseRelease} for a version that automatically handles the scoping of resources.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const acquireRelease = fiberRuntime.acquireRelease;\n/**\n * Creates a scoped resource with an interruptible acquire action.\n *\n * **Details**\n *\n * This function is similar to {@link acquireRelease}, but it allows the\n * acquisition of the resource to be interrupted. The `acquire` effect, which\n * represents the process of obtaining the resource, can be interrupted if\n * necessary.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const acquireReleaseInterruptible = fiberRuntime.acquireReleaseInterruptible;\n/**\n * Many real-world operations involve working with resources that must be released when no longer needed, such as:\n *\n * - Database connections\n * - File handles\n * - Network requests\n *\n * This function ensures that a resource is:\n *\n * 1. **Acquired** properly.\n * 2. **Used** for its intended purpose.\n * 3. **Released** even if an error occurs.\n *\n * **Example** (Automatically Managing Resource Lifetime)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * // Define an interface for a resource\n * interface MyResource {\n *   readonly contents: string\n *   readonly close: () => Promise<void>\n * }\n *\n * // Simulate resource acquisition\n * const getMyResource = (): Promise<MyResource> =>\n *   Promise.resolve({\n *     contents: \"lorem ipsum\",\n *     close: () =>\n *       new Promise((resolve) => {\n *         console.log(\"Resource released\")\n *         resolve()\n *       })\n *   })\n *\n * // Define how the resource is acquired\n * const acquire = Effect.tryPromise({\n *   try: () =>\n *     getMyResource().then((res) => {\n *       console.log(\"Resource acquired\")\n *       return res\n *     }),\n *   catch: () => new Error(\"getMyResourceError\")\n * })\n *\n * // Define how the resource is released\n * const release = (res: MyResource) => Effect.promise(() => res.close())\n *\n * const use = (res: MyResource) => Console.log(`content is ${res.contents}`)\n *\n * //      ┌─── Effect<void, Error, never>\n * //      ▼\n * const program = Effect.acquireUseRelease(acquire, use, release)\n *\n * Effect.runPromise(program)\n * // Output:\n * // Resource acquired\n * // content is lorem ipsum\n * // Resource released\n * ```\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const acquireUseRelease = core.acquireUseRelease;\n/**\n * Ensures a finalizer is added to the scope of the calling effect, guaranteeing\n * it runs when the scope is closed.\n *\n * **Details**\n *\n * This function adds a finalizer that will execute whenever the scope of the\n * effect is closed, regardless of whether the effect succeeds, fails, or is\n * interrupted. The finalizer receives the `Exit` value of the effect's scope,\n * allowing it to react differently depending on how the effect concludes.\n *\n * Finalizers are a reliable way to manage resource cleanup, ensuring that\n * resources such as file handles, network connections, or database transactions\n * are properly closed even in the event of an unexpected interruption or error.\n *\n * Finalizers operate in conjunction with Effect's scoped resources. If an\n * effect with a finalizer is wrapped in a scope, the finalizer will execute\n * automatically when the scope ends.\n *\n * **Example** (Adding a Finalizer on Success)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * //      ┌─── Effect<string, never, Scope>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   yield* Effect.addFinalizer((exit) =>\n *     Console.log(`Finalizer executed. Exit status: ${exit._tag}`)\n *   )\n *   return \"some result\"\n * })\n *\n * // Wrapping the effect in a scope\n * //\n * //      ┌─── Effect<string, never, never>\n * //      ▼\n * const runnable = Effect.scoped(program)\n *\n * Effect.runPromiseExit(runnable).then(console.log)\n * // Output:\n * // Finalizer executed. Exit status: Success\n * // { _id: 'Exit', _tag: 'Success', value: 'some result' }\n * ```\n *\n * **Example** (Adding a Finalizer on Failure)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * //      ┌─── Effect<never, string, Scope>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   yield* Effect.addFinalizer((exit) =>\n *     Console.log(`Finalizer executed. Exit status: ${exit._tag}`)\n *   )\n *   return yield* Effect.fail(\"Uh oh!\")\n * })\n *\n * // Wrapping the effect in a scope\n * //\n * //      ┌─── Effect<never, string, never>\n * //      ▼\n * const runnable = Effect.scoped(program)\n *\n * Effect.runPromiseExit(runnable).then(console.log)\n * // Output:\n * // Finalizer executed. Exit status: Failure\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Fail', failure: 'Uh oh!' }\n * // }\n * ```\n *\n * **Example** (Adding a Finalizer on Interruption)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * //      ┌─── Effect<never, never, Scope>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   yield* Effect.addFinalizer((exit) =>\n *     Console.log(`Finalizer executed. Exit status: ${exit._tag}`)\n *   )\n *   return yield* Effect.interrupt\n * })\n *\n * // Wrapping the effect in a scope\n * //\n * //      ┌─── Effect<never, never, never>\n * //      ▼\n * const runnable = Effect.scoped(program)\n *\n * Effect.runPromiseExit(runnable).then(console.log)\n * // Output:\n * // Finalizer executed. Exit status: Failure\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Interrupt',\n * //     fiberId: {\n * //       _id: 'FiberId',\n * //       _tag: 'Runtime',\n * //       id: 0,\n * //       startTimeMillis: ...\n * //     }\n * //   }\n * // }\n * ```\n *\n * @see {@link onExit} for attaching a finalizer directly to an effect.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const addFinalizer = fiberRuntime.addFinalizer;\n/**\n * Guarantees the execution of a finalizer when an effect starts execution.\n *\n * **Details**\n *\n * This function allows you to specify a `finalizer` effect that will always be\n * run once the effect starts execution, regardless of whether the effect\n * succeeds, fails, or is interrupted.\n *\n * **When to Use**\n *\n * This is useful when you need to ensure that certain cleanup or final steps\n * are executed in all cases, such as releasing resources or performing\n * necessary logging.\n *\n * While this function provides strong guarantees about executing the finalizer,\n * it is considered a low-level tool, which may not be ideal for more complex\n * resource management. For higher-level resource management with automatic\n * acquisition and release, see the {@link acquireRelease} family of functions.\n * For use cases where you need access to the result of an effect, consider\n * using {@link onExit}.\n *\n * **Example** (Running a Finalizer in All Outcomes)\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * // Define a cleanup effect\n * const handler = Effect.ensuring(Console.log(\"Cleanup completed\"))\n *\n * // Define a successful effect\n * const success = Console.log(\"Task completed\").pipe(\n *   Effect.as(\"some result\"),\n *   handler\n * )\n *\n * Effect.runFork(success)\n * // Output:\n * // Task completed\n * // Cleanup completed\n *\n * // Define a failing effect\n * const failure = Console.log(\"Task failed\").pipe(\n *   Effect.andThen(Effect.fail(\"some error\")),\n *   handler\n * )\n *\n * Effect.runFork(failure)\n * // Output:\n * // Task failed\n * // Cleanup completed\n *\n * // Define an interrupted effect\n * const interruption = Console.log(\"Task interrupted\").pipe(\n *   Effect.andThen(Effect.interrupt),\n *   handler\n * )\n *\n * Effect.runFork(interruption)\n * // Output:\n * // Task interrupted\n * // Cleanup completed\n * ```\n *\n * @see {@link onExit} for a version that provides access to the result of an\n * effect.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const ensuring = fiberRuntime.ensuring;\n/**\n * Ensures a cleanup effect runs whenever the calling effect fails, providing\n * the failure cause to the cleanup effect.\n *\n * **Details**\n *\n * This function allows you to attach a cleanup effect that runs whenever the\n * calling effect fails. The cleanup effect receives the cause of the failure,\n * allowing you to perform actions such as logging, releasing resources, or\n * executing additional recovery logic based on the error. The cleanup effect\n * will execute even if the failure is due to interruption.\n *\n * Importantly, the cleanup effect itself is uninterruptible, ensuring that it\n * completes regardless of external interruptions.\n *\n * **Example** (Running Cleanup Only on Failure)\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * // This handler logs the failure cause when the effect fails\n * const handler = Effect.onError((cause) =>\n *   Console.log(`Cleanup completed: ${cause}`)\n * )\n *\n * // Define a successful effect\n * const success = Console.log(\"Task completed\").pipe(\n *   Effect.as(\"some result\"),\n *   handler\n * )\n *\n * Effect.runFork(success)\n * // Output:\n * // Task completed\n *\n * // Define a failing effect\n * const failure = Console.log(\"Task failed\").pipe(\n *   Effect.andThen(Effect.fail(\"some error\")),\n *   handler\n * )\n *\n * Effect.runFork(failure)\n * // Output:\n * // Task failed\n * // Cleanup completed: Error: some error\n *\n * // Define a failing effect\n * const defect = Console.log(\"Task failed with defect\").pipe(\n *   Effect.andThen(Effect.die(\"Boom!\")),\n *   handler\n * )\n *\n * Effect.runFork(defect)\n * // Output:\n * // Task failed with defect\n * // Cleanup completed: Error: Boom!\n *\n * // Define an interrupted effect\n * const interruption = Console.log(\"Task interrupted\").pipe(\n *   Effect.andThen(Effect.interrupt),\n *   handler\n * )\n *\n * Effect.runFork(interruption)\n * // Output:\n * // Task interrupted\n * // Cleanup completed: All fibers interrupted without errors.\n * ```\n *\n * @see {@link ensuring} for attaching a cleanup effect that runs on both success and failure.\n * @see {@link onExit} for attaching a cleanup effect that runs on all possible exits.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const onError = core.onError;\n/**\n * Guarantees that a cleanup function runs regardless of whether the effect\n * succeeds, fails, or is interrupted.\n *\n * **Details**\n *\n * This function ensures that a provided cleanup function is executed after the\n * effect completes, regardless of the outcome. The cleanup function is given\n * the `Exit` value of the effect, which provides detailed information about the\n * result:\n * - If the effect succeeds, the `Exit` contains the success value.\n * - If the effect fails, the `Exit` contains the error or failure cause.\n * - If the effect is interrupted, the `Exit` reflects the interruption.\n *\n * The cleanup function is guaranteed to run uninterruptibly, ensuring reliable\n * resource management even in complex or high-concurrency scenarios.\n *\n * **Example** (Running a Cleanup Function with the Effect’s Result)\n *\n * ```ts\n * import { Console, Effect, Exit } from \"effect\"\n *\n * // Define a cleanup effect that logs the result\n * const handler = Effect.onExit((exit) =>\n *   Console.log(`Cleanup completed: ${Exit.getOrElse(exit, String)}`)\n * )\n *\n * // Define a successful effect\n * const success = Console.log(\"Task completed\").pipe(\n *   Effect.as(\"some result\"),\n *   handler\n * )\n *\n * Effect.runFork(success)\n * // Output:\n * // Task completed\n * // Cleanup completed: some result\n *\n * // Define a failing effect\n * const failure = Console.log(\"Task failed\").pipe(\n *   Effect.andThen(Effect.fail(\"some error\")),\n *   handler\n * )\n *\n * Effect.runFork(failure)\n * // Output:\n * // Task failed\n * // Cleanup completed: Error: some error\n *\n * // Define an interrupted effect\n * const interruption = Console.log(\"Task interrupted\").pipe(\n *   Effect.andThen(Effect.interrupt),\n *   handler\n * )\n *\n * Effect.runFork(interruption)\n * // Output:\n * // Task interrupted\n * // Cleanup completed: All fibers interrupted without errors.\n * ```\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const onExit = core.onExit;\n/**\n * Ensures that finalizers are run concurrently when the scope of an effect is\n * closed.\n *\n * **Details**\n *\n * This function modifies the behavior of finalizers within a scoped workflow to\n * allow them to run concurrently when the scope is closed.\n *\n * By default, finalizers are executed sequentially in reverse order of their\n * addition, but this function changes that behavior to execute all finalizers\n * concurrently.\n *\n * **When to Use**\n *\n * Running finalizers concurrently can improve performance when multiple\n * independent cleanup tasks need to be performed. However, it requires that\n * these tasks do not depend on the order of execution or introduce race\n * conditions.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * // Define a program that adds multiple finalizers\n * const program = Effect.gen(function*() {\n *   yield* Effect.addFinalizer(() => Console.log(\"Finalizer 1 executed\").pipe(Effect.delay(\"300 millis\")))\n *   yield* Effect.addFinalizer(() => Console.log(\"Finalizer 2 executed\").pipe(Effect.delay(\"100 millis\")))\n *   yield* Effect.addFinalizer(() => Console.log(\"Finalizer 3 executed\").pipe(Effect.delay(\"200 millis\")))\n *   return \"some result\"\n * })\n *\n * // Modify the program to ensure finalizers run in parallel\n * const modified = program.pipe(Effect.parallelFinalizers)\n *\n * const runnable = Effect.scoped(modified)\n *\n * Effect.runFork(runnable)\n * // Output:\n * // Finalizer 2 executed\n * // Finalizer 3 executed\n * // Finalizer 1 executed\n * ```\n *\n * @see {@link sequentialFinalizers} for a version that ensures finalizers are run sequentially.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const parallelFinalizers = fiberRuntime.parallelFinalizers;\n/**\n * Ensures that finalizers are run sequentially in reverse order of their\n * addition.\n *\n * **Details**\n *\n * This function modifies the behavior of finalizers within a scoped workflow to\n * ensure they are run sequentially in reverse order when the scope is closed.\n *\n * By default, finalizers are executed sequentially, so this only changes the\n * behavior if the scope is configured to run finalizers concurrently.\n *\n * @see {@link parallelFinalizers} for a version that ensures finalizers are run concurrently.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const sequentialFinalizers = fiberRuntime.sequentialFinalizers;\n/**\n * Applies a custom execution strategy to finalizers within a scoped workflow.\n *\n * **Details**\n *\n * This function allows you to control how finalizers are executed in a scope by\n * applying a specified `ExecutionStrategy`. The `strategy` can dictate whether\n * finalizers run (e.g., sequentially or in parallel).\n *\n * Additionally, the function provides a `restore` operation, which ensures that\n * the effect passed to it is executed under the default execution strategy.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const finalizersMask = fiberRuntime.finalizersMask;\n/**\n * Provides access to the current scope in a scoped workflow.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const scope = fiberRuntime.scope;\n/**\n * Accesses the current scope and uses it to perform the specified effect.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const scopeWith = fiberRuntime.scopeWith;\n/**\n * Creates a `Scope`, passes it to the specified effectful function, and closes\n * the scope when the effect completes (whether through success, failure, or\n * interruption).\n *\n * @since 3.11.0\n * @category Scoping, Resources & Finalization\n */\nexport const scopedWith = fiberRuntime.scopedWith;\n/**\n * Scopes all resources used in an effect to the lifetime of the effect.\n *\n * **Details**\n *\n * This function ensures that all resources used within an effect are tied to\n * its lifetime. Finalizers for these resources are executed automatically when\n * the effect completes, whether through success, failure, or interruption. This\n * guarantees proper resource cleanup without requiring explicit management.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const scoped = fiberRuntime.scopedEffect;\n/**\n * Scopes all resources acquired by one effect to the lifetime of another\n * effect.\n *\n * **Details**\n *\n * This function allows you to scope the resources acquired by one effect\n * (`self`) to the lifetime of another effect (`use`). This ensures that the\n * resources are cleaned up as soon as the `use` effect completes, regardless of\n * how the `use` effect ends (success, failure, or interruption).\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const acquire = Console.log(\"Acquiring resource\").pipe(\n *   Effect.as(1),\n *   Effect.tap(Effect.addFinalizer(() => Console.log(\"Releasing resource\")))\n * )\n * const use = (resource: number) => Console.log(`Using resource: ${resource}`)\n *\n * const program = acquire.pipe(Effect.using(use))\n *\n * Effect.runFork(program)\n * // Output:\n * // Acquiring resource\n * // Using resource: 1\n * // Releasing resource\n * ```\n *\n * @see {@link scopedWith} Manage scoped operations with a temporary scope.\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const using = fiberRuntime.using;\n/**\n * Returns the result of the effect and a finalizer to close its scope.\n *\n * **Details**\n *\n * This function allows you to retrieve both the result of an effect and a\n * finalizer that can be used to manually close its scope. This is useful for\n * workflows where you need early access to the result while retaining control\n * over the resource cleanup process.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const acquire = Console.log(\"Acquiring resource\").pipe(\n *   Effect.as(1),\n *   Effect.tap(Effect.addFinalizer(() => Console.log(\"Releasing resource\")))\n * )\n * const program = Effect.gen(function*() {\n *   const [finalizer, resource] = yield* Effect.withEarlyRelease(acquire)\n *   console.log(`Using resource: ${resource}`)\n *   yield* Effect.sleep(\"1 second\")\n *   yield* finalizer\n * })\n *\n * Effect.runFork(program.pipe(Effect.scoped))\n * // Output:\n * // Acquiring resource\n * // Using resource: 1\n * // Releasing resource\n * ```\n *\n * @since 2.0.0\n * @category Scoping, Resources & Finalization\n */\nexport const withEarlyRelease = fiberRuntime.withEarlyRelease;\n/**\n * Returns a new effect that will not succeed with its value before first\n * waiting for the end of all child fibers forked by the effect.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const awaitAllChildren = circular.awaitAllChildren;\n/**\n * Returns a new workflow that will not supervise any fibers forked by this\n * workflow.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const daemonChildren = fiberRuntime.daemonChildren;\n/**\n * Constructs an effect with information about the current `Fiber`.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const descriptor = effect.descriptor;\n/**\n * Constructs an effect based on information about the current `Fiber`.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const descriptorWith = effect.descriptorWith;\n/**\n * Returns a new workflow that executes this one and captures the changes in\n * `FiberRef` values.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const diffFiberRefs = effect.diffFiberRefs;\n/**\n * Acts on the children of this fiber (collected into a single fiber),\n * guaranteeing the specified callback will be invoked, whether or not this\n * effect succeeds.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const ensuringChild = circular.ensuringChild;\n/**\n * Acts on the children of this fiber, guaranteeing the specified callback\n * will be invoked, whether or not this effect succeeds.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const ensuringChildren = circular.ensuringChildren;\n/**\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const fiberId = core.fiberId;\n/**\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const fiberIdWith = core.fiberIdWith;\n/**\n * Creates a new fiber to run an effect concurrently.\n *\n * **Details**\n *\n * This function takes an effect and forks it into a separate fiber, allowing it\n * to run concurrently without blocking the original effect. The new fiber\n * starts execution immediately after being created, and the fiber object is\n * returned immediately without waiting for the effect to begin. This is useful\n * when you want to run tasks concurrently while continuing other tasks in the\n * parent fiber.\n *\n * The forked fiber is attached to the parent fiber's scope. This means that\n * when the parent fiber terminates, the child fiber will also be terminated\n * automatically. This feature, known as \"auto supervision,\" ensures that no\n * fibers are left running unintentionally. If you prefer not to have this auto\n * supervision behavior, you can use {@link forkDaemon} or {@link forkIn}.\n *\n * **When to Use**\n *\n * Use this function when you need to run an effect concurrently without\n * blocking the current execution flow. For example, you might use it to launch\n * background tasks or concurrent computations. However, working with fibers can\n * be complex, so before using this function directly, you might want to explore\n * higher-level functions like {@link raceWith}, {@link zip}, or others that can\n * manage concurrency for you.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const fib = (n: number): Effect.Effect<number> =>\n *   n < 2\n *     ? Effect.succeed(n)\n *     : Effect.zipWith(fib(n - 1), fib(n - 2), (a, b) => a + b)\n *\n * //      ┌─── Effect<RuntimeFiber<number, never>, never, never>\n * //      ▼\n * const fib10Fiber = Effect.fork(fib(10))\n * ```\n *\n * @see {@link forkWithErrorHandler} for a version that allows you to handle errors.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const fork = fiberRuntime.fork;\n/**\n * Creates a long-running background fiber that is independent of its parent.\n *\n * **Details**\n *\n * This function creates a \"daemon\" fiber that runs in the background and is not\n * tied to the lifecycle of its parent fiber. Unlike normal fibers that stop\n * when the parent fiber terminates, a daemon fiber will continue running until\n * the global scope closes or the fiber completes naturally. This makes it\n * useful for tasks that need to run in the background independently, such as\n * periodic logging, monitoring, or background data processing.\n *\n * **Example** (Creating a Daemon Fiber)\n *\n * ```ts\n * import { Effect, Console, Schedule } from \"effect\"\n *\n * // Daemon fiber that logs a message repeatedly every second\n * const daemon = Effect.repeat(\n *   Console.log(\"daemon: still running!\"),\n *   Schedule.fixed(\"1 second\")\n * )\n *\n * const parent = Effect.gen(function* () {\n *   console.log(\"parent: started!\")\n *   // Daemon fiber running independently\n *   yield* Effect.forkDaemon(daemon)\n *   yield* Effect.sleep(\"3 seconds\")\n *   console.log(\"parent: finished!\")\n * })\n *\n * Effect.runFork(parent)\n * // Output:\n * // parent: started!\n * // daemon: still running!\n * // daemon: still running!\n * // daemon: still running!\n * // parent: finished!\n * // daemon: still running!\n * // daemon: still running!\n * // daemon: still running!\n * // daemon: still running!\n * // daemon: still running!\n * // ...etc...\n * ```\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const forkDaemon = fiberRuntime.forkDaemon;\n/**\n * Returns an effect that forks all of the specified values, and returns a\n * composite fiber that produces a list of their results, in order.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const forkAll = circular.forkAll;\n/**\n * Forks an effect in a specific scope, allowing finer control over its\n * execution.\n *\n * **Details**\n *\n * There are some cases where we need more fine-grained control, so we want to\n * fork a fiber in a specific scope. We can use the `Effect.forkIn` operator\n * which takes the target scope as an argument.\n *\n * The fiber will be interrupted when the scope is closed.\n *\n * **Example** (Forking a Fiber in a Specific Scope)\n *\n * In this example, the child fiber is forked into the outerScope,\n * allowing it to outlive the inner scope but still be terminated\n * when the outerScope is closed.\n *\n * ```ts\n * import { Console, Effect, Schedule } from \"effect\"\n *\n * // Child fiber that logs a message repeatedly every second\n * const child = Effect.repeat(\n *   Console.log(\"child: still running!\"),\n *   Schedule.fixed(\"1 second\")\n * )\n *\n * const program = Effect.scoped(\n *   Effect.gen(function* () {\n *     yield* Effect.addFinalizer(() =>\n *       Console.log(\"The outer scope is about to be closed!\")\n *     )\n *\n *     // Capture the outer scope\n *     const outerScope = yield* Effect.scope\n *\n *     // Create an inner scope\n *     yield* Effect.scoped(\n *       Effect.gen(function* () {\n *         yield* Effect.addFinalizer(() =>\n *           Console.log(\"The inner scope is about to be closed!\")\n *         )\n *         // Fork the child fiber in the outer scope\n *         yield* Effect.forkIn(child, outerScope)\n *         yield* Effect.sleep(\"3 seconds\")\n *       })\n *     )\n *\n *     yield* Effect.sleep(\"5 seconds\")\n *   })\n * )\n *\n * Effect.runFork(program)\n * // Output:\n * // child: still running!\n * // child: still running!\n * // child: still running!\n * // The inner scope is about to be closed!\n * // child: still running!\n * // child: still running!\n * // child: still running!\n * // child: still running!\n * // child: still running!\n * // child: still running!\n * // The outer scope is about to be closed!\n * ```\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const forkIn = circular.forkIn;\n/**\n * Forks a fiber in a local scope, ensuring it outlives its parent.\n *\n * **Details**\n *\n * This function is used to create fibers that are tied to a local scope,\n * meaning they are not dependent on their parent fiber's lifecycle. Instead,\n * they will continue running until the scope they were created in is closed.\n * This is particularly useful when you need a fiber to run independently of the\n * parent fiber, but still want it to be terminated when the scope ends.\n *\n * Fibers created with this function are isolated from the parent fiber’s\n * termination, so they can run for a longer period. This behavior is different\n * from fibers created with {@link fork}, which are terminated when the parent fiber\n * terminates. With `forkScoped`, the child fiber will keep running until the\n * local scope ends, regardless of the state of the parent fiber.\n *\n * **Example** (Forking a Fiber in a Local Scope)\n *\n * In this example, the child fiber continues to run beyond the lifetime of the parent fiber.\n * The child fiber is tied to the local scope and will be terminated only when the scope ends.\n *\n * ```ts\n * import { Effect, Console, Schedule } from \"effect\"\n *\n * // Child fiber that logs a message repeatedly every second\n * const child = Effect.repeat(\n *   Console.log(\"child: still running!\"),\n *   Schedule.fixed(\"1 second\")\n * )\n *\n * //      ┌─── Effect<void, never, Scope>\n * //      ▼\n * const parent = Effect.gen(function* () {\n *   console.log(\"parent: started!\")\n *   // Child fiber attached to local scope\n *   yield* Effect.forkScoped(child)\n *   yield* Effect.sleep(\"3 seconds\")\n *   console.log(\"parent: finished!\")\n * })\n *\n * // Program runs within a local scope\n * const program = Effect.scoped(\n *   Effect.gen(function* () {\n *     console.log(\"Local scope started!\")\n *     yield* Effect.fork(parent)\n *     // Scope lasts for 5 seconds\n *     yield* Effect.sleep(\"5 seconds\")\n *     console.log(\"Leaving the local scope!\")\n *   })\n * )\n *\n * Effect.runFork(program)\n * // Output:\n * // Local scope started!\n * // parent: started!\n * // child: still running!\n * // child: still running!\n * // child: still running!\n * // parent: finished!\n * // child: still running!\n * // child: still running!\n * // Leaving the local scope!\n * ```\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const forkScoped = circular.forkScoped;\n/**\n * Like {@link fork} but handles an error with the provided handler.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const forkWithErrorHandler = fiberRuntime.forkWithErrorHandler;\n/**\n * Creates an `Effect` value that represents the exit value of the specified\n * fiber.\n *\n * @see {@link fromFiberEffect} for creating an effect from a fiber obtained from an effect.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const fromFiber = circular.fromFiber;\n/**\n * Creates an `Effect` value that represents the exit value of a fiber obtained\n * from an effect.\n *\n * @see {@link fromFiber} for creating an effect from a fiber.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const fromFiberEffect = circular.fromFiberEffect;\n/**\n * Supervises child fibers by reporting them to a specified supervisor.\n *\n * **Details**\n *\n * This function takes a supervisor as an argument and returns an effect where\n * all child fibers forked within it are supervised by the provided supervisor.\n * This enables you to capture detailed information about these child fibers,\n * such as their status, through the supervisor.\n *\n * **Example** (Monitoring Fiber Count)\n *\n * ```ts\n * import { Effect, Supervisor, Schedule, Fiber, FiberStatus } from \"effect\"\n *\n * // Main program that monitors fibers while calculating a Fibonacci number\n * const program = Effect.gen(function* () {\n *   // Create a supervisor to track child fibers\n *   const supervisor = yield* Supervisor.track\n *\n *   // Start a Fibonacci calculation, supervised by the supervisor\n *   const fibFiber = yield* fib(20).pipe(\n *     Effect.supervised(supervisor),\n *     // Fork the Fibonacci effect into a fiber\n *     Effect.fork\n *   )\n *\n *   // Define a schedule to periodically monitor the fiber count every 500ms\n *   const policy = Schedule.spaced(\"500 millis\").pipe(\n *     Schedule.whileInputEffect((_) =>\n *       Fiber.status(fibFiber).pipe(\n *         // Continue while the Fibonacci fiber is not done\n *         Effect.andThen((status) => status !== FiberStatus.done)\n *       )\n *     )\n *   )\n *\n *   // Start monitoring the fibers, using the supervisor to track the count\n *   const monitorFiber = yield* monitorFibers(supervisor).pipe(\n *     // Repeat the monitoring according to the schedule\n *     Effect.repeat(policy),\n *     // Fork the monitoring into its own fiber\n *     Effect.fork\n *   )\n *\n *   // Join the monitor and Fibonacci fibers to ensure they complete\n *   yield* Fiber.join(monitorFiber)\n *   const result = yield* Fiber.join(fibFiber)\n *\n *   console.log(`fibonacci result: ${result}`)\n * })\n *\n * // Function to monitor and log the number of active fibers\n * const monitorFibers = (\n *   supervisor: Supervisor.Supervisor<Array<Fiber.RuntimeFiber<any, any>>>\n * ): Effect.Effect<void> =>\n *   Effect.gen(function* () {\n *     const fibers = yield* supervisor.value // Get the current set of fibers\n *     console.log(`number of fibers: ${fibers.length}`)\n *   })\n *\n * // Recursive Fibonacci calculation, spawning fibers for each recursive step\n * const fib = (n: number): Effect.Effect<number> =>\n *   Effect.gen(function* () {\n *     if (n <= 1) {\n *       return 1\n *     }\n *     yield* Effect.sleep(\"500 millis\") // Simulate work by delaying\n *\n *     // Fork two fibers for the recursive Fibonacci calls\n *     const fiber1 = yield* Effect.fork(fib(n - 2))\n *     const fiber2 = yield* Effect.fork(fib(n - 1))\n *\n *     // Join the fibers to retrieve their results\n *     const v1 = yield* Fiber.join(fiber1)\n *     const v2 = yield* Fiber.join(fiber2)\n *\n *     return v1 + v2 // Combine the results\n *   })\n *\n * Effect.runPromise(program)\n * // Output:\n * // number of fibers: 0\n * // number of fibers: 2\n * // number of fibers: 6\n * // number of fibers: 14\n * // number of fibers: 30\n * // number of fibers: 62\n * // number of fibers: 126\n * // number of fibers: 254\n * // number of fibers: 510\n * // number of fibers: 1022\n * // number of fibers: 2034\n * // number of fibers: 3795\n * // number of fibers: 5810\n * // number of fibers: 6474\n * // number of fibers: 4942\n * // number of fibers: 2515\n * // number of fibers: 832\n * // number of fibers: 170\n * // number of fibers: 18\n * // number of fibers: 0\n * // fibonacci result: 10946\n * ```\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const supervised = circular.supervised;\n/**\n * Transplants specified effects so that when those effects fork other\n * effects, the forked effects will be governed by the scope of the fiber that\n * executes this effect.\n *\n * This can be used to \"graft\" deep grandchildren onto a higher-level scope,\n * effectively extending their lifespans into the parent scope.\n *\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const transplant = core.transplant;\n/**\n * @since 2.0.0\n * @category Supervision & Fibers\n */\nexport const withConcurrency = core.withConcurrency;\n/**\n * Sets the provided scheduler for usage in the wrapped effect\n *\n * @since 2.0.0\n * @category Scheduler\n */\nexport const withScheduler = Scheduler.withScheduler;\n/**\n * Sets the scheduling priority used when yielding\n *\n * @since 2.0.0\n * @category Scheduler\n */\nexport const withSchedulingPriority = core.withSchedulingPriority;\n/**\n * Sets the maximum number of operations before yield by the default schedulers\n *\n * @since 2.0.0\n * @category Scheduler\n */\nexport const withMaxOpsBeforeYield = core.withMaxOpsBeforeYield;\n/**\n * Retrieves the `Clock` service from the context.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   const clock = yield* Effect.clock\n *   const currentTime = yield* clock.currentTimeMillis\n *   console.log(`Current time in milliseconds: ${currentTime}`)\n * })\n *\n * Effect.runFork(program)\n * // Example Output:\n * // Current time in milliseconds: 1735484796134\n * ```\n *\n * @since 2.0.0\n * @category Clock\n */\nexport const clock = effect.clock;\n/**\n * Retrieves the `Clock` service from the context and provides it to the\n * specified effectful function.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const program = Effect.clockWith((clock) =>\n *   clock.currentTimeMillis.pipe(\n *     Effect.map((currentTime) => `Current time is: ${currentTime}`),\n *     Effect.tap(Console.log)\n *   )\n * )\n *\n * Effect.runFork(program)\n * // Example Output:\n * // Current time is: 1735484929744\n * ```\n *\n * @since 2.0.0\n * @category Clock\n */\nexport const clockWith = effect.clockWith;\n/**\n * Sets the implementation of the `Clock` service to the specified value and\n * restores it to its original value when the scope is closed.\n *\n * @since 2.0.0\n * @category Clock\n */\nexport const withClockScoped = fiberRuntime.withClockScoped;\n/**\n * Executes the specified workflow with the specified implementation of the\n * `Clock` service.\n *\n * @since 2.0.0\n * @category Clock\n */\nexport const withClock = defaultServices.withClock;\n/**\n * Retreives the `Console` service from the context\n *\n * @since 2.0.0\n * @category Console\n */\nexport const console = console_.console;\n/**\n * Retreives the `Console` service from the context and provides it to the\n * specified effectful function.\n *\n * @since 2.0.0\n * @category Console\n */\nexport const consoleWith = console_.consoleWith;\n/**\n * Sets the implementation of the console service to the specified value and\n * restores it to its original value when the scope is closed.\n *\n * @since 2.0.0\n * @category Creating Effects\n */\nexport const withConsoleScoped = console_.withConsoleScoped;\n/**\n * Executes the specified workflow with the specified implementation of the\n * console service.\n *\n * @since 2.0.0\n * @category Console\n */\nexport const withConsole = console_.withConsole;\n/**\n * Delays the execution of an effect by a specified `Duration`.\n *\n * **Details\n *\n * This function postpones the execution of the provided effect by the specified\n * duration. The duration can be provided in various formats supported by the\n * `Duration` module.\n *\n * Internally, this function does not block the thread; instead, it uses an\n * efficient, non-blocking mechanism to introduce the delay.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const task = Console.log(\"Task executed\")\n *\n * const program = Console.log(\"start\").pipe(\n *   Effect.andThen(\n *     // Delays the log message by 2 seconds\n *     task.pipe(Effect.delay(\"2 seconds\"))\n *   )\n * )\n *\n * Effect.runFork(program)\n * // Output:\n * // start\n * // Task executed\n * ```\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const delay = effect.delay;\n/**\n * Suspends the execution of an effect for a specified `Duration`.\n *\n * **Details**\n *\n * This function pauses the execution of an effect for a given duration. It is\n * asynchronous, meaning that it does not block the fiber executing the effect.\n * Instead, the fiber is suspended during the delay period and can resume once\n * the specified time has passed.\n *\n * The duration can be specified using various formats supported by the\n * `Duration` module, such as a string (`\"2 seconds\"`) or numeric value\n * representing milliseconds.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   console.log(\"Starting task...\")\n *   yield* Effect.sleep(\"3 seconds\") // Waits for 3 seconds\n *   console.log(\"Task completed!\")\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // Starting task...\n * // Task completed!\n * ```\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const sleep = effect.sleep;\n/**\n * Executes an effect and measures the time it takes to complete.\n *\n * **Details**\n *\n * This function wraps the provided effect and returns a new effect that, when\n * executed, performs the original effect and calculates its execution duration.\n *\n * The result of the new effect includes both the execution time (as a\n * `Duration`) and the original effect's result. This is useful for monitoring\n * performance or gaining insights into the time taken by specific operations.\n *\n * The original effect's behavior (success, failure, or interruption) remains\n * unchanged, and the timing information is provided alongside the result in a\n * tuple.\n *\n * **Example**\n *\n * ```ts\n * import { Duration, Effect } from \"effect\"\n *\n * const task = Effect.gen(function*() {\n *   yield* Effect.sleep(\"2 seconds\") // Simulates some work\n *   return \"some result\"\n * })\n *\n * const timedTask = task.pipe(Effect.timed)\n *\n * const program = Effect.gen(function*() {\n *   const [duration, result] = yield* timedTask\n *   console.log(`Task completed in ${Duration.toMillis(duration)} ms with result: ${result}`)\n * })\n *\n * Effect.runFork(program)\n * // Output: Task completed in 2003.749125 ms with result: some result\n * ```\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const timed = effect.timed;\n/**\n * Executes an effect and measures its execution time using a custom clock.\n *\n * **Details**\n *\n * This function extends the functionality of {@link timed} by allowing you to\n * specify a custom clock for measuring the execution duration. The provided\n * effect (`nanoseconds`) represents the clock and should return the current\n * time in nanoseconds. The timing information is computed using this custom\n * clock instead of the default system clock.\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const timedWith = effect.timedWith;\n/**\n * Adds a time limit to an effect, triggering a timeout if the effect exceeds\n * the duration.\n *\n * **Details**\n *\n * This function allows you to enforce a time limit on the execution of an\n * effect. If the effect does not complete within the given duration, it fails\n * with a `TimeoutException`. This is useful for preventing tasks from hanging\n * indefinitely, especially in scenarios where responsiveness or resource limits\n * are critical.\n *\n * The returned effect will either:\n * - Succeed with the original effect's result if it completes within the\n *   specified duration.\n * - Fail with a `TimeoutException` if the time limit is exceeded.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task = Effect.gen(function* () {\n *   console.log(\"Start processing...\")\n *   yield* Effect.sleep(\"2 seconds\") // Simulates a delay in processing\n *   console.log(\"Processing complete.\")\n *   return \"Result\"\n * })\n *\n * // Output will show a TimeoutException as the task takes longer\n * // than the specified timeout duration\n * const timedEffect = task.pipe(Effect.timeout(\"1 second\"))\n *\n * Effect.runPromiseExit(timedEffect).then(console.log)\n * // Output:\n * // Start processing...\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Fail',\n * //     failure: { _tag: 'TimeoutException' }\n * //   }\n * // }\n * ```\n *\n * @see {@link timeoutFail} for a version that raises a custom error.\n * @see {@link timeoutFailCause} for a version that raises a custom defect.\n * @see {@link timeoutTo} for a version that allows specifying both success and\n * timeout handlers.\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const timeout = circular.timeout;\n/**\n * Gracefully handles timeouts by returning an `Option` that represents either\n * the result or a timeout.\n *\n * **Details**\n *\n * This function wraps the outcome of an effect in an `Option` type. If the\n * effect completes within the specified duration, it returns a `Some`\n * containing the result. If the effect times out, it returns a `None`. Unlike\n * other timeout methods, this approach does not raise errors or exceptions;\n * instead, it allows you to treat timeouts as a regular outcome, simplifying\n * the logic for handling delays.\n *\n * **When to Use**\n *\n * This is useful when you want to handle timeouts without causing the program\n * to fail, making it easier to manage situations where you expect tasks might\n * take too long but want to continue executing other tasks.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task = Effect.gen(function* () {\n *   console.log(\"Start processing...\")\n *   yield* Effect.sleep(\"2 seconds\") // Simulates a delay in processing\n *   console.log(\"Processing complete.\")\n *   return \"Result\"\n * })\n *\n * const timedOutEffect = Effect.all([\n *   task.pipe(Effect.timeoutOption(\"3 seconds\")),\n *   task.pipe(Effect.timeoutOption(\"1 second\"))\n * ])\n *\n * Effect.runPromise(timedOutEffect).then(console.log)\n * // Output:\n * // Start processing...\n * // Processing complete.\n * // Start processing...\n * // [\n * //   { _id: 'Option', _tag: 'Some', value: 'Result' },\n * //   { _id: 'Option', _tag: 'None' }\n * // ]\n * ```\n *\n * @see {@link timeout} for a version that raises a `TimeoutException`.\n * @see {@link timeoutFail} for a version that raises a custom error.\n * @see {@link timeoutFailCause} for a version that raises a custom defect.\n * @see {@link timeoutTo} for a version that allows specifying both success and\n * timeout handlers.\n *\n * @since 3.1.0\n * @category Delays & Timeouts\n */\nexport const timeoutOption = circular.timeoutOption;\n/**\n * Specifies a custom error to be produced when a timeout occurs.\n *\n * **Details**\n *\n * This function allows you to handle timeouts in a customized way by defining a\n * specific error to be raised when an effect exceeds the given duration. Unlike\n * default timeout behaviors that use generic exceptions, this function gives\n * you the flexibility to specify a meaningful error type that aligns with your\n * application's needs.\n *\n * When you apply this function, you provide:\n * - A `duration`: The time limit for the effect.\n * - An `onTimeout` function: A lazy evaluation function that generates the\n *   custom error if the timeout occurs.\n *\n * If the effect completes within the time limit, its result is returned\n * normally. Otherwise, the `onTimeout` function is triggered, and its output is\n * used as the error for the effect.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task = Effect.gen(function* () {\n *   console.log(\"Start processing...\")\n *   yield* Effect.sleep(\"2 seconds\") // Simulates a delay in processing\n *   console.log(\"Processing complete.\")\n *   return \"Result\"\n * })\n *\n * class MyTimeoutError {\n *   readonly _tag = \"MyTimeoutError\"\n * }\n *\n * const program = task.pipe(\n *   Effect.timeoutFail({\n *     duration: \"1 second\",\n *     onTimeout: () => new MyTimeoutError() // Custom timeout error\n *   })\n * )\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // Start processing...\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Fail',\n * //     failure: MyTimeoutError { _tag: 'MyTimeoutError' }\n * //   }\n * // }\n * ```\n *\n * @see {@link timeout} for a version that raises a `TimeoutException`.\n * @see {@link timeoutFailCause} for a version that raises a custom defect.\n * @see {@link timeoutTo} for a version that allows specifying both success and\n * timeout handlers.\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const timeoutFail = circular.timeoutFail;\n/**\n * Specifies a custom defect to be thrown when a timeout occurs.\n *\n * **Details**\n *\n * This function allows you to handle timeouts as exceptional cases by\n * generating a custom defect when an effect exceeds the specified duration. You\n * provide:\n * - A `duration`: The time limit for the effect.\n * - An `onTimeout` function: A lazy evaluation function that generates the\n *   custom defect (typically created using `Cause.die`).\n *\n * If the effect completes within the time limit, its result is returned\n * normally. Otherwise, the custom defect is triggered, and the effect fails\n * with that defect.\n *\n * **When to Use**\n *\n * This is especially useful when you need to treat timeouts as critical\n * failures in your application and wish to include meaningful information in\n * the defect.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Cause } from \"effect\"\n *\n * const task = Effect.gen(function* () {\n *   console.log(\"Start processing...\")\n *   yield* Effect.sleep(\"2 seconds\") // Simulates a delay in processing\n *   console.log(\"Processing complete.\")\n *   return \"Result\"\n * })\n *\n * const program = task.pipe(\n *   Effect.timeoutFailCause({\n *     duration: \"1 second\",\n *     onTimeout: () => Cause.die(\"Timed out!\") // Custom defect for timeout\n *   })\n * )\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // Start processing...\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Die', defect: 'Timed out!' }\n * // }\n * ```\n *\n * @see {@link timeout} for a version that raises a `TimeoutException`.\n * @see {@link timeoutFail} for a version that raises a custom error.\n * @see {@link timeoutTo} for a version that allows specifying both success and\n * timeout handlers.\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const timeoutFailCause = circular.timeoutFailCause;\n/**\n * Provides custom behavior for successful and timed-out operations.\n *\n * **Details**\n *\n * This function allows you to define distinct outcomes for an effect depending\n * on whether it completes within a specified time frame or exceeds the timeout\n * duration. You can provide:\n * - `onSuccess`: A handler for processing the result of the effect if it\n *   completes successfully within the time limit.\n * - `onTimeout`: A handler for generating a result when the effect times out.\n * - `duration`: The maximum allowed time for the effect to complete.\n *\n * **When to Use**\n *\n * Unlike {@link timeout}, which raises an exception for timeouts, this function\n * gives you full control over the behavior for both success and timeout\n * scenarios. It is particularly useful when you want to encapsulate timeouts\n * and successes into a specific data structure, like an `Either` type, to\n * represent these outcomes in a meaningful way.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Either } from \"effect\"\n *\n * const task = Effect.gen(function* () {\n *   console.log(\"Start processing...\")\n *   yield* Effect.sleep(\"2 seconds\") // Simulates a delay in processing\n *   console.log(\"Processing complete.\")\n *   return \"Result\"\n * })\n *\n * const program = task.pipe(\n *   Effect.timeoutTo({\n *     duration: \"1 second\",\n *     onSuccess: (result): Either.Either<string, string> =>\n *       Either.right(result),\n *     onTimeout: (): Either.Either<string, string> =>\n *       Either.left(\"Timed out!\")\n *   })\n * )\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // Start processing...\n * // {\n * //   _id: \"Either\",\n * //   _tag: \"Left\",\n * //   left: \"Timed out!\"\n * // }\n * ```\n *\n * @see {@link timeout} for a version that raises a `TimeoutException`.\n * @see {@link timeoutFail} for a version that raises a custom error.\n * @see {@link timeoutFailCause} for a version that raises a custom defect.\n *\n * @since 2.0.0\n * @category Delays & Timeouts\n */\nexport const timeoutTo = circular.timeoutTo;\n/**\n * Allows working with the default configuration provider.\n *\n * **Details**\n *\n * This function retrieves the default configuration provider and passes it to\n * the provided function, which can use it to perform computations or retrieve\n * configuration values. The function can return an effect that leverages the\n * configuration provider for its operations.\n *\n * @since 2.0.0\n * @category Config\n */\nexport const configProviderWith = defaultServices.configProviderWith;\n/**\n * Executes an effect using a specific configuration provider.\n *\n * **Details**\n *\n * This function lets you run an effect with a specified configuration provider.\n * The custom provider will override the default configuration provider for the\n * duration of the effect's execution.\n *\n * **When to Use**\n *\n * This is particularly useful when you need to use a different set of\n * configuration values or sources for specific parts of your application.\n *\n * **Example**\n *\n * ```ts\n * import { Config, ConfigProvider, Effect } from \"effect\"\n *\n * const customProvider: ConfigProvider.ConfigProvider = ConfigProvider.fromMap(\n *   new Map([[\"custom-key\", \"custom-value\"]])\n * )\n *\n * const program = Effect.withConfigProvider(customProvider)(\n *   Effect.gen(function*() {\n *     const value = yield* Config.string(\"custom-key\")\n *     console.log(`Config value: ${value}`)\n *   })\n * )\n *\n * Effect.runPromise(program)\n * // Output:\n * // Config value: custom-value\n * ```\n *\n * @since 2.0.0\n * @category Config\n */\nexport const withConfigProvider = defaultServices.withConfigProvider;\n/**\n * Sets a configuration provider within a scope.\n *\n * **Details**\n *\n * This function sets the configuration provider to a specified value and\n * ensures that it is restored to its original value when the scope is closed.\n *\n * @since 2.0.0\n * @category Config\n */\nexport const withConfigProviderScoped = fiberRuntime.withConfigProviderScoped;\n/**\n * Accesses the full context of the effect.\n *\n * **Details**\n *\n * This function provides the ability to access the entire context required by\n * an effect. The context is a container that holds dependencies or environment\n * values needed by an effect to run. By using this function, you can retrieve\n * and work with the context directly within an effect.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const context = core.context;\n/**\n * Accesses the context and applies a transformation function.\n *\n * **Details**\n *\n * This function retrieves the context of the effect and applies a pure\n * transformation function to it. The result of the transformation is then\n * returned within the effect.\n *\n * @see {@link contextWithEffect} for a version that allows effectful transformations.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const contextWith = effect.contextWith;\n/**\n * Accesses the context and performs an effectful transformation.\n *\n * **Details**\n *\n * This function retrieves the context and allows you to transform it\n * effectually using another effect. It is useful when the transformation\n * involves asynchronous or effectful operations.\n *\n * @see {@link contextWith} for a version that allows pure transformations.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const contextWithEffect = core.contextWithEffect;\n/**\n * Provides part of the required context while leaving the rest unchanged.\n *\n * **Details**\n *\n * This function allows you to transform the context required by an effect,\n * providing part of the context and leaving the rest to be fulfilled later.\n *\n * **Example**\n *\n * ```ts\n * import { Context, Effect } from \"effect\"\n *\n * class Service1 extends Context.Tag(\"Service1\")<Service1, { readonly port: number }>() {}\n * class Service2 extends Context.Tag(\"Service2\")<Service2, { readonly connection: string }>() {}\n *\n * const program = Effect.gen(function*() {\n *   const service1 = yield* Service1\n *   console.log(service1.port)\n *   const service2 = yield* Service2\n *   console.log(service2.connection)\n *   return \"some result\"\n * })\n *\n * //      ┌─── Effect<string, never, Service2>\n * //      ▼\n * const programWithService1 = Effect.mapInputContext(\n *   program,\n *   (ctx: Context.Context<Service2>) => Context.add(ctx, Service1, { port: 3000 })\n * )\n *\n * const runnable = programWithService1.pipe(\n *   Effect.provideService(Service2, { connection: \"localhost\" }),\n *   Effect.provideService(Service1, { port: 3001 })\n * )\n *\n * Effect.runPromise(runnable)\n * // Output:\n * // 3000\n * // localhost\n * ```\n *\n * @since 2.0.0\n * @category Context\n */\nexport const mapInputContext = core.mapInputContext;\n/**\n * Provides necessary dependencies to an effect, removing its environmental\n * requirements.\n *\n * **Details**\n *\n * This function allows you to supply the required environment for an effect.\n * The environment can be provided in the form of one or more `Layer`s, a\n * `Context`, a `Runtime`, or a `ManagedRuntime`. Once the environment is\n * provided, the effect can run without requiring external dependencies.\n *\n * You can compose layers to create a modular and reusable way of setting up the\n * environment for effects. For example, layers can be used to configure\n * databases, logging services, or any other required dependencies.\n *\n * **Example**\n *\n * ```ts\n * import { Context, Effect, Layer } from \"effect\"\n *\n * class Database extends Context.Tag(\"Database\")<\n *   Database,\n *   { readonly query: (sql: string) => Effect.Effect<Array<unknown>> }\n * >() {}\n *\n * const DatabaseLive = Layer.succeed(\n *   Database,\n *   {\n *     // Simulate a database query\n *     query: (sql: string) => Effect.log(`Executing query: ${sql}`).pipe(Effect.as([]))\n *   }\n * )\n *\n * //      ┌─── Effect<unknown[], never, Database>\n * //      ▼\n * const program = Effect.gen(function*() {\n *   const database = yield* Database\n *   const result = yield* database.query(\"SELECT * FROM users\")\n *   return result\n * })\n *\n * //      ┌─── Effect<unknown[], never, never>\n * //      ▼\n * const runnable = Effect.provide(program, DatabaseLive)\n *\n * Effect.runPromise(runnable).then(console.log)\n * // Output:\n * // timestamp=... level=INFO fiber=#0 message=\"Executing query: SELECT * FROM users\"\n * // []\n * ```\n *\n * @see {@link provideService} for providing a service to an effect.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const provide = layer.effect_provide;\n/**\n * Provides an implementation for a service in the context of an effect.\n *\n * **Details**\n *\n * This function allows you to supply a specific implementation for a service\n * required by an effect. Services are typically defined using `Context.Tag`,\n * which acts as a unique identifier for the service. By using this function,\n * you link the service to its concrete implementation, enabling the effect to\n * execute successfully without additional requirements.\n *\n * For example, you can use this function to provide a random number generator,\n * a logger, or any other service your effect depends on. Once the service is\n * provided, all parts of the effect that rely on the service will automatically\n * use the implementation you supplied.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Context } from \"effect\"\n *\n * // Declaring a tag for a service that generates random numbers\n * class Random extends Context.Tag(\"MyRandomService\")<\n *   Random,\n *   { readonly next: Effect.Effect<number> }\n * >() {}\n *\n * // Using the service\n * const program = Effect.gen(function* () {\n *   const random = yield* Random\n *   const randomNumber = yield* random.next\n *   console.log(`random number: ${randomNumber}`)\n * })\n *\n * // Providing the implementation\n * //\n * //      ┌─── Effect<void, never, never>\n * //      ▼\n * const runnable = Effect.provideService(program, Random, {\n *   next: Effect.sync(() => Math.random())\n * })\n *\n * // Run successfully\n * Effect.runPromise(runnable)\n * // Example Output:\n * // random number: 0.8241872233134417\n * ```\n *\n * @see {@link provide} for providing multiple layers to an effect.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const provideService = effect.provideService;\n/**\n * Dynamically provides an implementation for a service using an effect.\n *\n * **Details**\n *\n * This function allows you to provide an implementation for a service\n * dynamically by using another effect. The provided effect is executed to\n * produce the service implementation, which is then made available to the\n * consuming effect. This is particularly useful when the service implementation\n * itself requires asynchronous or resource-intensive initialization.\n *\n * For example, you can use this function to lazily initialize a database\n * connection or fetch configuration values from an external source before\n * making the service available to your effect.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const provideServiceEffect = effect.provideServiceEffect;\n/**\n * Creates a function that uses a service from the context to produce a value.\n *\n * @see {@link serviceFunctionEffect} for a version that returns an effect.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const serviceFunction = effect.serviceFunction;\n/**\n * Creates a function that uses a service from the context to produce an effect.\n *\n * @see {@link serviceFunction} for a version that returns a value.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const serviceFunctionEffect = effect.serviceFunctionEffect;\n/**\n * @since 2.0.0\n * @category Context\n */\nexport const serviceFunctions = effect.serviceFunctions;\n/**\n * @since 2.0.0\n * @category Context\n */\nexport const serviceConstants = effect.serviceConstants;\n/**\n * @since 2.0.0\n * @category Context\n */\nexport const serviceMembers = effect.serviceMembers;\n/**\n * Retrieves an optional service from the context as an `Option`.\n *\n * **Details**\n *\n * This function retrieves a service from the context and wraps it in an\n * `Option`. If the service is available, it returns a `Some` containing the\n * service. If the service is not found, it returns a `None`. This approach is\n * useful when you want to handle the absence of a service gracefully without\n * causing an error.\n *\n * **When to Use**\n *\n * Use this function when:\n * - You need to access a service that may or may not be present in the context.\n * - You want to handle the absence of a service using the `Option` type instead\n *   of throwing an error.\n *\n * @see {@link serviceOptional} for a version that throws an error if the service is missing.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const serviceOption = effect.serviceOption;\n/**\n * Retrieves a service from the context, throwing an error if it is missing.\n *\n * **Details**\n *\n * This function retrieves a required service from the context. If the service\n * is available, it returns the service. If the service is missing, it throws a\n * `NoSuchElementException`, which can be handled using Effect's error-handling\n * mechanisms. This is useful for services that are critical to the execution of\n * your effect.\n *\n * @see {@link serviceOption} for a version that returns an `Option` instead of throwing an error.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const serviceOptional = effect.serviceOptional;\n/**\n * Updates a service in the context with a new implementation.\n *\n * **Details**\n *\n * This function modifies the existing implementation of a service in the\n * context. It retrieves the current service, applies the provided\n * transformation function `f`, and replaces the old service with the\n * transformed one.\n *\n * **When to Use**\n *\n * This is useful for adapting or extending a service's behavior during the\n * execution of an effect.\n *\n * @since 2.0.0\n * @category Context\n */\nexport const updateService = effect.updateService;\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Effect` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Effect, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Effect.Do,\n *   Effect.bind(\"x\", () => Effect.succeed(2)),\n *   Effect.bind(\"y\", () => Effect.succeed(3)),\n *   Effect.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(Effect.runSync(result), { x: 2, y: 3, sum: 5 })\n * ```\n *\n * @see {@link bind}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const Do = effect.Do;\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Effect` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Effect, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Effect.Do,\n *   Effect.bind(\"x\", () => Effect.succeed(2)),\n *   Effect.bind(\"y\", () => Effect.succeed(3)),\n *   Effect.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(Effect.runSync(result), { x: 2, y: 3, sum: 5 })\n * ```\n *\n * @see {@link Do}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const bind = effect.bind;\n/**\n * `bindAll` combines `all` with `bind`. It is useful\n * when you want to concurrently run multiple effects and then combine their\n * results in a Do notation pipeline.\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Effect, Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Effect.Do,\n *   Effect.bind(\"x\", () => Effect.succeed(2)),\n *   Effect.bindAll(({ x }) => ({\n *     a: Effect.succeed(x),\n *     b: Effect.fail(\"oops\"),\n *   }), { concurrency: 2, mode: \"either\" })\n * )\n * assert.deepStrictEqual(Effect.runSync(result), { x: 2, a: Either.right(2), b: Either.left(\"oops\") })\n * ```\n *\n * @category Do notation\n * @since 3.7.0\n */\nexport const bindAll = circular.bindAll;\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Effect` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Effect, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Effect.Do,\n *   Effect.bind(\"x\", () => Effect.succeed(2)),\n *   Effect.bind(\"y\", () => Effect.succeed(3)),\n *   Effect.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(Effect.runSync(result), { x: 2, y: 3, sum: 5 })\n * ```\n *\n * @see {@link Do}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const bindTo = effect.bindTo;\nconst let_ = effect.let_;\nexport {\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Effect` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * **Example**\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Effect, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Effect.Do,\n *   Effect.bind(\"x\", () => Effect.succeed(2)),\n *   Effect.bind(\"y\", () => Effect.succeed(3)),\n *   Effect.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(Effect.runSync(result), { x: 2, y: 3, sum: 5 })\n *\n * ```\n *\n * @see {@link Do}\n * @see {@link bind}\n * @see {@link bindTo}\n *\n * @category Do notation\n * @since 2.0.0\n */\nlet_ as let };\n/**\n * Encapsulates the result of an effect in an `Option`.\n *\n * **Details**\n *\n * This function wraps the outcome of an effect in an `Option` type. If the\n * original effect succeeds, the success value is wrapped in `Option.some`. If\n * the effect fails, the failure is converted to `Option.none`.\n *\n * This is particularly useful for scenarios where you want to represent the\n * absence of a value explicitly, without causing the resulting effect to fail.\n * The resulting effect has an error type of `never`, meaning it cannot fail\n * directly. However, unrecoverable errors, also referred to as defects, are\n * not captured and will still result in failure.\n *\n * **Example** (Using Effect.option to Handle Errors)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const maybe1 = Effect.option(Effect.succeed(1))\n *\n * Effect.runPromiseExit(maybe1).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Success',\n * //   value: { _id: 'Option', _tag: 'Some', value: 1 }\n * // }\n *\n * const maybe2 = Effect.option(Effect.fail(\"Uh oh!\"))\n *\n * Effect.runPromiseExit(maybe2).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Success',\n * //   value: { _id: 'Option', _tag: 'None' }\n * // }\n *\n * const maybe3 = Effect.option(Effect.die(\"Boom!\"))\n *\n * Effect.runPromiseExit(maybe3).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Die', defect: 'Boom!' }\n * // }\n * ```\n *\n * @see {@link either} for a version that uses `Either` instead.\n * @see {@link exit} for a version that encapsulates both recoverable errors and defects in an `Exit`.\n *\n * @since 2.0.0\n * @category Outcome Encapsulation\n */\nexport const option = effect.option;\n/**\n * Encapsulates both success and failure of an `Effect` into an `Either` type.\n *\n * **Details**\n *\n * This function converts an effect that may fail into an effect that always\n * succeeds, wrapping the outcome in an `Either` type. The result will be\n * `Either.Left` if the effect fails, containing the recoverable error, or\n * `Either.Right` if it succeeds, containing the result.\n *\n * Using this function, you can handle recoverable errors explicitly without\n * causing the effect to fail. This is particularly useful in scenarios where\n * you want to chain effects and manage both success and failure in the same\n * logical flow.\n *\n * It's important to note that unrecoverable errors, often referred to as\n * \"defects,\" are still thrown and not captured within the `Either` type. Only\n * failures that are explicitly represented as recoverable errors in the effect\n * are encapsulated.\n *\n * The resulting effect cannot fail directly because all recoverable failures\n * are represented inside the `Either` type.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Either, Random } from \"effect\"\n *\n * class HttpError {\n *   readonly _tag = \"HttpError\"\n * }\n *\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n * }\n *\n * //      ┌─── Effect<string, HttpError | ValidationError, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const n1 = yield* Random.next\n *   const n2 = yield* Random.next\n *   if (n1 < 0.5) {\n *     yield* Effect.fail(new HttpError())\n *   }\n *   if (n2 < 0.5) {\n *     yield* Effect.fail(new ValidationError())\n *   }\n *   return \"some result\"\n * })\n *\n * //      ┌─── Effect<string, never, never>\n * //      ▼\n * const recovered = Effect.gen(function* () {\n *   //      ┌─── Either<string, HttpError | ValidationError>\n *   //      ▼\n *   const failureOrSuccess = yield* Effect.either(program)\n *   return Either.match(failureOrSuccess, {\n *     onLeft: (error) => `Recovering from ${error._tag}`,\n *     onRight: (value) => value // Do nothing in case of success\n *   })\n * })\n * ```\n *\n * @see {@link option} for a version that uses `Option` instead.\n * @see {@link exit} for a version that encapsulates both recoverable errors and defects in an `Exit`.\n *\n * @since 2.0.0\n * @category Outcome Encapsulation\n */\nexport const either = core.either;\n/**\n * Encapsulates both success and failure of an `Effect` using the `Exit` type.\n *\n * **Details**\n *\n * This function converts an effect into one that always succeeds, wrapping its\n * outcome in the `Exit` type. The `Exit` type provides explicit handling of\n * both success (`Exit.Success`) and failure (`Exit.Failure`) cases, including\n * defects (unrecoverable errors).\n *\n * Unlike {@link either} or {@link option}, this function also encapsulates\n * defects, which are typically unrecoverable and would otherwise terminate the\n * effect. With the `Exit` type, defects are represented in `Exit.Failure`,\n * allowing for detailed introspection and structured error handling.\n *\n * This makes the resulting effect robust and incapable of direct failure (its\n * error type is `never`). It is particularly useful for workflows where all\n * outcomes, including unexpected defects, must be managed and analyzed.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Cause, Console, Exit } from \"effect\"\n *\n * // Simulating a runtime error\n * const task = Effect.dieMessage(\"Boom!\")\n *\n * const program = Effect.gen(function* () {\n *   const exit = yield* Effect.exit(task)\n *   if (Exit.isFailure(exit)) {\n *     const cause = exit.cause\n *     if (\n *       Cause.isDieType(cause) &&\n *       Cause.isRuntimeException(cause.defect)\n *     ) {\n *       yield* Console.log(\n *         `RuntimeException defect caught: ${cause.defect.message}`\n *       )\n *     } else {\n *       yield* Console.log(\"Unknown failure caught.\")\n *     }\n *   }\n * })\n *\n * // We get an Exit.Success because we caught all failures\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // RuntimeException defect caught: Boom!\n * // {\n * //   _id: \"Exit\",\n * //   _tag: \"Success\",\n * //   value: undefined\n * // }\n * ```\n *\n * @see {@link option} for a version that uses `Option` instead.\n * @see {@link either} for a version that uses `Either` instead.\n *\n * @since 2.0.0\n * @category Outcome Encapsulation\n */\nexport const exit = core.exit;\n/**\n * Converts an `Effect` into an operation that completes a `Deferred` with its result.\n *\n * **Details**\n *\n * The `intoDeferred` function takes an effect and a `Deferred` and ensures that the `Deferred`\n * is completed based on the outcome of the effect. If the effect succeeds, the `Deferred` is\n * completed with the success value. If the effect fails, the `Deferred` is completed with the\n * failure. Additionally, if the effect is interrupted, the `Deferred` will also be interrupted.\n *\n * **Example**\n *\n * ```ts\n * import { Deferred, Effect } from \"effect\"\n *\n * // Define an effect that succeeds\n * const successEffect = Effect.succeed(42)\n *\n * const program = Effect.gen(function*() {\n *   // Create a deferred\n *   const deferred = yield* Deferred.make<number, string>()\n *\n *   // Complete the deferred using the successEffect\n *   const isCompleted = yield* Effect.intoDeferred(successEffect, deferred)\n *\n *   // Access the value of the deferred\n *   const value = yield* Deferred.await(deferred)\n *   console.log(value)\n *\n *   return isCompleted\n * })\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // 42\n * // true\n * ```\n *\n * @since 2.0.0\n * @category Synchronization Utilities\n */\nexport const intoDeferred = core.intoDeferred;\nconst if_ = core.if_;\nexport {\n/**\n * Executes one of two effects based on a condition evaluated by an effectful predicate.\n *\n * Use `if` to run one of two effects depending on whether the predicate effect\n * evaluates to `true` or `false`. If the predicate is `true`, the `onTrue` effect\n * is executed. If it is `false`, the `onFalse` effect is executed instead.\n *\n * **Example** (Simulating a Coin Flip)\n *\n * ```ts\n * import { Effect, Random, Console } from \"effect\"\n *\n * const flipTheCoin = Effect.if(Random.nextBoolean, {\n *   onTrue: () => Console.log(\"Head\"), // Runs if the predicate is true\n *   onFalse: () => Console.log(\"Tail\") // Runs if the predicate is false\n * })\n *\n * Effect.runFork(flipTheCoin)\n * ```\n *\n * @since 2.0.0\n * @category Conditional Operators\n */\nif_ as if };\n/**\n * Filters an effect, dying with a custom defect if the predicate fails.\n *\n * **Details**\n *\n * This function applies a predicate to the result of an effect. If the\n * predicate evaluates to `false`, the effect dies with a custom defect\n * generated by the `orDieWith` function.\n *\n * **When to Use**\n *\n * This is useful for enforcing constraints on values and treating violations as\n * fatal program errors.\n *\n * @since 2.0.0\n * @category Filtering\n */\nexport const filterOrDie = effect.filterOrDie;\n/**\n * Filters an effect, dying with a custom message if the predicate fails.\n *\n * **Details**\n *\n * This function works like {@link filterOrDie} but allows you to specify a\n * custom error message to describe the reason for the failure. The message is\n * included in the defect when the predicate evaluates to `false`.\n *\n * @since 2.0.0\n * @category Filtering\n */\nexport const filterOrDieMessage = effect.filterOrDieMessage;\n/**\n * Filters an effect, providing an alternative effect if the predicate fails.\n *\n * **Details**\n *\n * This function applies a predicate to the result of an effect. If the\n * predicate evaluates to `false`, it executes the `orElse` effect instead. The\n * `orElse` effect can produce an alternative value or perform additional\n * computations.\n *\n * @since 2.0.0\n * @category Filtering\n */\nexport const filterOrElse = effect.filterOrElse;\n/**\n * Filters an effect, failing with a custom error if the predicate fails.\n *\n * **Details**\n *\n * This function applies a predicate to the result of an effect. If the\n * predicate evaluates to `false`, the effect fails with a custom error\n * generated by the `orFailWith` function.\n *\n * **When to Use**\n *\n * This is useful for enforcing constraints and treating violations as\n * recoverable errors.\n *\n * **Providing a Guard**\n *\n * In addition to the filtering capabilities discussed earlier, you have the\n * option to further refine and narrow down the type of the success channel by\n * providing a [user-defined type\n * guard](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates).\n * Let's explore this concept through an example:\n *\n * **Example**\n *\n * ```ts\n * import { Effect, pipe } from \"effect\"\n *\n * // Define a user interface\n * interface User {\n *   readonly name: string\n * }\n *\n * // Simulate an asynchronous authentication function\n * declare const auth: () => Promise<User | null>\n *\n * const program = pipe(\n *   Effect.promise(() => auth()),\n *   // Use filterOrFail with a custom type guard to ensure user is not null\n *   Effect.filterOrFail(\n *     (user): user is User => user !== null, // Type guard\n *     () => new Error(\"Unauthorized\")\n *   ),\n *   // 'user' now has the type `User` (not `User | null`)\n *   Effect.andThen((user) => user.name)\n * )\n * ```\n *\n * @since 2.0.0\n * @category Filtering\n */\nexport const filterOrFail = effect.filterOrFail;\n/**\n * Filters an effect with an effectful predicate, falling back to an alternative\n * effect if the predicate fails.\n *\n * **Details**\n *\n * This function applies a predicate to the result of an effect. If the\n * predicate evaluates to `false`, the effect falls back to the `orElse`\n * effect. The `orElse` effect can produce an alternative value or perform\n * additional computations.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, pipe } from \"effect\"\n *\n * // Define a user interface\n * interface User {\n *   readonly name: string\n * }\n *\n * // Simulate an asynchronous authentication function\n * declare const auth: () => Promise<User | null>\n *\n * const program = pipe(\n *   Effect.promise(() => auth()),\n *   // Use filterEffectOrElse with an effectful predicate\n *   Effect.filterEffectOrElse({\n *     predicate: (user) => Effect.succeed(user !== null),\n *     orElse: (user) => Effect.fail(new Error(`Unauthorized user: ${user}`))\n *   }),\n * )\n * ```\n *\n * @since 3.13.0\n * @category Filtering\n */\nexport const filterEffectOrElse = core.filterEffectOrElse;\n/**\n * Filters an effect with an effectful predicate, failing with a custom error if the predicate fails.\n *\n * **Details**\n *\n * This function applies a predicate to the result of an effect. If the\n * predicate evaluates to `false`, the effect fails with a custom error\n * generated by the `orFailWith` function.\n *\n * **When to Use**\n *\n * This is useful for enforcing constraints and treating violations as\n * recoverable errors.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, pipe } from \"effect\"\n *\n * // Define a user interface\n * interface User {\n *   readonly name: string\n * }\n *\n * // Simulate an asynchronous authentication function\n * declare const auth: () => Promise<User | null>\n *\n * const program = pipe(\n *   Effect.promise(() => auth()),\n *   // Use filterEffectOrFail with an effectful predicate\n *   Effect.filterEffectOrFail({\n *     predicate: (user) => Effect.succeed(user !== null),\n *     orFailWith: () => new Error(\"Unauthorized\")\n *   }),\n * )\n * ```\n *\n * @since 3.13.0\n * @category Filtering\n */\nexport const filterEffectOrFail = core.filterEffectOrFail;\n/**\n * Executes an effect only if the condition is `false`.\n *\n * @see {@link unlessEffect} for a version that allows the condition to be an effect.\n * @see {@link when} for a version that executes the effect when the condition is `true`.\n *\n * @since 2.0.0\n * @category Conditional Operators\n */\nexport const unless = effect.unless;\n/**\n * Conditionally execute an effect based on the result of another effect.\n *\n * @see {@link unless} for a version that allows the condition to be a boolean.\n * @see {@link whenEffect} for a version that executes the effect when the condition is `true`.\n *\n * @since 2.0.0\n * @category Conditional Operators\n */\nexport const unlessEffect = effect.unlessEffect;\n/**\n * Conditionally executes an effect based on a boolean condition.\n *\n * **Details**\n *\n * This function allows you to run an effect only if a given condition evaluates\n * to `true`. If the condition is `true`, the effect is executed, and its result\n * is wrapped in an `Option.some`. If the condition is `false`, the effect is\n * skipped, and the result is `Option.none`.\n *\n * **When to Use**\n *\n * This function is useful for scenarios where you need to dynamically decide\n * whether to execute an effect based on runtime logic, while also representing\n * the skipped case explicitly.\n *\n * **Example** (Conditional Effect Execution)\n *\n * ```ts\n * import { Effect, Option } from \"effect\"\n *\n * const validateWeightOption = (\n *   weight: number\n * ): Effect.Effect<Option.Option<number>> =>\n *   // Conditionally execute the effect if the weight is non-negative\n *   Effect.succeed(weight).pipe(Effect.when(() => weight >= 0))\n *\n * // Run with a valid weight\n * Effect.runPromise(validateWeightOption(100)).then(console.log)\n * // Output:\n * // {\n * //   _id: \"Option\",\n * //   _tag: \"Some\",\n * //   value: 100\n * // }\n *\n * // Run with an invalid weight\n * Effect.runPromise(validateWeightOption(-5)).then(console.log)\n * // Output:\n * // {\n * //   _id: \"Option\",\n * //   _tag: \"None\"\n * // }\n * ```\n *\n * @see {@link whenEffect} for a version that allows the condition to be an effect.\n * @see {@link unless} for a version that executes the effect when the condition is `false`.\n *\n * @since 2.0.0\n * @category Conditional Operators\n */\nexport const when = effect.when;\n/**\n * Conditionally executes an effect based on the result of another effect.\n *\n * **Details**\n *\n * This function allows you to run an effect only if a conditional effect\n * evaluating to a boolean resolves to `true`. If the conditional effect\n * evaluates to `true`, the specified effect is executed, and its result is\n * wrapped in `Option.some`. If the conditional effect evaluates to `false`, the\n * effect is skipped, and the result is `Option.none`.\n *\n * **When to Use**\n *\n * This function is particularly useful when the decision to execute an effect\n * depends on the result of another effect, such as a random value, a\n * user-provided input, or a network request result.\n *\n * **Example** (Using an Effect as a Condition)\n *\n * ```ts\n * import { Effect, Random } from \"effect\"\n *\n * const randomIntOption = Random.nextInt.pipe(\n *   Effect.whenEffect(Random.nextBoolean)\n * )\n *\n * console.log(Effect.runSync(randomIntOption))\n * // Example Output:\n * // { _id: 'Option', _tag: 'Some', value: 8609104974198840 }\n * ```\n *\n * @see {@link when} for a version that allows the condition to be a boolean.\n * @see {@link unlessEffect} for a version that executes the effect when the condition is `false`.\n *\n * @since 2.0.0\n * @category Conditional Operators\n */\nexport const whenEffect = core.whenEffect;\n/**\n * Executes an effect conditionally based on the value of a `FiberRef` that\n * satisfies a predicate.\n *\n * **Details**\n *\n * This function enables you to execute an effect only when the value of a\n * specified `FiberRef` meets a certain condition defined by a predicate. If the\n * value satisfies the predicate, the effect is executed, and the result is\n * wrapped in an `Option.some`. If the predicate is not satisfied, the effect is\n * skipped, and the result is `Option.none`. In both cases, the current value of\n * the `FiberRef` is included in the result.\n *\n * @since 2.0.0\n * @category Conditional Operators\n */\nexport const whenFiberRef = effect.whenFiberRef;\n/**\n * Executes an effect conditionally based on the value of a `Ref` that satisfies\n * a predicate.\n *\n * **Details**\n *\n * This function allows you to execute an effect only when the value of a\n * specified `Ref` meets a condition defined by a predicate. If the value\n * satisfies the predicate, the effect is executed, and the result is wrapped in\n * an `Option.some`. If the predicate is not satisfied, the effect is skipped,\n * and the result is `Option.none`. In both cases, the current value of the\n * `Ref` is included in the result.\n *\n * @since 2.0.0\n * @category Conditional Operators\n */\nexport const whenRef = effect.whenRef;\n/**\n * Chains effects to produce new `Effect` instances, useful for combining\n * operations that depend on previous results.\n *\n * **Syntax**\n *\n * ```ts skip-type-checking\n * const flatMappedEffect = pipe(myEffect, Effect.flatMap(transformation))\n * // or\n * const flatMappedEffect = Effect.flatMap(myEffect, transformation)\n * // or\n * const flatMappedEffect = myEffect.pipe(Effect.flatMap(transformation))\n * ```\n *\n * **Details**\n *\n * `flatMap` lets you sequence effects so that the result of one effect can be\n * used in the next step. It is similar to `flatMap` used with arrays but works\n * specifically with `Effect` instances, allowing you to avoid deeply nested\n * effect structures.\n *\n * Since effects are immutable, `flatMap` always returns a new effect instead of\n * changing the original one.\n *\n * **When to Use**\n *\n * Use `flatMap` when you need to chain multiple effects, ensuring that each\n * step produces a new `Effect` while flattening any nested effects that may\n * occur.\n *\n * **Example**\n *\n * ```ts\n * import { pipe, Effect } from \"effect\"\n *\n * // Function to apply a discount safely to a transaction amount\n * const applyDiscount = (\n *   total: number,\n *   discountRate: number\n * ): Effect.Effect<number, Error> =>\n *   discountRate === 0\n *     ? Effect.fail(new Error(\"Discount rate cannot be zero\"))\n *     : Effect.succeed(total - (total * discountRate) / 100)\n *\n * // Simulated asynchronous task to fetch a transaction amount from database\n * const fetchTransactionAmount = Effect.promise(() => Promise.resolve(100))\n *\n * // Chaining the fetch and discount application using `flatMap`\n * const finalAmount = pipe(\n *   fetchTransactionAmount,\n *   Effect.flatMap((amount) => applyDiscount(amount, 5))\n * )\n *\n * Effect.runPromise(finalAmount).then(console.log)\n * // Output: 95\n * ```\n *\n * @see {@link tap} for a version that ignores the result of the effect.\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const flatMap = core.flatMap;\n/**\n * Chains two actions, where the second action can depend on the result of the\n * first.\n *\n * **Syntax**\n *\n * ```ts skip-type-checking\n * const transformedEffect = pipe(myEffect, Effect.andThen(anotherEffect))\n * // or\n * const transformedEffect = Effect.andThen(myEffect, anotherEffect)\n * // or\n * const transformedEffect = myEffect.pipe(Effect.andThen(anotherEffect))\n * ```\n *\n * **When to Use**\n *\n * Use `andThen` when you need to run multiple actions in sequence, with the\n * second action depending on the result of the first. This is useful for\n * combining effects or handling computations that must happen in order.\n *\n * **Details**\n *\n * The second action can be:\n *\n * - A constant value (similar to {@link as})\n * - A function returning a value (similar to {@link map})\n * - A `Promise`\n * - A function returning a `Promise`\n * - An `Effect`\n * - A function returning an `Effect` (similar to {@link flatMap})\n *\n * **Note:** `andThen` works well with both `Option` and `Either` types,\n * treating them as effects.\n *\n * **Example** (Applying a Discount Based on Fetched Amount)\n *\n * ```ts\n * import { pipe, Effect } from \"effect\"\n *\n * // Function to apply a discount safely to a transaction amount\n * const applyDiscount = (\n *   total: number,\n *   discountRate: number\n * ): Effect.Effect<number, Error> =>\n *   discountRate === 0\n *     ? Effect.fail(new Error(\"Discount rate cannot be zero\"))\n *     : Effect.succeed(total - (total * discountRate) / 100)\n *\n * // Simulated asynchronous task to fetch a transaction amount from database\n * const fetchTransactionAmount = Effect.promise(() => Promise.resolve(100))\n *\n * // Using Effect.map and Effect.flatMap\n * const result1 = pipe(\n *   fetchTransactionAmount,\n *   Effect.map((amount) => amount * 2),\n *   Effect.flatMap((amount) => applyDiscount(amount, 5))\n * )\n *\n * Effect.runPromise(result1).then(console.log)\n * // Output: 190\n *\n * // Using Effect.andThen\n * const result2 = pipe(\n *   fetchTransactionAmount,\n *   Effect.andThen((amount) => amount * 2),\n *   Effect.andThen((amount) => applyDiscount(amount, 5))\n * )\n *\n * Effect.runPromise(result2).then(console.log)\n * // Output: 190\n * ```\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const andThen = core.andThen;\n/**\n * @since 2.0.0\n * @category Sequencing\n */\nexport const flatten = core.flatten;\n/**\n * Races two effects and returns the result of the first successful one.\n *\n * **Details**\n *\n * This function takes two effects and runs them concurrently. The first effect\n * that successfully completes will determine the result of the race, and the\n * other effect will be interrupted.\n *\n * If neither effect succeeds, the function will fail with a `Cause`\n * containing all the errors.\n *\n * **When to Use**\n *\n * This is useful when you want to run two effects concurrently, but only care\n * about the first one to succeed. It is commonly used in cases like timeouts,\n * retries, or when you want to optimize for the faster response without\n * worrying about the other effect.\n *\n * **Handling Success or Failure with Either**\n *\n * If you want to handle the result of whichever task completes first, whether\n * it succeeds or fails, you can use the `Effect.either` function. This function\n * wraps the result in an `Either` type, allowing you to see if the result\n * was a success (`Right`) or a failure (`Left`).\n *\n * **Example** (Both Tasks Succeed)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.succeed(\"task1\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task1 interrupted\"))\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task2 interrupted\"))\n * )\n *\n * const program = Effect.race(task1, task2)\n *\n * Effect.runFork(program)\n * // Output:\n * // task1 done\n * // task2 interrupted\n * ```\n *\n * **Example** (One Task Fails, One Succeeds)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.fail(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task1 interrupted\"))\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task2 interrupted\"))\n * )\n *\n * const program = Effect.race(task1, task2)\n *\n * Effect.runFork(program)\n * // Output:\n * // task2 done\n * ```\n *\n * **Example** (Both Tasks Fail)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.fail(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task1 interrupted\"))\n * )\n * const task2 = Effect.fail(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task2 interrupted\"))\n * )\n *\n * const program = Effect.race(task1, task2)\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Parallel',\n * //     left: { _id: 'Cause', _tag: 'Fail', failure: 'task1' },\n * //     right: { _id: 'Cause', _tag: 'Fail', failure: 'task2' }\n * //   }\n * // }\n * ```\n *\n * **Example** (Handling Success or Failure with Either)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.fail(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task1 interrupted\"))\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task2 interrupted\"))\n * )\n *\n * // Run both tasks concurrently, wrapping the result\n * // in Either to capture success or failure\n * const program = Effect.race(Effect.either(task1), Effect.either(task2))\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // task2 interrupted\n * // { _id: 'Either', _tag: 'Left', left: 'task1' }\n * ```\n *\n * @see {@link raceAll} for a version that handles multiple effects.\n * @see {@link raceFirst} for a version that returns the result of the first effect to complete.\n *\n * @since 2.0.0\n * @category Racing\n */\nexport const race = fiberRuntime.race;\n/**\n * Races multiple effects and returns the first successful result.\n *\n * **Details**\n *\n * This function runs multiple effects concurrently and returns the result of\n * the first one to succeed. If one effect succeeds, the others will be\n * interrupted.\n *\n * If none of the effects succeed, the function will fail with the last error\n * encountered.\n *\n * **When to Use**\n *\n * This is useful when you want to race multiple effects, but only care about\n * the first one to succeed. It is commonly used in cases like timeouts,\n * retries, or when you want to optimize for the faster response without\n * worrying about the other effects.\n *\n * **Example** (All Tasks Succeed)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.succeed(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task1 interrupted\"))\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task2 interrupted\"))\n * )\n *\n * const task3 = Effect.succeed(\"task3\").pipe(\n *   Effect.delay(\"150 millis\"),\n *   Effect.tap(Console.log(\"task3 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task3 interrupted\"))\n * )\n *\n * const program = Effect.raceAll([task1, task2, task3])\n *\n * Effect.runFork(program)\n * // Output:\n * // task1 done\n * // task2 interrupted\n * // task3 interrupted\n * ```\n *\n * **Example** (One Task Fails, Two Tasks Succeed)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.fail(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task1 interrupted\"))\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task2 interrupted\"))\n * )\n *\n * const task3 = Effect.succeed(\"task3\").pipe(\n *   Effect.delay(\"150 millis\"),\n *   Effect.tap(Console.log(\"task3 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task3 interrupted\"))\n * )\n *\n * const program = Effect.raceAll([task1, task2, task3])\n *\n * Effect.runFork(program)\n * // Output:\n * // task3 done\n * // task2 interrupted\n * ```\n *\n * **Example** (All Tasks Fail)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.fail(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task1 interrupted\"))\n * )\n * const task2 = Effect.fail(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task2 interrupted\"))\n * )\n *\n * const task3 = Effect.fail(\"task3\").pipe(\n *   Effect.delay(\"150 millis\"),\n *   Effect.tap(Console.log(\"task3 done\")),\n *   Effect.onInterrupt(() => Console.log(\"task3 interrupted\"))\n * )\n *\n * const program = Effect.raceAll([task1, task2, task3])\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Fail', failure: 'task2' }\n * // }\n * ```\n *\n * @see {@link race} for a version that handles only two effects.\n *\n * @since 2.0.0\n * @category Racing\n */\nexport const raceAll = fiberRuntime.raceAll;\n/**\n * Races two effects and returns the result of the first one to complete.\n *\n * **Details**\n *\n * This function takes two effects and runs them concurrently, returning the\n * result of the first one that completes, regardless of whether it succeeds or\n * fails.\n *\n * **When to Use**\n *\n * This function is useful when you want to race two operations, and you want to\n * proceed with whichever one finishes first, regardless of whether it succeeds\n * or fails.\n *\n * **Disconnecting Effects**\n *\n * The `Effect.raceFirst` function safely interrupts the “loser” effect once the other completes, but it will not resume until the loser is cleanly terminated.\n *\n * If you want a quicker return, you can disconnect the interrupt signal for both effects. Instead of calling:\n *\n * ```ts skip-type-checking\n * Effect.raceFirst(task1, task2)\n * ```\n *\n * You can use:\n *\n * ```ts skip-type-checking\n * Effect.raceFirst(Effect.disconnect(task1), Effect.disconnect(task2))\n * ```\n *\n * This allows both effects to complete independently while still terminating the losing effect in the background.\n *\n * **Example** (Both Tasks Succeed)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.succeed(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task1 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task2 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n *\n * const program = Effect.raceFirst(task1, task2).pipe(\n *   Effect.tap(Console.log(\"more work...\"))\n * )\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // task1 done\n * // task2 interrupted\n * // more work...\n * // { _id: 'Exit', _tag: 'Success', value: 'task1' }\n * ```\n *\n * **Example** (One Task Fails, One Succeeds)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.fail(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task1 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task2 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n *\n * const program = Effect.raceFirst(task1, task2).pipe(\n *   Effect.tap(Console.log(\"more work...\"))\n * )\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // task2 interrupted\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Fail', failure: 'task1' }\n * // }\n * ```\n *\n * **Example** (Using Effect.disconnect for Quicker Return)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.succeed(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task1 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task2 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n *\n * // Race the two tasks with disconnect to allow quicker return\n * const program = Effect.raceFirst(\n *   Effect.disconnect(task1),\n *   Effect.disconnect(task2)\n * ).pipe(Effect.tap(Console.log(\"more work...\")))\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // task1 done\n * // more work...\n * // { _id: 'Exit', _tag: 'Success', value: 'task1' }\n * // task2 interrupted\n * ```\n *\n * @since 2.0.0\n * @category Racing\n */\nexport const raceFirst = circular.raceFirst;\n/**\n * Races two effects and calls a finisher when the first one completes.\n *\n * **Details**\n *\n * This function runs two effects concurrently and calls a specified “finisher”\n * function once one of the effects completes, regardless of whether it succeeds\n * or fails.\n *\n * The finisher functions for each effect allow you to handle the results of\n * each effect as soon as they complete.\n *\n * The function takes two finisher callbacks, one for each effect, and allows\n * you to specify how to handle the result of the race.\n *\n * **When to Use**\n *\n * This function is useful when you need to react to the completion of either\n * effect without waiting for both to finish. It can be used whenever you want\n * to take action based on the first available result.\n *\n * **Example** (Handling Results of Concurrent Tasks)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Effect.succeed(\"task1\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Console.log(\"task1 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task1 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n * const task2 = Effect.succeed(\"task2\").pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Console.log(\"task2 done\")),\n *   Effect.onInterrupt(() =>\n *     Console.log(\"task2 interrupted\").pipe(Effect.delay(\"100 millis\"))\n *   )\n * )\n *\n * const program = Effect.raceWith(task1, task2, {\n *   onSelfDone: (exit) => Console.log(`task1 exited with ${exit}`),\n *   onOtherDone: (exit) => Console.log(`task2 exited with ${exit}`)\n * })\n *\n * Effect.runFork(program)\n * // Output:\n * // task1 done\n * // task1 exited with {\n * //   \"_id\": \"Exit\",\n * //   \"_tag\": \"Success\",\n * //   \"value\": \"task1\"\n * // }\n * // task2 interrupted\n * ```\n *\n * @since 2.0.0\n * @category Racing\n */\nexport const raceWith = fiberRuntime.raceWith;\n/**\n * Summarizes a effect by computing some value before and after execution, and\n * then combining the values to produce a summary, together with the result of\n * execution.\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const summarized = effect.summarized;\n/**\n * Runs a side effect with the result of an effect without changing the original\n * value.\n *\n * **Details**\n *\n * This function works similarly to `flatMap`, but it ignores the result of the\n * function passed to it. The value from the previous effect remains available\n * for the next part of the chain. Note that if the side effect fails, the\n * entire chain will fail too.\n *\n * **When to Use**\n *\n * Use this function when you want to perform a side effect, like logging or\n * tracking, without modifying the main value. This is useful when you need to\n * observe or record an action but want the original value to be passed to the\n * next step.\n *\n * **Example** (Logging a step in a pipeline)\n *\n * ```ts\n * import { Console, Effect, pipe } from \"effect\"\n *\n * // Function to apply a discount safely to a transaction amount\n * const applyDiscount = (\n *   total: number,\n *   discountRate: number\n * ): Effect.Effect<number, Error> =>\n *   discountRate === 0\n *     ? Effect.fail(new Error(\"Discount rate cannot be zero\"))\n *     : Effect.succeed(total - (total * discountRate) / 100)\n *\n * // Simulated asynchronous task to fetch a transaction amount from database\n * const fetchTransactionAmount = Effect.promise(() => Promise.resolve(100))\n *\n * const finalAmount = pipe(\n *   fetchTransactionAmount,\n *   // Log the fetched transaction amount\n *   Effect.tap((amount) => Console.log(`Apply a discount to: ${amount}`)),\n *   // `amount` is still available!\n *   Effect.flatMap((amount) => applyDiscount(amount, 5))\n * )\n *\n * Effect.runPromise(finalAmount).then(console.log)\n * // Output:\n * // Apply a discount to: 100\n * // 95\n * ```\n *\n * @see {@link flatMap} for a version that allows you to change the value.\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const tap = core.tap;\n/**\n * Allows you to inspect both success and failure outcomes of an effect and\n * perform side effects for each.\n *\n * **Details**\n *\n * This function enables you to handle both success and failure cases\n * separately, without modifying the main effect's result. It is particularly\n * useful for scenarios where you need to log, monitor, or perform additional\n * actions depending on whether the effect succeeded or failed.\n *\n * When the effect succeeds, the `onSuccess` handler is executed with the\n * success value. When the effect fails, the `onFailure` handler is executed\n * with the failure value. Both handlers can include side effects such as\n * logging or analytics, and neither modifies the original effect's output.\n *\n * If either the success or failure handler fails, the overall effect will also\n * fail.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Random, Console } from \"effect\"\n *\n * // Simulate a task that might fail\n * const task = Effect.filterOrFail(\n *   Random.nextRange(-1, 1),\n *   (n) => n >= 0,\n *   () => \"random number is negative\"\n * )\n *\n * // Use tapBoth to log both success and failure outcomes\n * const tapping = Effect.tapBoth(task, {\n *   onFailure: (error) => Console.log(`failure: ${error}`),\n *   onSuccess: (randomNumber) =>\n *     Console.log(`random number: ${randomNumber}`)\n * })\n *\n * Effect.runFork(tapping)\n * // Example Output:\n * // failure: random number is negative\n * ```\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const tapBoth = effect.tapBoth;\n/**\n * Inspect severe errors or defects (non-recoverable failures) in an effect.\n *\n * **Details**\n *\n * This function is specifically designed to handle and inspect defects, which\n * are critical failures in your program, such as unexpected runtime exceptions\n * or system-level errors. Unlike normal recoverable errors, defects typically\n * indicate serious issues that cannot be addressed through standard error\n * handling.\n *\n * When a defect occurs in an effect, the function you provide to this function\n * will be executed, allowing you to log, monitor, or handle the defect in some\n * way. Importantly, this does not alter the main result of the effect. If no\n * defect occurs, the effect behaves as if this function was not used.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * // Simulate a task that fails with a recoverable error\n * const task1: Effect.Effect<number, string> = Effect.fail(\"NetworkError\")\n *\n * // tapDefect won't log anything because NetworkError is not a defect\n * const tapping1 = Effect.tapDefect(task1, (cause) =>\n *   Console.log(`defect: ${cause}`)\n * )\n *\n * Effect.runFork(tapping1)\n * // No Output\n *\n * // Simulate a severe failure in the system\n * const task2: Effect.Effect<number, string> = Effect.dieMessage(\n *   \"Something went wrong\"\n * )\n *\n * // Log the defect using tapDefect\n * const tapping2 = Effect.tapDefect(task2, (cause) =>\n *   Console.log(`defect: ${cause}`)\n * )\n *\n * Effect.runFork(tapping2)\n * // Output:\n * // defect: RuntimeException: Something went wrong\n * //   ... stack trace ...\n * ```\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const tapDefect = effect.tapDefect;\n/**\n * Execute a side effect on failure without modifying the original effect.\n *\n * **Details**\n *\n * This function allows you to inspect and react to the failure of an effect by\n * executing an additional effect. The failure value is passed to the provided\n * function, enabling you to log it, track it, or perform any other operation.\n * Importantly, the original failure remains intact and is re-propagated, so the\n * effect's behavior is unchanged.\n *\n * The side effect you provide is only executed when the effect fails. If the\n * effect succeeds, the function is ignored, and the success value is propagated\n * as usual.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * // Simulate a task that fails with an error\n * const task: Effect.Effect<number, string> = Effect.fail(\"NetworkError\")\n *\n * // Use tapError to log the error message when the task fails\n * const tapping = Effect.tapError(task, (error) =>\n *   Console.log(`expected error: ${error}`)\n * )\n *\n * Effect.runFork(tapping)\n * // Output:\n * // expected error: NetworkError\n * ```\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const tapError = effect.tapError;\n/**\n * Inspect errors matching a specific tag without altering the original effect.\n *\n * **Details**\n *\n * This function allows you to inspect and handle specific error types based on\n * their `_tag` property. It is particularly useful in applications where errors\n * are modeled with tagged types (e.g., union types with discriminating tags).\n * By targeting errors with a specific `_tag`, you can log or perform actions on\n * them while leaving the error channel and overall effect unchanged.\n *\n * If the error doesn't match the specified tag, this function does nothing, and\n * the effect proceeds as usual.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * class NetworkError {\n *   readonly _tag = \"NetworkError\"\n *   constructor(readonly statusCode: number) {}\n * }\n *\n * class ValidationError {\n *   readonly _tag = \"ValidationError\"\n *   constructor(readonly field: string) {}\n * }\n *\n * // Create a task that fails with a NetworkError\n * const task: Effect.Effect<number, NetworkError | ValidationError> =\n *   Effect.fail(new NetworkError(504))\n *\n * // Use tapErrorTag to inspect only NetworkError types and log the status code\n * const tapping = Effect.tapErrorTag(task, \"NetworkError\", (error) =>\n *   Console.log(`expected error: ${error.statusCode}`)\n * )\n *\n * Effect.runFork(tapping)\n * // Output:\n * // expected error: 504\n * ```\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const tapErrorTag = effect.tapErrorTag;\n/**\n * Inspect the complete cause of an error, including failures and defects.\n *\n * **Details**\n *\n * This function provides access to the full cause of an error, including both\n * recoverable failures and irrecoverable defects. It allows you to handle, log,\n * or monitor specific error causes without modifying the result of the effect.\n * The full `Cause` object encapsulates the error and its contextual\n * information, making it useful for debugging and understanding failure\n * scenarios in complex workflows.\n *\n * The effect itself is not modified, and any errors or defects remain in the\n * error channel of the original effect.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * // Create a task that fails with a NetworkError\n * const task1: Effect.Effect<number, string> = Effect.fail(\"NetworkError\")\n *\n * const tapping1 = Effect.tapErrorCause(task1, (cause) =>\n *   Console.log(`error cause: ${cause}`)\n * )\n *\n * Effect.runFork(tapping1)\n * // Output:\n * // error cause: Error: NetworkError\n *\n * // Simulate a severe failure in the system\n * const task2: Effect.Effect<number, string> = Effect.dieMessage(\n *   \"Something went wrong\"\n * )\n *\n * const tapping2 = Effect.tapErrorCause(task2, (cause) =>\n *   Console.log(`error cause: ${cause}`)\n * )\n *\n * Effect.runFork(tapping2)\n * // Output:\n * // error cause: RuntimeException: Something went wrong\n * //   ... stack trace ...\n * ```\n *\n * @since 2.0.0\n * @category Sequencing\n */\nexport const tapErrorCause = effect.tapErrorCause;\n/**\n * Repeats an effect indefinitely until an error occurs.\n *\n * **Details**\n *\n * This function executes an effect repeatedly in an infinite loop. Each\n * iteration is executed sequentially, and the loop continues until the first\n * error occurs. If the effect succeeds, it starts over from the beginning. If\n * the effect fails, the error is propagated, and the loop stops.\n *\n * Be cautious when using this function, as it will run indefinitely unless an\n * error interrupts it. This makes it suitable for long-running processes or\n * continuous polling tasks, but you should ensure proper error handling or\n * combine it with other operators like `timeout` or `schedule` to prevent\n * unintentional infinite loops.\n *\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const forever = effect.forever;\n/**\n * Repeatedly updates a state through an effectful operation until a condition\n * is no longer met.\n *\n * **Details**\n *\n * This function provides a way to implement effectful loops, similar to a\n * `while` loop in JavaScript.\n *\n * ```ts skip-type-checking\n * let result = initial\n *\n * while (options.while(result)) {\n *   result = options.body(result)\n * }\n *\n * return result\n * ```\n *\n * It starts with an initial state, checks a\n * condition (`while`), and executes a body operation to update the state if the\n * condition evaluates to `true`. The process repeats until the condition\n * returns `false`.\n *\n * The state is passed between iterations, allowing the body operation to modify\n * it dynamically. The final state after the loop ends is returned as the result\n * of the effect.\n *\n * **When to Use**\n *\n * This is particularly useful for scenarios where looping logic involves\n * asynchronous or side-effectful operations, such as polling or iterative\n * computations that depend on external factors.\n *\n * **Example** (Effectful Iteration)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const result = Effect.iterate(\n *   // Initial result\n *   1,\n *   {\n *     // Condition to continue iterating\n *     while: (result) => result <= 5,\n *     // Operation to change the result\n *     body: (result) => Effect.succeed(result + 1)\n *   }\n * )\n *\n * Effect.runPromise(result).then(console.log)\n * // Output: 6\n * ```\n *\n * @since 2.0.0\n * @category Looping\n */\nexport const iterate = effect.iterate;\n/**\n * Repeatedly executes a loop with a state, collecting results or discarding\n * them based on configuration.\n *\n * **Details**\n *\n * This function performs an effectful loop, starting with an initial state and\n * iterating as long as the `while` condition evaluates to `true`, similar to a\n * `while` loop in JavaScript.\n *\n * ```ts skip-type-checking\n * let state = initial\n * const result = []\n *\n * while (options.while(state)) {\n *   result.push(options.body(state)) // Perform the effectful operation\n *   state = options.step(state) // Update the state\n * }\n *\n * return result\n * ```\n *\n * During each iteration, the `step` function updates the state, and the `body`\n * effect is executed.\n *\n * The results of the body effect can be collected in an array or discarded\n * based on the `discard` option.\n *\n * **Discarding Intermediate Results**\n *\n * - If `discard` is `false` or not provided, the intermediate results are\n *   collected into an array and returned as the final result.\n * - If `discard` is `true`, the intermediate results are ignored, and the\n *   effect returns `void`.\n *\n * **When to Use**\n *\n * This is useful for implementing loops where you need to perform effectful\n * computations repeatedly, such as processing items in a list, generating\n * values, or performing iterative updates.\n *\n * **Example** (Looping with Collected Results)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * // A loop that runs 5 times, collecting each iteration's result\n * const result = Effect.loop(\n *   // Initial state\n *   1,\n *   {\n *     // Condition to continue looping\n *     while: (state) => state <= 5,\n *     // State update function\n *     step: (state) => state + 1,\n *     // Effect to be performed on each iteration\n *     body: (state) => Effect.succeed(state)\n *   }\n * )\n *\n * Effect.runPromise(result).then(console.log)\n * // Output: [1, 2, 3, 4, 5]\n * ```\n *\n * **Example** (Loop with Discarded Results)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const result = Effect.loop(\n *   // Initial state\n *   1,\n *   {\n *     // Condition to continue looping\n *     while: (state) => state <= 5,\n *     // State update function\n *     step: (state) => state + 1,\n *     // Effect to be performed on each iteration\n *     body: (state) => Console.log(`Currently at state ${state}`),\n *     // Discard intermediate results\n *     discard: true\n *   }\n * )\n *\n * Effect.runPromise(result).then(console.log)\n * // Output:\n * // Currently at state 1\n * // Currently at state 2\n * // Currently at state 3\n * // Currently at state 4\n * // Currently at state 5\n * // undefined\n * ```\n *\n * @since 2.0.0\n * @category Looping\n */\nexport const loop = effect.loop;\n/**\n * Repeats an effect based on a specified schedule or until the first failure.\n *\n * **Details**\n *\n * This function executes an effect repeatedly according to the given schedule.\n * Each repetition occurs after the initial execution of the effect, meaning\n * that the schedule determines the number of additional repetitions. For\n * example, using `Schedule.once` will result in the effect being executed twice\n * (once initially and once as part of the repetition).\n *\n * If the effect succeeds, it is repeated according to the schedule. If it\n * fails, the repetition stops immediately, and the failure is returned.\n *\n * The schedule can also specify delays between repetitions, making it useful\n * for tasks like retrying operations with backoff, periodic execution, or\n * performing a series of dependent actions.\n *\n * You can combine schedules for more advanced repetition logic, such as adding\n * delays, limiting recursions, or dynamically adjusting based on the outcome of\n * each execution.\n *\n * **Example** (Success Example)\n *\n * ```ts\n * import { Effect, Schedule, Console } from \"effect\"\n *\n * const action = Console.log(\"success\")\n * const policy = Schedule.addDelay(Schedule.recurs(2), () => \"100 millis\")\n * const program = Effect.repeat(action, policy)\n *\n * Effect.runPromise(program).then((n) => console.log(`repetitions: ${n}`))\n * ```\n *\n * **Example** (Failure Example)\n *\n * ```ts\n * import { Effect, Schedule } from \"effect\"\n *\n * let count = 0\n *\n * // Define an async effect that simulates an action with possible failures\n * const action = Effect.async<string, string>((resume) => {\n *   if (count > 1) {\n *     console.log(\"failure\")\n *     resume(Effect.fail(\"Uh oh!\"))\n *   } else {\n *     count++\n *     console.log(\"success\")\n *     resume(Effect.succeed(\"yay!\"))\n *   }\n * })\n *\n * const policy = Schedule.addDelay(Schedule.recurs(2), () => \"100 millis\")\n * const program = Effect.repeat(action, policy)\n *\n * Effect.runPromiseExit(program).then(console.log)\n * ```\n *\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const repeat = schedule_.repeat_combined;\n/**\n * Repeats an effect a specified number of times or until the first failure.\n *\n * **Details**\n *\n * This function executes an effect initially and then repeats it the specified\n * number of times, as long as it succeeds. For example, calling\n * `repeatN(action, 2)` will execute `action` once initially and then repeat it\n * two additional times if there are no failures.\n *\n * If the effect fails during any repetition, the failure is returned, and no\n * further repetitions are attempted.\n *\n * **When to Use**\n *\n * This function is useful for tasks that need to be retried a fixed number of\n * times or for performing repeated actions without requiring a schedule.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const action = Console.log(\"success\")\n * const program = Effect.repeatN(action, 2)\n *\n * Effect.runPromise(program)\n * ```\n *\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const repeatN = effect.repeatN;\n/**\n * Repeats an effect with a schedule, handling failures using a custom handler.\n *\n * **Details**\n *\n * This function allows you to execute an effect repeatedly based on a specified\n * schedule. If the effect fails at any point, a custom failure handler is\n * invoked. The handler is provided with both the failure value and the output\n * of the schedule at the time of failure. This enables advanced error recovery\n * or alternative fallback logic while maintaining flexibility in how\n * repetitions are handled.\n *\n * For example, using a schedule with `recurs(2)` will allow for two additional\n * repetitions after the initial execution, provided the effect succeeds. If a\n * failure occurs during any iteration, the failure handler is invoked to handle\n * the situation.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Schedule } from \"effect\"\n *\n * let count = 0\n *\n * // Define an async effect that simulates an action with possible failures\n * const action = Effect.async<string, string>((resume) => {\n *   if (count > 1) {\n *     console.log(\"failure\")\n *     resume(Effect.fail(\"Uh oh!\"))\n *   } else {\n *     count++\n *     console.log(\"success\")\n *     resume(Effect.succeed(\"yay!\"))\n *   }\n * })\n *\n * const policy = Schedule.addDelay(\n *   Schedule.recurs(2), // Repeat for a maximum of 2 times\n *   () => \"100 millis\" // Add a delay of 100 milliseconds between repetitions\n * )\n *\n * const program = Effect.repeatOrElse(action, policy, () =>\n *   Effect.sync(() => {\n *     console.log(\"orElse\")\n *     return count - 1\n *   })\n * )\n *\n * Effect.runPromise(program).then((n) => console.log(`repetitions: ${n}`))\n * ```\n *\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const repeatOrElse = schedule_.repeatOrElse_Effect;\n/**\n * Repeats an effect based on a specified schedule.\n *\n * **Details**\n *\n * This function allows you to execute an effect repeatedly according to a given\n * schedule. The schedule determines the timing and number of repetitions. Each\n * repetition can also depend on the decision of the schedule, providing\n * flexibility for complex workflows. This function does not modify the effect's\n * success or failure; it only controls its repetition.\n *\n * For example, you can use a schedule that recurs a specific number of times,\n * adds delays between repetitions, or customizes repetition behavior based on\n * external inputs. The effect runs initially and is repeated according to the\n * schedule.\n *\n * @see {@link scheduleFrom} for a variant that allows the schedule's decision\n * to depend on the result of this effect.\n *\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const schedule = schedule_.schedule_Effect;\n/**\n * Runs an effect repeatedly on a new fiber according to a given schedule.\n *\n * **Details**\n *\n * This function starts the provided effect on a new fiber and runs it\n * repeatedly based on the specified schedule. The repetitions are managed by\n * the schedule's rules, which define the timing and number of iterations. The\n * fiber is attached to the current scope, meaning it is automatically managed\n * and cleaned up when the scope is closed.\n *\n * The function returns a `RuntimeFiber` that allows you to monitor or interact\n * with the running fiber.\n *\n * **When to Use**\n *\n * This is particularly useful for concurrent execution of scheduled tasks or\n * when you want to continue processing without waiting for the repetitions to\n * complete.\n *\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const scheduleForked = circular.scheduleForked;\n/**\n * Runs an effect repeatedly according to a schedule, starting from a specified\n * input value.\n *\n * **Details**\n *\n * This function allows you to repeatedly execute an effect based on a schedule.\n * The schedule starts with the given `initial` input value, which is passed to\n * the first execution. Subsequent executions of the effect are controlled by\n * the schedule's rules, using the output of the previous iteration as the input\n * for the next one.\n *\n * The returned effect will complete when the schedule ends or the effect fails,\n * propagating the error.\n *\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const scheduleFrom = schedule_.scheduleFrom_Effect;\n/**\n * @since 2.0.0\n * @category Repetition / Recursion\n */\nexport const whileLoop = core.whileLoop;\n/**\n * Returns a collection of all `FiberRef` values for the fiber running this\n * effect.\n *\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const getFiberRefs = effect.fiberRefs;\n/**\n * Inherits values from all `FiberRef` instances into current fiber.\n *\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const inheritFiberRefs = effect.inheritFiberRefs;\n/**\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const locally = core.fiberRefLocally;\n/**\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const locallyWith = core.fiberRefLocallyWith;\n/**\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const locallyScoped = fiberRuntime.fiberRefLocallyScoped;\n/**\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const locallyScopedWith = fiberRuntime.fiberRefLocallyScopedWith;\n/**\n * Applies the specified changes to the `FiberRef` values for the fiber\n * running this workflow.\n *\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const patchFiberRefs = effect.patchFiberRefs;\n/**\n * Sets the `FiberRef` values for the fiber running this effect to the values\n * in the specified collection of `FiberRef` values.\n *\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const setFiberRefs = effect.setFiberRefs;\n/**\n * Updates the `FiberRef` values for the fiber running this effect using the\n * specified function.\n *\n * @since 2.0.0\n * @category Fiber Refs\n */\nexport const updateFiberRefs = effect.updateFiberRefs;\n/**\n * Checks if an effect has failed.\n *\n * **Details**\n *\n * This function evaluates whether an effect has resulted in a failure. It\n * returns a boolean value wrapped in an effect, with `true` indicating the\n * effect failed and `false` otherwise.\n *\n * The resulting effect cannot fail (`never` in the error channel) but retains\n * the context of the original effect.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const failure = Effect.fail(\"Uh oh!\")\n *\n * console.log(Effect.runSync(Effect.isFailure(failure)))\n * // Output: true\n *\n * const defect = Effect.dieMessage(\"BOOM!\")\n *\n * Effect.runSync(Effect.isFailure(defect))\n * // throws: BOOM!\n * ```\n *\n * @since 2.0.0\n * @category Condition Checking\n */\nexport const isFailure = effect.isFailure;\n/**\n * Checks if an effect has succeeded.\n *\n * **Details**\n *\n * This function evaluates whether an effect has resulted in a success. It\n * returns a boolean value wrapped in an effect, with `true` indicating the\n * effect succeeded and `false` otherwise.\n *\n * The resulting effect cannot fail (`never` in the error channel) but retains\n * the context of the original effect.\n *\n * @since 2.0.0\n * @category Condition Checking\n */\nexport const isSuccess = effect.isSuccess;\n/**\n * Handles both success and failure cases of an effect without performing side\n * effects.\n *\n * **Details**\n *\n * `match` lets you define custom handlers for both success and failure\n * scenarios. You provide separate functions to handle each case, allowing you\n * to process the result if the effect succeeds, or handle the error if the\n * effect fails.\n *\n * **When to Use**\n *\n * This is useful for structuring your code to respond differently to success or\n * failure without triggering side effects.\n *\n * **Example** (Handling Both Success and Failure Cases)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const success: Effect.Effect<number, Error> = Effect.succeed(42)\n *\n * const program1 = Effect.match(success, {\n *   onFailure: (error) => `failure: ${error.message}`,\n *   onSuccess: (value) => `success: ${value}`\n * })\n *\n * // Run and log the result of the successful effect\n * Effect.runPromise(program1).then(console.log)\n * // Output: \"success: 42\"\n *\n * const failure: Effect.Effect<number, Error> = Effect.fail(\n *   new Error(\"Uh oh!\")\n * )\n *\n * const program2 = Effect.match(failure, {\n *   onFailure: (error) => `failure: ${error.message}`,\n *   onSuccess: (value) => `success: ${value}`\n * })\n *\n * // Run and log the result of the failed effect\n * Effect.runPromise(program2).then(console.log)\n * // Output: \"failure: Uh oh!\"\n * ```\n *\n * @see {@link matchEffect} if you need to perform side effects in the handlers.\n *\n * @since 2.0.0\n * @category Matching\n */\nexport const match = effect.match;\n/**\n * Handles failures by matching the cause of failure.\n *\n * **Details**\n *\n * The `matchCause` function allows you to handle failures with access to the\n * full cause of the failure within a fiber.\n *\n * **When to Use**\n *\n * This is useful for differentiating between different types of errors, such as\n * regular failures, defects, or interruptions. You can provide specific\n * handling logic for each failure type based on the cause.\n *\n * **Example** (Handling Different Failure Causes)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task: Effect.Effect<number, Error> = Effect.die(\"Uh oh!\")\n *\n * const program = Effect.matchCause(task, {\n *   onFailure: (cause) => {\n *     switch (cause._tag) {\n *       case \"Fail\":\n *         // Handle standard failure\n *         return `Fail: ${cause.error.message}`\n *       case \"Die\":\n *         // Handle defects (unexpected errors)\n *         return `Die: ${cause.defect}`\n *       case \"Interrupt\":\n *         // Handle interruption\n *         return `${cause.fiberId} interrupted!`\n *     }\n *     // Fallback for other causes\n *     return \"failed due to other causes\"\n *   },\n *   onSuccess: (value) =>\n *     // task completes successfully\n *     `succeeded with ${value} value`\n * })\n *\n * Effect.runPromise(program).then(console.log)\n * // Output: \"Die: Uh oh!\"\n * ```\n *\n * @see {@link matchCauseEffect} if you need to perform side effects in the\n * handlers.\n * @see {@link match} if you don't need to handle the cause of the failure.\n *\n * @since 2.0.0\n * @category Matching\n */\nexport const matchCause = core.matchCause;\n/**\n * Handles failures with access to the cause and allows performing side effects.\n *\n * **Details**\n *\n * The `matchCauseEffect` function works similarly to {@link matchCause}, but it\n * also allows you to perform additional side effects based on the failure\n * cause. This function provides access to the complete cause of the failure,\n * making it possible to differentiate between various failure types, and allows\n * you to respond accordingly while performing side effects (like logging or\n * other operations).\n *\n * **Example** (Handling Different Failure Causes with Side Effects)\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task: Effect.Effect<number, Error> = Effect.die(\"Uh oh!\")\n *\n * const program = Effect.matchCauseEffect(task, {\n *   onFailure: (cause) => {\n *     switch (cause._tag) {\n *       case \"Fail\":\n *         // Handle standard failure with a logged message\n *         return Console.log(`Fail: ${cause.error.message}`)\n *       case \"Die\":\n *         // Handle defects (unexpected errors) by logging the defect\n *         return Console.log(`Die: ${cause.defect}`)\n *       case \"Interrupt\":\n *         // Handle interruption and log the fiberId that was interrupted\n *         return Console.log(`${cause.fiberId} interrupted!`)\n *     }\n *     // Fallback for other causes\n *     return Console.log(\"failed due to other causes\")\n *   },\n *   onSuccess: (value) =>\n *     // Log success if the task completes successfully\n *     Console.log(`succeeded with ${value} value`)\n * })\n *\n * Effect.runPromise(program)\n * // Output: \"Die: Uh oh!\"\n * ```\n *\n * @see {@link matchCause} if you don't need side effects and only want to handle the result or failure.\n * @see {@link matchEffect} if you don't need to handle the cause of the failure.\n *\n * @since 2.0.0\n * @category Matching\n */\nexport const matchCauseEffect = core.matchCauseEffect;\n/**\n * Handles both success and failure cases of an effect, allowing for additional\n * side effects.\n *\n * **Details**\n *\n * The `matchEffect` function is similar to {@link match}, but it enables you to\n * perform side effects in the handlers for both success and failure outcomes.\n *\n * **When to Use**\n *\n * This is useful when you need to execute additional actions, like logging or\n * notifying users, based on whether an effect succeeds or fails.\n *\n * **Example** (Handling Both Success and Failure Cases with Side Effects)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const success: Effect.Effect<number, Error> = Effect.succeed(42)\n * const failure: Effect.Effect<number, Error> = Effect.fail(\n *   new Error(\"Uh oh!\")\n * )\n *\n * const program1 = Effect.matchEffect(success, {\n *   onFailure: (error) =>\n *     Effect.succeed(`failure: ${error.message}`).pipe(\n *       Effect.tap(Effect.log)\n *     ),\n *   onSuccess: (value) =>\n *     Effect.succeed(`success: ${value}`).pipe(Effect.tap(Effect.log))\n * })\n *\n * console.log(Effect.runSync(program1))\n * // Output:\n * // timestamp=... level=INFO fiber=#0 message=\"success: 42\"\n * // success: 42\n *\n * const program2 = Effect.matchEffect(failure, {\n *   onFailure: (error) =>\n *     Effect.succeed(`failure: ${error.message}`).pipe(\n *       Effect.tap(Effect.log)\n *     ),\n *   onSuccess: (value) =>\n *     Effect.succeed(`success: ${value}`).pipe(Effect.tap(Effect.log))\n * })\n *\n * console.log(Effect.runSync(program2))\n * // Output:\n * // timestamp=... level=INFO fiber=#1 message=\"failure: Uh oh!\"\n * // failure: Uh oh!\n * ```\n *\n * @see {@link match} if you don't need side effects and only want to handle the\n * result or failure.\n *\n * @since 2.0.0\n * @category Matching\n */\nexport const matchEffect = core.matchEffect;\n/**\n * Logs one or more messages or error causes at the current log level.\n *\n * **Details**\n *\n * This function provides a simple way to log messages or error causes during\n * the execution of your effects. By default, logs are recorded at the `INFO`\n * level, but this can be adjusted using other logging utilities\n * (`Logger.withMinimumLogLevel`). Multiple items, including `Cause` instances,\n * can be logged in a single call. When logging `Cause` instances, detailed\n * error information is included in the log output.\n *\n * The log output includes useful metadata like the current timestamp, log\n * level, and fiber ID, making it suitable for debugging and tracking purposes.\n * This function does not interrupt or alter the effect's execution flow.\n *\n * **Example**\n *\n * ```ts\n * import { Cause, Effect } from \"effect\"\n *\n * const program = Effect.log(\n *   \"message1\",\n *   \"message2\",\n *   Cause.die(\"Oh no!\"),\n *   Cause.die(\"Oh uh!\")\n * )\n *\n * Effect.runFork(program)\n * // Output:\n * // timestamp=... level=INFO fiber=#0 message=message1 message=message2 cause=\"Error: Oh no!\n * // Error: Oh uh!\"\n * ```\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const log = effect.log;\n/**\n * Logs messages or error causes at a specified log level.\n *\n * **Details**\n *\n * This function allows you to log one or more messages or error causes while\n * specifying the desired log level (e.g., DEBUG, INFO, ERROR). It provides\n * flexibility in categorizing logs based on their importance or severity,\n * making it easier to filter logs during debugging or production monitoring.\n *\n * **Example**\n *\n * ```ts\n * import { Cause, Effect, LogLevel } from \"effect\"\n *\n * const program = Effect.logWithLevel(\n *   LogLevel.Error,\n *   \"Critical error encountered\",\n *   Cause.die(\"System failure!\")\n * )\n *\n * Effect.runFork(program)\n * // Output:\n * // timestamp=... level=ERROR fiber=#0 message=Critical error encountered cause=\"Error: System failure!\"\n * ```\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logWithLevel = (level, ...message) => effect.logWithLevel(level)(...message);\n/**\n * Logs messages at the TRACE log level.\n *\n * **Details**\n *\n * This function logs the specified messages at the TRACE level. TRACE logs are\n * typically used for very detailed diagnostic information. These messages are\n * not displayed by default. To view them, you must adjust the logging\n * configuration by setting the minimum log level to `LogLevel.Trace` using\n * `Logger.withMinimumLogLevel`.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Logger, LogLevel } from \"effect\"\n *\n * const program = Effect.logTrace(\"message1\").pipe(Logger.withMinimumLogLevel(LogLevel.Trace))\n *\n * Effect.runFork(program)\n * // timestamp=... level=TRACE fiber=#0 message=message1\n * ```\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logTrace = effect.logTrace;\n/**\n * Logs messages at the DEBUG log level.\n *\n * **Details**\n *\n * This function logs messages at the DEBUG level, which is typically used for\n * diagnosing application behavior during development. DEBUG messages provide\n * less detailed information than TRACE logs but are still not shown by default.\n * To view these logs, adjust the log level using `Logger.withMinimumLogLevel`.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Logger, LogLevel } from \"effect\"\n *\n * const program = Effect.logDebug(\"message1\").pipe(Logger.withMinimumLogLevel(LogLevel.Debug))\n *\n * Effect.runFork(program)\n * // timestamp=... level=DEBUG fiber=#0 message=message1\n * ```\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logDebug = effect.logDebug;\n/**\n * Logs messages at the INFO log level.\n *\n * **Details**\n *\n * This function logs messages at the INFO level, suitable for general\n * application events or operational messages. INFO logs are shown by default\n * and are commonly used for highlighting normal, non-error operations.\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logInfo = effect.logInfo;\n/**\n * Logs messages at the WARNING log level.\n *\n * **Details**\n *\n * This function logs messages at the WARNING level, suitable for highlighting\n * potential issues that are not errors but may require attention. These\n * messages indicate that something unexpected occurred or might lead to errors\n * in the future.\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logWarning = effect.logWarning;\n/**\n * Logs messages at the ERROR log level.\n *\n * **Details**\n *\n * This function logs messages at the ERROR level, suitable for reporting\n * application errors or failures. These logs are typically used for unexpected\n * issues that need immediate attention.\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logError = effect.logError;\n/**\n * Logs messages at the FATAL log level.\n *\n * **Details**\n *\n * This function logs messages at the FATAL level, suitable for reporting\n * critical errors that cause the application to terminate or stop functioning.\n * These logs are typically used for unrecoverable errors that require immediate\n * attention.\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logFatal = effect.logFatal;\n/**\n * Adds a log span to an effect for tracking and logging its execution duration.\n *\n * **Details**\n *\n * This function wraps an effect with a log span, providing performance\n * monitoring and debugging capabilities. The log span tracks the duration of\n * the wrapped effect and logs it with the specified label. This is particularly\n * useful when analyzing time-sensitive operations or understanding the\n * execution time of specific tasks in your application.\n *\n * The logged output will include the label and the total time taken for the\n * operation. The span information is included in the log metadata, making it\n * easy to trace performance metrics in logs.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   yield* Effect.sleep(\"1 second\")\n *   yield* Effect.log(\"The job is finished!\")\n * }).pipe(Effect.withLogSpan(\"myspan\"))\n *\n * Effect.runFork(program)\n * // timestamp=... level=INFO fiber=#0 message=\"The job is finished!\" myspan=1011ms\n * ```\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const withLogSpan = effect.withLogSpan;\n/**\n * Adds custom annotations to log entries generated within an effect.\n *\n * **Details**\n *\n * This function allows you to enhance log messages by appending additional\n * context in the form of key-value pairs. These annotations are included in\n * every log message created during the execution of the effect, making the logs\n * more informative and easier to trace.\n *\n * The annotations can be specified as a single key-value pair or as a record of\n * multiple key-value pairs. This is particularly useful for tracking\n * operations, debugging, or associating specific metadata with logs for better\n * observability.\n *\n * The annotated key-value pairs will appear alongside the log message in the\n * output.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   yield* Effect.log(\"message1\")\n *   yield* Effect.log(\"message2\")\n * }).pipe(Effect.annotateLogs(\"taskId\", \"1234\")) // Annotation as key/value pair\n *\n * Effect.runFork(program)\n * // timestamp=... level=INFO fiber=#0 message=message1 taskId=1234\n * // timestamp=... level=INFO fiber=#0 message=message2 taskId=1234\n * ```\n *\n * @see {@link annotateLogsScoped} to add log annotations with a limited scope.\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const annotateLogs = effect.annotateLogs;\n/**\n * Adds log annotations with a limited scope to enhance contextual logging.\n *\n * **Details**\n *\n * This function allows you to apply key-value annotations to log entries\n * generated within a specific scope of your effect computations. The\n * annotations are restricted to the defined `Scope`, ensuring that they are\n * only applied to logs produced during that scope. Once the scope ends, the\n * annotations are automatically removed, making it easier to manage\n * context-specific logging without affecting other parts of your application.\n *\n * The annotations can be provided as a single key-value pair or as a record of\n * multiple key-value pairs. This flexibility enables fine-grained control over\n * the additional metadata included in logs for specific tasks or operations.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   yield* Effect.log(\"no annotations\")\n *   yield* Effect.annotateLogsScoped({ key: \"value\" })\n *   yield* Effect.log(\"message1\") // Annotation is applied to this log\n *   yield* Effect.log(\"message2\") // Annotation is applied to this log\n * }).pipe(Effect.scoped, Effect.andThen(Effect.log(\"no annotations again\")))\n *\n * Effect.runFork(program)\n * // timestamp=... level=INFO fiber=#0 message=\"no annotations\"\n * // timestamp=... level=INFO fiber=#0 message=message1 key=value\n * // timestamp=... level=INFO fiber=#0 message=message2 key=value\n * // timestamp=... level=INFO fiber=#0 message=\"no annotations again\"\n * ```\n *\n * @see {@link annotateLogs} to add custom annotations to log entries generated within an effect.\n *\n * @since 3.1.0\n * @category Logging\n */\nexport const annotateLogsScoped = fiberRuntime.annotateLogsScoped;\n/**\n * Retrieves the current log annotations for the current scope.\n *\n * **Details**\n *\n * This function provides access to the log annotations associated with the\n * current scope. Log annotations are key-value pairs that provide additional\n * context to log entries. They are often used to add metadata such as tags,\n * identifiers, or extra debugging information to logs.\n *\n * By using this function, you can inspect or utilize the annotations applied to\n * the current scope, making it easier to trace and debug specific sections of\n * your application.\n *\n * @see {@link annotateLogs} to add custom annotations to log entries generated within an effect.\n * @see {@link annotateLogsScoped} to add log annotations with a limited scope.\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const logAnnotations = effect.logAnnotations;\n/**\n * Configures whether child fibers will log unhandled errors and at what log\n * level.\n *\n * **Details**\n *\n * This function allows you to control whether unhandled errors from child\n * fibers are logged and to specify the log level for these errors. By default,\n * unhandled errors are reported via the logger. However, using this function,\n * you can choose to suppress these logs by passing `Option.none` or adjust the\n * log level to a specific severity, such as `Error`, `Warning`, or `Info`.\n *\n * This configuration is scoped to the effect it is applied to, meaning the\n * changes only apply to the child fibers created within that effect's context.\n * It is especially useful when you want to reduce noise in logs or prioritize\n * certain types of errors.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Fiber, LogLevel, Option } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   const fiber = yield* Effect.fork(Effect.fail(\"Unhandled error!\"))\n *   yield* Fiber.join(fiber)\n * })\n *\n * Effect.runFork(program.pipe(Effect.withUnhandledErrorLogLevel(Option.some(LogLevel.Error))))\n * // Output:\n * // timestamp=... level=ERROR fiber=#1 message=\"Fiber terminated with an unhandled error\" cause=\"Error: Unhandled error!\"\n * ```\n *\n * @since 2.0.0\n * @category Logging\n */\nexport const withUnhandledErrorLogLevel = core.withUnhandledErrorLogLevel;\n/**\n * Conditionally executes an effect based on the specified log level and currently enabled log level.\n *\n * **Details**\n *\n * This function runs the provided effect only if the specified log level is\n * enabled. If the log level is enabled, the effect is executed and its result\n * is wrapped in `Some`. If the log level is not enabled, the effect is not\n * executed and `None` is returned.\n *\n * This function is useful for conditionally executing logging-related effects\n * or other operations that depend on the current log level configuration.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Logger, LogLevel } from \"effect\"\n *\n * const program = Effect.gen(function* () {\n *   yield* Effect.whenLogLevel(Effect.logTrace(\"message1\"), LogLevel.Trace); // returns `None`\n *   yield* Effect.whenLogLevel(Effect.logDebug(\"message2\"), LogLevel.Debug); // returns `Some`\n * }).pipe(Logger.withMinimumLogLevel(LogLevel.Debug));\n *\n * Effect.runFork(program)\n * // timestamp=... level=DEBUG fiber=#0 message=message2\n * ```\n *\n * @see {@link FiberRef.currentMinimumLogLevel} to retrieve the current minimum log level.\n *\n * @since 3.13.0\n * @category Logging\n */\nexport const whenLogLevel = fiberRuntime.whenLogLevel;\n/**\n * Converts an effect's failure into a fiber termination, removing the error\n * from the effect's type.\n *\n * **Details**\n *\n * The `orDie` function is used when you encounter errors that you do not want\n * to handle or recover from. It removes the error type from the effect and\n * ensures that any failure will terminate the fiber. This is useful for\n * propagating failures as defects, signaling that they should not be handled\n * within the effect.\n *\n * **When to Use*\n *\n * Use `orDie` when failures should be treated as unrecoverable defects and no\n * error handling is required.\n *\n * **Example** (Propagating an Error as a Defect)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const divide = (a: number, b: number) =>\n *   b === 0\n *     ? Effect.fail(new Error(\"Cannot divide by zero\"))\n *     : Effect.succeed(a / b)\n *\n * //      ┌─── Effect<number, never, never>\n * //      ▼\n * const program = Effect.orDie(divide(1, 0))\n *\n * Effect.runPromise(program).catch(console.error)\n * // Output:\n * // (FiberFailure) Error: Cannot divide by zero\n * //   ...stack trace...\n * ```\n *\n * @see {@link orDieWith} if you need to customize the error.\n *\n * @since 2.0.0\n * @category Converting Failures to Defects\n */\nexport const orDie = core.orDie;\n/**\n * Converts an effect's failure into a fiber termination with a custom error.\n *\n * **Details**\n *\n * The `orDieWith` function behaves like {@link orDie}, but it allows you to provide a mapping\n * function to transform the error before terminating the fiber. This is useful for cases where\n * you want to include a more detailed or user-friendly error when the failure is propagated\n * as a defect.\n *\n * **When to Use**\n *\n * Use `orDieWith` when failures should terminate the fiber as defects, and you want to customize\n * the error for clarity or debugging purposes.\n *\n * **Example** (Customizing Defect)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const divide = (a: number, b: number) =>\n *   b === 0\n *     ? Effect.fail(new Error(\"Cannot divide by zero\"))\n *     : Effect.succeed(a / b)\n *\n * //      ┌─── Effect<number, never, never>\n * //      ▼\n * const program = Effect.orDieWith(\n *   divide(1, 0),\n *   (error) => new Error(`defect: ${error.message}`)\n * )\n *\n * Effect.runPromise(program).catch(console.error)\n * // Output:\n * // (FiberFailure) Error: defect: Cannot divide by zero\n * //   ...stack trace...\n * ```\n *\n * @see {@link orDie} if you don't need to customize the error.\n *\n * @since 2.0.0\n * @category Converting Failures to Defects\n */\nexport const orDieWith = core.orDieWith;\n/**\n * Attempts one effect, and if it fails, falls back to another effect.\n *\n * **Details**\n *\n * This function allows you to try executing an effect, and if it fails\n * (produces an error), a fallback effect is executed instead. The fallback\n * effect is defined as a lazy argument, meaning it will only be evaluated if\n * the first effect fails. This provides a way to recover from errors by\n * specifying an alternative path of execution.\n *\n * The error type of the resulting effect will be that of the fallback effect,\n * as the first effect's error is replaced when the fallback is executed.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const success = Effect.succeed(\"success\")\n * const failure = Effect.fail(\"failure\")\n * const fallback = Effect.succeed(\"fallback\")\n *\n * // Try the success effect first, fallback is not used\n * const program1 = Effect.orElse(success, () => fallback)\n * console.log(Effect.runSync(program1))\n * // Output: \"success\"\n *\n * // Try the failure effect first, fallback is used\n * const program2 = Effect.orElse(failure, () => fallback)\n * console.log(Effect.runSync(program2))\n * // Output: \"fallback\"\n * ```\n *\n * @see {@link catchAll} if you need to access the error in the fallback effect.\n *\n * @since 2.0.0\n * @category Fallback\n */\nexport const orElse = core.orElse;\n/**\n * Replaces the failure of an effect with a custom failure value.\n *\n * **Details**\n *\n * This function allows you to handle the failure of an effect by replacing it\n * with a predefined failure value. If the effect fails, the new failure value\n * provided by the `evaluate` function will be returned instead of the original\n * failure. If the effect succeeds, the original success value is returned\n * unchanged.\n *\n * **When to Use**\n *\n * This is particularly useful when you want to standardize error handling or\n * provide a consistent failure value for specific operations. It simplifies\n * error management by ensuring that all failures are replaced with a controlled\n * alternative.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const validate = (age: number): Effect.Effect<number, string> => {\n *   if (age < 0) {\n *     return Effect.fail(\"NegativeAgeError\")\n *   } else if (age < 18) {\n *     return Effect.fail(\"IllegalAgeError\")\n *   } else {\n *     return Effect.succeed(age)\n *   }\n * }\n *\n * const program = Effect.orElseFail(validate(-1), () => \"invalid age\")\n *\n * console.log(Effect.runSyncExit(program))\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: { _id: 'Cause', _tag: 'Fail', failure: 'invalid age' }\n * // }\n * ```\n *\n * @see {@link mapError} if you need to access the error to transform it.\n *\n * @since 2.0.0\n * @category Fallback\n */\nexport const orElseFail = effect.orElseFail;\n/**\n * Ensures the effect always succeeds by replacing failures with a default\n * success value.\n *\n * **Details**\n *\n * This function transforms an effect that may fail into one that cannot fail by\n * replacing any failure with a provided success value. If the original effect\n * fails, the failure is \"swallowed,\" and the specified success value is\n * returned instead. If the original effect succeeds, its value remains\n * unchanged.\n *\n * **When to Use**\n *\n * This is especially useful for providing default values in case of failure,\n * ensuring that an effect always completes successfully. By using this\n * function, you can avoid the need for complex error handling and guarantee a\n * fallback result.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const validate = (age: number): Effect.Effect<number, string> => {\n *   if (age < 0) {\n *     return Effect.fail(\"NegativeAgeError\")\n *   } else if (age < 18) {\n *     return Effect.fail(\"IllegalAgeError\")\n *   } else {\n *     return Effect.succeed(age)\n *   }\n * }\n *\n * const program = Effect.orElseSucceed(validate(-1), () => 18)\n *\n * console.log(Effect.runSyncExit(program))\n * // Output:\n * // { _id: 'Exit', _tag: 'Success', value: 18 }\n * ```\n *\n * @since 2.0.0\n * @category Fallback\n */\nexport const orElseSucceed = effect.orElseSucceed;\n/**\n * Runs a sequence of effects and returns the result of the first successful\n * one.\n *\n * **Details**\n *\n * This function allows you to execute a collection of effects in sequence,\n * stopping at the first success. If an effect succeeds, its result is\n * immediately returned, and no further effects in the sequence are executed.\n * However, if all the effects fail, the function will return the error of the\n * last effect.\n *\n * The execution is sequential, meaning that effects are evaluated one at a time\n * in the order they are provided. This ensures predictable behavior and avoids\n * unnecessary computations.\n *\n * If the collection of effects is empty, an `IllegalArgumentException` is\n * thrown, indicating that the operation is invalid without any effects to try.\n *\n * **When to Use**\n *\n * This is particularly useful when you have multiple fallback strategies or\n * alternative sources to obtain a result, such as attempting multiple APIs,\n * retrieving configurations, or accessing resources in a prioritized manner.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * interface Config {\n *   host: string\n *   port: number\n *   apiKey: string\n * }\n *\n * // Create a configuration object with sample values\n * const makeConfig = (name: string): Config => ({\n *   host: `${name}.example.com`,\n *   port: 8080,\n *   apiKey: \"12345-abcde\"\n * })\n *\n * // Simulate retrieving configuration from a remote node\n * const remoteConfig = (name: string): Effect.Effect<Config, Error> =>\n *   Effect.gen(function* () {\n *     // Simulate node3 being the only one with available config\n *     if (name === \"node3\") {\n *       yield* Console.log(`Config for ${name} found`)\n *       return makeConfig(name)\n *     } else {\n *       yield* Console.log(`Unavailable config for ${name}`)\n *       return yield* Effect.fail(new Error(`Config not found for ${name}`))\n *     }\n *   })\n *\n * // Define the master configuration and potential fallback nodes\n * const masterConfig = remoteConfig(\"master\")\n * const nodeConfigs = [\"node1\", \"node2\", \"node3\", \"node4\"].map(remoteConfig)\n *\n * // Attempt to find a working configuration,\n * // starting with the master and then falling back to other nodes\n * const config = Effect.firstSuccessOf([masterConfig, ...nodeConfigs])\n *\n * // Run the effect to retrieve the configuration\n * const result = Effect.runSync(config)\n *\n * console.log(result)\n * // Output:\n * // Unavailable config for master\n * // Unavailable config for node1\n * // Unavailable config for node2\n * // Config for node3 found\n * // { host: 'node3.example.com', port: 8080, apiKey: '12345-abcde' }\n * ```\n *\n * @since 2.0.0\n * @category Fallback\n */\nexport const firstSuccessOf = effect.firstSuccessOf;\n/**\n * Retrieves the `Random` service from the context.\n *\n * @since 2.0.0\n * @category Random\n */\nexport const random = effect.random;\n/**\n * Retrieves the `Random` service from the context and uses it to run the\n * specified effect.\n *\n * @since 2.0.0\n * @category Random\n */\nexport const randomWith = defaultServices.randomWith;\n/**\n * Executes the specified effect with the specified implementation of the\n * `Random` service.\n *\n * @since 2.0.0\n * @category Random\n */\nexport const withRandom = defaultServices.withRandom;\n/**\n * Sets the implementation of the `Random` service to the specified value and\n * restores it to its original value when the scope is closed.\n *\n * @since 2.0.0\n * @category Random\n */\nexport const withRandomScoped = fiberRuntime.withRandomScoped;\n/**\n * Returns an effect that accesses the runtime, which can be used to (unsafely)\n * execute tasks.\n *\n * **When to Use**\n *\n * This is useful for integration with legacy code that must call back into\n * Effect code.\n *\n * @since 2.0.0\n * @category Runtime\n */\nexport const runtime = runtime_.runtime;\n/**\n * Retrieves an effect that succeeds with the current runtime flags, which\n * govern behavior and features of the runtime system.\n *\n * @since 2.0.0\n * @category Runtime\n */\nexport const getRuntimeFlags = core.runtimeFlags;\n/**\n * @since 2.0.0\n * @category Runtime\n */\nexport const patchRuntimeFlags = core.updateRuntimeFlags;\n/**\n * @since 2.0.0\n * @category Runtime\n */\nexport const withRuntimeFlagsPatch = core.withRuntimeFlags;\n/**\n * @since 2.0.0\n * @category Runtime\n */\nexport const withRuntimeFlagsPatchScoped = fiberRuntime.withRuntimeFlagsScoped;\n/**\n * Tags each metric in an effect with specific key-value pairs.\n *\n * **Details**\n *\n * This function allows you to tag all metrics in an effect with a set of\n * key-value pairs or a single key-value pair. Tags help you add metadata to\n * metrics, making it easier to filter and categorize them in monitoring\n * systems. The provided tags will apply to all metrics generated within the\n * effect's scope.\n *\n * @since 2.0.0\n * @category Metrics\n */\nexport const tagMetrics = effect.tagMetrics;\n/**\n * Adds labels to metrics within an effect using `MetricLabel` objects.\n *\n * **Details**\n *\n * This function allows you to label metrics using `MetricLabel` objects. Labels\n * help add structured metadata to metrics for categorization and filtering in\n * monitoring systems. The provided labels will apply to all metrics within the\n * effect's execution.\n *\n * @since 2.0.0\n * @category Metrics\n */\nexport const labelMetrics = effect.labelMetrics;\n/**\n * Tags metrics within a scope with a specific key-value pair.\n *\n * **Details**\n *\n * This function tags all metrics within a scope with the provided key-value\n * pair. Once the scope is closed, the tag is automatically removed. This is\n * useful for applying temporary context-specific tags to metrics during scoped\n * operations.\n *\n * @since 2.0.0\n * @category Metrics\n */\nexport const tagMetricsScoped = fiberRuntime.tagMetricsScoped;\n/**\n * Adds labels to metrics within a scope using `MetricLabel` objects.\n *\n * **Details**\n *\n * This function allows you to apply labels to all metrics generated within a\n * specific scope using an array of `MetricLabel` objects. These labels provide\n * additional metadata to metrics, which can be used for categorization,\n * filtering, or monitoring purposes. The labels are scoped and will be removed\n * automatically once the scope is closed, ensuring they are only applied\n * temporarily within the defined context.\n *\n * @since 2.0.0\n * @category Metrics\n */\nexport const labelMetricsScoped = fiberRuntime.labelMetricsScoped;\n/**\n * Retrieves the metric labels associated with the current scope.\n *\n * @since 2.0.0\n * @category Metrics\n */\nexport const metricLabels = core.metricLabels;\n/**\n * Associates a metric with the current effect, updating it as the effect progresses.\n *\n * @since 2.0.0\n * @category Metrics\n */\nexport const withMetric = effect.withMetric;\n/**\n * Unsafely creates a new Semaphore.\n *\n * @since 2.0.0\n * @category Semaphore\n */\nexport const unsafeMakeSemaphore = circular.unsafeMakeSemaphore;\n/**\n * Creates a new semaphore with the specified number of permits.\n *\n * **Details**\n *\n * This function initializes a semaphore that controls concurrent access to a\n * shared resource. The number of permits determines how many tasks can access\n * the resource concurrently.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * // Create a semaphore with 3 permits\n * const mutex = Effect.makeSemaphore(3)\n * ```\n *\n * @since 2.0.0\n * @category Semaphore\n */\nexport const makeSemaphore = circular.makeSemaphore;\n/**\n * @category Latch\n * @since 3.8.0\n */\nexport const unsafeMakeLatch = circular.unsafeMakeLatch;\n/**\n * Creates a new `Latch`, starting in the specified state.\n *\n * **Details**\n *\n * This function initializes a `Latch` safely, ensuring proper runtime\n * guarantees. By default, the latch starts in the closed state.\n *\n * **Example**\n *\n * ```ts\n * import { Console, Effect } from \"effect\"\n *\n * const program = Effect.gen(function*() {\n *   // Create a latch, starting in the closed state\n *   const latch = yield* Effect.makeLatch(false)\n *\n *   // Fork a fiber that logs \"open sesame\" when the latch is opened\n *   const fiber = yield* Console.log(\"open sesame\").pipe(\n *     latch.whenOpen,\n *     Effect.fork\n *   )\n *\n *   yield* Effect.sleep(\"1 second\")\n *\n *   // Open the latch\n *   yield* latch.open\n *   yield* fiber.await\n * })\n *\n * Effect.runFork(program)\n * // Output: open sesame (after 1 second)\n * ```\n *\n * @category Latch\n * @since 3.8.0\n */\nexport const makeLatch = circular.makeLatch;\n/**\n * Runs an effect in the background, returning a fiber that can be observed or\n * interrupted.\n *\n * Unless you specifically need a `Promise` or synchronous operation, `runFork`\n * is a good default choice.\n *\n * **Details**\n *\n * This function is the foundational way to execute an effect in the background.\n * It creates a \"fiber,\" a lightweight, cooperative thread of execution that can\n * be observed (to access its result), interrupted, or joined. Fibers are useful\n * for concurrent programming and allow effects to run independently of the main\n * program flow.\n *\n * Once the effect is running in a fiber, you can monitor its progress, cancel\n * it if necessary, or retrieve its result when it completes. If the effect\n * fails, the fiber will propagate the failure, which you can observe and\n * handle.\n *\n * **When to Use**\n *\n * Use this function when you need to run an effect in the background,\n * especially if the effect is long-running or performs periodic tasks. It's\n * suitable for tasks that need to run independently but might still need\n * observation or management, like logging, monitoring, or scheduled tasks.\n *\n * This function is ideal if you don't need the result immediately or if the\n * effect is part of a larger concurrent workflow.\n *\n * **Example** (Running an Effect in the Background)\n *\n * ```ts\n * import { Effect, Console, Schedule, Fiber } from \"effect\"\n *\n * //      ┌─── Effect<number, never, never>\n * //      ▼\n * const program = Effect.repeat(\n *   Console.log(\"running...\"),\n *   Schedule.spaced(\"200 millis\")\n * )\n *\n * //      ┌─── RuntimeFiber<number, never>\n * //      ▼\n * const fiber = Effect.runFork(program)\n *\n * setTimeout(() => {\n *   Effect.runFork(Fiber.interrupt(fiber))\n * }, 500)\n * ```\n *\n * @since 2.0.0\n * @category Running Effects\n */\nexport const runFork = runtime_.unsafeForkEffect;\n/**\n * Executes an effect asynchronously and handles the result using a callback.\n *\n * **Details**\n *\n * This function runs an effect asynchronously and passes the result (`Exit`) to\n * a specified callback. The callback is invoked with the outcome of the effect:\n * - On success, the callback receives the successful result.\n * - On failure, the callback receives the failure information.\n *\n * **When to Use**\n *\n * This function is effectful and should only be invoked at the edges of your\n * program.\n *\n * @since 2.0.0\n * @category Running Effects\n */\nexport const runCallback = runtime_.unsafeRunEffect;\n/**\n * Executes an effect and returns the result as a `Promise`.\n *\n * **Details**\n *\n * This function runs an effect and converts its result into a `Promise`. If the\n * effect succeeds, the `Promise` will resolve with the successful result. If\n * the effect fails, the `Promise` will reject with an error, which includes the\n * failure details of the effect.\n *\n * The optional `options` parameter allows you to pass an `AbortSignal` for\n * cancellation, enabling more fine-grained control over asynchronous tasks.\n *\n * **When to Use**\n *\n * Use this function when you need to execute an effect and work with its result\n * in a promise-based system, such as when integrating with third-party\n * libraries that expect `Promise` results.\n *\n * **Example** (Running a Successful Effect as a Promise)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * Effect.runPromise(Effect.succeed(1)).then(console.log)\n * // Output: 1\n * ```\n *\n * **Example** (Handling a Failing Effect as a Rejected Promise)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * Effect.runPromise(Effect.fail(\"my error\")).catch(console.error)\n * // Output:\n * // (FiberFailure) Error: my error\n * ```\n *\n * @see {@link runPromiseExit} for a version that returns an `Exit` type instead\n * of rejecting.\n *\n * @since 2.0.0\n * @category Running Effects\n */\nexport const runPromise = runtime_.unsafeRunPromiseEffect;\n/**\n * Runs an effect and returns a `Promise` that resolves to an `Exit`,\n * representing the outcome.\n *\n * **Details**\n *\n * This function executes an effect and resolves to an `Exit` object. The `Exit`\n * type provides detailed information about the result of the effect:\n * - If the effect succeeds, the `Exit` will be of type `Success` and include\n *   the value produced by the effect.\n * - If the effect fails, the `Exit` will be of type `Failure` and contain a\n *   `Cause` object, detailing the failure.\n *\n * Using this function allows you to examine both successful results and failure\n * cases in a unified way, while still leveraging `Promise` for handling the\n * asynchronous behavior of the effect.\n *\n * **When to Use**\n *\n * Use this function when you need to understand the outcome of an effect,\n * whether it succeeded or failed, and want to work with this result using\n * `Promise` syntax. This is particularly useful when integrating with systems\n * that rely on promises but need more detailed error handling than a simple\n * rejection.\n *\n * **Example** (Handling Results as Exit)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * // Execute a successful effect and get the Exit result as a Promise\n * Effect.runPromiseExit(Effect.succeed(1)).then(console.log)\n * // Output:\n * // {\n * //   _id: \"Exit\",\n * //   _tag: \"Success\",\n * //   value: 1\n * // }\n *\n * // Execute a failing effect and get the Exit result as a Promise\n * Effect.runPromiseExit(Effect.fail(\"my error\")).then(console.log)\n * // Output:\n * // {\n * //   _id: \"Exit\",\n * //   _tag: \"Failure\",\n * //   cause: {\n * //     _id: \"Cause\",\n * //     _tag: \"Fail\",\n * //     failure: \"my error\"\n * //   }\n * // }\n * ```\n *\n * @since 2.0.0\n * @category Running Effects\n */\nexport const runPromiseExit = runtime_.unsafeRunPromiseExitEffect;\n/**\n * Executes an effect synchronously, running it immediately and returning the\n * result.\n *\n * **Details**\n *\n * This function evaluates the provided effect synchronously, returning its\n * result directly. It is ideal for effects that do not fail or include\n * asynchronous operations. If the effect does fail or involves async tasks, it\n * will throw an error. Execution stops at the point of failure or asynchronous\n * operation, making it unsuitable for effects that require asynchronous\n * handling.\n *\n * **Important**: Attempting to run effects that involve asynchronous operations\n * or failures will result in exceptions being thrown, so use this function with\n * care for purely synchronous and error-free effects.\n *\n * **When to Use**\n *\n * Use this function when:\n * - You are sure that the effect will not fail or involve asynchronous\n *   operations.\n * - You need a direct, synchronous result from the effect.\n * - You are working within a context where asynchronous effects are not\n *   allowed.\n *\n * Avoid using this function for effects that can fail or require asynchronous\n * handling. For such cases, consider using {@link runPromise} or\n * {@link runSyncExit}.\n *\n * **Example** (Synchronous Logging)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const program = Effect.sync(() => {\n *   console.log(\"Hello, World!\")\n *   return 1\n * })\n *\n * const result = Effect.runSync(program)\n * // Output: Hello, World!\n *\n * console.log(result)\n * // Output: 1\n * ```\n *\n * **Example** (Incorrect Usage with Failing or Async Effects)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * try {\n *   // Attempt to run an effect that fails\n *   Effect.runSync(Effect.fail(\"my error\"))\n * } catch (e) {\n *   console.error(e)\n * }\n * // Output:\n * // (FiberFailure) Error: my error\n *\n * try {\n *   // Attempt to run an effect that involves async work\n *   Effect.runSync(Effect.promise(() => Promise.resolve(1)))\n * } catch (e) {\n *   console.error(e)\n * }\n * // Output:\n * // (FiberFailure) AsyncFiberException: Fiber #0 cannot be resolved synchronously. This is caused by using runSync on an effect that performs async work\n * ```\n *\n * @see {@link runSyncExit} for a version that returns an `Exit` type instead of\n * throwing an error.\n *\n * @since 2.0.0\n * @category Running Effects\n */\nexport const runSync = runtime_.unsafeRunSyncEffect;\n/**\n * Runs an effect synchronously and returns the result as an `Exit` type.\n *\n * **Details**\n *\n * This function executes the provided effect synchronously and returns an `Exit`\n * type that encapsulates the outcome of the effect:\n * - If the effect succeeds, the result is wrapped in a `Success`.\n * - If the effect fails, it returns a `Failure` containing a `Cause` that explains\n *   the failure.\n *\n * If the effect involves asynchronous operations, this function will return a `Failure`\n * with a `Die` cause, indicating that it cannot resolve the effect synchronously.\n * This makes the function suitable for use only with effects that are synchronous\n * in nature.\n *\n * **When to Use**\n *\n * Use this function when:\n * - You want to handle both success and failure outcomes in a structured way using the `Exit` type.\n * - You are working with effects that are purely synchronous and do not involve asynchronous operations.\n * - You need to debug or inspect failures, including their causes, in a detailed manner.\n *\n * Avoid using this function for effects that involve asynchronous operations, as it will fail with a `Die` cause.\n *\n * **Example** (Handling Results as Exit)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * console.log(Effect.runSyncExit(Effect.succeed(1)))\n * // Output:\n * // {\n * //   _id: \"Exit\",\n * //   _tag: \"Success\",\n * //   value: 1\n * // }\n *\n * console.log(Effect.runSyncExit(Effect.fail(\"my error\")))\n * // Output:\n * // {\n * //   _id: \"Exit\",\n * //   _tag: \"Failure\",\n * //   cause: {\n * //     _id: \"Cause\",\n * //     _tag: \"Fail\",\n * //     failure: \"my error\"\n * //   }\n * // }\n * ```\n *\n * **Example** (Asynchronous Operation Resulting in Die)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * console.log(Effect.runSyncExit(Effect.promise(() => Promise.resolve(1))))\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Die',\n * //     defect: [Fiber #0 cannot be resolved synchronously. This is caused by using runSync on an effect that performs async work] {\n * //       fiber: [FiberRuntime],\n * //       _tag: 'AsyncFiberException',\n * //       name: 'AsyncFiberException'\n * //     }\n * //   }\n * // }\n * ```\n *\n * @since 2.0.0\n * @category Running Effects\n */\nexport const runSyncExit = runtime_.unsafeRunSyncExitEffect;\n/**\n * Combines multiple effects and accumulates both successes and failures.\n *\n * **Details**\n *\n * This function allows you to combine multiple effects, continuing through all\n * effects even if some of them fail. Unlike other functions that stop execution\n * upon encountering an error, this function collects all errors into a `Cause`.\n * The final result includes all successes and the accumulated failures.\n *\n * By default, effects are executed sequentially, but you can control\n * concurrency and batching behavior using the `options` parameter. This\n * provides flexibility in scenarios where you want to maximize performance or\n * ensure specific ordering.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Console } from \"effect\"\n *\n * const task1 = Console.log(\"task1\").pipe(Effect.as(1))\n * const task2 = Effect.fail(\"Oh uh!\").pipe(Effect.as(2))\n * const task3 = Console.log(\"task2\").pipe(Effect.as(3))\n * const task4 = Effect.fail(\"Oh no!\").pipe(Effect.as(4))\n *\n * const program = task1.pipe(\n *   Effect.validate(task2),\n *   Effect.validate(task3),\n *   Effect.validate(task4)\n * )\n *\n * Effect.runPromiseExit(program).then(console.log)\n * // Output:\n * // task1\n * // task2\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Sequential',\n * //     left: { _id: 'Cause', _tag: 'Fail', failure: 'Oh uh!' },\n * //     right: { _id: 'Cause', _tag: 'Fail', failure: 'Oh no!' }\n * //   }\n * // }\n * ```\n *\n * @see {@link zip} for a version that stops at the first error.\n *\n * @since 2.0.0\n * @category Error Accumulation\n */\nexport const validate = fiberRuntime.validate;\n/**\n * Sequentially combines two effects using a specified combiner function while\n * accumulating errors.\n *\n * **Details**\n *\n * This function combines two effects, `self` and `that`, into a single effect\n * by applying the provided combiner function to their results. If both effects\n * succeed, the combiner function is applied to their results to produce the\n * final value. If either effect fails, the failures are accumulated into a\n * combined `Cause`.\n *\n * By default, effects are executed sequentially. However, the execution mode\n * can be controlled using the `options` parameter to enable concurrency,\n * batching, or customized finalizer behavior.\n *\n * @since 2.0.0\n * @category Error Accumulation\n */\nexport const validateWith = fiberRuntime.validateWith;\n/**\n * Combines two effects into a single effect, producing a tuple of their\n * results.\n *\n * **Details**\n *\n * This function combines two effects, `self` and `that`, into one. It executes\n * the first effect (`self`) and then the second effect (`that`), collecting\n * their results into a tuple. Both effects must succeed for the resulting\n * effect to succeed. If either effect fails, the entire operation fails.\n *\n * By default, the effects are executed sequentially. If the `concurrent` option\n * is set to `true`, the effects will run concurrently, potentially improving\n * performance for independent operations.\n *\n * **Example** (Combining Two Effects Sequentially)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task1 = Effect.succeed(1).pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Effect.log(\"task1 done\"))\n * )\n * const task2 = Effect.succeed(\"hello\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Effect.log(\"task2 done\"))\n * )\n *\n * // Combine the two effects together\n * //\n * //      ┌─── Effect<[number, string], never, never>\n * //      ▼\n * const program = Effect.zip(task1, task2)\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // timestamp=... level=INFO fiber=#0 message=\"task1 done\"\n * // timestamp=... level=INFO fiber=#0 message=\"task2 done\"\n * // [ 1, 'hello' ]\n * ```\n *\n * **Example** (Combining Two Effects Concurrently)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task1 = Effect.succeed(1).pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Effect.log(\"task1 done\"))\n * )\n * const task2 = Effect.succeed(\"hello\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Effect.log(\"task2 done\"))\n * )\n *\n * // Run both effects concurrently using the concurrent option\n * const program = Effect.zip(task1, task2, { concurrent: true })\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // timestamp=... level=INFO fiber=#0 message=\"task2 done\"\n * // timestamp=... level=INFO fiber=#0 message=\"task1 done\"\n * // [ 1, 'hello' ]\n * ```\n *\n * @see {@link zipWith} for a version that combines the results with a custom\n * function.\n * @see {@link validate} for a version that accumulates errors.\n *\n * @since 2.0.0\n * @category Zipping\n */\nexport const zip = fiberRuntime.zipOptions;\n/**\n * Executes two effects sequentially, returning the result of the first effect\n * and ignoring the result of the second.\n *\n * **Details**\n *\n * This function allows you to run two effects in sequence, where the result of\n * the first effect is preserved, and the result of the second effect is\n * discarded. By default, the two effects are executed sequentially. If you need\n * them to run concurrently, you can pass the `{ concurrent: true }` option.\n *\n * The second effect will always be executed, even though its result is ignored.\n * This makes it useful for cases where you want to execute an effect for its\n * side effects while keeping the result of another effect.\n *\n * **When to Use**\n *\n * Use this function when you are only interested in the result of the first\n * effect but still need to run the second effect for its side effects, such as\n * logging or performing a cleanup action.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task1 = Effect.succeed(1).pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Effect.log(\"task1 done\"))\n * )\n * const task2 = Effect.succeed(\"hello\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Effect.log(\"task2 done\"))\n * )\n *\n * const program = Effect.zipLeft(task1, task2)\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // timestamp=... level=INFO fiber=#0 message=\"task1 done\"\n * // timestamp=... level=INFO fiber=#0 message=\"task2 done\"\n * // 1\n * ```\n *\n * @see {@link zipRight} for a version that returns the result of the second\n * effect.\n *\n * @since 2.0.0\n * @category Zipping\n */\nexport const zipLeft = fiberRuntime.zipLeftOptions;\n/**\n * Executes two effects sequentially, returning the result of the second effect\n * while ignoring the result of the first.\n *\n * **Details**\n *\n * This function allows you to run two effects in sequence, keeping the result\n * of the second effect and discarding the result of the first. By default, the\n * two effects are executed sequentially. If you need them to run concurrently,\n * you can pass the `{ concurrent: true }` option.\n *\n * The first effect will always be executed, even though its result is ignored.\n * This makes it useful for scenarios where the first effect is needed for its\n * side effects, but only the result of the second effect is important.\n *\n * **When to Use**\n *\n * Use this function when you are only interested in the result of the second\n * effect but still need to run the first effect for its side effects, such as\n * initialization or setup tasks.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task1 = Effect.succeed(1).pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Effect.log(\"task1 done\"))\n * )\n * const task2 = Effect.succeed(\"hello\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Effect.log(\"task2 done\"))\n * )\n *\n * const program = Effect.zipRight(task1, task2)\n *\n * Effect.runPromise(program).then(console.log)\n * // Output:\n * // timestamp=... level=INFO fiber=#0 message=\"task1 done\"\n * // timestamp=... level=INFO fiber=#0 message=\"task2 done\"\n * // hello\n * ```\n *\n * @see {@link zipLeft} for a version that returns the result of the first\n * effect.\n *\n * @since 2.0.0\n * @category Zipping\n */\nexport const zipRight = fiberRuntime.zipRightOptions;\n/**\n * Combines two effects sequentially and applies a function to their results to\n * produce a single value.\n *\n * **Details**\n *\n * This function runs two effects in sequence (or concurrently, if the `{\n * concurrent: true }` option is provided) and combines their results using a\n * provided function. Unlike {@link zip}, which returns a tuple of the results,\n * this function processes the results with a custom function to produce a\n * single output.\n *\n * **Example** (Combining Effects with a Custom Function)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const task1 = Effect.succeed(1).pipe(\n *   Effect.delay(\"200 millis\"),\n *   Effect.tap(Effect.log(\"task1 done\"))\n * )\n * const task2 = Effect.succeed(\"hello\").pipe(\n *   Effect.delay(\"100 millis\"),\n *   Effect.tap(Effect.log(\"task2 done\"))\n * )\n *\n * const task3 = Effect.zipWith(\n *   task1,\n *   task2,\n *   // Combines results into a single value\n *   (number, string) => number + string.length\n * )\n *\n * Effect.runPromise(task3).then(console.log)\n * // Output:\n * // timestamp=... level=INFO fiber=#3 message=\"task1 done\"\n * // timestamp=... level=INFO fiber=#2 message=\"task2 done\"\n * // 6\n * ```\n *\n * @since 2.0.0\n * @category Zipping\n */\nexport const zipWith = fiberRuntime.zipWithOptions;\n/**\n * Applies the function produced by one effect to the value produced by another effect.\n *\n * **Details**\n *\n * This function combines two effects:\n * - The first effect produces a function of type `(a: A) => B`.\n * - The second effect produces a value of type `A`.\n *\n * Once both effects complete successfully, the function is applied to the value, resulting in an effect that produces a value of type `B`.\n *\n * @since 2.0.0\n */\nexport const ap = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (f, a) => f(a)));\n/**\n * @category Requests & Batching\n * @since 2.0.0\n */\nexport const blocked = core.blocked;\n/**\n * @category Requests & Batching\n * @since 2.0.0\n */\nexport const runRequestBlock = core.runRequestBlock;\n/**\n * @category Requests & Batching\n * @since 2.0.0\n */\nexport const step = core.step;\n/**\n * @since 2.0.0\n * @category Requests & Batching\n */\nexport const request = /*#__PURE__*/dual(args => Request.isRequest(args[0]), query.fromRequest);\n/**\n * @since 2.0.0\n * @category Requests & Batching\n */\nexport const cacheRequestResult = query.cacheRequest;\n/**\n * @since 2.0.0\n * @category Requests & Batching\n */\nexport const withRequestBatching = core.withRequestBatching;\n/**\n * @since 2.0.0\n * @category Requests & Batching\n */\nexport const withRequestCaching = query.withRequestCaching;\n/**\n * @since 2.0.0\n * @category Requests & Batching\n */\nexport const withRequestCache = query.withRequestCache;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const tracer = effect.tracer;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const tracerWith = defaultServices.tracerWith;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const withTracer = defaultServices.withTracer;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const withTracerScoped = fiberRuntime.withTracerScoped;\n/**\n * Disable the tracer for the given Effect.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * Effect.succeed(42).pipe(\n *   Effect.withSpan(\"my-span\"),\n *   // the span will not be registered with the tracer\n *   Effect.withTracerEnabled(false)\n * )\n * ```\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const withTracerEnabled = core.withTracerEnabled;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const withTracerTiming = core.withTracerTiming;\n/**\n * Adds annotations to each span in the effect for enhanced traceability.\n *\n * **Details**\n *\n * This function lets you attach key-value annotations to all spans generated\n * during the execution of an effect. Annotations provide additional context,\n * such as metadata or labels, which can help you understand and debug\n * asynchronous workflows more effectively.\n *\n * You can either pass a single key-value pair or a record of key-value pairs to\n * annotate the spans. These annotations can then be visualized in tracing tools\n * that support span annotations.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const annotateSpans = effect.annotateSpans;\n/**\n * Adds annotations to the currently active span for traceability.\n *\n * **Details**\n *\n * This function adds key-value annotations to the currently active span in the\n * effect's trace. These annotations help provide more context about the\n * operation being executed at a specific point in time. Unlike\n * {@link annotateSpans}, which applies to all spans in an effect, this function\n * focuses solely on the active span.\n *\n * You can either pass a single key-value pair or a record of key-value pairs to\n * annotate the span. These annotations are useful for adding metadata to\n * operations, especially in systems with detailed observability requirements.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const annotateCurrentSpan = effect.annotateCurrentSpan;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const currentSpan = effect.currentSpan;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const currentParentSpan = effect.currentParentSpan;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const spanAnnotations = effect.spanAnnotations;\n/**\n * @since 2.0.0\n * @category Tracing\n */\nexport const spanLinks = effect.spanLinks;\n/**\n * For all spans in this effect, add a link with the provided span.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const linkSpans = effect.linkSpans;\n/**\n * Add span links to the current span.\n *\n * @since 3.14.0\n * @category Tracing\n */\nexport const linkSpanCurrent = effect.linkSpanCurrent;\n/**\n * Create a new span for tracing.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const makeSpan = effect.makeSpan;\n/**\n * Create a new span for tracing, and automatically close it when the Scope\n * finalizes.\n *\n * The span is not added to the current span stack, so no child spans will be\n * created for it.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const makeSpanScoped = fiberRuntime.makeSpanScoped;\n/**\n * Create a new span for tracing, and automatically close it when the effect\n * completes.\n *\n * The span is not added to the current span stack, so no child spans will be\n * created for it.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const useSpan = effect.useSpan;\n/**\n * Wraps the effect with a new span for tracing.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const withSpan = effect.withSpan;\n/**\n * Wraps a function that returns an effect with a new span for tracing.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const getTodo = Effect.functionWithSpan({\n *   body: (id: number) => Effect.succeed(`Got todo ${id}!`),\n *   options: (id) => ({\n *     name: `getTodo-${id}`,\n *     attributes: { id }\n *   })\n * })\n * ```\n *\n * @since 3.2.0\n * @category Tracing\n */\nexport const functionWithSpan = effect.functionWithSpan;\n/**\n * Wraps the effect with a new span for tracing.\n *\n * The span is ended when the Scope is finalized.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const withSpanScoped = fiberRuntime.withSpanScoped;\n/**\n * Adds the provided span to the current span stack.\n *\n * @since 2.0.0\n * @category Tracing\n */\nexport const withParentSpan = effect.withParentSpan;\n/**\n * Safely handles nullable values by creating an effect that fails for `null` or\n * `undefined`.\n *\n * **Details**\n *\n * This function ensures that an input value is non-null and non-undefined\n * before processing it. If the value is valid, the effect succeeds with the\n * value. If the value is `null` or `undefined`, the effect fails with a\n * `NoSuchElementException`. This is particularly useful for avoiding\n * null-related errors by clearly separating valid values from invalid ones in\n * effectful computations.\n *\n * The failure with `NoSuchElementException` allows you to explicitly handle\n * cases where a value is expected but not provided, leading to safer and more\n * predictable code.\n *\n * **When to Use**\n *\n * Use this function when working with values that may be `null` or `undefined`\n * and you want to ensure that only non-null values are processed. It helps\n * enforce null-safety and makes error handling more explicit.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<number, NoSuchElementException, never>\n * //      ▼\n * const maybe1 = Effect.fromNullable(1)\n *\n * Effect.runPromiseExit(maybe1).then(console.log)\n * // Output:\n * // { _id: 'Exit', _tag: 'Success', value: 1 }\n *\n * //      ┌─── Effect<number, NoSuchElementException, never>\n * //      ▼\n * const maybe2 = Effect.fromNullable(null as number | null)\n *\n * Effect.runPromiseExit(maybe2).then(console.log)\n * // Output:\n * // {\n * //   _id: 'Exit',\n * //   _tag: 'Failure',\n * //   cause: {\n * //     _id: 'Cause',\n * //     _tag: 'Fail',\n * //     failure: { _tag: 'NoSuchElementException' }\n * //   }\n * // }\n * ```\n *\n * @since 2.0.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const fromNullable = effect.fromNullable;\n/**\n * Converts an effect that may fail with a `NoSuchElementException` into an\n * effect that succeeds with an `Option`.\n *\n * **Details**\n *\n * This function transforms an effect that might fail with\n * `Cause.NoSuchElementException` into an effect that succeeds with an `Option`\n * type. If the original effect succeeds, its value is wrapped in `Option.some`.\n * If it fails specifically due to a `NoSuchElementException`, the failure is\n * mapped to `Option.none`. Other types of failures remain unchanged and are\n * passed through as they are.\n *\n * This is useful when working with effects where you want to gracefully handle\n * the absence of a value while preserving other potential failures.\n *\n * **When to Use**\n *\n * Use this function when you need to handle missing values as `Option.none`\n * rather than throwing or propagating errors like `NoSuchElementException`.\n * It’s ideal for scenarios where you want to explicitly represent optionality\n * in a type-safe way while retaining other failure information.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * //      ┌─── Effect<number, NoSuchElementException, never>\n * //      ▼\n * const maybe1 = Effect.fromNullable(1)\n *\n * //      ┌─── Effect<Option<number>, never, never>\n * //      ▼\n * const option1 = Effect.optionFromOptional(maybe1)\n *\n * Effect.runPromise(option1).then(console.log)\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * //      ┌─── Effect<number, NoSuchElementException, never>\n * //      ▼\n * const maybe2 = Effect.fromNullable(null as number | null)\n *\n * //      ┌─── Effect<Option<number>, never, never>\n * //      ▼\n * const option2 = Effect.optionFromOptional(maybe2)\n *\n * Effect.runPromise(option2).then(console.log)\n * // Output: { _tag: 'None' }\n * ```\n *\n * @since 2.0.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const optionFromOptional = effect.optionFromOptional;\n/**\n * Converts an `Option` of an `Effect` into an `Effect` of an `Option`.\n *\n * **Details**\n *\n * This function transforms an `Option<Effect<A, E, R>>` into an\n * `Effect<Option<A>, E, R>`. If the `Option` is `None`, the resulting `Effect`\n * will immediately succeed with a `None` value. If the `Option` is `Some`, the\n * inner `Effect` will be executed, and its result wrapped in a `Some`.\n *\n * **Example**\n *\n * ```ts\n * import { Effect, Option } from \"effect\"\n *\n * //      ┌─── Option<Effect<number, never, never>>\n * //      ▼\n * const maybe = Option.some(Effect.succeed(42))\n *\n * //      ┌─── Effect<Option<number>, never, never>\n * //      ▼\n * const result = Effect.transposeOption(maybe)\n *\n * console.log(Effect.runSync(result))\n * // Output: { _id: 'Option', _tag: 'Some', value: 42 }\n * ```\n *\n * @since 3.13.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const transposeOption = self => {\n  return option_.isNone(self) ? succeedNone : map(self.value, option_.some);\n};\n/**\n * Applies an `Effect` on an `Option` and transposes the result.\n *\n * **Details**\n *\n * If the `Option` is `None`, the resulting `Effect` will immediately succeed with a `None` value.\n * If the `Option` is `Some`, the effectful operation will be executed on the inner value, and its result wrapped in a `Some`.\n *\n * @example\n * ```ts\n * import { Effect, Option, pipe } from \"effect\"\n *\n * //          ┌─── Effect<Option<number>, never, never>>\n * //          ▼\n * const noneResult = pipe(\n *   Option.none(),\n *   Effect.transposeMapOption(() => Effect.succeed(42)) // will not be executed\n * )\n * console.log(Effect.runSync(noneResult))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * //          ┌─── Effect<Option<number>, never, never>>\n * //          ▼\n * const someSuccessResult = pipe(\n *   Option.some(42),\n *   Effect.transposeMapOption((value) => Effect.succeed(value * 2))\n * )\n * console.log(Effect.runSync(someSuccessResult))\n * // Output: { _id: 'Option', _tag: 'Some', value: 84 }\n * ```\n *\n * @since 3.14.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const transposeMapOption = /*#__PURE__*/dual(2, (self, f) => option_.isNone(self) ? succeedNone : map(f(self.value), option_.some));\nconst makeTagProxy = TagClass => {\n  const cache = new Map();\n  return new Proxy(TagClass, {\n    get(target, prop, receiver) {\n      if (prop in target) {\n        return Reflect.get(target, prop, receiver);\n      }\n      if (cache.has(prop)) {\n        return cache.get(prop);\n      }\n      const fn = (...args) => core.andThen(target, s => {\n        if (typeof s[prop] === \"function\") {\n          cache.set(prop, (...args) => core.andThen(target, s => s[prop](...args)));\n          return s[prop](...args);\n        }\n        cache.set(prop, core.andThen(target, s => s[prop]));\n        return s[prop];\n      });\n      const cn = core.andThen(target, s => s[prop]);\n      Object.assign(fn, cn);\n      Object.setPrototypeOf(fn, Object.getPrototypeOf(cn));\n      cache.set(prop, fn);\n      return fn;\n    }\n  });\n};\n/**\n * Creates a unique tag for a dependency, embedding the service's methods as\n * static properties.\n *\n * **Details**\n *\n * This function allows you to define a `Tag` for a service or dependency in\n * your application. The `Tag` not only acts as an identifier but also provides\n * direct access to the service's methods via static properties. This makes it\n * easier to access and use the service in your code without manually managing\n * contexts.\n *\n * In the example below, the fields of the service (in this case, the `notify`\n * method) are turned into static properties of the Notifications class, making\n * it easier to access them.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * class Notifications extends Effect.Tag(\"Notifications\")<\n *   Notifications,\n *   { readonly notify: (message: string) => Effect.Effect<void> }\n * >() {}\n *\n * // Create an effect that depends on the Notifications service\n * const action = Notifications.notify(\"Hello, world!\")\n * ```\n *\n * @since 2.0.0\n * @category Context\n */\nexport const Tag = id => () => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 2;\n  const creationError = new Error();\n  Error.stackTraceLimit = limit;\n  function TagClass() {}\n  Object.setPrototypeOf(TagClass, TagProto);\n  TagClass.key = id;\n  Object.defineProperty(TagClass, \"use\", {\n    get() {\n      return body => core.andThen(this, body);\n    }\n  });\n  Object.defineProperty(TagClass, \"stack\", {\n    get() {\n      return creationError.stack;\n    }\n  });\n  return makeTagProxy(TagClass);\n};\n/**\n * Simplifies the creation and management of services in Effect by defining both\n * a `Tag` and a `Layer`.\n *\n * **Details**\n *\n * This function allows you to streamline the creation of services by combining\n * the definition of a `Context.Tag` and a `Layer` in a single step. It supports\n * various ways of providing the service implementation:\n * - Using an `effect` to define the service dynamically.\n * - Using `sync` or `succeed` to define the service statically.\n * - Using `scoped` to create services with lifecycle management.\n *\n * It also allows you to specify dependencies for the service, which will be\n * provided automatically when the service is used. Accessors can be optionally\n * generated for the service, making it more convenient to use.\n *\n * **Example**\n *\n * ```ts\n * import { Effect } from 'effect';\n *\n * class Prefix extends Effect.Service<Prefix>()(\"Prefix\", {\n *  sync: () => ({ prefix: \"PRE\" })\n * }) {}\n *\n * class Logger extends Effect.Service<Logger>()(\"Logger\", {\n *  accessors: true,\n *  effect: Effect.gen(function* () {\n *    const { prefix } = yield* Prefix\n *    return {\n *      info: (message: string) =>\n *        Effect.sync(() => {\n *          console.log(`[${prefix}][${message}]`)\n *        })\n *    }\n *  }),\n *  dependencies: [Prefix.Default]\n * }) {}\n * ```\n *\n * @since 3.9.0\n * @category Context\n * @experimental might be up for breaking changes\n */\nexport const Service = function () {\n  return function () {\n    const [id, maker] = arguments;\n    const proxy = \"accessors\" in maker ? maker[\"accessors\"] : false;\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 2;\n    const creationError = new Error();\n    Error.stackTraceLimit = limit;\n    let patchState = \"unchecked\";\n    const TagClass = function (service) {\n      if (patchState === \"unchecked\") {\n        const proto = Object.getPrototypeOf(service);\n        if (proto === Object.prototype || proto === null) {\n          patchState = \"plain\";\n        } else {\n          const selfProto = Object.getPrototypeOf(this);\n          Object.setPrototypeOf(selfProto, proto);\n          patchState = \"patched\";\n        }\n      }\n      if (patchState === \"plain\") {\n        Object.assign(this, service);\n      } else if (patchState === \"patched\") {\n        Object.setPrototypeOf(service, Object.getPrototypeOf(this));\n        return service;\n      }\n    };\n    TagClass.prototype._tag = id;\n    Object.defineProperty(TagClass, \"make\", {\n      get() {\n        return service => new this(service);\n      }\n    });\n    Object.defineProperty(TagClass, \"use\", {\n      get() {\n        return body => core.andThen(this, body);\n      }\n    });\n    TagClass.key = id;\n    Object.assign(TagClass, TagProto);\n    Object.defineProperty(TagClass, \"stack\", {\n      get() {\n        return creationError.stack;\n      }\n    });\n    const hasDeps = \"dependencies\" in maker && maker.dependencies.length > 0;\n    const layerName = hasDeps ? \"DefaultWithoutDependencies\" : \"Default\";\n    let layerCache;\n    if (\"effect\" in maker) {\n      Object.defineProperty(TagClass, layerName, {\n        get() {\n          return layerCache ??= layer.fromEffect(TagClass, map(maker.effect, _ => new this(_)));\n        }\n      });\n    } else if (\"scoped\" in maker) {\n      Object.defineProperty(TagClass, layerName, {\n        get() {\n          return layerCache ??= layer.scoped(TagClass, map(maker.scoped, _ => new this(_)));\n        }\n      });\n    } else if (\"sync\" in maker) {\n      Object.defineProperty(TagClass, layerName, {\n        get() {\n          return layerCache ??= layer.sync(TagClass, () => new this(maker.sync()));\n        }\n      });\n    } else {\n      Object.defineProperty(TagClass, layerName, {\n        get() {\n          return layerCache ??= layer.succeed(TagClass, new this(maker.succeed));\n        }\n      });\n    }\n    if (hasDeps) {\n      let layerWithDepsCache;\n      Object.defineProperty(TagClass, \"Default\", {\n        get() {\n          return layerWithDepsCache ??= layer.provide(this.DefaultWithoutDependencies, maker.dependencies);\n        }\n      });\n    }\n    return proxy === true ? makeTagProxy(TagClass) : TagClass;\n  };\n};\n/**\n * The `Effect.fn` function allows you to create traced functions that return an\n * effect. It provides two key features:\n *\n * - **Stack traces with location details** if an error occurs.\n * - **Automatic span creation** for tracing when a span name is provided.\n *\n * If a span name is passed as the first argument, the function's execution is\n * tracked using that name. If no name is provided, stack tracing still works,\n * but spans are not created.\n *\n * A function can be defined using either:\n *\n * - A generator function, allowing the use of `yield*` for effect composition.\n * - A regular function that returns an `Effect`.\n *\n * **Example** (Creating a Traced Function with a Span Name)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const myfunc = Effect.fn(\"myspan\")(function* <N extends number>(n: N) {\n *   yield* Effect.annotateCurrentSpan(\"n\", n) // Attach metadata to the span\n *   console.log(`got: ${n}`)\n *   yield* Effect.fail(new Error(\"Boom!\")) // Simulate failure\n * })\n *\n * Effect.runFork(myfunc(100).pipe(Effect.catchAllCause(Effect.logError)))\n * // Output:\n * // got: 100\n * // timestamp=... level=ERROR fiber=#0 cause=\"Error: Boom!\n * //     at <anonymous> (/.../index.ts:6:22) <= Raise location\n * //     at myspan (/.../index.ts:3:23)  <= Definition location\n * //     at myspan (/.../index.ts:9:16)\" <= Call location\n * ```\n *\n * `Effect.fn` automatically creates spans. The spans capture information about\n * the function execution, including metadata and error details.\n *\n * **Example** (Exporting Spans to the Console)\n *\n * ```ts skip-type-checking\n * import { Effect } from \"effect\"\n * import { NodeSdk } from \"@effect/opentelemetry\"\n * import {\n *   ConsoleSpanExporter,\n *   BatchSpanProcessor\n * } from \"@opentelemetry/sdk-trace-base\"\n *\n * const myfunc = Effect.fn(\"myspan\")(function* <N extends number>(n: N) {\n *   yield* Effect.annotateCurrentSpan(\"n\", n)\n *   console.log(`got: ${n}`)\n *   yield* Effect.fail(new Error(\"Boom!\"))\n * })\n *\n * const program = myfunc(100)\n *\n * const NodeSdkLive = NodeSdk.layer(() => ({\n *   resource: { serviceName: \"example\" },\n *   // Export span data to the console\n *   spanProcessor: new BatchSpanProcessor(new ConsoleSpanExporter())\n * }))\n *\n * Effect.runFork(program.pipe(Effect.provide(NodeSdkLive)))\n * // Output:\n * // got: 100\n * // {\n * //   resource: {\n * //     attributes: {\n * //       'service.name': 'example',\n * //       'telemetry.sdk.language': 'nodejs',\n * //       'telemetry.sdk.name': '@effect/opentelemetry',\n * //       'telemetry.sdk.version': '1.30.1'\n * //     }\n * //   },\n * //   instrumentationScope: { name: 'example', version: undefined, schemaUrl: undefined },\n * //   traceId: '22801570119e57a6e2aacda3dec9665b',\n * //   parentId: undefined,\n * //   traceState: undefined,\n * //   name: 'myspan',\n * //   id: '7af530c1e01bc0cb',\n * //   kind: 0,\n * //   timestamp: 1741182277518402.2,\n * //   duration: 4300.416,\n * //   attributes: {\n * //     n: 100,\n * //     'code.stacktrace': 'at <anonymous> (/.../index.ts:8:23)\\n' +\n * //       'at <anonymous> (/.../index.ts:14:17)'\n * //   },\n * //   status: { code: 2, message: 'Boom!' },\n * //   events: [\n * //     {\n * //       name: 'exception',\n * //       attributes: {\n * //         'exception.type': 'Error',\n * //         'exception.message': 'Boom!',\n * //         'exception.stacktrace': 'Error: Boom!\\n' +\n * //           '    at <anonymous> (/.../index.ts:11:22)\\n' +\n * //           '    at myspan (/.../index.ts:8:23)\\n' +\n * //           '    at myspan (/.../index.ts:14:17)'\n * //       },\n * //       time: [ 1741182277, 522702583 ],\n * //       droppedAttributesCount: 0\n * //     }\n * //   ],\n * //   links: []\n * // }\n * ```\n *\n * `Effect.fn` also acts as a pipe function, allowing you to create a pipeline\n * after the function definition using the effect returned by the generator\n * function as the starting value of the pipeline.\n *\n * **Example** (Creating a Traced Function with a Delay)\n *\n * ```ts\n * import { Effect } from \"effect\"\n *\n * const myfunc = Effect.fn(\n *   function* (n: number) {\n *     console.log(`got: ${n}`)\n *     yield* Effect.fail(new Error(\"Boom!\"))\n *   },\n *   // You can access both the created effect and the original arguments\n *   (effect, n) => Effect.delay(effect, `${n / 100} seconds`)\n * )\n *\n * Effect.runFork(myfunc(100).pipe(Effect.catchAllCause(Effect.logError)))\n * // Output:\n * // got: 100\n * // timestamp=... level=ERROR fiber=#0 cause=\"Error: Boom! (<= after 1 second)\n * ```\n *\n * @see {@link fnUntraced} for a version of this function that doesn't add a span.\n *\n * @since 3.11.0\n * @category Tracing\n */\nexport const fn = function (nameOrBody, ...pipeables) {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 2;\n  const errorDef = new Error();\n  Error.stackTraceLimit = limit;\n  if (typeof nameOrBody !== \"string\") {\n    return defineLength(nameOrBody.length, function (...args) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 2;\n      const errorCall = new Error();\n      Error.stackTraceLimit = limit;\n      return fnApply({\n        self: this,\n        body: nameOrBody,\n        args,\n        pipeables,\n        spanName: \"<anonymous>\",\n        spanOptions: {\n          context: internalTracer.DisablePropagation.context(true)\n        },\n        errorDef,\n        errorCall\n      });\n    });\n  }\n  const name = nameOrBody;\n  const options = pipeables[0];\n  return (body, ...pipeables) => defineLength(body.length, {\n    [name](...args) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 2;\n      const errorCall = new Error();\n      Error.stackTraceLimit = limit;\n      return fnApply({\n        self: this,\n        body,\n        args,\n        pipeables,\n        spanName: name,\n        spanOptions: options,\n        errorDef,\n        errorCall\n      });\n    }\n  }[name]);\n};\nfunction defineLength(length, fn) {\n  return Object.defineProperty(fn, \"length\", {\n    value: length,\n    configurable: true\n  });\n}\nfunction fnApply(options) {\n  let effect;\n  let fnError = undefined;\n  if (isGeneratorFunction(options.body)) {\n    effect = core.fromIterator(() => options.body.apply(options.self, options.args));\n  } else {\n    try {\n      effect = options.body.apply(options.self, options.args);\n    } catch (error) {\n      fnError = error;\n      effect = die(error);\n    }\n  }\n  if (options.pipeables.length > 0) {\n    try {\n      for (const x of options.pipeables) {\n        effect = x(effect, ...options.args);\n      }\n    } catch (error) {\n      effect = fnError ? failCause(internalCause.sequential(internalCause.die(fnError), internalCause.die(error))) : die(error);\n    }\n  }\n  let cache = false;\n  const captureStackTrace = () => {\n    if (cache !== false) {\n      return cache;\n    }\n    if (options.errorCall.stack) {\n      const stackDef = options.errorDef.stack.trim().split(\"\\n\");\n      const stackCall = options.errorCall.stack.trim().split(\"\\n\");\n      let endStackDef = stackDef.slice(2).join(\"\\n\").trim();\n      if (!endStackDef.includes(`(`)) {\n        endStackDef = endStackDef.replace(/at (.*)/, \"at ($1)\");\n      }\n      let endStackCall = stackCall.slice(2).join(\"\\n\").trim();\n      if (!endStackCall.includes(`(`)) {\n        endStackCall = endStackCall.replace(/at (.*)/, \"at ($1)\");\n      }\n      cache = `${endStackDef}\\n${endStackCall}`;\n      return cache;\n    }\n  };\n  const opts = options.spanOptions && \"captureStackTrace\" in options.spanOptions ? options.spanOptions : {\n    captureStackTrace,\n    ...options.spanOptions\n  };\n  return withSpan(effect, options.spanName, opts);\n}\n/**\n * Same as {@link fn}, but allows you to create a function that is not traced, for when performance is critical.\n *\n * @see {@link fn} for a version that includes tracing.\n *\n * @since 3.12.0\n * @category Tracing\n */\nexport const fnUntraced = core.fnUntraced;\n//# sourceMappingURL=Effect.js.map","/**\n * @since 3.10.0\n */\nimport * as Arr from \"./Array.js\";\nimport * as Cause from \"./Cause.js\";\nimport { TaggedError } from \"./Data.js\";\nimport * as Effect from \"./Effect.js\";\nimport * as Either from \"./Either.js\";\nimport * as Exit from \"./Exit.js\";\nimport { dual } from \"./Function.js\";\nimport { globalValue } from \"./GlobalValue.js\";\nimport * as Inspectable from \"./Inspectable.js\";\nimport * as util_ from \"./internal/schema/util.js\";\nimport * as Option from \"./Option.js\";\nimport * as Predicate from \"./Predicate.js\";\nimport * as Scheduler from \"./Scheduler.js\";\nimport * as AST from \"./SchemaAST.js\";\n/**\n * @category model\n * @since 3.10.0\n */\nexport class Pointer {\n  path;\n  actual;\n  issue;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Pointer\";\n  constructor(path, actual, issue) {\n    this.path = path;\n    this.actual = actual;\n    this.issue = issue;\n  }\n}\n/**\n * Error that occurs when an unexpected key or index is present.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Unexpected {\n  actual;\n  message;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Unexpected\";\n  constructor(actual,\n  /**\n   * @since 3.10.0\n   */\n  message) {\n    this.actual = actual;\n    this.message = message;\n  }\n}\n/**\n * Error that occurs when a required key or index is missing.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Missing {\n  ast;\n  message;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Missing\";\n  /**\n   * @since 3.10.0\n   */\n  actual = undefined;\n  constructor(\n  /**\n   * @since 3.10.0\n   */\n  ast,\n  /**\n   * @since 3.10.0\n   */\n  message) {\n    this.ast = ast;\n    this.message = message;\n  }\n}\n/**\n * Error that contains multiple issues.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Composite {\n  ast;\n  actual;\n  issues;\n  output;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Composite\";\n  constructor(ast, actual, issues, output) {\n    this.ast = ast;\n    this.actual = actual;\n    this.issues = issues;\n    this.output = output;\n  }\n}\n/**\n * Error that occurs when a refinement has an error.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Refinement {\n  ast;\n  actual;\n  kind;\n  issue;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Refinement\";\n  constructor(ast, actual, kind, issue) {\n    this.ast = ast;\n    this.actual = actual;\n    this.kind = kind;\n    this.issue = issue;\n  }\n}\n/**\n * Error that occurs when a transformation has an error.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Transformation {\n  ast;\n  actual;\n  kind;\n  issue;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Transformation\";\n  constructor(ast, actual, kind, issue) {\n    this.ast = ast;\n    this.actual = actual;\n    this.kind = kind;\n    this.issue = issue;\n  }\n}\n/**\n * The `Type` variant of the `ParseIssue` type represents an error that occurs when the `actual` value is not of the expected type.\n * The `ast` field specifies the expected type, and the `actual` field contains the value that caused the error.\n *\n * @category model\n * @since 3.10.0\n */\nexport class Type {\n  ast;\n  actual;\n  message;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Type\";\n  constructor(ast, actual, message) {\n    this.ast = ast;\n    this.actual = actual;\n    this.message = message;\n  }\n}\n/**\n * The `Forbidden` variant of the `ParseIssue` type represents a forbidden operation, such as when encountering an Effect that is not allowed to execute (e.g., using `runSync`).\n *\n * @category model\n * @since 3.10.0\n */\nexport class Forbidden {\n  ast;\n  actual;\n  message;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"Forbidden\";\n  constructor(ast, actual, message) {\n    this.ast = ast;\n    this.actual = actual;\n    this.message = message;\n  }\n}\n/**\n * @category type id\n * @since 3.10.0\n */\nexport const ParseErrorTypeId = /*#__PURE__*/Symbol.for(\"effect/Schema/ParseErrorTypeId\");\n/**\n * @since 3.10.0\n */\nexport const isParseError = u => Predicate.hasProperty(u, ParseErrorTypeId);\n/**\n * @since 3.10.0\n */\nexport class ParseError extends /*#__PURE__*/TaggedError(\"ParseError\") {\n  /**\n   * @since 3.10.0\n   */\n  [ParseErrorTypeId] = ParseErrorTypeId;\n  get message() {\n    return this.toString();\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return TreeFormatter.formatIssueSync(this.issue);\n  }\n  /**\n   * @since 3.10.0\n   */\n  toJSON() {\n    return {\n      _id: \"ParseError\",\n      message: this.toString()\n    };\n  }\n  /**\n   * @since 3.10.0\n   */\n  [Inspectable.NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const parseError = issue => new ParseError({\n  issue\n});\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const succeed = Either.right;\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const fail = Either.left;\nconst _try = Either.try;\nexport {\n/**\n * @category constructors\n * @since 3.10.0\n */\n_try as try };\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const fromOption = Either.fromOption;\nconst isEither = Either.isEither;\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  return isEither(self) ? Either.match(self, {\n    onLeft: Either.left,\n    onRight: f\n  }) : Effect.flatMap(self, f);\n});\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const map = /*#__PURE__*/dual(2, (self, f) => {\n  return isEither(self) ? Either.map(self, f) : Effect.map(self, f);\n});\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const mapError = /*#__PURE__*/dual(2, (self, f) => {\n  return isEither(self) ? Either.mapLeft(self, f) : Effect.mapError(self, f);\n});\n// TODO(4.0): remove\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const eitherOrUndefined = self => {\n  if (isEither(self)) {\n    return self;\n  }\n};\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const mapBoth = /*#__PURE__*/dual(2, (self, options) => {\n  return isEither(self) ? Either.mapBoth(self, {\n    onLeft: options.onFailure,\n    onRight: options.onSuccess\n  }) : Effect.mapBoth(self, options);\n});\n/**\n * @category optimisation\n * @since 3.10.0\n */\nexport const orElse = /*#__PURE__*/dual(2, (self, f) => {\n  return isEither(self) ? Either.match(self, {\n    onLeft: f,\n    onRight: Either.right\n  }) : Effect.catchAll(self, f);\n});\n/** @internal */\nexport const mergeInternalOptions = (options, overrideOptions) => {\n  if (overrideOptions === undefined || Predicate.isNumber(overrideOptions)) {\n    return options;\n  }\n  if (options === undefined) {\n    return overrideOptions;\n  }\n  return {\n    ...options,\n    ...overrideOptions\n  };\n};\nconst getEither = (ast, isDecoding, options) => {\n  const parser = goMemo(ast, isDecoding);\n  return (u, overrideOptions) => parser(u, mergeInternalOptions(options, overrideOptions));\n};\nconst getSync = (ast, isDecoding, options) => {\n  const parser = getEither(ast, isDecoding, options);\n  return (input, overrideOptions) => Either.getOrThrowWith(parser(input, overrideOptions), parseError);\n};\n/** @internal */\nexport const getOption = (ast, isDecoding, options) => {\n  const parser = getEither(ast, isDecoding, options);\n  return (input, overrideOptions) => Option.getRight(parser(input, overrideOptions));\n};\nconst getEffect = (ast, isDecoding, options) => {\n  const parser = goMemo(ast, isDecoding);\n  return (input, overrideOptions) => parser(input, {\n    ...mergeInternalOptions(options, overrideOptions),\n    isEffectAllowed: true\n  });\n};\n/**\n * @throws `ParseError`\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownSync = (schema, options) => getSync(schema.ast, true, options);\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownOption = (schema, options) => getOption(schema.ast, true, options);\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownEither = (schema, options) => getEither(schema.ast, true, options);\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownPromise = (schema, options) => {\n  const parser = decodeUnknown(schema, options);\n  return (u, overrideOptions) => Effect.runPromise(parser(u, overrideOptions));\n};\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknown = (schema, options) => getEffect(schema.ast, true, options);\n/**\n * @throws `ParseError`\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownSync = (schema, options) => getSync(schema.ast, false, options);\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownOption = (schema, options) => getOption(schema.ast, false, options);\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownEither = (schema, options) => getEither(schema.ast, false, options);\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownPromise = (schema, options) => {\n  const parser = encodeUnknown(schema, options);\n  return (u, overrideOptions) => Effect.runPromise(parser(u, overrideOptions));\n};\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknown = (schema, options) => getEffect(schema.ast, false, options);\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeSync = decodeUnknownSync;\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeOption = decodeUnknownOption;\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeEither = decodeUnknownEither;\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodePromise = decodeUnknownPromise;\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decode = decodeUnknown;\n/**\n * @throws `ParseError`\n * @category validation\n * @since 3.10.0\n */\nexport const validateSync = (schema, options) => getSync(AST.typeAST(schema.ast), true, options);\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validateOption = (schema, options) => getOption(AST.typeAST(schema.ast), true, options);\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validateEither = (schema, options) => getEither(AST.typeAST(schema.ast), true, options);\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validatePromise = (schema, options) => {\n  const parser = validate(schema, options);\n  return (u, overrideOptions) => Effect.runPromise(parser(u, overrideOptions));\n};\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validate = (schema, options) => getEffect(AST.typeAST(schema.ast), true, options);\n/**\n * By default the option `exact` is set to `true`.\n *\n * @category validation\n * @since 3.10.0\n */\nexport const is = (schema, options) => {\n  const parser = goMemo(AST.typeAST(schema.ast), true);\n  return (u, overrideOptions) => Either.isRight(parser(u, {\n    exact: true,\n    ...mergeInternalOptions(options, overrideOptions)\n  }));\n};\n/**\n * By default the option `exact` is set to `true`.\n *\n * @throws `ParseError`\n * @category validation\n * @since 3.10.0\n */\nexport const asserts = (schema, options) => {\n  const parser = goMemo(AST.typeAST(schema.ast), true);\n  return (u, overrideOptions) => {\n    const result = parser(u, {\n      exact: true,\n      ...mergeInternalOptions(options, overrideOptions)\n    });\n    if (Either.isLeft(result)) {\n      throw parseError(result.left);\n    }\n  };\n};\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeSync = encodeUnknownSync;\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeOption = encodeUnknownOption;\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeEither = encodeUnknownEither;\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodePromise = encodeUnknownPromise;\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encode = encodeUnknown;\nconst decodeMemoMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/ParseResult/decodeMemoMap\"), () => new WeakMap());\nconst encodeMemoMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/ParseResult/encodeMemoMap\"), () => new WeakMap());\nconst goMemo = (ast, isDecoding) => {\n  const memoMap = isDecoding ? decodeMemoMap : encodeMemoMap;\n  const memo = memoMap.get(ast);\n  if (memo) {\n    return memo;\n  }\n  const raw = go(ast, isDecoding);\n  const parseOptionsAnnotation = AST.getParseOptionsAnnotation(ast);\n  const parserWithOptions = Option.isSome(parseOptionsAnnotation) ? (i, options) => raw(i, mergeInternalOptions(options, parseOptionsAnnotation.value)) : raw;\n  const decodingFallbackAnnotation = AST.getDecodingFallbackAnnotation(ast);\n  const parser = isDecoding && Option.isSome(decodingFallbackAnnotation) ? (i, options) => handleForbidden(orElse(parserWithOptions(i, options), decodingFallbackAnnotation.value), ast, i, options) : parserWithOptions;\n  memoMap.set(ast, parser);\n  return parser;\n};\nconst getConcurrency = ast => Option.getOrUndefined(AST.getConcurrencyAnnotation(ast));\nconst getBatching = ast => Option.getOrUndefined(AST.getBatchingAnnotation(ast));\nconst go = (ast, isDecoding) => {\n  switch (ast._tag) {\n    case \"Refinement\":\n      {\n        if (isDecoding) {\n          const from = goMemo(ast.from, true);\n          return (i, options) => {\n            options = options ?? AST.defaultParseOption;\n            const allErrors = options?.errors === \"all\";\n            const result = flatMap(orElse(from(i, options), ef => {\n              const issue = new Refinement(ast, i, \"From\", ef);\n              if (allErrors && AST.hasStableFilter(ast) && isComposite(ef)) {\n                return Option.match(ast.filter(i, options, ast), {\n                  onNone: () => Either.left(issue),\n                  onSome: ep => Either.left(new Composite(ast, i, [issue, new Refinement(ast, i, \"Predicate\", ep)]))\n                });\n              }\n              return Either.left(issue);\n            }), a => Option.match(ast.filter(a, options, ast), {\n              onNone: () => Either.right(a),\n              onSome: ep => Either.left(new Refinement(ast, i, \"Predicate\", ep))\n            }));\n            return handleForbidden(result, ast, i, options);\n          };\n        } else {\n          const from = goMemo(AST.typeAST(ast), true);\n          const to = goMemo(dropRightRefinement(ast.from), false);\n          return (i, options) => handleForbidden(flatMap(from(i, options), a => to(a, options)), ast, i, options);\n        }\n      }\n    case \"Transformation\":\n      {\n        const transform = getFinalTransformation(ast.transformation, isDecoding);\n        const from = isDecoding ? goMemo(ast.from, true) : goMemo(ast.to, false);\n        const to = isDecoding ? goMemo(ast.to, true) : goMemo(ast.from, false);\n        return (i, options) => handleForbidden(flatMap(mapError(from(i, options), e => new Transformation(ast, i, isDecoding ? \"Encoded\" : \"Type\", e)), a => flatMap(mapError(transform(a, options ?? AST.defaultParseOption, ast, i), e => new Transformation(ast, i, \"Transformation\", e)), i2 => mapError(to(i2, options), e => new Transformation(ast, i, isDecoding ? \"Type\" : \"Encoded\", e)))), ast, i, options);\n      }\n    case \"Declaration\":\n      {\n        const parse = isDecoding ? ast.decodeUnknown(...ast.typeParameters) : ast.encodeUnknown(...ast.typeParameters);\n        return (i, options) => handleForbidden(parse(i, options ?? AST.defaultParseOption, ast), ast, i, options);\n      }\n    case \"Literal\":\n      return fromRefinement(ast, u => u === ast.literal);\n    case \"UniqueSymbol\":\n      return fromRefinement(ast, u => u === ast.symbol);\n    case \"UndefinedKeyword\":\n      return fromRefinement(ast, Predicate.isUndefined);\n    case \"NeverKeyword\":\n      return fromRefinement(ast, Predicate.isNever);\n    case \"UnknownKeyword\":\n    case \"AnyKeyword\":\n    case \"VoidKeyword\":\n      return Either.right;\n    case \"StringKeyword\":\n      return fromRefinement(ast, Predicate.isString);\n    case \"NumberKeyword\":\n      return fromRefinement(ast, Predicate.isNumber);\n    case \"BooleanKeyword\":\n      return fromRefinement(ast, Predicate.isBoolean);\n    case \"BigIntKeyword\":\n      return fromRefinement(ast, Predicate.isBigInt);\n    case \"SymbolKeyword\":\n      return fromRefinement(ast, Predicate.isSymbol);\n    case \"ObjectKeyword\":\n      return fromRefinement(ast, Predicate.isObject);\n    case \"Enums\":\n      return fromRefinement(ast, u => ast.enums.some(([_, value]) => value === u));\n    case \"TemplateLiteral\":\n      {\n        const regex = AST.getTemplateLiteralRegExp(ast);\n        return fromRefinement(ast, u => Predicate.isString(u) && regex.test(u));\n      }\n    case \"TupleType\":\n      {\n        const elements = ast.elements.map(e => goMemo(e.type, isDecoding));\n        const rest = ast.rest.map(annotatedAST => goMemo(annotatedAST.type, isDecoding));\n        let requiredTypes = ast.elements.filter(e => !e.isOptional);\n        if (ast.rest.length > 0) {\n          requiredTypes = requiredTypes.concat(ast.rest.slice(1));\n        }\n        const requiredLen = requiredTypes.length;\n        const expectedIndexes = ast.elements.length > 0 ? ast.elements.map((_, i) => i).join(\" | \") : \"never\";\n        const concurrency = getConcurrency(ast);\n        const batching = getBatching(ast);\n        return (input, options) => {\n          if (!Arr.isArray(input)) {\n            return Either.left(new Type(ast, input));\n          }\n          const allErrors = options?.errors === \"all\";\n          const es = [];\n          let stepKey = 0;\n          const output = [];\n          // ---------------------------------------------\n          // handle missing indexes\n          // ---------------------------------------------\n          const len = input.length;\n          for (let i = len; i <= requiredLen - 1; i++) {\n            const e = new Pointer(i, input, new Missing(requiredTypes[i - len]));\n            if (allErrors) {\n              es.push([stepKey++, e]);\n              continue;\n            } else {\n              return Either.left(new Composite(ast, input, e, output));\n            }\n          }\n          // ---------------------------------------------\n          // handle excess indexes\n          // ---------------------------------------------\n          if (ast.rest.length === 0) {\n            for (let i = ast.elements.length; i <= len - 1; i++) {\n              const e = new Pointer(i, input, new Unexpected(input[i], `is unexpected, expected: ${expectedIndexes}`));\n              if (allErrors) {\n                es.push([stepKey++, e]);\n                continue;\n              } else {\n                return Either.left(new Composite(ast, input, e, output));\n              }\n            }\n          }\n          let i = 0;\n          let queue = undefined;\n          // ---------------------------------------------\n          // handle elements\n          // ---------------------------------------------\n          for (; i < elements.length; i++) {\n            if (len < i + 1) {\n              if (ast.elements[i].isOptional) {\n                // the input element is missing\n                continue;\n              }\n            } else {\n              const parser = elements[i];\n              const te = parser(input[i], options);\n              if (isEither(te)) {\n                if (Either.isLeft(te)) {\n                  // the input element is present but is not valid\n                  const e = new Pointer(i, input, te.left);\n                  if (allErrors) {\n                    es.push([stepKey++, e]);\n                    continue;\n                  } else {\n                    return Either.left(new Composite(ast, input, e, sortByIndex(output)));\n                  }\n                }\n                output.push([stepKey++, te.right]);\n              } else {\n                const nk = stepKey++;\n                const index = i;\n                if (!queue) {\n                  queue = [];\n                }\n                queue.push(({\n                  es,\n                  output\n                }) => Effect.flatMap(Effect.either(te), t => {\n                  if (Either.isLeft(t)) {\n                    // the input element is present but is not valid\n                    const e = new Pointer(index, input, t.left);\n                    if (allErrors) {\n                      es.push([nk, e]);\n                      return Effect.void;\n                    } else {\n                      return Either.left(new Composite(ast, input, e, sortByIndex(output)));\n                    }\n                  }\n                  output.push([nk, t.right]);\n                  return Effect.void;\n                }));\n              }\n            }\n          }\n          // ---------------------------------------------\n          // handle rest element\n          // ---------------------------------------------\n          if (Arr.isNonEmptyReadonlyArray(rest)) {\n            const [head, ...tail] = rest;\n            for (; i < len - tail.length; i++) {\n              const te = head(input[i], options);\n              if (isEither(te)) {\n                if (Either.isLeft(te)) {\n                  const e = new Pointer(i, input, te.left);\n                  if (allErrors) {\n                    es.push([stepKey++, e]);\n                    continue;\n                  } else {\n                    return Either.left(new Composite(ast, input, e, sortByIndex(output)));\n                  }\n                } else {\n                  output.push([stepKey++, te.right]);\n                }\n              } else {\n                const nk = stepKey++;\n                const index = i;\n                if (!queue) {\n                  queue = [];\n                }\n                queue.push(({\n                  es,\n                  output\n                }) => Effect.flatMap(Effect.either(te), t => {\n                  if (Either.isLeft(t)) {\n                    const e = new Pointer(index, input, t.left);\n                    if (allErrors) {\n                      es.push([nk, e]);\n                      return Effect.void;\n                    } else {\n                      return Either.left(new Composite(ast, input, e, sortByIndex(output)));\n                    }\n                  } else {\n                    output.push([nk, t.right]);\n                    return Effect.void;\n                  }\n                }));\n              }\n            }\n            // ---------------------------------------------\n            // handle post rest elements\n            // ---------------------------------------------\n            for (let j = 0; j < tail.length; j++) {\n              i += j;\n              if (len < i + 1) {\n                continue;\n              } else {\n                const te = tail[j](input[i], options);\n                if (isEither(te)) {\n                  if (Either.isLeft(te)) {\n                    // the input element is present but is not valid\n                    const e = new Pointer(i, input, te.left);\n                    if (allErrors) {\n                      es.push([stepKey++, e]);\n                      continue;\n                    } else {\n                      return Either.left(new Composite(ast, input, e, sortByIndex(output)));\n                    }\n                  }\n                  output.push([stepKey++, te.right]);\n                } else {\n                  const nk = stepKey++;\n                  const index = i;\n                  if (!queue) {\n                    queue = [];\n                  }\n                  queue.push(({\n                    es,\n                    output\n                  }) => Effect.flatMap(Effect.either(te), t => {\n                    if (Either.isLeft(t)) {\n                      // the input element is present but is not valid\n                      const e = new Pointer(index, input, t.left);\n                      if (allErrors) {\n                        es.push([nk, e]);\n                        return Effect.void;\n                      } else {\n                        return Either.left(new Composite(ast, input, e, sortByIndex(output)));\n                      }\n                    }\n                    output.push([nk, t.right]);\n                    return Effect.void;\n                  }));\n                }\n              }\n            }\n          }\n          // ---------------------------------------------\n          // compute result\n          // ---------------------------------------------\n          const computeResult = ({\n            es,\n            output\n          }) => Arr.isNonEmptyArray(es) ? Either.left(new Composite(ast, input, sortByIndex(es), sortByIndex(output))) : Either.right(sortByIndex(output));\n          if (queue && queue.length > 0) {\n            const cqueue = queue;\n            return Effect.suspend(() => {\n              const state = {\n                es: Arr.copy(es),\n                output: Arr.copy(output)\n              };\n              return Effect.flatMap(Effect.forEach(cqueue, f => f(state), {\n                concurrency,\n                batching,\n                discard: true\n              }), () => computeResult(state));\n            });\n          }\n          return computeResult({\n            output,\n            es\n          });\n        };\n      }\n    case \"TypeLiteral\":\n      {\n        if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {\n          return fromRefinement(ast, Predicate.isNotNullable);\n        }\n        const propertySignatures = [];\n        const expectedKeysMap = {};\n        const expectedKeys = [];\n        for (const ps of ast.propertySignatures) {\n          propertySignatures.push([goMemo(ps.type, isDecoding), ps]);\n          expectedKeysMap[ps.name] = null;\n          expectedKeys.push(ps.name);\n        }\n        const indexSignatures = ast.indexSignatures.map(is => [goMemo(is.parameter, isDecoding), goMemo(is.type, isDecoding), is.parameter]);\n        const expectedAST = AST.Union.make(ast.indexSignatures.map(is => is.parameter).concat(expectedKeys.map(key => Predicate.isSymbol(key) ? new AST.UniqueSymbol(key) : new AST.Literal(key))));\n        const expected = goMemo(expectedAST, isDecoding);\n        const concurrency = getConcurrency(ast);\n        const batching = getBatching(ast);\n        return (input, options) => {\n          if (!Predicate.isRecord(input)) {\n            return Either.left(new Type(ast, input));\n          }\n          const allErrors = options?.errors === \"all\";\n          const es = [];\n          let stepKey = 0;\n          // ---------------------------------------------\n          // handle excess properties\n          // ---------------------------------------------\n          const onExcessPropertyError = options?.onExcessProperty === \"error\";\n          const onExcessPropertyPreserve = options?.onExcessProperty === \"preserve\";\n          const output = {};\n          let inputKeys;\n          if (onExcessPropertyError || onExcessPropertyPreserve) {\n            inputKeys = util_.ownKeys(input);\n            for (const key of inputKeys) {\n              const te = expected(key, options);\n              if (isEither(te) && Either.isLeft(te)) {\n                // key is unexpected\n                if (onExcessPropertyError) {\n                  const e = new Pointer(key, input, new Unexpected(input[key], `is unexpected, expected: ${String(expectedAST)}`));\n                  if (allErrors) {\n                    es.push([stepKey++, e]);\n                    continue;\n                  } else {\n                    return Either.left(new Composite(ast, input, e, output));\n                  }\n                } else {\n                  // preserve key\n                  output[key] = input[key];\n                }\n              }\n            }\n          }\n          let queue = undefined;\n          const isExact = options?.exact === true;\n          for (let i = 0; i < propertySignatures.length; i++) {\n            const ps = propertySignatures[i][1];\n            const name = ps.name;\n            const hasKey = Object.prototype.hasOwnProperty.call(input, name);\n            if (!hasKey) {\n              if (ps.isOptional) {\n                continue;\n              } else if (isExact) {\n                const e = new Pointer(name, input, new Missing(ps));\n                if (allErrors) {\n                  es.push([stepKey++, e]);\n                  continue;\n                } else {\n                  return Either.left(new Composite(ast, input, e, output));\n                }\n              }\n            }\n            const parser = propertySignatures[i][0];\n            const te = parser(input[name], options);\n            if (isEither(te)) {\n              if (Either.isLeft(te)) {\n                const e = new Pointer(name, input, hasKey ? te.left : new Missing(ps));\n                if (allErrors) {\n                  es.push([stepKey++, e]);\n                  continue;\n                } else {\n                  return Either.left(new Composite(ast, input, e, output));\n                }\n              }\n              output[name] = te.right;\n            } else {\n              const nk = stepKey++;\n              const index = name;\n              if (!queue) {\n                queue = [];\n              }\n              queue.push(({\n                es,\n                output\n              }) => Effect.flatMap(Effect.either(te), t => {\n                if (Either.isLeft(t)) {\n                  const e = new Pointer(index, input, hasKey ? t.left : new Missing(ps));\n                  if (allErrors) {\n                    es.push([nk, e]);\n                    return Effect.void;\n                  } else {\n                    return Either.left(new Composite(ast, input, e, output));\n                  }\n                }\n                output[index] = t.right;\n                return Effect.void;\n              }));\n            }\n          }\n          // ---------------------------------------------\n          // handle index signatures\n          // ---------------------------------------------\n          for (let i = 0; i < indexSignatures.length; i++) {\n            const indexSignature = indexSignatures[i];\n            const parameter = indexSignature[0];\n            const type = indexSignature[1];\n            const keys = util_.getKeysForIndexSignature(input, indexSignature[2]);\n            for (const key of keys) {\n              // ---------------------------------------------\n              // handle keys\n              // ---------------------------------------------\n              const keu = parameter(key, options);\n              if (isEither(keu) && Either.isRight(keu)) {\n                // ---------------------------------------------\n                // handle values\n                // ---------------------------------------------\n                const vpr = type(input[key], options);\n                if (isEither(vpr)) {\n                  if (Either.isLeft(vpr)) {\n                    const e = new Pointer(key, input, vpr.left);\n                    if (allErrors) {\n                      es.push([stepKey++, e]);\n                      continue;\n                    } else {\n                      return Either.left(new Composite(ast, input, e, output));\n                    }\n                  } else {\n                    if (!Object.prototype.hasOwnProperty.call(expectedKeysMap, key)) {\n                      output[key] = vpr.right;\n                    }\n                  }\n                } else {\n                  const nk = stepKey++;\n                  const index = key;\n                  if (!queue) {\n                    queue = [];\n                  }\n                  queue.push(({\n                    es,\n                    output\n                  }) => Effect.flatMap(Effect.either(vpr), tv => {\n                    if (Either.isLeft(tv)) {\n                      const e = new Pointer(index, input, tv.left);\n                      if (allErrors) {\n                        es.push([nk, e]);\n                        return Effect.void;\n                      } else {\n                        return Either.left(new Composite(ast, input, e, output));\n                      }\n                    } else {\n                      if (!Object.prototype.hasOwnProperty.call(expectedKeysMap, key)) {\n                        output[key] = tv.right;\n                      }\n                      return Effect.void;\n                    }\n                  }));\n                }\n              }\n            }\n          }\n          // ---------------------------------------------\n          // compute result\n          // ---------------------------------------------\n          const computeResult = ({\n            es,\n            output\n          }) => {\n            if (Arr.isNonEmptyArray(es)) {\n              return Either.left(new Composite(ast, input, sortByIndex(es), output));\n            }\n            if (options?.propertyOrder === \"original\") {\n              // preserve input keys order\n              const keys = inputKeys || util_.ownKeys(input);\n              for (const name of expectedKeys) {\n                if (keys.indexOf(name) === -1) {\n                  keys.push(name);\n                }\n              }\n              const out = {};\n              for (const key of keys) {\n                if (Object.prototype.hasOwnProperty.call(output, key)) {\n                  out[key] = output[key];\n                }\n              }\n              return Either.right(out);\n            }\n            return Either.right(output);\n          };\n          if (queue && queue.length > 0) {\n            const cqueue = queue;\n            return Effect.suspend(() => {\n              const state = {\n                es: Arr.copy(es),\n                output: Object.assign({}, output)\n              };\n              return Effect.flatMap(Effect.forEach(cqueue, f => f(state), {\n                concurrency,\n                batching,\n                discard: true\n              }), () => computeResult(state));\n            });\n          }\n          return computeResult({\n            es,\n            output\n          });\n        };\n      }\n    case \"Union\":\n      {\n        const searchTree = getSearchTree(ast.types, isDecoding);\n        const ownKeys = util_.ownKeys(searchTree.keys);\n        const ownKeysLen = ownKeys.length;\n        const astTypesLen = ast.types.length;\n        const map = new Map();\n        for (let i = 0; i < astTypesLen; i++) {\n          map.set(ast.types[i], goMemo(ast.types[i], isDecoding));\n        }\n        const concurrency = getConcurrency(ast) ?? 1;\n        const batching = getBatching(ast);\n        return (input, options) => {\n          const es = [];\n          let stepKey = 0;\n          let candidates = [];\n          if (ownKeysLen > 0) {\n            if (Predicate.isRecordOrArray(input)) {\n              for (let i = 0; i < ownKeysLen; i++) {\n                const name = ownKeys[i];\n                const buckets = searchTree.keys[name].buckets;\n                // for each property that should contain a literal, check if the input contains that property\n                if (Object.prototype.hasOwnProperty.call(input, name)) {\n                  const literal = String(input[name]);\n                  // check that the value obtained from the input for the property corresponds to an existing bucket\n                  if (Object.prototype.hasOwnProperty.call(buckets, literal)) {\n                    // retrive the minimal set of candidates for decoding\n                    candidates = candidates.concat(buckets[literal]);\n                  } else {\n                    const {\n                      candidates,\n                      literals\n                    } = searchTree.keys[name];\n                    const literalsUnion = AST.Union.make(literals);\n                    const errorAst = candidates.length === astTypesLen ? new AST.TypeLiteral([new AST.PropertySignature(name, literalsUnion, false, true)], []) : AST.Union.make(candidates);\n                    es.push([stepKey++, new Composite(errorAst, input, new Pointer(name, input, new Type(literalsUnion, input[name])))]);\n                  }\n                } else {\n                  const {\n                    candidates,\n                    literals\n                  } = searchTree.keys[name];\n                  const fakePropertySignature = new AST.PropertySignature(name, AST.Union.make(literals), false, true);\n                  const errorAst = candidates.length === astTypesLen ? new AST.TypeLiteral([fakePropertySignature], []) : AST.Union.make(candidates);\n                  es.push([stepKey++, new Composite(errorAst, input, new Pointer(name, input, new Missing(fakePropertySignature)))]);\n                }\n              }\n            } else {\n              const errorAst = searchTree.candidates.length === astTypesLen ? ast : AST.Union.make(searchTree.candidates);\n              es.push([stepKey++, new Type(errorAst, input)]);\n            }\n          }\n          if (searchTree.otherwise.length > 0) {\n            candidates = candidates.concat(searchTree.otherwise);\n          }\n          let queue = undefined;\n          for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            const pr = map.get(candidate)(input, options);\n            // the members of a union are ordered based on which one should be decoded first,\n            // therefore if one member has added a task, all subsequent members must\n            // also add a task to the queue even if they are synchronous\n            if (isEither(pr) && (!queue || queue.length === 0)) {\n              if (Either.isRight(pr)) {\n                return pr;\n              } else {\n                es.push([stepKey++, pr.left]);\n              }\n            } else {\n              const nk = stepKey++;\n              if (!queue) {\n                queue = [];\n              }\n              queue.push(state => Effect.suspend(() => {\n                if (\"finalResult\" in state) {\n                  return Effect.void;\n                } else {\n                  return Effect.flatMap(Effect.either(pr), t => {\n                    if (Either.isRight(t)) {\n                      state.finalResult = t;\n                    } else {\n                      state.es.push([nk, t.left]);\n                    }\n                    return Effect.void;\n                  });\n                }\n              }));\n            }\n          }\n          // ---------------------------------------------\n          // compute result\n          // ---------------------------------------------\n          const computeResult = es => Arr.isNonEmptyArray(es) ? es.length === 1 && es[0][1]._tag === \"Type\" ? Either.left(es[0][1]) : Either.left(new Composite(ast, input, sortByIndex(es))) :\n          // this should never happen\n          Either.left(new Type(ast, input));\n          if (queue && queue.length > 0) {\n            const cqueue = queue;\n            return Effect.suspend(() => {\n              const state = {\n                es: Arr.copy(es)\n              };\n              return Effect.flatMap(Effect.forEach(cqueue, f => f(state), {\n                concurrency,\n                batching,\n                discard: true\n              }), () => {\n                if (\"finalResult\" in state) {\n                  return state.finalResult;\n                }\n                return computeResult(state.es);\n              });\n            });\n          }\n          return computeResult(es);\n        };\n      }\n    case \"Suspend\":\n      {\n        const get = util_.memoizeThunk(() => goMemo(AST.annotations(ast.f(), ast.annotations), isDecoding));\n        return (a, options) => get()(a, options);\n      }\n  }\n};\nconst fromRefinement = (ast, refinement) => u => refinement(u) ? Either.right(u) : Either.left(new Type(ast, u));\n/** @internal */\nexport const getLiterals = (ast, isDecoding) => {\n  switch (ast._tag) {\n    case \"Declaration\":\n      {\n        const annotation = AST.getSurrogateAnnotation(ast);\n        if (Option.isSome(annotation)) {\n          return getLiterals(annotation.value, isDecoding);\n        }\n        break;\n      }\n    case \"TypeLiteral\":\n      {\n        const out = [];\n        for (let i = 0; i < ast.propertySignatures.length; i++) {\n          const propertySignature = ast.propertySignatures[i];\n          const type = isDecoding ? AST.encodedAST(propertySignature.type) : AST.typeAST(propertySignature.type);\n          if (AST.isLiteral(type) && !propertySignature.isOptional) {\n            out.push([propertySignature.name, type]);\n          }\n        }\n        return out;\n      }\n    case \"TupleType\":\n      {\n        const out = [];\n        for (let i = 0; i < ast.elements.length; i++) {\n          const element = ast.elements[i];\n          const type = isDecoding ? AST.encodedAST(element.type) : AST.typeAST(element.type);\n          if (AST.isLiteral(type) && !element.isOptional) {\n            out.push([i, type]);\n          }\n        }\n        return out;\n      }\n    case \"Refinement\":\n      return getLiterals(ast.from, isDecoding);\n    case \"Suspend\":\n      return getLiterals(ast.f(), isDecoding);\n    case \"Transformation\":\n      return getLiterals(isDecoding ? ast.from : ast.to, isDecoding);\n  }\n  return [];\n};\n/**\n * The purpose of the algorithm is to narrow down the pool of possible\n * candidates for decoding as much as possible.\n *\n * This function separates the schemas into two groups, `keys` and `otherwise`:\n *\n * - `keys`: the schema has at least one property with a literal value\n * - `otherwise`: the schema has no properties with a literal value\n *\n * If a schema has at least one property with a literal value, so it ends up in\n * `keys`, first a namespace is created for the name of the property containing\n * the literal, and then within this namespace a \"bucket\" is created for the\n * literal value in which to store all the schemas that have the same property\n * and literal value.\n *\n * @internal\n */\nexport const getSearchTree = (members, isDecoding) => {\n  const keys = {};\n  const otherwise = [];\n  const candidates = [];\n  for (let i = 0; i < members.length; i++) {\n    const member = members[i];\n    const tags = getLiterals(member, isDecoding);\n    if (tags.length > 0) {\n      candidates.push(member);\n      for (let j = 0; j < tags.length; j++) {\n        const [key, literal] = tags[j];\n        const hash = String(literal.literal);\n        keys[key] = keys[key] || {\n          buckets: {},\n          literals: [],\n          candidates: []\n        };\n        const buckets = keys[key].buckets;\n        if (Object.prototype.hasOwnProperty.call(buckets, hash)) {\n          if (j < tags.length - 1) {\n            continue;\n          }\n          buckets[hash].push(member);\n          keys[key].literals.push(literal);\n          keys[key].candidates.push(member);\n        } else {\n          buckets[hash] = [member];\n          keys[key].literals.push(literal);\n          keys[key].candidates.push(member);\n          break;\n        }\n      }\n    } else {\n      otherwise.push(member);\n    }\n  }\n  return {\n    keys,\n    otherwise,\n    candidates\n  };\n};\nconst dropRightRefinement = ast => AST.isRefinement(ast) ? dropRightRefinement(ast.from) : ast;\nconst handleForbidden = (effect, ast, actual, options) => {\n  // If effects are allowed, return the original effect\n  if (options?.isEffectAllowed === true) {\n    return effect;\n  }\n  // If the effect is already an Either, return it directly\n  if (isEither(effect)) {\n    return effect;\n  }\n  // Otherwise, attempt to execute the effect synchronously\n  const scheduler = new Scheduler.SyncScheduler();\n  const fiber = Effect.runFork(effect, {\n    scheduler\n  });\n  scheduler.flush();\n  const exit = fiber.unsafePoll();\n  if (exit) {\n    if (Exit.isSuccess(exit)) {\n      // If the effect successfully resolves, wrap the value in a Right\n      return Either.right(exit.value);\n    }\n    const cause = exit.cause;\n    if (Cause.isFailType(cause)) {\n      // The effect executed synchronously but failed due to a ParseIssue\n      return Either.left(cause.error);\n    }\n    // The effect executed synchronously but failed due to a defect (e.g., a missing dependency)\n    return Either.left(new Forbidden(ast, actual, Cause.pretty(cause)));\n  }\n  // The effect could not be resolved synchronously, meaning it performs async work\n  return Either.left(new Forbidden(ast, actual, \"cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work\"));\n};\nconst compare = ([a], [b]) => a > b ? 1 : a < b ? -1 : 0;\nfunction sortByIndex(es) {\n  return es.sort(compare).map(t => t[1]);\n}\n// -------------------------------------------------------------------------------------\n// transformations interpreter\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport const getFinalTransformation = (transformation, isDecoding) => {\n  switch (transformation._tag) {\n    case \"FinalTransformation\":\n      return isDecoding ? transformation.decode : transformation.encode;\n    case \"ComposeTransformation\":\n      return Either.right;\n    case \"TypeLiteralTransformation\":\n      return input => {\n        let out = Either.right(input);\n        // ---------------------------------------------\n        // handle property signature transformations\n        // ---------------------------------------------\n        for (const pst of transformation.propertySignatureTransformations) {\n          const [from, to] = isDecoding ? [pst.from, pst.to] : [pst.to, pst.from];\n          const transformation = isDecoding ? pst.decode : pst.encode;\n          const f = input => {\n            const o = transformation(Object.prototype.hasOwnProperty.call(input, from) ? Option.some(input[from]) : Option.none());\n            delete input[from];\n            if (Option.isSome(o)) {\n              input[to] = o.value;\n            }\n            return input;\n          };\n          out = map(out, f);\n        }\n        return out;\n      };\n  }\n};\nconst makeTree = (value, forest = []) => ({\n  value,\n  forest\n});\n/**\n * @category formatting\n * @since 3.10.0\n */\nexport const TreeFormatter = {\n  formatIssue: issue => map(formatTree(issue), drawTree),\n  formatIssueSync: issue => {\n    const e = TreeFormatter.formatIssue(issue);\n    return isEither(e) ? Either.getOrThrow(e) : Effect.runSync(e);\n  },\n  formatError: error => TreeFormatter.formatIssue(error.issue),\n  formatErrorSync: error => TreeFormatter.formatIssueSync(error.issue)\n};\nconst drawTree = tree => tree.value + draw(\"\\n\", tree.forest);\nconst draw = (indentation, forest) => {\n  let r = \"\";\n  const len = forest.length;\n  let tree;\n  for (let i = 0; i < len; i++) {\n    tree = forest[i];\n    const isLast = i === len - 1;\n    r += indentation + (isLast ? \"└\" : \"├\") + \"─ \" + tree.value;\n    r += draw(indentation + (len > 1 && !isLast ? \"│  \" : \"   \"), tree.forest);\n  }\n  return r;\n};\nconst formatTransformationKind = kind => {\n  switch (kind) {\n    case \"Encoded\":\n      return \"Encoded side transformation failure\";\n    case \"Transformation\":\n      return \"Transformation process failure\";\n    case \"Type\":\n      return \"Type side transformation failure\";\n  }\n};\nconst formatRefinementKind = kind => {\n  switch (kind) {\n    case \"From\":\n      return \"From side refinement failure\";\n    case \"Predicate\":\n      return \"Predicate refinement failure\";\n  }\n};\nconst getAnnotated = issue => \"ast\" in issue ? Option.some(issue.ast) : Option.none();\n// TODO: replace with Either.void when 3.13 lands\nconst Either_void = /*#__PURE__*/Either.right(undefined);\nconst getCurrentMessage = issue => getAnnotated(issue).pipe(Option.flatMap(AST.getMessageAnnotation), Option.match({\n  onNone: () => Either_void,\n  onSome: messageAnnotation => {\n    const union = messageAnnotation(issue);\n    if (Predicate.isString(union)) {\n      return Either.right({\n        message: union,\n        override: false\n      });\n    }\n    if (Effect.isEffect(union)) {\n      return Effect.map(union, message => ({\n        message,\n        override: false\n      }));\n    }\n    if (Predicate.isString(union.message)) {\n      return Either.right({\n        message: union.message,\n        override: union.override\n      });\n    }\n    return Effect.map(union.message, message => ({\n      message,\n      override: union.override\n    }));\n  }\n}));\nconst createParseIssueGuard = tag => issue => issue._tag === tag;\n/**\n * Returns `true` if the value is a `Composite`.\n *\n * @category guards\n * @since 3.10.0\n */\nexport const isComposite = /*#__PURE__*/createParseIssueGuard(\"Composite\");\nconst isRefinement = /*#__PURE__*/createParseIssueGuard(\"Refinement\");\nconst isTransformation = /*#__PURE__*/createParseIssueGuard(\"Transformation\");\nconst getMessage = issue => flatMap(getCurrentMessage(issue), currentMessage => {\n  if (currentMessage !== undefined) {\n    const useInnerMessage = !currentMessage.override && (isComposite(issue) || isRefinement(issue) && issue.kind === \"From\" || isTransformation(issue) && issue.kind !== \"Transformation\");\n    return useInnerMessage ? isTransformation(issue) || isRefinement(issue) ? getMessage(issue.issue) : Either_void : Either.right(currentMessage.message);\n  }\n  return Either_void;\n});\nconst getParseIssueTitleAnnotation = issue => getAnnotated(issue).pipe(Option.flatMap(AST.getParseIssueTitleAnnotation), Option.flatMapNullable(annotation => annotation(issue)), Option.getOrUndefined);\n/** @internal */\nexport function getRefinementExpected(ast) {\n  return AST.getDescriptionAnnotation(ast).pipe(Option.orElse(() => AST.getTitleAnnotation(ast)), Option.orElse(() => AST.getAutoTitleAnnotation(ast)), Option.orElse(() => AST.getIdentifierAnnotation(ast)), Option.getOrElse(() => `{ ${ast.from} | filter }`));\n}\nfunction getDefaultTypeMessage(issue) {\n  if (issue.message !== undefined) {\n    return issue.message;\n  }\n  const expected = AST.isRefinement(issue.ast) ? getRefinementExpected(issue.ast) : String(issue.ast);\n  return `Expected ${expected}, actual ${util_.formatUnknown(issue.actual)}`;\n}\nconst formatTypeMessage = issue => map(getMessage(issue), message => message ?? getParseIssueTitleAnnotation(issue) ?? getDefaultTypeMessage(issue));\nconst getParseIssueTitle = issue => getParseIssueTitleAnnotation(issue) ?? String(issue.ast);\nconst formatForbiddenMessage = issue => issue.message ?? \"is forbidden\";\nconst formatUnexpectedMessage = issue => issue.message ?? \"is unexpected\";\nconst formatMissingMessage = issue => {\n  const missingMessageAnnotation = AST.getMissingMessageAnnotation(issue.ast);\n  if (Option.isSome(missingMessageAnnotation)) {\n    const annotation = missingMessageAnnotation.value();\n    return Predicate.isString(annotation) ? Either.right(annotation) : annotation;\n  }\n  return Either.right(issue.message ?? \"is missing\");\n};\nconst formatTree = issue => {\n  switch (issue._tag) {\n    case \"Type\":\n      return map(formatTypeMessage(issue), makeTree);\n    case \"Forbidden\":\n      return Either.right(makeTree(getParseIssueTitle(issue), [makeTree(formatForbiddenMessage(issue))]));\n    case \"Unexpected\":\n      return Either.right(makeTree(formatUnexpectedMessage(issue)));\n    case \"Missing\":\n      return map(formatMissingMessage(issue), makeTree);\n    case \"Transformation\":\n      return flatMap(getMessage(issue), message => {\n        if (message !== undefined) {\n          return Either.right(makeTree(message));\n        }\n        return map(formatTree(issue.issue), tree => makeTree(getParseIssueTitle(issue), [makeTree(formatTransformationKind(issue.kind), [tree])]));\n      });\n    case \"Refinement\":\n      return flatMap(getMessage(issue), message => {\n        if (message !== undefined) {\n          return Either.right(makeTree(message));\n        }\n        return map(formatTree(issue.issue), tree => makeTree(getParseIssueTitle(issue), [makeTree(formatRefinementKind(issue.kind), [tree])]));\n      });\n    case \"Pointer\":\n      return map(formatTree(issue.issue), tree => makeTree(util_.formatPath(issue.path), [tree]));\n    case \"Composite\":\n      return flatMap(getMessage(issue), message => {\n        if (message !== undefined) {\n          return Either.right(makeTree(message));\n        }\n        const parseIssueTitle = getParseIssueTitle(issue);\n        return util_.isNonEmpty(issue.issues) ? map(Effect.forEach(issue.issues, formatTree), forest => makeTree(parseIssueTitle, forest)) : map(formatTree(issue.issues), tree => makeTree(parseIssueTitle, [tree]));\n      });\n  }\n};\nconst makeArrayFormatterIssue = (_tag, path, message) => ({\n  _tag,\n  path,\n  message\n});\n/**\n * @category formatting\n * @since 3.10.0\n */\nexport const ArrayFormatter = {\n  formatIssue: issue => getArrayFormatterIssues(issue, undefined, []),\n  formatIssueSync: issue => {\n    const e = ArrayFormatter.formatIssue(issue);\n    return isEither(e) ? Either.getOrThrow(e) : Effect.runSync(e);\n  },\n  formatError: error => ArrayFormatter.formatIssue(error.issue),\n  formatErrorSync: error => ArrayFormatter.formatIssueSync(error.issue)\n};\nconst getArrayFormatterIssues = (issue, parentTag, path) => {\n  const _tag = issue._tag;\n  switch (_tag) {\n    case \"Type\":\n      return map(formatTypeMessage(issue), message => [makeArrayFormatterIssue(parentTag ?? _tag, path, message)]);\n    case \"Forbidden\":\n      return Either.right([makeArrayFormatterIssue(_tag, path, formatForbiddenMessage(issue))]);\n    case \"Unexpected\":\n      return Either.right([makeArrayFormatterIssue(_tag, path, formatUnexpectedMessage(issue))]);\n    case \"Missing\":\n      return map(formatMissingMessage(issue), message => [makeArrayFormatterIssue(_tag, path, message)]);\n    case \"Pointer\":\n      return getArrayFormatterIssues(issue.issue, undefined, path.concat(issue.path));\n    case \"Composite\":\n      return flatMap(getMessage(issue), message => {\n        if (message !== undefined) {\n          return Either.right([makeArrayFormatterIssue(_tag, path, message)]);\n        }\n        return util_.isNonEmpty(issue.issues) ? map(Effect.forEach(issue.issues, issue => getArrayFormatterIssues(issue, undefined, path)), Arr.flatten) : getArrayFormatterIssues(issue.issues, undefined, path);\n      });\n    case \"Refinement\":\n      return flatMap(getMessage(issue), message => {\n        if (message !== undefined) {\n          return Either.right([makeArrayFormatterIssue(_tag, path, message)]);\n        }\n        return getArrayFormatterIssues(issue.issue, issue.kind === \"Predicate\" ? _tag : undefined, path);\n      });\n    case \"Transformation\":\n      return flatMap(getMessage(issue), message => {\n        if (message !== undefined) {\n          return Either.right([makeArrayFormatterIssue(_tag, path, message)]);\n        }\n        return getArrayFormatterIssues(issue.issue, issue.kind === \"Transformation\" ? _tag : undefined, path);\n      });\n  }\n};\n//# sourceMappingURL=ParseResult.js.map","/**\n * This module provides utility functions for working with structs in TypeScript.\n *\n * @since 2.0.0\n */\nimport * as Equivalence from \"./Equivalence.js\";\nimport { dual } from \"./Function.js\";\nimport * as order from \"./Order.js\";\nimport * as Predicate from \"./Predicate.js\";\n/**\n * Create a new object by picking properties of an existing object.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Struct } from \"effect\"\n *\n * assert.deepStrictEqual(pipe({ a: \"a\", b: 1, c: true }, Struct.pick(\"a\", \"b\")), { a: \"a\", b: 1 })\n * assert.deepStrictEqual(Struct.pick({ a: \"a\", b: 1, c: true }, \"a\", \"b\"), { a: \"a\", b: 1 })\n * ```\n *\n * @since 2.0.0\n */\nexport const pick = /*#__PURE__*/dual(args => Predicate.isObject(args[0]), (s, ...keys) => {\n  const out = {};\n  for (const k of keys) {\n    if (k in s) {\n      out[k] = s[k];\n    }\n  }\n  return out;\n});\n/**\n * Create a new object by omitting properties of an existing object.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Struct } from \"effect\"\n *\n * assert.deepStrictEqual(pipe({ a: \"a\", b: 1, c: true }, Struct.omit(\"c\")), { a: \"a\", b: 1 })\n * assert.deepStrictEqual(Struct.omit({ a: \"a\", b: 1, c: true }, \"c\"), { a: \"a\", b: 1 })\n * ```\n *\n * @since 2.0.0\n */\nexport const omit = /*#__PURE__*/dual(args => Predicate.isObject(args[0]), (s, ...keys) => {\n  const out = {\n    ...s\n  };\n  for (const k of keys) {\n    delete out[k];\n  }\n  return out;\n});\n/**\n * Given a struct of `Equivalence`s returns a new `Equivalence` that compares values of a struct\n * by applying each `Equivalence` to the corresponding property of the struct.\n *\n * Alias of {@link Equivalence.struct}.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Struct, String, Number } from \"effect\"\n *\n * const PersonEquivalence = Struct.getEquivalence({\n *   name: String.Equivalence,\n *   age: Number.Equivalence\n * })\n *\n * assert.deepStrictEqual(\n *   PersonEquivalence({ name: \"John\", age: 25 }, { name: \"John\", age: 25 }),\n *   true\n * )\n * assert.deepStrictEqual(\n *   PersonEquivalence({ name: \"John\", age: 25 }, { name: \"John\", age: 40 }),\n *   false\n * )\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const getEquivalence = Equivalence.struct;\n/**\n * This function creates and returns a new `Order` for a struct of values based on the given `Order`s\n * for each property in the struct.\n *\n * Alias of {@link order.struct}.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const getOrder = order.struct;\n/**\n * Transforms the values of a Struct provided a transformation function for each key.\n * If no transformation function is provided for a key, it will return the origional value for that key.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Struct } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     { a: 'a', b: 1, c: 3 },\n *     Struct.evolve({\n *       a: (a) => a.length,\n *       b: (b) => b * 2\n *     })\n *   ),\n *   { a: 1, b: 2, c: 3 }\n * )\n * ```\n *\n * @since 2.0.0\n */\nexport const evolve = /*#__PURE__*/dual(2, (obj, t) => {\n  const out = {\n    ...obj\n  };\n  for (const k in t) {\n    if (Object.prototype.hasOwnProperty.call(obj, k)) {\n      // @ts-expect-error\n      out[k] = t[k](obj[k]);\n    }\n  }\n  return out;\n});\n/**\n * Retrieves the value associated with the specified key from a struct.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Struct } from \"effect\"\n *\n * const value = pipe({ a: 1, b: 2 }, Struct.get(\"a\"))\n *\n * assert.deepStrictEqual(value, 1)\n * ```\n *\n * @since 2.0.0\n */\nexport const get = key => s => s[key];\n/**\n * Retrieves the object keys that are strings in a typed manner\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Struct } from \"effect\"\n *\n * const symbol: unique symbol = Symbol()\n *\n * const value = {\n *   a: 1,\n *   b: 2,\n *   [symbol]: 3\n * }\n *\n * const keys: Array<\"a\" | \"b\"> = Struct.keys(value)\n *\n * assert.deepStrictEqual(keys, [\"a\", \"b\"])\n * ```\n *\n * @since 3.6.0\n */\nexport const keys = o => Object.keys(o);\n//# sourceMappingURL=Struct.js.map","/**\n * @since 3.10.0\n */\nimport * as array_ from \"./Array.js\";\nimport * as bigDecimal_ from \"./BigDecimal.js\";\nimport * as bigInt_ from \"./BigInt.js\";\nimport * as boolean_ from \"./Boolean.js\";\nimport * as cause_ from \"./Cause.js\";\nimport * as chunk_ from \"./Chunk.js\";\nimport * as config_ from \"./Config.js\";\nimport * as configError_ from \"./ConfigError.js\";\nimport * as data_ from \"./Data.js\";\nimport * as dateTime from \"./DateTime.js\";\nimport * as duration_ from \"./Duration.js\";\nimport * as Effect from \"./Effect.js\";\nimport * as either_ from \"./Either.js\";\nimport * as Encoding from \"./Encoding.js\";\nimport * as Equal from \"./Equal.js\";\nimport * as Equivalence from \"./Equivalence.js\";\nimport * as exit_ from \"./Exit.js\";\nimport * as fastCheck_ from \"./FastCheck.js\";\nimport * as fiberId_ from \"./FiberId.js\";\nimport { dual, identity } from \"./Function.js\";\nimport { globalValue } from \"./GlobalValue.js\";\nimport * as hashMap_ from \"./HashMap.js\";\nimport * as hashSet_ from \"./HashSet.js\";\nimport * as internalCause_ from \"./internal/cause.js\";\nimport * as errors_ from \"./internal/schema/errors.js\";\nimport * as schemaId_ from \"./internal/schema/schemaId.js\";\nimport * as util_ from \"./internal/schema/util.js\";\nimport * as list_ from \"./List.js\";\nimport * as number_ from \"./Number.js\";\nimport * as option_ from \"./Option.js\";\nimport * as ParseResult from \"./ParseResult.js\";\nimport { pipeArguments } from \"./Pipeable.js\";\nimport * as Predicate from \"./Predicate.js\";\nimport * as redacted_ from \"./Redacted.js\";\nimport * as Request from \"./Request.js\";\nimport * as scheduler_ from \"./Scheduler.js\";\nimport * as AST from \"./SchemaAST.js\";\nimport * as sortedSet_ from \"./SortedSet.js\";\nimport * as string_ from \"./String.js\";\nimport * as struct_ from \"./Struct.js\";\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const TypeId = /*#__PURE__*/Symbol.for(\"effect/Schema\");\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function make(ast) {\n  return class SchemaClass {\n    [TypeId] = variance;\n    static ast = ast;\n    static annotations(annotations) {\n      return make(mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static pipe() {\n      return pipeArguments(this, arguments);\n    }\n    static toString() {\n      return String(ast);\n    }\n    static Type;\n    static Encoded;\n    static Context;\n    static [TypeId] = variance;\n  };\n}\nconst variance = {\n  /* c8 ignore next */\n  _A: _ => _,\n  /* c8 ignore next */\n  _I: _ => _,\n  /* c8 ignore next */\n  _R: _ => _\n};\nconst makeStandardResult = exit => exit_.isSuccess(exit) ? exit.value : makeStandardFailureResult(cause_.pretty(exit.cause));\nconst makeStandardFailureResult = message => ({\n  issues: [{\n    message\n  }]\n});\nconst makeStandardFailureFromParseIssue = issue => Effect.map(ParseResult.ArrayFormatter.formatIssue(issue), issues => ({\n  issues: issues.map(issue => ({\n    path: issue.path,\n    message: issue.message\n  }))\n}));\n/**\n * Returns a \"Standard Schema\" object conforming to the [Standard Schema\n * v1](https://standardschema.dev/) specification.\n *\n * This function creates a schema whose `validate` method attempts to decode and\n * validate the provided input synchronously. If the underlying `Schema`\n * includes any asynchronous components (e.g., asynchronous message resolutions\n * or checks), then validation will necessarily return a `Promise` instead.\n *\n * Any detected defects will be reported via a single issue containing no\n * `path`.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * const schema = Schema.Struct({\n *   name: Schema.String\n * })\n *\n * //      ┌─── StandardSchemaV1<{ readonly name: string; }>\n * //      ▼\n * const standardSchema = Schema.standardSchemaV1(schema)\n * ```\n *\n * @category Standard Schema\n * @since 3.13.0\n */\nexport const standardSchemaV1 = (schema, overrideOptions) => {\n  const decodeUnknown = ParseResult.decodeUnknown(schema, {\n    errors: \"all\"\n  });\n  return class StandardSchemaV1Class extends make(schema.ast) {\n    static \"~standard\" = {\n      version: 1,\n      vendor: \"effect\",\n      validate(value) {\n        const scheduler = new scheduler_.SyncScheduler();\n        const fiber = Effect.runFork(Effect.matchEffect(decodeUnknown(value, overrideOptions), {\n          onFailure: makeStandardFailureFromParseIssue,\n          onSuccess: value => Effect.succeed({\n            value\n          })\n        }), {\n          scheduler\n        });\n        scheduler.flush();\n        const exit = fiber.unsafePoll();\n        if (exit) {\n          return makeStandardResult(exit);\n        }\n        return new Promise(resolve => {\n          fiber.addObserver(exit => {\n            resolve(makeStandardResult(exit));\n          });\n        });\n      }\n    };\n  };\n};\nconst builtInAnnotations = {\n  schemaId: AST.SchemaIdAnnotationId,\n  message: AST.MessageAnnotationId,\n  missingMessage: AST.MissingMessageAnnotationId,\n  identifier: AST.IdentifierAnnotationId,\n  title: AST.TitleAnnotationId,\n  description: AST.DescriptionAnnotationId,\n  examples: AST.ExamplesAnnotationId,\n  default: AST.DefaultAnnotationId,\n  documentation: AST.DocumentationAnnotationId,\n  jsonSchema: AST.JSONSchemaAnnotationId,\n  arbitrary: AST.ArbitraryAnnotationId,\n  pretty: AST.PrettyAnnotationId,\n  equivalence: AST.EquivalenceAnnotationId,\n  concurrency: AST.ConcurrencyAnnotationId,\n  batching: AST.BatchingAnnotationId,\n  parseIssueTitle: AST.ParseIssueTitleAnnotationId,\n  parseOptions: AST.ParseOptionsAnnotationId,\n  decodingFallback: AST.DecodingFallbackAnnotationId\n};\nconst toASTAnnotations = annotations => {\n  if (!annotations) {\n    return {};\n  }\n  const out = {\n    ...annotations\n  };\n  for (const key in builtInAnnotations) {\n    if (key in annotations) {\n      const id = builtInAnnotations[key];\n      out[id] = annotations[key];\n      delete out[key];\n    }\n  }\n  return out;\n};\nconst mergeSchemaAnnotations = (ast, annotations) => AST.annotations(ast, toASTAnnotations(annotations));\n/**\n * @since 3.10.0\n */\nexport function asSchema(schema) {\n  return schema;\n}\n/**\n * @category formatting\n * @since 3.10.0\n */\nexport const format = schema => String(schema.ast);\n/**\n * The `encodedSchema` function allows you to extract the `Encoded` portion of a\n * schema, creating a new schema that conforms to the properties defined in the\n * original schema without retaining any refinements or transformations that\n * were applied previously.\n *\n * @since 3.10.0\n */\nexport const encodedSchema = schema => make(AST.encodedAST(schema.ast));\n/**\n * The `encodedBoundSchema` function is similar to `encodedSchema` but preserves\n * the refinements up to the first transformation point in the original schema.\n *\n * @since 3.10.0\n */\nexport const encodedBoundSchema = schema => make(AST.encodedBoundAST(schema.ast));\n/**\n * The `typeSchema` function allows you to extract the `Type` portion of a\n * schema, creating a new schema that conforms to the properties defined in the\n * original schema without considering the initial encoding or transformation\n * processes.\n *\n * @since 3.10.0\n */\nexport const typeSchema = schema => make(AST.typeAST(schema.ast));\n/* c8 ignore start */\nexport {\n/**\n * By default the option `exact` is set to `true`.\n *\n * @throws `ParseError`\n * @category validation\n * @since 3.10.0\n */\nasserts,\n/**\n * @category decoding\n * @since 3.10.0\n */\ndecodeOption,\n/**\n * @throws `ParseError`\n * @category decoding\n * @since 3.10.0\n */\ndecodeSync,\n/**\n * @category decoding\n * @since 3.10.0\n */\ndecodeUnknownOption,\n/**\n * @throws `ParseError`\n * @category decoding\n * @since 3.10.0\n */\ndecodeUnknownSync,\n/**\n * @category encoding\n * @since 3.10.0\n */\nencodeOption,\n/**\n * @throws `ParseError`\n * @category encoding\n * @since 3.10.0\n */\nencodeSync,\n/**\n * @category encoding\n * @since 3.10.0\n */\nencodeUnknownOption,\n/**\n * @throws `ParseError`\n * @category encoding\n * @since 3.10.0\n */\nencodeUnknownSync,\n/**\n * By default the option `exact` is set to `true`.\n *\n * @category validation\n * @since 3.10.0\n */\nis,\n/**\n * @category validation\n * @since 3.10.0\n */\nvalidateOption,\n/**\n * @throws `ParseError`\n * @category validation\n * @since 3.10.0\n */\nvalidateSync } from \"./ParseResult.js\";\n/* c8 ignore end */\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknown = (schema, options) => {\n  const encodeUnknown = ParseResult.encodeUnknown(schema, options);\n  return (u, overrideOptions) => ParseResult.mapError(encodeUnknown(u, overrideOptions), ParseResult.parseError);\n};\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownEither = (schema, options) => {\n  const encodeUnknownEither = ParseResult.encodeUnknownEither(schema, options);\n  return (u, overrideOptions) => either_.mapLeft(encodeUnknownEither(u, overrideOptions), ParseResult.parseError);\n};\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeUnknownPromise = (schema, options) => {\n  const parser = encodeUnknown(schema, options);\n  return (u, overrideOptions) => Effect.runPromise(parser(u, overrideOptions));\n};\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encode = encodeUnknown;\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodeEither = encodeUnknownEither;\n/**\n * @category encoding\n * @since 3.10.0\n */\nexport const encodePromise = encodeUnknownPromise;\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknown = (schema, options) => {\n  const decodeUnknown = ParseResult.decodeUnknown(schema, options);\n  return (u, overrideOptions) => ParseResult.mapError(decodeUnknown(u, overrideOptions), ParseResult.parseError);\n};\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownEither = (schema, options) => {\n  const decodeUnknownEither = ParseResult.decodeUnknownEither(schema, options);\n  return (u, overrideOptions) => either_.mapLeft(decodeUnknownEither(u, overrideOptions), ParseResult.parseError);\n};\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeUnknownPromise = (schema, options) => {\n  const parser = decodeUnknown(schema, options);\n  return (u, overrideOptions) => Effect.runPromise(parser(u, overrideOptions));\n};\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decode = decodeUnknown;\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodeEither = decodeUnknownEither;\n/**\n * @category decoding\n * @since 3.10.0\n */\nexport const decodePromise = decodeUnknownPromise;\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validate = (schema, options) => {\n  const validate = ParseResult.validate(schema, options);\n  return (u, overrideOptions) => ParseResult.mapError(validate(u, overrideOptions), ParseResult.parseError);\n};\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validateEither = (schema, options) => {\n  const validateEither = ParseResult.validateEither(schema, options);\n  return (u, overrideOptions) => either_.mapLeft(validateEither(u, overrideOptions), ParseResult.parseError);\n};\n/**\n * @category validation\n * @since 3.10.0\n */\nexport const validatePromise = (schema, options) => {\n  const parser = validate(schema, options);\n  return (u, overrideOptions) => Effect.runPromise(parser(u, overrideOptions));\n};\n/**\n * Tests if a value is a `Schema`.\n *\n * @category guards\n * @since 3.10.0\n */\nexport const isSchema = u => Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId]);\nfunction getDefaultLiteralAST(literals) {\n  return AST.isMembers(literals) ? AST.Union.make(AST.mapMembers(literals, literal => new AST.Literal(literal))) : new AST.Literal(literals[0]);\n}\nfunction makeLiteralClass(literals, ast = getDefaultLiteralAST(literals)) {\n  return class LiteralClass extends make(ast) {\n    static annotations(annotations) {\n      return makeLiteralClass(this.literals, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static literals = [...literals];\n  };\n}\nexport function Literal(...literals) {\n  return array_.isNonEmptyReadonlyArray(literals) ? makeLiteralClass(literals) : Never;\n}\n/**\n * Creates a new `Schema` from a literal schema.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Schema } from \"effect\"\n *\n * const schema = Schema.Literal(\"a\", \"b\", \"c\").pipe(Schema.pickLiteral(\"a\", \"b\"))\n *\n * assert.deepStrictEqual(Schema.decodeSync(schema)(\"a\"), \"a\")\n * assert.deepStrictEqual(Schema.decodeSync(schema)(\"b\"), \"b\")\n * assert.strictEqual(Either.isLeft(Schema.decodeUnknownEither(schema)(\"c\")), true)\n * ```\n *\n * @category constructors\n * @since 3.10.0\n */\nexport const pickLiteral = (...literals) => _schema => Literal(...literals);\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const UniqueSymbolFromSelf = symbol => make(new AST.UniqueSymbol(symbol));\nconst getDefaultEnumsAST = enums => new AST.Enums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== \"number\").map(key => [key, enums[key]]));\nconst makeEnumsClass = (enums, ast = getDefaultEnumsAST(enums)) => class EnumsClass extends make(ast) {\n  static annotations(annotations) {\n    return makeEnumsClass(this.enums, mergeSchemaAnnotations(this.ast, annotations));\n  }\n  static enums = {\n    ...enums\n  };\n};\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const Enums = enums => makeEnumsClass(enums);\n/**\n * @category template literal\n * @since 3.10.0\n */\nexport const TemplateLiteral = (...[head, ...tail]) => {\n  const spans = [];\n  let h = \"\";\n  let ts = tail;\n  if (isSchema(head)) {\n    if (AST.isLiteral(head.ast)) {\n      h = String(head.ast.literal);\n    } else {\n      ts = [head, ...ts];\n    }\n  } else {\n    h = String(head);\n  }\n  for (let i = 0; i < ts.length; i++) {\n    const item = ts[i];\n    if (isSchema(item)) {\n      if (i < ts.length - 1) {\n        const next = ts[i + 1];\n        if (isSchema(next)) {\n          if (AST.isLiteral(next.ast)) {\n            spans.push(new AST.TemplateLiteralSpan(item.ast, String(next.ast.literal)));\n            i++;\n            continue;\n          }\n        } else {\n          spans.push(new AST.TemplateLiteralSpan(item.ast, String(next)));\n          i++;\n          continue;\n        }\n      }\n      spans.push(new AST.TemplateLiteralSpan(item.ast, \"\"));\n    } else {\n      spans.push(new AST.TemplateLiteralSpan(new AST.Literal(item), \"\"));\n    }\n  }\n  if (array_.isNonEmptyArray(spans)) {\n    return make(new AST.TemplateLiteral(h, spans));\n  } else {\n    return make(new AST.TemplateLiteral(\"\", [new AST.TemplateLiteralSpan(new AST.Literal(h), \"\")]));\n  }\n};\nfunction getTemplateLiteralParserCoercedElement(encoded, schema) {\n  const ast = encoded.ast;\n  switch (ast._tag) {\n    case \"Literal\":\n      {\n        const literal = ast.literal;\n        if (!Predicate.isString(literal)) {\n          const s = String(literal);\n          return transform(Literal(s), schema, {\n            strict: true,\n            decode: () => literal,\n            encode: () => s\n          });\n        }\n        break;\n      }\n    case \"NumberKeyword\":\n      return compose(NumberFromString, schema);\n    case \"Union\":\n      {\n        const members = [];\n        let hasCoercions = false;\n        for (const member of ast.types) {\n          const schema = make(member);\n          const encoded = encodedSchema(schema);\n          const coerced = getTemplateLiteralParserCoercedElement(encoded, schema);\n          if (coerced) {\n            hasCoercions = true;\n          }\n          members.push(coerced ?? schema);\n        }\n        return hasCoercions ? compose(Union(...members), schema) : schema;\n      }\n  }\n}\n/**\n * @category template literal\n * @since 3.10.0\n */\nexport const TemplateLiteralParser = (...params) => {\n  const encodedSchemas = [];\n  const elements = [];\n  const schemas = [];\n  let coerced = false;\n  for (let i = 0; i < params.length; i++) {\n    const param = params[i];\n    const schema = isSchema(param) ? param : Literal(param);\n    schemas.push(schema);\n    const encoded = encodedSchema(schema);\n    encodedSchemas.push(encoded);\n    const element = getTemplateLiteralParserCoercedElement(encoded, schema);\n    if (element) {\n      elements.push(element);\n      coerced = true;\n    } else {\n      elements.push(schema);\n    }\n  }\n  const from = TemplateLiteral(...encodedSchemas);\n  const re = AST.getTemplateLiteralCapturingRegExp(from.ast);\n  let to = Tuple(...elements);\n  if (coerced) {\n    to = to.annotations({\n      [AST.AutoTitleAnnotationId]: format(Tuple(...schemas))\n    });\n  }\n  return class TemplateLiteralParserClass extends transformOrFail(from, to, {\n    strict: false,\n    decode: (i, _, ast) => {\n      const match = re.exec(i);\n      return match ? ParseResult.succeed(match.slice(1, params.length + 1)) : ParseResult.fail(new ParseResult.Type(ast, i, `${re.source}: no match for ${JSON.stringify(i)}`));\n    },\n    encode: tuple => ParseResult.succeed(tuple.join(\"\"))\n  }) {\n    static params = params.slice();\n  };\n};\nconst declareConstructor = (typeParameters, options, annotations) => makeDeclareClass(typeParameters, new AST.Declaration(typeParameters.map(tp => tp.ast), (...typeParameters) => options.decode(...typeParameters.map(make)), (...typeParameters) => options.encode(...typeParameters.map(make)), toASTAnnotations(annotations)));\nconst declarePrimitive = (is, annotations) => {\n  const decodeUnknown = () => (input, _, ast) => is(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input));\n  const encodeUnknown = decodeUnknown;\n  return makeDeclareClass([], new AST.Declaration([], decodeUnknown, encodeUnknown, toASTAnnotations(annotations)));\n};\nfunction makeDeclareClass(typeParameters, ast) {\n  return class DeclareClass extends make(ast) {\n    static annotations(annotations) {\n      return makeDeclareClass(this.typeParameters, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static typeParameters = [...typeParameters];\n  };\n}\n/**\n * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.\n * This ensures that when you call `Schema.to` or `Schema.from`, you receive a schema with a `never` context.\n *\n * @category constructors\n * @since 3.10.0\n */\nexport const declare = function () {\n  if (Array.isArray(arguments[0])) {\n    const typeParameters = arguments[0];\n    const options = arguments[1];\n    const annotations = arguments[2];\n    return declareConstructor(typeParameters, options, annotations);\n  }\n  const is = arguments[0];\n  const annotations = arguments[1];\n  return declarePrimitive(is, annotations);\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BrandSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Brand\");\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const fromBrand = (constructor, annotations) => self => {\n  const out = makeBrandClass(self, new AST.Refinement(self.ast, function predicate(a, _, ast) {\n    const either = constructor.either(a);\n    return either_.isLeft(either) ? option_.some(new ParseResult.Type(ast, a, either.left.map(v => v.message).join(\", \"))) : option_.none();\n  }, toASTAnnotations({\n    schemaId: BrandSchemaId,\n    [BrandSchemaId]: {\n      constructor\n    },\n    ...annotations\n  })));\n  return out;\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const InstanceOfSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/InstanceOf\");\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const instanceOf = (constructor, annotations) => declare(u => u instanceof constructor, {\n  title: constructor.name,\n  description: `an instance of ${constructor.name}`,\n  pretty: () => String,\n  schemaId: InstanceOfSchemaId,\n  [InstanceOfSchemaId]: {\n    constructor\n  },\n  ...annotations\n});\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Undefined extends /*#__PURE__*/make(AST.undefinedKeyword) {}\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Void extends /*#__PURE__*/make(AST.voidKeyword) {}\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Null extends /*#__PURE__*/make(AST.null) {}\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Never extends /*#__PURE__*/make(AST.neverKeyword) {}\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Unknown extends /*#__PURE__*/make(AST.unknownKeyword) {}\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class Any extends /*#__PURE__*/make(AST.anyKeyword) {}\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class BigIntFromSelf extends /*#__PURE__*/make(AST.bigIntKeyword) {}\n/**\n * @category primitives\n * @since 3.10.0\n */\nexport class SymbolFromSelf extends /*#__PURE__*/make(AST.symbolKeyword) {}\n/** @ignore */\nclass String$ extends /*#__PURE__*/make(AST.stringKeyword) {}\n/** @ignore */\nclass Number$ extends /*#__PURE__*/make(AST.numberKeyword) {}\n/** @ignore */\nclass Boolean$ extends /*#__PURE__*/make(AST.booleanKeyword) {}\n/** @ignore */\nclass Object$ extends /*#__PURE__*/make(AST.objectKeyword) {}\nexport {\n/**\n * @category primitives\n * @since 3.10.0\n */\nBoolean$ as Boolean,\n/**\n * @category primitives\n * @since 3.10.0\n */\nNumber$ as Number,\n/**\n * @category primitives\n * @since 3.10.0\n */\nObject$ as Object,\n/**\n * @category primitives\n * @since 3.10.0\n */\nString$ as String };\nconst getDefaultUnionAST = members => AST.Union.make(members.map(m => m.ast));\nfunction makeUnionClass(members, ast = getDefaultUnionAST(members)) {\n  return class UnionClass extends make(ast) {\n    static annotations(annotations) {\n      return makeUnionClass(this.members, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static members = [...members];\n  };\n}\nexport function Union(...members) {\n  return AST.isMembers(members) ? makeUnionClass(members) : array_.isNonEmptyReadonlyArray(members) ? members[0] : Never;\n}\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const NullOr = self => Union(self, Null);\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const UndefinedOr = self => Union(self, Undefined);\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const NullishOr = self => Union(self, Null, Undefined);\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const keyof = self => make(AST.keyof(self.ast));\n/**\n * @since 3.10.0\n */\nexport const element = self => new ElementImpl(new AST.OptionalType(self.ast, false), self);\n/**\n * @since 3.10.0\n */\nexport const optionalElement = self => new ElementImpl(new AST.OptionalType(self.ast, true), self);\nclass ElementImpl {\n  ast;\n  from;\n  [TypeId];\n  _Token;\n  constructor(ast, from) {\n    this.ast = ast;\n    this.from = from;\n  }\n  annotations(annotations) {\n    return new ElementImpl(new AST.OptionalType(this.ast.type, this.ast.isOptional, {\n      ...this.ast.annotations,\n      ...toASTAnnotations(annotations)\n    }), this.from);\n  }\n  toString() {\n    return `${this.ast.type}${this.ast.isOptional ? \"?\" : \"\"}`;\n  }\n}\nconst getDefaultTupleTypeAST = (elements, rest) => new AST.TupleType(elements.map(el => isSchema(el) ? new AST.OptionalType(el.ast, false) : el.ast), rest.map(el => isSchema(el) ? new AST.Type(el.ast) : el.ast), true);\nfunction makeTupleTypeClass(elements, rest, ast = getDefaultTupleTypeAST(elements, rest)) {\n  return class TupleTypeClass extends make(ast) {\n    static annotations(annotations) {\n      return makeTupleTypeClass(this.elements, this.rest, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static elements = [...elements];\n    static rest = [...rest];\n  };\n}\nexport function Tuple(...args) {\n  return Array.isArray(args[0]) ? makeTupleTypeClass(args[0], args.slice(1)) : makeTupleTypeClass(args, []);\n}\nfunction makeArrayClass(value, ast) {\n  return class ArrayClass extends makeTupleTypeClass([], [value], ast) {\n    static annotations(annotations) {\n      return makeArrayClass(this.value, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static value = value;\n  };\n}\nconst Array$ = value => makeArrayClass(value);\nexport {\n/**\n * @category constructors\n * @since 3.10.0\n */\nArray$ as Array };\nfunction makeNonEmptyArrayClass(value, ast) {\n  return class NonEmptyArrayClass extends makeTupleTypeClass([value], [value], ast) {\n    static annotations(annotations) {\n      return makeNonEmptyArrayClass(this.value, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static value = value;\n  };\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const NonEmptyArray = value => makeNonEmptyArrayClass(value);\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function ArrayEnsure(value) {\n  return transform(Union(value, Array$(value)), Array$(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => array_.ensure(i),\n    encode: a => a.length === 1 ? a[0] : a\n  });\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport function NonEmptyArrayEnsure(value) {\n  return transform(Union(value, NonEmptyArray(value)), NonEmptyArray(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => array_.isNonEmptyReadonlyArray(i) ? i : array_.of(i),\n    encode: a => a.length === 1 ? a[0] : a\n  });\n}\nconst formatPropertySignatureToken = isOptional => isOptional ? \"\\\"?:\\\"\" : \"\\\":\\\"\";\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class PropertySignatureDeclaration extends AST.OptionalType {\n  isReadonly;\n  defaultValue;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"PropertySignatureDeclaration\";\n  constructor(type, isOptional, isReadonly, annotations, defaultValue) {\n    super(type, isOptional, annotations);\n    this.isReadonly = isReadonly;\n    this.defaultValue = defaultValue;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    const token = formatPropertySignatureToken(this.isOptional);\n    const type = String(this.type);\n    return `PropertySignature<${token}, ${type}, never, ${token}, ${type}>`;\n  }\n}\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class FromPropertySignature extends AST.OptionalType {\n  isReadonly;\n  fromKey;\n  constructor(type, isOptional, isReadonly, annotations, fromKey) {\n    super(type, isOptional, annotations);\n    this.isReadonly = isReadonly;\n    this.fromKey = fromKey;\n  }\n}\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class ToPropertySignature extends AST.OptionalType {\n  isReadonly;\n  defaultValue;\n  constructor(type, isOptional, isReadonly, annotations, defaultValue) {\n    super(type, isOptional, annotations);\n    this.isReadonly = isReadonly;\n    this.defaultValue = defaultValue;\n  }\n}\nconst formatPropertyKey = p => {\n  if (p === undefined) {\n    return \"never\";\n  }\n  if (Predicate.isString(p)) {\n    return JSON.stringify(p);\n  }\n  return String(p);\n};\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport class PropertySignatureTransformation {\n  from;\n  to;\n  decode;\n  encode;\n  /**\n   * @since 3.10.0\n   */\n  _tag = \"PropertySignatureTransformation\";\n  constructor(from, to, decode, encode) {\n    this.from = from;\n    this.to = to;\n    this.decode = decode;\n    this.encode = encode;\n  }\n  /**\n   * @since 3.10.0\n   */\n  toString() {\n    return `PropertySignature<${formatPropertySignatureToken(this.to.isOptional)}, ${this.to.type}, ${formatPropertyKey(this.from.fromKey)}, ${formatPropertySignatureToken(this.from.isOptional)}, ${this.from.type}>`;\n  }\n}\nconst mergeSignatureAnnotations = (ast, annotations) => {\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\":\n      {\n        return new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, {\n          ...ast.annotations,\n          ...annotations\n        }, ast.defaultValue);\n      }\n    case \"PropertySignatureTransformation\":\n      {\n        return new PropertySignatureTransformation(ast.from, new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, {\n          ...ast.to.annotations,\n          ...annotations\n        }, ast.to.defaultValue), ast.decode, ast.encode);\n      }\n  }\n};\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const PropertySignatureTypeId = /*#__PURE__*/Symbol.for(\"effect/PropertySignature\");\n/**\n * @since 3.10.0\n * @category guards\n */\nexport const isPropertySignature = u => Predicate.hasProperty(u, PropertySignatureTypeId);\nclass PropertySignatureImpl {\n  ast;\n  [TypeId];\n  [PropertySignatureTypeId] = null;\n  _TypeToken;\n  _Key;\n  _EncodedToken;\n  _HasDefault;\n  constructor(ast) {\n    this.ast = ast;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  annotations(annotations) {\n    return new PropertySignatureImpl(mergeSignatureAnnotations(this.ast, toASTAnnotations(annotations)));\n  }\n  toString() {\n    return String(this.ast);\n  }\n}\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const makePropertySignature = ast => new PropertySignatureImpl(ast);\nclass PropertySignatureWithFromImpl extends PropertySignatureImpl {\n  from;\n  constructor(ast, from) {\n    super(ast);\n    this.from = from;\n  }\n  annotations(annotations) {\n    return new PropertySignatureWithFromImpl(mergeSignatureAnnotations(this.ast, toASTAnnotations(annotations)), this.from);\n  }\n}\n/**\n * Lifts a `Schema` into a `PropertySignature`.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const propertySignature = self => new PropertySignatureWithFromImpl(new PropertySignatureDeclaration(self.ast, false, true, {}, undefined), self);\n/**\n * Enhances a property signature with a default constructor value.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const withConstructorDefault = /*#__PURE__*/dual(2, (self, defaultValue) => {\n  const ast = self.ast;\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\":\n      return makePropertySignature(new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, defaultValue));\n    case \"PropertySignatureTransformation\":\n      return makePropertySignature(new PropertySignatureTransformation(ast.from, new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, ast.to.annotations, defaultValue), ast.decode, ast.encode));\n  }\n});\nconst applyDefaultValue = (o, defaultValue) => option_.match(o, {\n  onNone: () => option_.some(defaultValue()),\n  onSome: value => option_.some(value === undefined ? defaultValue() : value)\n});\nconst pruneUndefined = ast => AST.pruneUndefined(ast, pruneUndefined, ast => {\n  const pruned = pruneUndefined(ast.to);\n  if (pruned) {\n    return new AST.Transformation(ast.from, pruned, ast.transformation);\n  }\n});\n/**\n * Enhances a property signature with a default decoding value.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const withDecodingDefault = /*#__PURE__*/dual(2, (self, defaultValue) => {\n  const ast = self.ast;\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\":\n      {\n        const to = AST.typeAST(ast.type);\n        return makePropertySignature(new PropertySignatureTransformation(new FromPropertySignature(ast.type, ast.isOptional, ast.isReadonly, ast.annotations), new ToPropertySignature(pruneUndefined(to) ?? to, false, true, {}, ast.defaultValue), o => applyDefaultValue(o, defaultValue), identity));\n      }\n    case \"PropertySignatureTransformation\":\n      {\n        const to = ast.to.type;\n        return makePropertySignature(new PropertySignatureTransformation(ast.from, new ToPropertySignature(pruneUndefined(to) ?? to, false, ast.to.isReadonly, ast.to.annotations, ast.to.defaultValue), o => applyDefaultValue(ast.decode(o), defaultValue), ast.encode));\n      }\n  }\n});\n/**\n * Enhances a property signature with a default decoding value and a default constructor value.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const withDefaults = /*#__PURE__*/dual(2, (self, defaults) => self.pipe(withDecodingDefault(defaults.decoding), withConstructorDefault(defaults.constructor)));\n/**\n * Enhances a property signature by specifying a different key for it in the Encoded type.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const fromKey = /*#__PURE__*/dual(2, (self, key) => {\n  const ast = self.ast;\n  switch (ast._tag) {\n    case \"PropertySignatureDeclaration\":\n      {\n        return makePropertySignature(new PropertySignatureTransformation(new FromPropertySignature(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, key), new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}, ast.defaultValue), identity, identity));\n      }\n    case \"PropertySignatureTransformation\":\n      return makePropertySignature(new PropertySignatureTransformation(new FromPropertySignature(ast.from.type, ast.from.isOptional, ast.from.isReadonly, ast.from.annotations, key), ast.to, ast.decode, ast.encode));\n  }\n});\n/**\n * Converts an optional property to a required one through a transformation `Option -> Type`.\n *\n * - `decode`: `none` as argument means the value is missing in the input.\n * - `encode`: `none` as return value means the value will be missing in the output.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optionalToRequired = (from, to, options) => makePropertySignature(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, false, true, {}, undefined), o => option_.some(options.decode(o)), option_.flatMap(options.encode)));\n/**\n * Converts an optional property to a required one through a transformation `Type -> Option`.\n *\n * - `decode`: `none` as return value means the value will be missing in the output.\n * - `encode`: `none` as argument means the value is missing in the input.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const requiredToOptional = (from, to, options) => makePropertySignature(new PropertySignatureTransformation(new FromPropertySignature(from.ast, false, true, {}, undefined), new ToPropertySignature(to.ast, true, true, {}, undefined), option_.flatMap(options.decode), o => option_.some(options.encode(o))));\n/**\n * Converts an optional property to another optional property through a transformation `Option -> Option`.\n *\n * - `decode`:\n *   - `none` as argument means the value is missing in the input.\n *   - `none` as return value means the value will be missing in the output.\n * - `encode`:\n *   - `none` as argument means the value is missing in the input.\n *   - `none` as return value means the value will be missing in the output.\n *\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optionalToOptional = (from, to, options) => makePropertySignature(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, true, true, {}, undefined), options.decode, options.encode));\nconst optionalPropertySignatureAST = (self, options) => {\n  const isExact = options?.exact;\n  const defaultValue = options?.default;\n  const isNullable = options?.nullable;\n  const asOption = options?.as == \"Option\";\n  const asOptionEncode = options?.onNoneEncoding ? option_.orElse(options.onNoneEncoding) : identity;\n  if (isExact) {\n    if (defaultValue) {\n      if (isNullable) {\n        return withConstructorDefault(optionalToRequired(NullOr(self), typeSchema(self), {\n          decode: option_.match({\n            onNone: defaultValue,\n            onSome: a => a === null ? defaultValue() : a\n          }),\n          encode: option_.some\n        }), defaultValue).ast;\n      } else {\n        return withConstructorDefault(optionalToRequired(self, typeSchema(self), {\n          decode: option_.match({\n            onNone: defaultValue,\n            onSome: identity\n          }),\n          encode: option_.some\n        }), defaultValue).ast;\n      }\n    } else if (asOption) {\n      if (isNullable) {\n        return optionalToRequired(NullOr(self), OptionFromSelf(typeSchema(self)), {\n          decode: option_.filter(Predicate.isNotNull),\n          encode: asOptionEncode\n        }).ast;\n      } else {\n        return optionalToRequired(self, OptionFromSelf(typeSchema(self)), {\n          decode: identity,\n          encode: identity\n        }).ast;\n      }\n    } else {\n      if (isNullable) {\n        return optionalToOptional(NullOr(self), typeSchema(self), {\n          decode: option_.filter(Predicate.isNotNull),\n          encode: identity\n        }).ast;\n      } else {\n        return new PropertySignatureDeclaration(self.ast, true, true, {}, undefined);\n      }\n    }\n  } else {\n    if (defaultValue) {\n      if (isNullable) {\n        return withConstructorDefault(optionalToRequired(NullishOr(self), typeSchema(self), {\n          decode: option_.match({\n            onNone: defaultValue,\n            onSome: a => a == null ? defaultValue() : a\n          }),\n          encode: option_.some\n        }), defaultValue).ast;\n      } else {\n        return withConstructorDefault(optionalToRequired(UndefinedOr(self), typeSchema(self), {\n          decode: option_.match({\n            onNone: defaultValue,\n            onSome: a => a === undefined ? defaultValue() : a\n          }),\n          encode: option_.some\n        }), defaultValue).ast;\n      }\n    } else if (asOption) {\n      if (isNullable) {\n        return optionalToRequired(NullishOr(self), OptionFromSelf(typeSchema(self)), {\n          decode: option_.filter(a => a != null),\n          encode: asOptionEncode\n        }).ast;\n      } else {\n        return optionalToRequired(UndefinedOr(self), OptionFromSelf(typeSchema(self)), {\n          decode: option_.filter(Predicate.isNotUndefined),\n          encode: asOptionEncode\n        }).ast;\n      }\n    } else {\n      if (isNullable) {\n        return optionalToOptional(NullishOr(self), UndefinedOr(typeSchema(self)), {\n          decode: option_.filter(Predicate.isNotNull),\n          encode: identity\n        }).ast;\n      } else {\n        return new PropertySignatureDeclaration(UndefinedOr(self).ast, true, true, {}, undefined);\n      }\n    }\n  }\n};\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optional = self => {\n  const ast = self.ast === AST.undefinedKeyword || self.ast === AST.neverKeyword ? AST.undefinedKeyword : UndefinedOr(self).ast;\n  return new PropertySignatureWithFromImpl(new PropertySignatureDeclaration(ast, true, true, {}, undefined), self);\n};\n/**\n * @category PropertySignature\n * @since 3.10.0\n */\nexport const optionalWith = /*#__PURE__*/dual(args => isSchema(args[0]), (self, options) => {\n  return new PropertySignatureWithFromImpl(optionalPropertySignatureAST(self, options), self);\n});\nconst preserveMissingMessageAnnotation = /*#__PURE__*/AST.pickAnnotations([AST.MissingMessageAnnotationId]);\nconst getDefaultTypeLiteralAST = (fields, records) => {\n  const ownKeys = util_.ownKeys(fields);\n  const pss = [];\n  if (ownKeys.length > 0) {\n    const from = [];\n    const to = [];\n    const transformations = [];\n    for (let i = 0; i < ownKeys.length; i++) {\n      const key = ownKeys[i];\n      const field = fields[key];\n      if (isPropertySignature(field)) {\n        const ast = field.ast;\n        switch (ast._tag) {\n          case \"PropertySignatureDeclaration\":\n            {\n              const type = ast.type;\n              const isOptional = ast.isOptional;\n              const toAnnotations = ast.annotations;\n              from.push(new AST.PropertySignature(key, type, isOptional, true, preserveMissingMessageAnnotation(ast)));\n              to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations));\n              pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations));\n              break;\n            }\n          case \"PropertySignatureTransformation\":\n            {\n              const fromKey = ast.from.fromKey ?? key;\n              from.push(new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations));\n              to.push(new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations));\n              transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode));\n              break;\n            }\n        }\n      } else {\n        from.push(new AST.PropertySignature(key, field.ast, false, true));\n        to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true));\n        pss.push(new AST.PropertySignature(key, field.ast, false, true));\n      }\n    }\n    if (array_.isNonEmptyReadonlyArray(transformations)) {\n      const issFrom = [];\n      const issTo = [];\n      for (const r of records) {\n        const {\n          indexSignatures,\n          propertySignatures\n        } = AST.record(r.key.ast, r.value.ast);\n        propertySignatures.forEach(ps => {\n          from.push(ps);\n          to.push(new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations));\n        });\n        indexSignatures.forEach(is => {\n          issFrom.push(is);\n          issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly));\n        });\n      }\n      return new AST.Transformation(new AST.TypeLiteral(from, issFrom, {\n        [AST.AutoTitleAnnotationId]: \"Struct (Encoded side)\"\n      }), new AST.TypeLiteral(to, issTo, {\n        [AST.AutoTitleAnnotationId]: \"Struct (Type side)\"\n      }), new AST.TypeLiteralTransformation(transformations));\n    }\n  }\n  const iss = [];\n  for (const r of records) {\n    const {\n      indexSignatures,\n      propertySignatures\n    } = AST.record(r.key.ast, r.value.ast);\n    propertySignatures.forEach(ps => pss.push(ps));\n    indexSignatures.forEach(is => iss.push(is));\n  }\n  return new AST.TypeLiteral(pss, iss);\n};\nconst lazilyMergeDefaults = (fields, out) => {\n  const ownKeys = util_.ownKeys(fields);\n  for (const key of ownKeys) {\n    const field = fields[key];\n    if (out[key] === undefined && isPropertySignature(field)) {\n      const ast = field.ast;\n      const defaultValue = ast._tag === \"PropertySignatureDeclaration\" ? ast.defaultValue : ast.to.defaultValue;\n      if (defaultValue !== undefined) {\n        out[key] = defaultValue();\n      }\n    }\n  }\n  return out;\n};\nfunction makeTypeLiteralClass(fields, records, ast = getDefaultTypeLiteralAST(fields, records)) {\n  return class TypeLiteralClass extends make(ast) {\n    static annotations(annotations) {\n      return makeTypeLiteralClass(this.fields, this.records, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static fields = {\n      ...fields\n    };\n    static records = [...records];\n    static make = (props, options) => {\n      const propsWithDefaults = lazilyMergeDefaults(fields, {\n        ...props\n      });\n      return getDisableValidationMakeOption(options) ? propsWithDefaults : ParseResult.validateSync(this)(propsWithDefaults);\n    };\n    static pick(...keys) {\n      return Struct(struct_.pick(fields, ...keys));\n    }\n    static omit(...keys) {\n      return Struct(struct_.omit(fields, ...keys));\n    }\n  };\n}\nexport function Struct(fields, ...records) {\n  return makeTypeLiteralClass(fields, records);\n}\n/**\n * Returns a property signature that represents a tag.\n * A tag is a literal value that is used to distinguish between different types of objects.\n * The tag is optional when using the `make` method.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Schema } from \"effect\"\n *\n * const User = Schema.Struct({\n *   _tag: Schema.tag(\"User\"),\n *   name: Schema.String,\n *   age: Schema.Number\n * })\n *\n * assert.deepStrictEqual(User.make({ name: \"John\", age: 44 }), { _tag: \"User\", name: \"John\", age: 44 })\n * ```\n *\n * @see {@link TaggedStruct}\n *\n * @since 3.10.0\n */\nexport const tag = tag => Literal(tag).pipe(propertySignature, withConstructorDefault(() => tag));\n/**\n * A tagged struct is a struct that has a tag property that is used to distinguish between different types of objects.\n *\n * The tag is optional when using the `make` method.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Schema } from \"effect\"\n *\n * const User = Schema.TaggedStruct(\"User\", {\n *   name: Schema.String,\n *   age: Schema.Number\n * })\n *\n * assert.deepStrictEqual(User.make({ name: \"John\", age: 44 }), { _tag: \"User\", name: \"John\", age: 44 })\n * ```\n *\n * @category constructors\n * @since 3.10.0\n */\nexport const TaggedStruct = (value, fields) => Struct({\n  _tag: tag(value),\n  ...fields\n});\nfunction makeRecordClass(key, value, ast) {\n  return class RecordClass extends makeTypeLiteralClass({}, [{\n    key,\n    value\n  }], ast) {\n    static annotations(annotations) {\n      return makeRecordClass(key, value, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static key = key;\n    static value = value;\n  };\n}\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const Record = options => makeRecordClass(options.key, options.value);\n/**\n * @category struct transformations\n * @since 3.10.0\n */\nexport const pick = (...keys) => self => make(AST.pick(self.ast, keys));\n/**\n * @category struct transformations\n * @since 3.10.0\n */\nexport const omit = (...keys) => self => make(AST.omit(self.ast, keys));\n/**\n * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,\n * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.\n *\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * // ---------------------------------------------\n * // use case: pull out a single field from a\n * // struct through a transformation\n * // ---------------------------------------------\n *\n * const mytable = Schema.Struct({\n *   column1: Schema.NumberFromString,\n *   column2: Schema.Number\n * })\n *\n * // const pullOutColumn: S.Schema<number, {\n * //     readonly column1: string;\n * // }, never>\n * const pullOutColumn = mytable.pipe(Schema.pluck(\"column1\"))\n *\n * console.log(Schema.decodeUnknownEither(Schema.Array(pullOutColumn))([{ column1: \"1\", column2: 100 }, { column1: \"2\", column2: 300 }]))\n * // Output: { _id: 'Either', _tag: 'Right', right: [ 1, 2 ] }\n * ```\n *\n * @category struct transformations\n * @since 3.10.0\n */\nexport const pluck = /*#__PURE__*/dual(2, (schema, key) => {\n  const ps = AST.getPropertyKeyIndexedAccess(AST.typeAST(schema.ast), key);\n  const value = make(ps.isOptional ? AST.orUndefined(ps.type) : ps.type);\n  const out = transform(schema.pipe(pick(key)), value, {\n    strict: true,\n    decode: i => i[key],\n    encode: a => ps.isOptional && a === undefined ? {} : {\n      [key]: a\n    }\n  });\n  return out;\n});\nfunction makeBrandClass(from, ast) {\n  return class BrandClass extends make(ast) {\n    static annotations(annotations) {\n      return makeBrandClass(this.from, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static make = (a, options) => {\n      return getDisableValidationMakeOption(options) ? a : ParseResult.validateSync(this)(a);\n    };\n    static from = from;\n  };\n}\n/**\n * Returns a nominal branded schema by applying a brand to a given schema.\n *\n * ```\n * Schema<A> + B -> Schema<A & Brand<B>>\n * ```\n *\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * const Int = Schema.Number.pipe(Schema.int(), Schema.brand(\"Int\"))\n * type Int = Schema.Schema.Type<typeof Int> // number & Brand<\"Int\">\n * ```\n *\n * @category branding\n * @since 3.10.0\n */\nexport const brand = (brand, annotations) => self => {\n  const annotation = option_.match(AST.getBrandAnnotation(self.ast), {\n    onNone: () => [brand],\n    onSome: brands => [...brands, brand]\n  });\n  const ast = AST.annotations(self.ast, toASTAnnotations({\n    [AST.BrandAnnotationId]: annotation,\n    ...annotations\n  }));\n  return makeBrandClass(self, ast);\n};\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const partial = self => make(AST.partial(self.ast));\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const partialWith = /*#__PURE__*/dual(args => isSchema(args[0]), (self, options) => make(AST.partial(self.ast, options)));\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const required = self => make(AST.required(self.ast));\n/**\n * Creates a new schema with shallow mutability applied to its properties.\n *\n * @category combinators\n * @since 3.10.0\n */\nexport const mutable = schema => make(AST.mutable(schema.ast));\nconst intersectTypeLiterals = (x, y, path) => {\n  if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {\n    const propertySignatures = [...x.propertySignatures];\n    for (const ps of y.propertySignatures) {\n      const name = ps.name;\n      const i = propertySignatures.findIndex(ps => ps.name === name);\n      if (i === -1) {\n        propertySignatures.push(ps);\n      } else {\n        const {\n          isOptional,\n          type\n        } = propertySignatures[i];\n        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path.concat(name)), isOptional, true);\n      }\n    }\n    return new AST.TypeLiteral(propertySignatures, x.indexSignatures.concat(y.indexSignatures));\n  }\n  throw new Error(errors_.getSchemaExtendErrorMessage(x, y, path));\n};\nconst preserveRefinementAnnotations = /*#__PURE__*/AST.omitAnnotations([AST.IdentifierAnnotationId]);\nconst addRefinementToMembers = (refinement, asts) => asts.map(ast => new AST.Refinement(ast, refinement.filter, preserveRefinementAnnotations(refinement)));\nconst extendAST = (x, y, path) => AST.Union.make(intersectUnionMembers([x], [y], path));\nconst getTypes = ast => AST.isUnion(ast) ? ast.types : [ast];\nconst intersectUnionMembers = (xs, ys, path) => array_.flatMap(xs, x => array_.flatMap(ys, y => {\n  switch (y._tag) {\n    case \"Literal\":\n      {\n        if (Predicate.isString(y.literal) && AST.isStringKeyword(x) || Predicate.isNumber(y.literal) && AST.isNumberKeyword(x) || Predicate.isBoolean(y.literal) && AST.isBooleanKeyword(x)) {\n          return [y];\n        }\n        break;\n      }\n    case \"StringKeyword\":\n      {\n        if (y === AST.stringKeyword) {\n          if (AST.isStringKeyword(x) || AST.isLiteral(x) && Predicate.isString(x.literal)) {\n            return [x];\n          } else if (AST.isRefinement(x)) {\n            return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path));\n          }\n        } else if (x === AST.stringKeyword) {\n          return [y];\n        }\n        break;\n      }\n    case \"NumberKeyword\":\n      {\n        if (y === AST.numberKeyword) {\n          if (AST.isNumberKeyword(x) || AST.isLiteral(x) && Predicate.isNumber(x.literal)) {\n            return [x];\n          } else if (AST.isRefinement(x)) {\n            return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path));\n          }\n        } else if (x === AST.numberKeyword) {\n          return [y];\n        }\n        break;\n      }\n    case \"BooleanKeyword\":\n      {\n        if (y === AST.booleanKeyword) {\n          if (AST.isBooleanKeyword(x) || AST.isLiteral(x) && Predicate.isBoolean(x.literal)) {\n            return [x];\n          } else if (AST.isRefinement(x)) {\n            return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path));\n          }\n        } else if (x === AST.booleanKeyword) {\n          return [y];\n        }\n        break;\n      }\n    case \"Union\":\n      return intersectUnionMembers(getTypes(x), y.types, path);\n    case \"Suspend\":\n      return [new AST.Suspend(() => extendAST(x, y.f(), path))];\n    case \"Refinement\":\n      return addRefinementToMembers(y, intersectUnionMembers(getTypes(x), getTypes(y.from), path));\n    case \"TypeLiteral\":\n      {\n        switch (x._tag) {\n          case \"Union\":\n            return intersectUnionMembers(x.types, [y], path);\n          case \"Suspend\":\n            return [new AST.Suspend(() => extendAST(x.f(), y, path))];\n          case \"Refinement\":\n            return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), [y], path));\n          case \"TypeLiteral\":\n            return [intersectTypeLiterals(x, y, path)];\n          case \"Transformation\":\n            {\n              const transformation = x.transformation;\n              const from = intersectTypeLiterals(x.from, y, path);\n              const to = intersectTypeLiterals(x.to, AST.typeAST(y), path);\n              switch (transformation._tag) {\n                case \"TypeLiteralTransformation\":\n                  return [new AST.Transformation(from, to, new AST.TypeLiteralTransformation(transformation.propertySignatureTransformations))];\n                case \"ComposeTransformation\":\n                  return [new AST.Transformation(from, to, AST.composeTransformation)];\n                case \"FinalTransformation\":\n                  return [new AST.Transformation(from, to, new AST.FinalTransformation((fromA, options, ast, fromI) => ParseResult.map(transformation.decode(fromA, options, ast, fromI), partial => ({\n                    ...fromA,\n                    ...partial\n                  })), (toI, options, ast, toA) => ParseResult.map(transformation.encode(toI, options, ast, toA), partial => ({\n                    ...toI,\n                    ...partial\n                  }))))];\n              }\n            }\n        }\n        break;\n      }\n    case \"Transformation\":\n      {\n        if (AST.isTransformation(x)) {\n          if (AST.isTypeLiteralTransformation(y.transformation) && AST.isTypeLiteralTransformation(x.transformation)) {\n            return [new AST.Transformation(intersectTypeLiterals(x.from, y.from, path), intersectTypeLiterals(x.to, y.to, path), new AST.TypeLiteralTransformation(y.transformation.propertySignatureTransformations.concat(x.transformation.propertySignatureTransformations)))];\n          }\n        } else {\n          return intersectUnionMembers([y], [x], path);\n        }\n        break;\n      }\n  }\n  throw new Error(errors_.getSchemaExtendErrorMessage(x, y, path));\n}));\n/**\n * Extends a schema with another schema.\n *\n * Not all extensions are supported, and their support depends on the nature of\n * the involved schemas.\n *\n * Possible extensions include:\n * - `Schema.String` with another `Schema.String` refinement or a string literal\n * - `Schema.Number` with another `Schema.Number` refinement or a number literal\n * - `Schema.Boolean` with another `Schema.Boolean` refinement or a boolean\n *   literal\n * - A struct with another struct where overlapping fields support extension\n * - A struct with in index signature\n * - A struct with a union of supported schemas\n * - A refinement of a struct with a supported schema\n * - A suspend of a struct with a supported schema\n * - A transformation between structs where the “from” and “to” sides have no\n *   overlapping fields with the target struct\n *\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * const schema = Schema.Struct({\n *   a: Schema.String,\n *   b: Schema.String\n * })\n *\n * // const extended: Schema<\n * //   {\n * //     readonly a: string\n * //     readonly b: string\n * //   } & {\n * //     readonly c: string\n * //   } & {\n * //     readonly [x: string]: string\n * //   }\n * // >\n * const extended = Schema.asSchema(schema.pipe(\n *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields\n *   Schema.extend(Schema.Record({ key: Schema.String, value: Schema.String })) // <= you can add index signatures\n * ))\n * ```\n *\n * @category combinators\n * @since 3.10.0\n */\nexport const extend = /*#__PURE__*/dual(2, (self, that) => make(extendAST(self.ast, that.ast, [])));\n/**\n * @category combinators\n * @since 3.10.0\n */\nexport const compose = /*#__PURE__*/dual(args => isSchema(args[1]), (from, to) => makeTransformationClass(from, to, AST.compose(from.ast, to.ast)));\n/**\n * @category constructors\n * @since 3.10.0\n */\nexport const suspend = f => make(new AST.Suspend(() => f().ast));\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const RefineSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Refine\");\nfunction makeRefineClass(from, filter, ast) {\n  return class RefineClass extends make(ast) {\n    static annotations(annotations) {\n      return makeRefineClass(this.from, this.filter, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static [RefineSchemaId] = from;\n    static from = from;\n    static filter = filter;\n    static make = (a, options) => {\n      return getDisableValidationMakeOption(options) ? a : ParseResult.validateSync(this)(a);\n    };\n  };\n}\nconst fromFilterPredicateReturnTypeItem = (item, ast, input) => {\n  if (Predicate.isBoolean(item)) {\n    return item ? option_.none() : option_.some(new ParseResult.Type(ast, input));\n  }\n  if (Predicate.isString(item)) {\n    return option_.some(new ParseResult.Type(ast, input, item));\n  }\n  if (item !== undefined) {\n    if (\"_tag\" in item) {\n      return option_.some(item);\n    }\n    const issue = new ParseResult.Type(ast, input, item.message);\n    return option_.some(array_.isNonEmptyReadonlyArray(item.path) ? new ParseResult.Pointer(item.path, input, issue) : issue);\n  }\n  return option_.none();\n};\nconst toFilterParseIssue = (out, ast, input) => {\n  if (util_.isSingle(out)) {\n    return fromFilterPredicateReturnTypeItem(out, ast, input);\n  }\n  if (array_.isNonEmptyReadonlyArray(out)) {\n    const issues = array_.filterMap(out, issue => fromFilterPredicateReturnTypeItem(issue, ast, input));\n    if (array_.isNonEmptyReadonlyArray(issues)) {\n      return option_.some(issues.length === 1 ? issues[0] : new ParseResult.Composite(ast, input, issues));\n    }\n  }\n  return option_.none();\n};\nexport function filter(predicate, annotations) {\n  return self => {\n    function filter(input, options, ast) {\n      return toFilterParseIssue(predicate(input, options, ast), ast, input);\n    }\n    const ast = new AST.Refinement(self.ast, filter, toASTAnnotations(annotations));\n    return makeRefineClass(self, filter, ast);\n  };\n}\n/**\n * @category transformations\n * @since 3.10.0\n */\nexport const filterEffect = /*#__PURE__*/dual(2, (self, f) => transformOrFail(self, typeSchema(self), {\n  strict: true,\n  decode: (i, options, ast) => ParseResult.flatMap(f(i, options, ast), filterReturnType => option_.match(toFilterParseIssue(filterReturnType, ast, i), {\n    onNone: () => ParseResult.succeed(i),\n    onSome: ParseResult.fail\n  })),\n  encode: a => ParseResult.succeed(a)\n}));\nfunction makeTransformationClass(from, to, ast) {\n  return class TransformationClass extends make(ast) {\n    static annotations(annotations) {\n      return makeTransformationClass(this.from, this.to, mergeSchemaAnnotations(this.ast, annotations));\n    }\n    static from = from;\n    static to = to;\n  };\n}\n/**\n * Create a new `Schema` by transforming the input and output of an existing `Schema`\n * using the provided decoding functions.\n *\n * @category transformations\n * @since 3.10.0\n */\nexport const transformOrFail = /*#__PURE__*/dual(args => isSchema(args[0]) && isSchema(args[1]), (from, to, options) => makeTransformationClass(from, to, new AST.Transformation(from.ast, to.ast, new AST.FinalTransformation(options.decode, options.encode))));\n/**\n * Create a new `Schema` by transforming the input and output of an existing `Schema`\n * using the provided mapping functions.\n *\n * @category transformations\n * @since 3.10.0\n */\nexport const transform = /*#__PURE__*/dual(args => isSchema(args[0]) && isSchema(args[1]), (from, to, options) => transformOrFail(from, to, {\n  strict: true,\n  decode: (fromA, _options, _ast, toA) => ParseResult.succeed(options.decode(fromA, toA)),\n  encode: (toI, _options, _ast, toA) => ParseResult.succeed(options.encode(toI, toA))\n}));\n/**\n * Creates a new `Schema` which transforms literal values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as S from \"effect/Schema\"\n *\n * const schema = S.transformLiteral(0, \"a\")\n *\n * assert.deepStrictEqual(S.decodeSync(schema)(0), \"a\")\n * ```\n *\n * @category constructors\n * @since 3.10.0\n */\nexport function transformLiteral(from, to) {\n  return transform(Literal(from), Literal(to), {\n    strict: true,\n    decode: () => to,\n    encode: () => from\n  });\n}\nexport function transformLiterals(...pairs) {\n  return Union(...pairs.map(([from, to]) => transformLiteral(from, to)));\n}\n/**\n * Attaches a property signature with the specified key and value to the schema.\n * This API is useful when you want to add a property to your schema which doesn't describe the shape of the input,\n * but rather maps to another schema, for example when you want to add a discriminant to a simple union.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as S from \"effect/Schema\"\n * import { pipe } from \"effect/Function\"\n *\n * const Circle = S.Struct({ radius: S.Number })\n * const Square = S.Struct({ sideLength: S.Number })\n * const Shape = S.Union(\n *   Circle.pipe(S.attachPropertySignature(\"kind\", \"circle\")),\n *   Square.pipe(S.attachPropertySignature(\"kind\", \"square\"))\n * )\n *\n * assert.deepStrictEqual(S.decodeSync(Shape)({ radius: 10 }), {\n *   kind: \"circle\",\n *   radius: 10\n * })\n * ```\n *\n * @category combinators\n * @since 3.10.0\n */\nexport const attachPropertySignature = /*#__PURE__*/dual(args => isSchema(args[0]), (schema, key, value, annotations) => {\n  const ast = extend(typeSchema(schema), Struct({\n    [key]: Predicate.isSymbol(value) ? UniqueSymbolFromSelf(value) : Literal(value)\n  })).ast;\n  return make(new AST.Transformation(schema.ast, annotations ? mergeSchemaAnnotations(ast, annotations) : ast, new AST.TypeLiteralTransformation([new AST.PropertySignatureTransformation(key, key, () => option_.some(value), () => option_.none())])));\n});\n/**\n * Merges a set of new annotations with existing ones, potentially overwriting\n * any duplicates.\n *\n * @category annotations\n * @since 3.10.0\n */\nexport const annotations = /*#__PURE__*/dual(2, (self, annotations) => self.annotations(annotations));\n/**\n * @category renaming\n * @since 3.10.0\n */\nexport const rename = /*#__PURE__*/dual(2, (self, mapping) => make(AST.rename(self.ast, mapping)));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const TrimmedSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Trimmed\");\n/**\n * Verifies that a string contains no leading or trailing whitespaces.\n *\n * Note. This combinator does not make any transformations, it only validates.\n * If what you were looking for was a combinator to trim strings, then check out the `trim` combinator.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const trimmed = annotations => self => self.pipe(filter(a => a === a.trim(), {\n  schemaId: TrimmedSchemaId,\n  title: \"trimmed\",\n  description: \"a string with no leading or trailing whitespace\",\n  jsonSchema: {\n    pattern: \"^\\\\S[\\\\s\\\\S]*\\\\S$|^\\\\S$|^$\"\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MaxLengthSchemaId = schemaId_.MaxLengthSchemaId;\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const maxLength = (maxLength, annotations) => self => self.pipe(filter(a => a.length <= maxLength, {\n  schemaId: MaxLengthSchemaId,\n  title: `maxLength(${maxLength})`,\n  description: `a string at most ${maxLength} character(s) long`,\n  jsonSchema: {\n    maxLength\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MinLengthSchemaId = schemaId_.MinLengthSchemaId;\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const minLength = (minLength, annotations) => self => self.pipe(filter(a => a.length >= minLength, {\n  schemaId: MinLengthSchemaId,\n  title: `minLength(${minLength})`,\n  description: `a string at least ${minLength} character(s) long`,\n  jsonSchema: {\n    minLength\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LengthSchemaId = schemaId_.LengthSchemaId;\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const length = (length, annotations) => self => {\n  const minLength = Predicate.isObject(length) ? Math.max(0, Math.floor(length.min)) : Math.max(0, Math.floor(length));\n  const maxLength = Predicate.isObject(length) ? Math.max(minLength, Math.floor(length.max)) : minLength;\n  if (minLength !== maxLength) {\n    return self.pipe(filter(a => a.length >= minLength && a.length <= maxLength, {\n      schemaId: LengthSchemaId,\n      title: `length({ min: ${minLength}, max: ${maxLength})`,\n      description: `a string at least ${minLength} character(s) and at most ${maxLength} character(s) long`,\n      jsonSchema: {\n        minLength,\n        maxLength\n      },\n      ...annotations\n    }));\n  }\n  return self.pipe(filter(a => a.length === minLength, {\n    schemaId: LengthSchemaId,\n    title: `length(${minLength})`,\n    description: minLength === 1 ? `a single character` : `a string ${minLength} character(s) long`,\n    jsonSchema: {\n      minLength,\n      maxLength: minLength\n    },\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const PatternSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Pattern\");\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const pattern = (regex, annotations) => self => {\n  const source = regex.source;\n  return self.pipe(filter(a => {\n    // The following line ensures that `lastIndex` is reset to `0` in case the user has specified the `g` flag\n    regex.lastIndex = 0;\n    return regex.test(a);\n  }, {\n    schemaId: PatternSchemaId,\n    [PatternSchemaId]: {\n      regex\n    },\n    // title: `pattern(/${source}/)`, // avoiding this because it can be very long\n    description: `a string matching the pattern ${source}`,\n    jsonSchema: {\n      pattern: source\n    },\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const StartsWithSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/StartsWith\");\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const startsWith = (startsWith, annotations) => self => {\n  const formatted = JSON.stringify(startsWith);\n  return self.pipe(filter(a => a.startsWith(startsWith), {\n    schemaId: StartsWithSchemaId,\n    [StartsWithSchemaId]: {\n      startsWith\n    },\n    title: `startsWith(${formatted})`,\n    description: `a string starting with ${formatted}`,\n    jsonSchema: {\n      pattern: `^${startsWith}`\n    },\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const EndsWithSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/EndsWith\");\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const endsWith = (endsWith, annotations) => self => {\n  const formatted = JSON.stringify(endsWith);\n  return self.pipe(filter(a => a.endsWith(endsWith), {\n    schemaId: EndsWithSchemaId,\n    [EndsWithSchemaId]: {\n      endsWith\n    },\n    title: `endsWith(${formatted})`,\n    description: `a string ending with ${formatted}`,\n    jsonSchema: {\n      pattern: `^.*${endsWith}$`\n    },\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const IncludesSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Includes\");\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const includes = (searchString, annotations) => self => {\n  const formatted = JSON.stringify(searchString);\n  return self.pipe(filter(a => a.includes(searchString), {\n    schemaId: IncludesSchemaId,\n    [IncludesSchemaId]: {\n      includes: searchString\n    },\n    title: `includes(${formatted})`,\n    description: `a string including ${formatted}`,\n    jsonSchema: {\n      pattern: `.*${searchString}.*`\n    },\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LowercasedSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Lowercased\");\n/**\n * Verifies that a string is lowercased.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const lowercased = annotations => self => self.pipe(filter(a => a === a.toLowerCase(), {\n  schemaId: LowercasedSchemaId,\n  title: \"lowercased\",\n  description: \"a lowercase string\",\n  jsonSchema: {\n    pattern: \"^[^A-Z]*$\"\n  },\n  ...annotations\n}));\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Lowercased extends /*#__PURE__*/String$.pipe( /*#__PURE__*/lowercased({\n  identifier: \"Lowercased\"\n})) {}\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const UppercasedSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Uppercased\");\n/**\n * Verifies that a string is uppercased.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const uppercased = annotations => self => self.pipe(filter(a => a === a.toUpperCase(), {\n  schemaId: UppercasedSchemaId,\n  title: \"uppercased\",\n  description: \"an uppercase string\",\n  jsonSchema: {\n    pattern: \"^[^a-z]*$\"\n  },\n  ...annotations\n}));\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Uppercased extends /*#__PURE__*/String$.pipe( /*#__PURE__*/uppercased({\n  identifier: \"Uppercased\"\n})) {}\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const CapitalizedSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Capitalized\");\n/**\n * Verifies that a string is capitalized.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const capitalized = annotations => self => self.pipe(filter(a => a[0]?.toUpperCase() === a[0], {\n  schemaId: CapitalizedSchemaId,\n  title: \"capitalized\",\n  description: \"a capitalized string\",\n  jsonSchema: {\n    pattern: \"^[^a-z]?.*$\"\n  },\n  ...annotations\n}));\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Capitalized extends /*#__PURE__*/String$.pipe( /*#__PURE__*/capitalized({\n  identifier: \"Capitalized\"\n})) {}\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const UncapitalizedSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/Uncapitalized\");\n/**\n * Verifies that a string is uncapitalized.\n *\n * @category string filters\n * @since 3.10.0\n */\nexport const uncapitalized = annotations => self => self.pipe(filter(a => a[0]?.toLowerCase() === a[0], {\n  schemaId: UncapitalizedSchemaId,\n  title: \"uncapitalized\",\n  description: \"a uncapitalized string\",\n  jsonSchema: {\n    pattern: \"^[^A-Z]?.*$\"\n  },\n  ...annotations\n}));\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Uncapitalized extends /*#__PURE__*/String$.pipe( /*#__PURE__*/uncapitalized({\n  identifier: \"Uncapitalized\"\n})) {}\n/**\n * A schema representing a single character.\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class Char extends /*#__PURE__*/String$.pipe( /*#__PURE__*/length(1, {\n  identifier: \"Char\"\n})) {}\n/**\n * @category string filters\n * @since 3.10.0\n */\nexport const nonEmptyString = annotations => minLength(1, {\n  title: \"nonEmptyString\",\n  description: \"a non empty string\",\n  ...annotations\n});\n/**\n * This schema converts a string to lowercase.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Lowercase extends /*#__PURE__*/transform(String$.annotations({\n  description: \"a string that will be converted to lowercase\"\n}), Lowercased, {\n  strict: true,\n  decode: i => i.toLowerCase(),\n  encode: identity\n}).annotations({\n  identifier: \"Lowercase\"\n}) {}\n/**\n * This schema converts a string to uppercase.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Uppercase extends /*#__PURE__*/transform(String$.annotations({\n  description: \"a string that will be converted to uppercase\"\n}), Uppercased, {\n  strict: true,\n  decode: i => i.toUpperCase(),\n  encode: identity\n}).annotations({\n  identifier: \"Uppercase\"\n}) {}\n/**\n * This schema converts a string to capitalized one.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Capitalize extends /*#__PURE__*/transform(String$.annotations({\n  description: \"a string that will be converted to a capitalized format\"\n}), Capitalized, {\n  strict: true,\n  decode: i => string_.capitalize(i),\n  encode: identity\n}).annotations({\n  identifier: \"Capitalize\"\n}) {}\n/**\n * This schema converts a string to uncapitalized one.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Uncapitalize extends /*#__PURE__*/transform(String$.annotations({\n  description: \"a string that will be converted to an uncapitalized format\"\n}), Uncapitalized, {\n  strict: true,\n  decode: i => string_.uncapitalize(i),\n  encode: identity\n}).annotations({\n  identifier: \"Uncapitalize\"\n}) {}\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class Trimmed extends /*#__PURE__*/String$.pipe( /*#__PURE__*/trimmed({\n  identifier: \"Trimmed\"\n})) {}\n/**\n * Useful for validating strings that must contain meaningful characters without\n * leading or trailing whitespace.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * console.log(Schema.decodeOption(Schema.NonEmptyTrimmedString)(\"\")) // Option.none()\n * console.log(Schema.decodeOption(Schema.NonEmptyTrimmedString)(\" a \")) // Option.none()\n * console.log(Schema.decodeOption(Schema.NonEmptyTrimmedString)(\"a\")) // Option.some(\"a\")\n * ```\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class NonEmptyTrimmedString extends /*#__PURE__*/Trimmed.pipe( /*#__PURE__*/nonEmptyString({\n  identifier: \"NonEmptyTrimmedString\"\n})) {}\n/**\n * This schema allows removing whitespaces from the beginning and end of a string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport class Trim extends /*#__PURE__*/transform(String$.annotations({\n  description: \"a string that will be trimmed\"\n}), Trimmed, {\n  strict: true,\n  decode: i => i.trim(),\n  encode: identity\n}).annotations({\n  identifier: \"Trim\"\n}) {}\n/**\n * Returns a schema that allows splitting a string into an array of strings.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const split = separator => transform(String$.annotations({\n  description: \"a string that will be split\"\n}), Array$(String$), {\n  strict: true,\n  decode: i => i.split(separator),\n  encode: a => a.join(separator)\n});\nconst getErrorMessage = e => e instanceof Error ? e.message : String(e);\nconst getParseJsonTransformation = options => transformOrFail(String$.annotations({\n  description: \"a string to be decoded into JSON\"\n}), Unknown, {\n  strict: true,\n  decode: (i, _, ast) => ParseResult.try({\n    try: () => JSON.parse(i, options?.reviver),\n    catch: e => new ParseResult.Type(ast, i, getErrorMessage(e))\n  }),\n  encode: (a, _, ast) => ParseResult.try({\n    try: () => JSON.stringify(a, options?.replacer, options?.space),\n    catch: e => new ParseResult.Type(ast, a, getErrorMessage(e))\n  })\n}).annotations({\n  title: \"parseJson\",\n  schemaId: AST.ParseJsonSchemaId\n});\n/**\n * The `ParseJson` combinator provides a method to convert JSON strings into the `unknown` type using the underlying\n * functionality of `JSON.parse`. It also utilizes `JSON.stringify` for encoding.\n *\n * You can optionally provide a `ParseJsonOptions` to configure both `JSON.parse` and `JSON.stringify` executions.\n *\n * Optionally, you can pass a schema `Schema<A, I, R>` to obtain an `A` type instead of `unknown`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as Schema from \"effect/Schema\"\n *\n * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson())(`{\"a\":\"1\"}`), { a: \"1\" })\n * assert.deepStrictEqual(Schema.decodeUnknownSync(Schema.parseJson(Schema.Struct({ a: Schema.NumberFromString })))(`{\"a\":\"1\"}`), { a: 1 })\n * ```\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const parseJson = (schemaOrOptions, o) => isSchema(schemaOrOptions) ? compose(parseJson(o), schemaOrOptions) : getParseJsonTransformation(schemaOrOptions);\n/**\n * @category string constructors\n * @since 3.10.0\n */\nexport class NonEmptyString extends /*#__PURE__*/String$.pipe( /*#__PURE__*/nonEmptyString({\n  identifier: \"NonEmptyString\"\n})) {}\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const UUIDSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/UUID\");\nconst uuidRegexp = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * Represents a Universally Unique Identifier (UUID).\n *\n * This schema ensures that the provided string adheres to the standard UUID format.\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class UUID extends /*#__PURE__*/String$.pipe( /*#__PURE__*/pattern(uuidRegexp, {\n  schemaId: UUIDSchemaId,\n  identifier: \"UUID\",\n  jsonSchema: {\n    format: \"uuid\",\n    pattern: uuidRegexp.source\n  },\n  description: \"a Universally Unique Identifier\",\n  arbitrary: () => fc => fc.uuid()\n})) {}\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ULIDSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/ULID\");\nconst ulidRegexp = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i;\n/**\n * Represents a Universally Unique Lexicographically Sortable Identifier (ULID).\n *\n * ULIDs are designed to be compact, URL-safe, and ordered, making them suitable for use as identifiers.\n * This schema ensures that the provided string adheres to the standard ULID format.\n *\n * @category string constructors\n * @since 3.10.0\n */\nexport class ULID extends /*#__PURE__*/String$.pipe( /*#__PURE__*/pattern(ulidRegexp, {\n  schemaId: ULIDSchemaId,\n  identifier: \"ULID\",\n  description: \"a Universally Unique Lexicographically Sortable Identifier\",\n  arbitrary: () => fc => fc.ulid()\n})) {}\n/**\n * Defines a schema that represents a `URL` object.\n *\n * @category URL constructors\n * @since 3.11.0\n */\nexport class URLFromSelf extends /*#__PURE__*/instanceOf(URL, {\n  identifier: \"URLFromSelf\",\n  arbitrary: () => fc => fc.webUrl().map(s => new URL(s)),\n  pretty: () => url => url.toString()\n}) {}\n/** @ignore */\nclass URL$ extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a URL\"\n}), URLFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => ParseResult.try({\n    try: () => new URL(i),\n    catch: e => new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a URL. ${getErrorMessage(e)}`)\n  }),\n  encode: a => ParseResult.succeed(a.toString())\n}).annotations({\n  identifier: \"URL\",\n  pretty: () => url => url.toString()\n}) {}\nexport {\n/**\n * Defines a schema that attempts to convert a `string` to a `URL` object using\n * the `new URL` constructor.\n *\n * @category URL transformations\n * @since 3.11.0\n */\nURL$ as URL };\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const FiniteSchemaId = schemaId_.FiniteSchemaId;\n/**\n * Ensures that the provided value is a finite number (excluding NaN, +Infinity, and -Infinity).\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const finite = annotations => self => self.pipe(filter(Number.isFinite, {\n  schemaId: FiniteSchemaId,\n  title: \"finite\",\n  description: \"a finite number\",\n  jsonSchema: {\n    \"type\": \"number\"\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanSchemaId = schemaId_.GreaterThanSchemaId;\n/**\n * This filter checks whether the provided number is greater than the specified minimum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const greaterThan = (exclusiveMinimum, annotations) => self => self.pipe(filter(a => a > exclusiveMinimum, {\n  schemaId: GreaterThanSchemaId,\n  title: `greaterThan(${exclusiveMinimum})`,\n  description: exclusiveMinimum === 0 ? \"a positive number\" : `a number greater than ${exclusiveMinimum}`,\n  jsonSchema: {\n    exclusiveMinimum\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToSchemaId = schemaId_.GreaterThanOrEqualToSchemaId;\n/**\n * This filter checks whether the provided number is greater than or equal to the specified minimum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualTo = (minimum, annotations) => self => self.pipe(filter(a => a >= minimum, {\n  schemaId: GreaterThanOrEqualToSchemaId,\n  title: `greaterThanOrEqualTo(${minimum})`,\n  description: minimum === 0 ? \"a non-negative number\" : `a number greater than or equal to ${minimum}`,\n  jsonSchema: {\n    minimum\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MultipleOfSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/MultipleOf\");\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const multipleOf = (divisor, annotations) => self => {\n  const positiveDivisor = Math.abs(divisor); // spec requires positive divisor\n  return self.pipe(filter(a => number_.remainder(a, divisor) === 0, {\n    schemaId: MultipleOfSchemaId,\n    title: `multipleOf(${positiveDivisor})`,\n    description: `a number divisible by ${positiveDivisor}`,\n    jsonSchema: {\n      multipleOf: positiveDivisor\n    },\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const IntSchemaId = schemaId_.IntSchemaId;\n/**\n * Ensures that the provided value is an integer number (excluding NaN, +Infinity, and -Infinity).\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const int = annotations => self => self.pipe(filter(a => Number.isSafeInteger(a), {\n  schemaId: IntSchemaId,\n  title: \"int\",\n  description: \"an integer\",\n  jsonSchema: {\n    type: \"integer\"\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanSchemaId = schemaId_.LessThanSchemaId;\n/**\n * This filter checks whether the provided number is less than the specified maximum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const lessThan = (exclusiveMaximum, annotations) => self => self.pipe(filter(a => a < exclusiveMaximum, {\n  schemaId: LessThanSchemaId,\n  title: `lessThan(${exclusiveMaximum})`,\n  description: exclusiveMaximum === 0 ? \"a negative number\" : `a number less than ${exclusiveMaximum}`,\n  jsonSchema: {\n    exclusiveMaximum\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToSchemaId = schemaId_.LessThanOrEqualToSchemaId;\n/**\n * This schema checks whether the provided number is less than or equal to the specified maximum.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualTo = (maximum, annotations) => self => self.pipe(filter(a => a <= maximum, {\n  schemaId: LessThanOrEqualToSchemaId,\n  title: `lessThanOrEqualTo(${maximum})`,\n  description: maximum === 0 ? \"a non-positive number\" : `a number less than or equal to ${maximum}`,\n  jsonSchema: {\n    maximum\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenSchemaId = schemaId_.BetweenSchemaId;\n/**\n * This filter checks whether the provided number falls within the specified minimum and maximum values.\n *\n * @category number filters\n * @since 3.10.0\n */\nexport const between = (minimum, maximum, annotations) => self => self.pipe(filter(a => a >= minimum && a <= maximum, {\n  schemaId: BetweenSchemaId,\n  title: `between(${minimum}, ${maximum})`,\n  description: `a number between ${minimum} and ${maximum}`,\n  jsonSchema: {\n    minimum,\n    maximum\n  },\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NonNaNSchemaId = schemaId_.NonNaNSchemaId;\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const nonNaN = annotations => self => self.pipe(filter(a => !Number.isNaN(a), {\n  schemaId: NonNaNSchemaId,\n  title: \"nonNaN\",\n  description: \"a number excluding NaN\",\n  ...annotations\n}));\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const positive = annotations => greaterThan(0, {\n  title: \"positive\",\n  ...annotations\n});\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const negative = annotations => lessThan(0, {\n  title: \"negative\",\n  ...annotations\n});\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const nonPositive = annotations => lessThanOrEqualTo(0, {\n  title: \"nonPositive\",\n  ...annotations\n});\n/**\n * @category number filters\n * @since 3.10.0\n */\nexport const nonNegative = annotations => greaterThanOrEqualTo(0, {\n  title: \"nonNegative\",\n  ...annotations\n});\n/**\n * Clamps a number between a minimum and a maximum value.\n *\n * @category number transformations\n * @since 3.10.0\n */\nexport const clamp = (minimum, maximum) => self => {\n  return transform(self, typeSchema(self).pipe(between(minimum, maximum)), {\n    strict: false,\n    decode: i => number_.clamp(i, {\n      minimum,\n      maximum\n    }),\n    encode: identity\n  });\n};\n/**\n * Transforms a `string` into a `number` by parsing the string using the `parse`\n * function of the `effect/Number` module.\n *\n * It returns an error if the value can't be converted (for example when\n * non-numeric characters are provided).\n *\n * The following special string values are supported: \"NaN\", \"Infinity\",\n * \"-Infinity\".\n *\n * @category number transformations\n * @since 3.10.0\n */\nexport function parseNumber(self) {\n  return transformOrFail(self, Number$, {\n    strict: false,\n    decode: (i, _, ast) => ParseResult.fromOption(number_.parse(i), () => new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a number`)),\n    encode: a => ParseResult.succeed(String(a))\n  });\n}\n/**\n * This schema transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.\n *\n * It returns an error if the value can't be converted (for example when non-numeric characters are provided).\n *\n * The following special string values are supported: \"NaN\", \"Infinity\", \"-Infinity\".\n *\n * @category number transformations\n * @since 3.10.0\n */\nexport class NumberFromString extends /*#__PURE__*/parseNumber(String$.annotations({\n  description: \"a string to be decoded into a number\"\n})).annotations({\n  identifier: \"NumberFromString\"\n}) {}\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Finite extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/finite({\n  identifier: \"Finite\"\n})) {}\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Int extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/int({\n  identifier: \"Int\"\n})) {}\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class NonNaN extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/nonNaN({\n  identifier: \"NonNaN\"\n})) {}\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Positive extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/positive({\n  identifier: \"Positive\"\n})) {}\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class Negative extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/negative({\n  identifier: \"Negative\"\n})) {}\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class NonPositive extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/nonPositive({\n  identifier: \"NonPositive\"\n})) {}\n/**\n * @category number constructors\n * @since 3.10.0\n */\nexport class NonNegative extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/nonNegative({\n  identifier: \"NonNegative\"\n})) {}\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const JsonNumberSchemaId = schemaId_.JsonNumberSchemaId;\n/**\n * The `JsonNumber` is a schema for representing JSON numbers. It ensures that the provided value is a valid\n * number by filtering out `NaN` and `(+/-) Infinity`. This is useful when you want to validate and represent numbers in JSON\n * format.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import * as Schema from \"effect/Schema\"\n *\n * const is = Schema.is(S.JsonNumber)\n *\n * assert.deepStrictEqual(is(42), true)\n * assert.deepStrictEqual(is(Number.NaN), false)\n * assert.deepStrictEqual(is(Number.POSITIVE_INFINITY), false)\n * assert.deepStrictEqual(is(Number.NEGATIVE_INFINITY), false)\n * ```\n *\n * @category number constructors\n * @since 3.10.0\n */\nexport class JsonNumber extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/finite({\n  schemaId: JsonNumberSchemaId,\n  identifier: \"JsonNumber\"\n})) {}\n/**\n * @category boolean transformations\n * @since 3.10.0\n */\nexport class Not extends /*#__PURE__*/transform( /*#__PURE__*/Boolean$.annotations({\n  description: \"a boolean that will be negated\"\n}), Boolean$, {\n  strict: true,\n  decode: i => boolean_.not(i),\n  encode: a => boolean_.not(a)\n}) {}\nconst encodeSymbol = (sym, ast) => {\n  const key = Symbol.keyFor(sym);\n  return key === undefined ? ParseResult.fail(new ParseResult.Type(ast, sym, `Unable to encode a unique symbol ${String(sym)} into a string`)) : ParseResult.succeed(key);\n};\nconst decodeSymbol = s => ParseResult.succeed(Symbol.for(s));\n/** @ignore */\nclass Symbol$ extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a globally shared symbol\"\n}), SymbolFromSelf, {\n  strict: false,\n  decode: i => decodeSymbol(i),\n  encode: (a, _, ast) => encodeSymbol(a, ast)\n}).annotations({\n  identifier: \"Symbol\"\n}) {}\nexport {\n/**\n * Converts a string key into a globally shared symbol.\n *\n * @category symbol transformations\n * @since 3.10.0\n */\nSymbol$ as Symbol };\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanBigIntSchemaId = schemaId_.GreaterThanBigintSchemaId;\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const greaterThanBigInt = (min, annotations) => self => self.pipe(filter(a => a > min, {\n  schemaId: GreaterThanBigIntSchemaId,\n  [GreaterThanBigIntSchemaId]: {\n    min\n  },\n  title: `greaterThanBigInt(${min})`,\n  description: min === 0n ? \"a positive bigint\" : `a bigint greater than ${min}n`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToBigIntSchemaId = schemaId_.GreaterThanOrEqualToBigIntSchemaId;\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToBigInt = (min, annotations) => self => self.pipe(filter(a => a >= min, {\n  schemaId: GreaterThanOrEqualToBigIntSchemaId,\n  [GreaterThanOrEqualToBigIntSchemaId]: {\n    min\n  },\n  title: `greaterThanOrEqualToBigInt(${min})`,\n  description: min === 0n ? \"a non-negative bigint\" : `a bigint greater than or equal to ${min}n`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanBigIntSchemaId = schemaId_.LessThanBigIntSchemaId;\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const lessThanBigInt = (max, annotations) => self => self.pipe(filter(a => a < max, {\n  schemaId: LessThanBigIntSchemaId,\n  [LessThanBigIntSchemaId]: {\n    max\n  },\n  title: `lessThanBigInt(${max})`,\n  description: max === 0n ? \"a negative bigint\" : `a bigint less than ${max}n`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToBigIntSchemaId = schemaId_.LessThanOrEqualToBigIntSchemaId;\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToBigInt = (max, annotations) => self => self.pipe(filter(a => a <= max, {\n  schemaId: LessThanOrEqualToBigIntSchemaId,\n  [LessThanOrEqualToBigIntSchemaId]: {\n    max\n  },\n  title: `lessThanOrEqualToBigInt(${max})`,\n  description: max === 0n ? \"a non-positive bigint\" : `a bigint less than or equal to ${max}n`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenBigIntSchemaId = schemaId_.BetweenBigintSchemaId;\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const betweenBigInt = (min, max, annotations) => self => self.pipe(filter(a => a >= min && a <= max, {\n  schemaId: BetweenBigIntSchemaId,\n  [BetweenBigIntSchemaId]: {\n    min,\n    max\n  },\n  title: `betweenBigInt(${min}, ${max})`,\n  description: `a bigint between ${min}n and ${max}n`,\n  ...annotations\n}));\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const positiveBigInt = annotations => greaterThanBigInt(0n, {\n  title: \"positiveBigInt\",\n  ...annotations\n});\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const negativeBigInt = annotations => lessThanBigInt(0n, {\n  title: \"negativeBigInt\",\n  ...annotations\n});\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const nonNegativeBigInt = annotations => greaterThanOrEqualToBigInt(0n, {\n  title: \"nonNegativeBigInt\",\n  ...annotations\n});\n/**\n * @category bigint filters\n * @since 3.10.0\n */\nexport const nonPositiveBigInt = annotations => lessThanOrEqualToBigInt(0n, {\n  title: \"nonPositiveBigInt\",\n  ...annotations\n});\n/**\n * Clamps a bigint between a minimum and a maximum value.\n *\n * @category bigint transformations\n * @since 3.10.0\n */\nexport const clampBigInt = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenBigInt(minimum, maximum)), {\n  strict: false,\n  decode: i => bigInt_.clamp(i, {\n    minimum,\n    maximum\n  }),\n  encode: identity\n});\n/** @ignore */\nclass BigInt$ extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a bigint\"\n}), BigIntFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => ParseResult.fromOption(bigInt_.fromString(i), () => new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a bigint`)),\n  encode: a => ParseResult.succeed(String(a))\n}).annotations({\n  identifier: \"BigInt\"\n}) {}\nexport {\n/**\n * This schema transforms a `string` into a `bigint` by parsing the string using the `BigInt` function.\n *\n * It returns an error if the value can't be converted (for example when non-numeric characters are provided).\n *\n * @category bigint transformations\n * @since 3.10.0\n */\nBigInt$ as BigInt };\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const PositiveBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__PURE__*/positiveBigInt({\n  identifier: \"PositiveBigintFromSelf\"\n}));\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const PositiveBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/positiveBigInt({\n  identifier: \"PositiveBigint\"\n}));\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NegativeBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__PURE__*/negativeBigInt({\n  identifier: \"NegativeBigintFromSelf\"\n}));\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NegativeBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/negativeBigInt({\n  identifier: \"NegativeBigint\"\n}));\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonPositiveBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__PURE__*/nonPositiveBigInt({\n  identifier: \"NonPositiveBigintFromSelf\"\n}));\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonPositiveBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/nonPositiveBigInt({\n  identifier: \"NonPositiveBigint\"\n}));\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonNegativeBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__PURE__*/nonNegativeBigInt({\n  identifier: \"NonNegativeBigintFromSelf\"\n}));\n/**\n * @category bigint constructors\n * @since 3.10.0\n */\nexport const NonNegativeBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/nonNegativeBigInt({\n  identifier: \"NonNegativeBigint\"\n}));\n/**\n * This schema transforms a `number` into a `bigint` by parsing the number using the `BigInt` function.\n *\n * It returns an error if the value can't be safely encoded as a `number` due to being out of range.\n *\n * @category bigint transformations\n * @since 3.10.0\n */\nexport class BigIntFromNumber extends /*#__PURE__*/transformOrFail(Number$.annotations({\n  description: \"a number to be decoded into a bigint\"\n}), BigIntFromSelf.pipe(betweenBigInt(BigInt(Number.MIN_SAFE_INTEGER), BigInt(Number.MAX_SAFE_INTEGER))), {\n  strict: true,\n  decode: (i, _, ast) => ParseResult.fromOption(bigInt_.fromNumber(i), () => new ParseResult.Type(ast, i, `Unable to decode ${i} into a bigint`)),\n  encode: (a, _, ast) => ParseResult.fromOption(bigInt_.toNumber(a), () => new ParseResult.Type(ast, a, `Unable to encode ${a}n into a number`))\n}).annotations({\n  identifier: \"BigIntFromNumber\"\n}) {}\nconst redactedArbitrary = value => fc => value(fc).map(redacted_.make);\nconst toComposite = (eff, onSuccess, ast, actual) => ParseResult.mapBoth(eff, {\n  onFailure: e => new ParseResult.Composite(ast, actual, e),\n  onSuccess\n});\nconst redactedParse = decodeUnknown => (u, options, ast) => redacted_.isRedacted(u) ? toComposite(decodeUnknown(redacted_.value(u), options), redacted_.make, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category Redacted constructors\n * @since 3.10.0\n */\nexport const RedactedFromSelf = value => declare([value], {\n  decode: value => redactedParse(ParseResult.decodeUnknown(value)),\n  encode: value => redactedParse(ParseResult.encodeUnknown(value))\n}, {\n  description: \"Redacted(<redacted>)\",\n  pretty: () => () => \"Redacted(<redacted>)\",\n  arbitrary: redactedArbitrary,\n  equivalence: redacted_.getEquivalence\n});\n/**\n * A transformation that transform a `Schema<A, I, R>` into a\n * `RedactedFromSelf<A>`.\n *\n * @category Redacted transformations\n * @since 3.10.0\n */\nexport function Redacted(value) {\n  return transform(value, RedactedFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => redacted_.make(i),\n    encode: a => redacted_.value(a)\n  });\n}\n/**\n * @category Duration constructors\n * @since 3.10.0\n */\nexport class DurationFromSelf extends /*#__PURE__*/declare(duration_.isDuration, {\n  identifier: \"DurationFromSelf\",\n  pretty: () => String,\n  arbitrary: () => fc => fc.oneof(fc.constant(duration_.infinity), fc.bigInt({\n    min: 0n\n  }).map(_ => duration_.nanos(_)), fc.maxSafeNat().map(_ => duration_.millis(_))),\n  equivalence: () => duration_.Equivalence\n}) {}\n/**\n * A schema that transforms a non negative `bigint` into a `Duration`. Treats\n * the value as the number of nanoseconds.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport class DurationFromNanos extends /*#__PURE__*/transformOrFail(NonNegativeBigIntFromSelf.annotations({\n  description: \"a bigint to be decoded into a Duration\"\n}), DurationFromSelf.pipe(filter(duration => duration_.isFinite(duration), {\n  description: \"a finite duration\"\n})), {\n  strict: true,\n  decode: i => ParseResult.succeed(duration_.nanos(i)),\n  encode: (a, _, ast) => option_.match(duration_.toNanos(a), {\n    onNone: () => ParseResult.fail(new ParseResult.Type(ast, a, `Unable to encode ${a} into a bigint`)),\n    onSome: nanos => ParseResult.succeed(nanos)\n  })\n}).annotations({\n  identifier: \"DurationFromNanos\"\n}) {}\n/**\n * A non-negative integer. +Infinity is excluded.\n *\n * @category number constructors\n * @since 3.11.10\n */\nexport const NonNegativeInt = /*#__PURE__*/NonNegative.pipe(int()).annotations({\n  identifier: \"NonNegativeInt\"\n});\n/**\n * A schema that transforms a (possibly Infinite) non negative number into a\n * `Duration`. Treats the value as the number of milliseconds.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport class DurationFromMillis extends /*#__PURE__*/transform(NonNegative.annotations({\n  description: \"a non-negative number to be decoded into a Duration\"\n}), DurationFromSelf, {\n  strict: true,\n  decode: i => duration_.millis(i),\n  encode: a => duration_.toMillis(a)\n}).annotations({\n  identifier: \"DurationFromMillis\"\n}) {}\nconst DurationValueMillis = /*#__PURE__*/TaggedStruct(\"Millis\", {\n  millis: NonNegativeInt\n});\nconst DurationValueNanos = /*#__PURE__*/TaggedStruct(\"Nanos\", {\n  nanos: BigInt$\n});\nconst DurationValueInfinity = /*#__PURE__*/TaggedStruct(\"Infinity\", {});\nconst durationValueInfinity = /*#__PURE__*/DurationValueInfinity.make({});\nconst DurationValue = /*#__PURE__*/Union(DurationValueMillis, DurationValueNanos, DurationValueInfinity).annotations({\n  identifier: \"DurationValue\",\n  description: \"an JSON-compatible tagged union to be decoded into a Duration\"\n});\nconst FiniteHRTime = /*#__PURE__*/Tuple(element(NonNegativeInt).annotations({\n  title: \"seconds\"\n}), element(NonNegativeInt).annotations({\n  title: \"nanos\"\n})).annotations({\n  identifier: \"FiniteHRTime\"\n});\nconst InfiniteHRTime = /*#__PURE__*/Tuple(Literal(-1), Literal(0)).annotations({\n  identifier: \"InfiniteHRTime\"\n});\nconst HRTime = /*#__PURE__*/Union(FiniteHRTime, InfiniteHRTime).annotations({\n  identifier: \"HRTime\",\n  description: \"a tuple of seconds and nanos to be decoded into a Duration\"\n});\nconst isDurationValue = u => typeof u === \"object\";\n// TODO(4.0): remove HRTime union member\n/**\n * A schema that converts a JSON-compatible tagged union into a `Duration`.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport class Duration extends /*#__PURE__*/transform(Union(DurationValue, HRTime), DurationFromSelf, {\n  strict: true,\n  decode: i => {\n    if (isDurationValue(i)) {\n      switch (i._tag) {\n        case \"Millis\":\n          return duration_.millis(i.millis);\n        case \"Nanos\":\n          return duration_.nanos(i.nanos);\n        case \"Infinity\":\n          return duration_.infinity;\n      }\n    }\n    const [seconds, nanos] = i;\n    return seconds === -1 ? duration_.infinity : duration_.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos));\n  },\n  encode: a => {\n    switch (a.value._tag) {\n      case \"Millis\":\n        return DurationValueMillis.make({\n          millis: a.value.millis\n        });\n      case \"Nanos\":\n        return DurationValueNanos.make({\n          nanos: a.value.nanos\n        });\n      case \"Infinity\":\n        return durationValueInfinity;\n    }\n  }\n}).annotations({\n  identifier: \"Duration\"\n}) {}\n/**\n * Clamps a `Duration` between a minimum and a maximum value.\n *\n * @category Duration transformations\n * @since 3.10.0\n */\nexport const clampDuration = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenDuration(minimum, maximum)), {\n  strict: false,\n  decode: i => duration_.clamp(i, {\n    minimum,\n    maximum\n  }),\n  encode: identity\n});\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanDurationSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/LessThanDuration\");\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const lessThanDuration = (max, annotations) => self => self.pipe(filter(a => duration_.lessThan(a, max), {\n  schemaId: LessThanDurationSchemaId,\n  [LessThanDurationSchemaId]: {\n    max\n  },\n  title: `lessThanDuration(${max})`,\n  description: `a Duration less than ${duration_.decode(max)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToDurationSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/LessThanOrEqualToDuration\");\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToDuration = (max, annotations) => self => self.pipe(filter(a => duration_.lessThanOrEqualTo(a, max), {\n  schemaId: LessThanDurationSchemaId,\n  [LessThanDurationSchemaId]: {\n    max\n  },\n  title: `lessThanOrEqualToDuration(${max})`,\n  description: `a Duration less than or equal to ${duration_.decode(max)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanDurationSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/GreaterThanDuration\");\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const greaterThanDuration = (min, annotations) => self => self.pipe(filter(a => duration_.greaterThan(a, min), {\n  schemaId: GreaterThanDurationSchemaId,\n  [GreaterThanDurationSchemaId]: {\n    min\n  },\n  title: `greaterThanDuration(${min})`,\n  description: `a Duration greater than ${duration_.decode(min)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToDurationSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/GreaterThanOrEqualToDuration\");\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToDuration = (min, annotations) => self => self.pipe(filter(a => duration_.greaterThanOrEqualTo(a, min), {\n  schemaId: GreaterThanOrEqualToDurationSchemaId,\n  [GreaterThanOrEqualToDurationSchemaId]: {\n    min\n  },\n  title: `greaterThanOrEqualToDuration(${min})`,\n  description: `a Duration greater than or equal to ${duration_.decode(min)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenDurationSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/BetweenDuration\");\n/**\n * @category Duration filters\n * @since 3.10.0\n */\nexport const betweenDuration = (minimum, maximum, annotations) => self => self.pipe(filter(a => duration_.between(a, {\n  minimum,\n  maximum\n}), {\n  schemaId: BetweenDurationSchemaId,\n  [BetweenDurationSchemaId]: {\n    maximum,\n    minimum\n  },\n  title: `betweenDuration(${minimum}, ${maximum})`,\n  description: `a Duration between ${duration_.decode(minimum)} and ${duration_.decode(maximum)}`,\n  ...annotations\n}));\n/**\n * @category Uint8Array constructors\n * @since 3.10.0\n */\nexport class Uint8ArrayFromSelf extends /*#__PURE__*/declare(Predicate.isUint8Array, {\n  identifier: \"Uint8ArrayFromSelf\",\n  pretty: () => u8arr => `new Uint8Array(${JSON.stringify(Array.from(u8arr))})`,\n  arbitrary: () => fc => fc.uint8Array(),\n  equivalence: () => array_.getEquivalence(Equal.equals)\n}) {}\n/**\n * @category number constructors\n * @since 3.11.10\n */\nexport class Uint8 extends /*#__PURE__*/Number$.pipe( /*#__PURE__*/between(0, 255, {\n  identifier: \"Uint8\",\n  description: \"a 8-bit unsigned integer\"\n})) {}\n/** @ignore */\nclass Uint8Array$ extends /*#__PURE__*/transform(Array$(Uint8).annotations({\n  description: \"an array of 8-bit unsigned integers to be decoded into a Uint8Array\"\n}), Uint8ArrayFromSelf, {\n  strict: true,\n  decode: i => Uint8Array.from(i),\n  encode: a => Array.from(a)\n}).annotations({\n  identifier: \"Uint8Array\"\n}) {}\nexport {\n/**\n * A schema that transforms an array of numbers into a `Uint8Array`.\n *\n * @category Uint8Array transformations\n * @since 3.10.0\n */\nUint8Array$ as Uint8Array };\nconst makeUint8ArrayTransformation = (id, decode, encode) => transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a Uint8Array\"\n}), Uint8ArrayFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => either_.mapLeft(decode(i), decodeException => new ParseResult.Type(ast, i, decodeException.message)),\n  encode: a => ParseResult.succeed(encode(a))\n}).annotations({\n  identifier: id\n});\n/**\n * Decodes a base64 (RFC4648) encoded string into a `Uint8Array`.\n *\n * @category Uint8Array transformations\n * @since 3.10.0\n */\nexport const Uint8ArrayFromBase64 = /*#__PURE__*/makeUint8ArrayTransformation(\"Uint8ArrayFromBase64\", Encoding.decodeBase64, Encoding.encodeBase64);\n/**\n * Decodes a base64 (URL) encoded string into a `Uint8Array`.\n *\n * @category Uint8Array transformations\n * @since 3.10.0\n */\nexport const Uint8ArrayFromBase64Url = /*#__PURE__*/makeUint8ArrayTransformation(\"Uint8ArrayFromBase64Url\", Encoding.decodeBase64Url, Encoding.encodeBase64Url);\n/**\n * Decodes a hex encoded string into a `Uint8Array`.\n *\n * @category Uint8Array transformations\n * @since 3.10.0\n */\nexport const Uint8ArrayFromHex = /*#__PURE__*/makeUint8ArrayTransformation(\"Uint8ArrayFromHex\", Encoding.decodeHex, Encoding.encodeHex);\nconst makeEncodingTransformation = (id, decode, encode) => transformOrFail(String$.annotations({\n  description: `A string that is interpreted as being ${id}-encoded and will be decoded into a UTF-8 string`\n}), String$, {\n  strict: true,\n  decode: (i, _, ast) => either_.mapLeft(decode(i), decodeException => new ParseResult.Type(ast, i, decodeException.message)),\n  encode: a => ParseResult.succeed(encode(a))\n}).annotations({\n  identifier: `StringFrom${id}`\n});\n/**\n * Decodes a base64 (RFC4648) encoded string into a UTF-8 string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const StringFromBase64 = /*#__PURE__*/makeEncodingTransformation(\"Base64\", Encoding.decodeBase64String, Encoding.encodeBase64);\n/**\n * Decodes a base64 (URL) encoded string into a UTF-8 string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const StringFromBase64Url = /*#__PURE__*/makeEncodingTransformation(\"Base64Url\", Encoding.decodeBase64UrlString, Encoding.encodeBase64Url);\n/**\n * Decodes a hex encoded string into a UTF-8 string.\n *\n * @category string transformations\n * @since 3.10.0\n */\nexport const StringFromHex = /*#__PURE__*/makeEncodingTransformation(\"Hex\", Encoding.decodeHexString, Encoding.encodeHex);\n/**\n * Decodes a URI component encoded string into a UTF-8 string.\n * Can be used to store data in a URL.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * const PaginationSchema = Schema.Struct({\n *   maxItemPerPage: Schema.Number,\n *   page: Schema.Number\n * })\n *\n * const UrlSchema = Schema.compose(Schema.StringFromUriComponent, Schema.parseJson(PaginationSchema))\n *\n * console.log(Schema.encodeSync(UrlSchema)({ maxItemPerPage: 10, page: 1 }))\n * // Output: %7B%22maxItemPerPage%22%3A10%2C%22page%22%3A1%7D\n * ```\n *\n * @category string transformations\n * @since 3.12.0\n */\nexport const StringFromUriComponent = /*#__PURE__*/transformOrFail(String$.annotations({\n  description: `A string that is interpreted as being UriComponent-encoded and will be decoded into a UTF-8 string`\n}), String$, {\n  strict: true,\n  decode: (i, _, ast) => either_.mapLeft(Encoding.decodeUriComponent(i), decodeException => new ParseResult.Type(ast, i, decodeException.message)),\n  encode: (a, _, ast) => either_.mapLeft(Encoding.encodeUriComponent(a), encodeException => new ParseResult.Type(ast, a, encodeException.message))\n}).annotations({\n  identifier: `StringFromUriComponent`\n});\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MinItemsSchemaId = schemaId_.MinItemsSchemaId;\n/**\n * @category ReadonlyArray filters\n * @since 3.10.0\n */\nexport const minItems = (n, annotations) => self => {\n  const minItems = Math.floor(n);\n  if (minItems < 1) {\n    throw new Error(errors_.getInvalidArgumentErrorMessage(`Expected an integer greater than or equal to 1, actual ${n}`));\n  }\n  return self.pipe(filter(a => a.length >= minItems, {\n    schemaId: MinItemsSchemaId,\n    title: `minItems(${minItems})`,\n    description: `an array of at least ${minItems} item(s)`,\n    jsonSchema: {\n      minItems\n    },\n    [AST.StableFilterAnnotationId]: true,\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const MaxItemsSchemaId = schemaId_.MaxItemsSchemaId;\n/**\n * @category ReadonlyArray filters\n * @since 3.10.0\n */\nexport const maxItems = (n, annotations) => self => {\n  const maxItems = Math.floor(n);\n  if (maxItems < 1) {\n    throw new Error(errors_.getInvalidArgumentErrorMessage(`Expected an integer greater than or equal to 1, actual ${n}`));\n  }\n  return self.pipe(filter(a => a.length <= maxItems, {\n    schemaId: MaxItemsSchemaId,\n    title: `maxItems(${maxItems})`,\n    description: `an array of at most ${maxItems} item(s)`,\n    jsonSchema: {\n      maxItems\n    },\n    [AST.StableFilterAnnotationId]: true,\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ItemsCountSchemaId = schemaId_.ItemsCountSchemaId;\n/**\n * @category ReadonlyArray filters\n * @since 3.10.0\n */\nexport const itemsCount = (n, annotations) => self => {\n  const itemsCount = Math.floor(n);\n  if (itemsCount < 0) {\n    throw new Error(errors_.getInvalidArgumentErrorMessage(`Expected an integer greater than or equal to 0, actual ${n}`));\n  }\n  return self.pipe(filter(a => a.length === itemsCount, {\n    schemaId: ItemsCountSchemaId,\n    title: `itemsCount(${itemsCount})`,\n    description: `an array of exactly ${itemsCount} item(s)`,\n    jsonSchema: {\n      minItems: itemsCount,\n      maxItems: itemsCount\n    },\n    [AST.StableFilterAnnotationId]: true,\n    ...annotations\n  }));\n};\n/**\n * @category ReadonlyArray transformations\n * @since 3.10.0\n */\nexport const getNumberIndexedAccess = self => make(AST.getNumberIndexedAccess(self.ast));\n/**\n * Get the first element of a `ReadonlyArray`, or `None` if the array is empty.\n *\n * @category ReadonlyArray transformations\n * @since 3.10.0\n */\nexport function head(self) {\n  return transform(self, OptionFromSelf(getNumberIndexedAccess(typeSchema(self))), {\n    strict: false,\n    decode: i => array_.head(i),\n    encode: a => option_.match(a, {\n      onNone: () => [],\n      onSome: array_.of\n    })\n  });\n}\n/**\n * Get the first element of a `NonEmptyReadonlyArray`.\n *\n * @category NonEmptyReadonlyArray transformations\n * @since 3.12.0\n */\nexport function headNonEmpty(self) {\n  return transform(self, getNumberIndexedAccess(typeSchema(self)), {\n    strict: false,\n    decode: i => array_.headNonEmpty(i),\n    encode: a => array_.of(a)\n  });\n}\n/**\n * Retrieves the first element of a `ReadonlyArray`.\n *\n * If the array is empty, it returns the `fallback` argument if provided; otherwise, it fails.\n *\n * @category ReadonlyArray transformations\n * @since 3.10.0\n */\nexport const headOrElse = /*#__PURE__*/dual(args => isSchema(args[0]), (self, fallback) => transformOrFail(self, getNumberIndexedAccess(typeSchema(self)), {\n  strict: true,\n  decode: (i, _, ast) => i.length > 0 ? ParseResult.succeed(i[0]) : fallback ? ParseResult.succeed(fallback()) : ParseResult.fail(new ParseResult.Type(ast, i, \"Unable to retrieve the first element of an empty array\")),\n  encode: a => ParseResult.succeed(array_.of(a))\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const ValidDateSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/ValidDate\");\n/**\n * Defines a filter that specifically rejects invalid dates, such as `new\n * Date(\"Invalid Date\")`. This filter ensures that only properly formatted and\n * valid date objects are accepted, enhancing data integrity by preventing\n * erroneous date values from being processed.\n *\n * @category Date filters\n * @since 3.10.0\n */\nexport const validDate = annotations => self => self.pipe(filter(a => !Number.isNaN(a.getTime()), {\n  schemaId: ValidDateSchemaId,\n  [ValidDateSchemaId]: {\n    noInvalidDate: true\n  },\n  title: \"validDate\",\n  description: \"a valid Date\",\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanDateSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/LessThanDate\");\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const lessThanDate = (max, annotations) => self => self.pipe(filter(a => a < max, {\n  schemaId: LessThanDateSchemaId,\n  [LessThanDateSchemaId]: {\n    max\n  },\n  title: `lessThanDate(${util_.formatDate(max)})`,\n  description: `a date before ${util_.formatDate(max)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToDateSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/LessThanOrEqualToDate\");\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToDate = (max, annotations) => self => self.pipe(filter(a => a <= max, {\n  schemaId: LessThanDateSchemaId,\n  [LessThanDateSchemaId]: {\n    max\n  },\n  title: `lessThanOrEqualToDate(${util_.formatDate(max)})`,\n  description: `a date before or equal to ${util_.formatDate(max)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanDateSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/GreaterThanDate\");\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const greaterThanDate = (min, annotations) => self => self.pipe(filter(a => a > min, {\n  schemaId: GreaterThanDateSchemaId,\n  [GreaterThanDateSchemaId]: {\n    min\n  },\n  title: `greaterThanDate(${util_.formatDate(min)})`,\n  description: `a date after ${util_.formatDate(min)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToDateSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/GreaterThanOrEqualToDate\");\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToDate = (min, annotations) => self => self.pipe(filter(a => a >= min, {\n  schemaId: GreaterThanOrEqualToDateSchemaId,\n  [GreaterThanOrEqualToDateSchemaId]: {\n    min\n  },\n  title: `greaterThanOrEqualToDate(${util_.formatDate(min)})`,\n  description: `a date after or equal to ${util_.formatDate(min)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenDateSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/BetweenDate\");\n/**\n * @category Date filters\n * @since 3.10.0\n */\nexport const betweenDate = (min, max, annotations) => self => self.pipe(filter(a => a <= max && a >= min, {\n  schemaId: BetweenDateSchemaId,\n  [BetweenDateSchemaId]: {\n    max,\n    min\n  },\n  title: `betweenDate(${util_.formatDate(min)}, ${util_.formatDate(max)})`,\n  description: `a date between ${util_.formatDate(min)} and ${util_.formatDate(max)}`,\n  ...annotations\n}));\n/**\n * @category schema id\n * @since 3.11.8\n */\nexport const DateFromSelfSchemaId = schemaId_.DateFromSelfSchemaId;\n/**\n * Describes a schema that accommodates potentially invalid `Date` instances,\n * such as `new Date(\"Invalid Date\")`, without rejection.\n *\n * @category Date constructors\n * @since 3.10.0\n */\nexport class DateFromSelf extends /*#__PURE__*/declare(Predicate.isDate, {\n  identifier: \"DateFromSelf\",\n  schemaId: DateFromSelfSchemaId,\n  [DateFromSelfSchemaId]: {\n    noInvalidDate: false\n  },\n  description: \"a potentially invalid Date instance\",\n  pretty: () => date => `new Date(${JSON.stringify(date)})`,\n  arbitrary: () => fc => fc.date({\n    noInvalidDate: false\n  }),\n  equivalence: () => Equivalence.Date\n}) {}\n/**\n * Defines a schema that ensures only valid dates are accepted. This schema\n * rejects values like `new Date(\"Invalid Date\")`, which, despite being a `Date`\n * instance, represents an invalid date. Such stringent validation ensures that\n * all date objects processed through this schema are properly formed and\n * represent real dates.\n *\n * @category Date constructors\n * @since 3.10.0\n */\nexport class ValidDateFromSelf extends /*#__PURE__*/DateFromSelf.pipe( /*#__PURE__*/validDate({\n  identifier: \"ValidDateFromSelf\",\n  description: \"a valid Date instance\"\n})) {}\n/**\n * Defines a schema that attempts to convert a `string` to a `Date` object using\n * the `new Date` constructor. This conversion is lenient, meaning it does not\n * reject strings that do not form valid dates (e.g., using `new Date(\"Invalid\n * Date\")` results in a `Date` object, despite being invalid).\n *\n * @category Date transformations\n * @since 3.10.0\n */\nexport class DateFromString extends /*#__PURE__*/transform(String$.annotations({\n  description: \"a string to be decoded into a Date\"\n}), DateFromSelf, {\n  strict: true,\n  decode: i => new Date(i),\n  encode: a => util_.formatDate(a)\n}).annotations({\n  identifier: \"DateFromString\"\n}) {}\n/** @ignore */\nclass Date$ extends /*#__PURE__*/DateFromString.pipe( /*#__PURE__*/validDate({\n  identifier: \"Date\"\n})) {}\nexport {\n/**\n * This schema converts a `string` into a `Date` object using the `new Date`\n * constructor. It ensures that only valid date strings are accepted,\n * rejecting any strings that would result in an invalid date, such as `new\n * Date(\"Invalid Date\")`.\n *\n * @category Date transformations\n * @since 3.10.0\n */\nDate$ as Date };\n/**\n * Defines a schema that converts a `number` into a `Date` object using the `new\n * Date` constructor. This schema does not validate the numerical input,\n * allowing potentially invalid values such as `NaN`, `Infinity`, and\n * `-Infinity` to be converted into `Date` objects. During the encoding process,\n * any invalid `Date` object will be encoded to `NaN`.\n *\n * @category Date transformations\n * @since 3.10.0\n */\nexport class DateFromNumber extends /*#__PURE__*/transform(Number$.annotations({\n  description: \"a number to be decoded into a Date\"\n}), DateFromSelf, {\n  strict: true,\n  decode: i => new Date(i),\n  encode: a => a.getTime()\n}).annotations({\n  identifier: \"DateFromNumber\"\n}) {}\n/**\n * Describes a schema that represents a `DateTime.Utc` instance.\n *\n * @category DateTime.Utc constructors\n * @since 3.10.0\n */\nexport class DateTimeUtcFromSelf extends /*#__PURE__*/declare(u => dateTime.isDateTime(u) && dateTime.isUtc(u), {\n  identifier: \"DateTimeUtcFromSelf\",\n  description: \"a DateTime.Utc instance\",\n  pretty: () => dateTime => dateTime.toString(),\n  arbitrary: () => fc => fc.date({\n    noInvalidDate: true\n  }).map(date => dateTime.unsafeFromDate(date)),\n  equivalence: () => dateTime.Equivalence\n}) {}\nconst decodeDateTimeUtc = (input, ast) => ParseResult.try({\n  try: () => dateTime.unsafeMake(input),\n  catch: () => new ParseResult.Type(ast, input, `Unable to decode ${util_.formatUnknown(input)} into a DateTime.Utc`)\n});\n/**\n * Defines a schema that attempts to convert a `number` to a `DateTime.Utc` instance using the `DateTime.unsafeMake` constructor.\n *\n * @category DateTime.Utc transformations\n * @since 3.10.0\n */\nexport class DateTimeUtcFromNumber extends /*#__PURE__*/transformOrFail(Number$.annotations({\n  description: \"a number to be decoded into a DateTime.Utc\"\n}), DateTimeUtcFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => decodeDateTimeUtc(i, ast),\n  encode: a => ParseResult.succeed(dateTime.toEpochMillis(a))\n}).annotations({\n  identifier: \"DateTimeUtcFromNumber\"\n}) {}\n/**\n * Defines a schema that attempts to convert a `Date` to a `DateTime.Utc` instance using the `DateTime.unsafeMake` constructor.\n *\n * @category DateTime.Utc transformations\n * @since 3.12.0\n */\nexport class DateTimeUtcFromDate extends /*#__PURE__*/transformOrFail(DateFromSelf.annotations({\n  description: \"a Date to be decoded into a DateTime.Utc\"\n}), DateTimeUtcFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => decodeDateTimeUtc(i, ast),\n  encode: a => ParseResult.succeed(dateTime.toDateUtc(a))\n}).annotations({\n  identifier: \"DateTimeUtcFromDate\"\n}) {}\n/**\n * Defines a schema that attempts to convert a `string` to a `DateTime.Utc` instance using the `DateTime.unsafeMake` constructor.\n *\n * @category DateTime.Utc transformations\n * @since 3.10.0\n */\nexport class DateTimeUtc extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a DateTime.Utc\"\n}), DateTimeUtcFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => decodeDateTimeUtc(i, ast),\n  encode: a => ParseResult.succeed(dateTime.formatIso(a))\n}).annotations({\n  identifier: \"DateTimeUtc\"\n}) {}\nconst timeZoneOffsetArbitrary = () => fc => fc.integer({\n  min: -12 * 60 * 60 * 1000,\n  max: 14 * 60 * 60 * 1000\n}).map(dateTime.zoneMakeOffset);\n/**\n * Describes a schema that represents a `TimeZone.Offset` instance.\n *\n * @category TimeZone constructors\n * @since 3.10.0\n */\nexport class TimeZoneOffsetFromSelf extends /*#__PURE__*/declare(dateTime.isTimeZoneOffset, {\n  identifier: \"TimeZoneOffsetFromSelf\",\n  description: \"a TimeZone.Offset instance\",\n  pretty: () => zone => zone.toString(),\n  arbitrary: timeZoneOffsetArbitrary\n}) {}\n/**\n * Defines a schema that converts a `number` to a `TimeZone.Offset` instance using the `DateTime.zoneMakeOffset` constructor.\n *\n * @category TimeZone transformations\n * @since 3.10.0\n */\nexport class TimeZoneOffset extends /*#__PURE__*/transform(Number$.annotations({\n  description: \"a number to be decoded into a TimeZone.Offset\"\n}), TimeZoneOffsetFromSelf, {\n  strict: true,\n  decode: i => dateTime.zoneMakeOffset(i),\n  encode: a => a.offset\n}).annotations({\n  identifier: \"TimeZoneOffset\"\n}) {}\nconst timeZoneNamedArbitrary = () => fc => fc.constantFrom(...Intl.supportedValuesOf(\"timeZone\")).map(dateTime.zoneUnsafeMakeNamed);\n/**\n * Describes a schema that represents a `TimeZone.Named` instance.\n *\n * @category TimeZone constructors\n * @since 3.10.0\n */\nexport class TimeZoneNamedFromSelf extends /*#__PURE__*/declare(dateTime.isTimeZoneNamed, {\n  identifier: \"TimeZoneNamedFromSelf\",\n  description: \"a TimeZone.Named instance\",\n  pretty: () => zone => zone.toString(),\n  arbitrary: timeZoneNamedArbitrary\n}) {}\n/**\n * Defines a schema that attempts to convert a `string` to a `TimeZone.Named` instance using the `DateTime.zoneUnsafeMakeNamed` constructor.\n *\n * @category TimeZone transformations\n * @since 3.10.0\n */\nexport class TimeZoneNamed extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a TimeZone.Named\"\n}), TimeZoneNamedFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => ParseResult.try({\n    try: () => dateTime.zoneUnsafeMakeNamed(i),\n    catch: () => new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a TimeZone.Named`)\n  }),\n  encode: a => ParseResult.succeed(a.id)\n}).annotations({\n  identifier: \"TimeZoneNamed\"\n}) {}\n/**\n * @category TimeZone constructors\n * @since 3.10.0\n */\nexport class TimeZoneFromSelf extends /*#__PURE__*/Union(TimeZoneOffsetFromSelf, TimeZoneNamedFromSelf) {}\n/**\n * Defines a schema that attempts to convert a `string` to a `TimeZone` using the `DateTime.zoneFromString` constructor.\n *\n * @category TimeZone transformations\n * @since 3.10.0\n */\nexport class TimeZone extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a TimeZone\"\n}), TimeZoneFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => option_.match(dateTime.zoneFromString(i), {\n    onNone: () => ParseResult.fail(new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a TimeZone`)),\n    onSome: ParseResult.succeed\n  }),\n  encode: a => ParseResult.succeed(dateTime.zoneToString(a))\n}).annotations({\n  identifier: \"TimeZone\"\n}) {}\nconst timeZoneArbitrary = fc => fc.oneof(timeZoneOffsetArbitrary()(fc), timeZoneNamedArbitrary()(fc));\n/**\n * Describes a schema that represents a `DateTime.Zoned` instance.\n *\n * @category DateTime.Zoned constructors\n * @since 3.10.0\n */\nexport class DateTimeZonedFromSelf extends /*#__PURE__*/declare(u => dateTime.isDateTime(u) && dateTime.isZoned(u), {\n  identifier: \"DateTimeZonedFromSelf\",\n  description: \"a DateTime.Zoned instance\",\n  pretty: () => dateTime => dateTime.toString(),\n  arbitrary: () => fc => fc.tuple(fc.integer({\n    // time zone db supports +/- 1000 years or so\n    min: -31536000000000,\n    max: 31536000000000\n  }), timeZoneArbitrary(fc)).map(([millis, timeZone]) => dateTime.unsafeMakeZoned(millis, {\n    timeZone\n  })),\n  equivalence: () => dateTime.Equivalence\n}) {}\n/**\n * Defines a schema that attempts to convert a `string` to a `DateTime.Zoned` instance.\n *\n * @category DateTime.Zoned transformations\n * @since 3.10.0\n */\nexport class DateTimeZoned extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a DateTime.Zoned\"\n}), DateTimeZonedFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => option_.match(dateTime.makeZonedFromString(i), {\n    onNone: () => ParseResult.fail(new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a DateTime.Zoned`)),\n    onSome: ParseResult.succeed\n  }),\n  encode: a => ParseResult.succeed(dateTime.formatIsoZoned(a))\n}).annotations({\n  identifier: \"DateTimeZoned\"\n}) {}\nconst OptionNoneEncoded = /*#__PURE__*/Struct({\n  _tag: Literal(\"None\")\n}).annotations({\n  description: \"NoneEncoded\"\n});\nconst optionSomeEncoded = value => Struct({\n  _tag: Literal(\"Some\"),\n  value\n}).annotations({\n  description: `SomeEncoded<${format(value)}>`\n});\nconst optionEncoded = value => Union(OptionNoneEncoded, optionSomeEncoded(value)).annotations({\n  description: `OptionEncoded<${format(value)}>`\n});\nconst optionDecode = input => input._tag === \"None\" ? option_.none() : option_.some(input.value);\nconst optionArbitrary = (value, ctx) => fc => fc.oneof(ctx, fc.record({\n  _tag: fc.constant(\"None\")\n}), fc.record({\n  _tag: fc.constant(\"Some\"),\n  value: value(fc)\n})).map(optionDecode);\nconst optionPretty = value => option_.match({\n  onNone: () => \"none()\",\n  onSome: a => `some(${value(a)})`\n});\nconst optionParse = decodeUnknown => (u, options, ast) => option_.isOption(u) ? option_.isNone(u) ? ParseResult.succeed(option_.none()) : toComposite(decodeUnknown(u.value, options), option_.some, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport const OptionFromSelf = value => {\n  return declare([value], {\n    decode: value => optionParse(ParseResult.decodeUnknown(value)),\n    encode: value => optionParse(ParseResult.encodeUnknown(value))\n  }, {\n    description: `Option<${format(value)}>`,\n    pretty: optionPretty,\n    arbitrary: optionArbitrary,\n    equivalence: option_.getEquivalence\n  });\n};\nconst makeNoneEncoded = {\n  _tag: \"None\"\n};\nconst makeSomeEncoded = value => ({\n  _tag: \"Some\",\n  value\n});\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function Option(value) {\n  const value_ = asSchema(value);\n  const out = transform(optionEncoded(value_), OptionFromSelf(typeSchema(value_)), {\n    strict: true,\n    decode: i => optionDecode(i),\n    encode: a => option_.match(a, {\n      onNone: () => makeNoneEncoded,\n      onSome: makeSomeEncoded\n    })\n  });\n  return out;\n}\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function OptionFromNullOr(value) {\n  return transform(NullOr(value), OptionFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => option_.fromNullable(i),\n    encode: a => option_.getOrNull(a)\n  });\n}\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function OptionFromNullishOr(value, onNoneEncoding) {\n  return transform(NullishOr(value), OptionFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => option_.fromNullable(i),\n    encode: onNoneEncoding === null ? a => option_.getOrNull(a) : a => option_.getOrUndefined(a)\n  });\n}\n/**\n * @category Option transformations\n * @since 3.10.0\n */\nexport function OptionFromUndefinedOr(value) {\n  return transform(UndefinedOr(value), OptionFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => option_.fromNullable(i),\n    encode: a => option_.getOrUndefined(a)\n  });\n}\n/**\n * Transforms strings into an Option type, effectively filtering out empty or\n * whitespace-only strings by trimming them and checking their length. Returns\n * `none` for invalid inputs and `some` for valid non-empty strings.\n *\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * console.log(Schema.decodeSync(Schema.OptionFromNonEmptyTrimmedString)(\"\")) // Option.none()\n * console.log(Schema.decodeSync(Schema.OptionFromNonEmptyTrimmedString)(\" a \")) // Option.some(\"a\")\n * console.log(Schema.decodeSync(Schema.OptionFromNonEmptyTrimmedString)(\"a\")) // Option.some(\"a\")\n * ```\n *\n * @category Option transformations\n * @since 3.10.0\n */\nexport class OptionFromNonEmptyTrimmedString extends /*#__PURE__*/transform(String$, /*#__PURE__*/OptionFromSelf(NonEmptyTrimmedString), {\n  strict: true,\n  decode: i => option_.filter(option_.some(i.trim()), string_.isNonEmpty),\n  encode: a => option_.getOrElse(a, () => \"\")\n}) {}\nconst rightEncoded = right => Struct({\n  _tag: Literal(\"Right\"),\n  right\n}).annotations({\n  description: `RightEncoded<${format(right)}>`\n});\nconst leftEncoded = left => Struct({\n  _tag: Literal(\"Left\"),\n  left\n}).annotations({\n  description: `LeftEncoded<${format(left)}>`\n});\nconst eitherEncoded = (right, left) => Union(rightEncoded(right), leftEncoded(left)).annotations({\n  description: `EitherEncoded<${format(left)}, ${format(right)}>`\n});\nconst eitherDecode = input => input._tag === \"Left\" ? either_.left(input.left) : either_.right(input.right);\nconst eitherArbitrary = (right, left) => fc => fc.oneof(fc.record({\n  _tag: fc.constant(\"Left\"),\n  left: left(fc)\n}), fc.record({\n  _tag: fc.constant(\"Right\"),\n  right: right(fc)\n})).map(eitherDecode);\nconst eitherPretty = (right, left) => either_.match({\n  onLeft: e => `left(${left(e)})`,\n  onRight: a => `right(${right(a)})`\n});\nconst eitherParse = (parseRight, decodeUnknownLeft) => (u, options, ast) => either_.isEither(u) ? either_.match(u, {\n  onLeft: left => toComposite(decodeUnknownLeft(left, options), either_.left, ast, u),\n  onRight: right => toComposite(parseRight(right, options), either_.right, ast, u)\n}) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category Either transformations\n * @since 3.10.0\n */\nexport const EitherFromSelf = ({\n  left,\n  right\n}) => {\n  return declare([right, left], {\n    decode: (right, left) => eitherParse(ParseResult.decodeUnknown(right), ParseResult.decodeUnknown(left)),\n    encode: (right, left) => eitherParse(ParseResult.encodeUnknown(right), ParseResult.encodeUnknown(left))\n  }, {\n    description: `Either<${format(right)}, ${format(left)}>`,\n    pretty: eitherPretty,\n    arbitrary: eitherArbitrary,\n    equivalence: (right, left) => either_.getEquivalence({\n      left,\n      right\n    })\n  });\n};\nconst makeLeftEncoded = left => ({\n  _tag: \"Left\",\n  left\n});\nconst makeRightEncoded = right => ({\n  _tag: \"Right\",\n  right\n});\n/**\n * @category Either transformations\n * @since 3.10.0\n */\nexport const Either = ({\n  left,\n  right\n}) => {\n  const right_ = asSchema(right);\n  const left_ = asSchema(left);\n  const out = transform(eitherEncoded(right_, left_), EitherFromSelf({\n    left: typeSchema(left_),\n    right: typeSchema(right_)\n  }), {\n    strict: true,\n    decode: i => eitherDecode(i),\n    encode: a => either_.match(a, {\n      onLeft: makeLeftEncoded,\n      onRight: makeRightEncoded\n    })\n  });\n  return out;\n};\n/**\n * @example\n * ```ts\n * import * as Schema from \"effect/Schema\"\n *\n * // Schema<string | number, Either<string, number>>\n * Schema.EitherFromUnion({ left: Schema.String, right: Schema.Number })\n * ```\n *\n * @category Either transformations\n * @since 3.10.0\n */\nexport const EitherFromUnion = ({\n  left,\n  right\n}) => {\n  const right_ = asSchema(right);\n  const left_ = asSchema(left);\n  const toright = typeSchema(right_);\n  const toleft = typeSchema(left_);\n  const fromRight = transform(right_, rightEncoded(toright), {\n    strict: true,\n    decode: i => makeRightEncoded(i),\n    encode: a => a.right\n  });\n  const fromLeft = transform(left_, leftEncoded(toleft), {\n    strict: true,\n    decode: i => makeLeftEncoded(i),\n    encode: a => a.left\n  });\n  const out = transform(Union(fromRight, fromLeft), EitherFromSelf({\n    left: toleft,\n    right: toright\n  }), {\n    strict: true,\n    decode: i => i._tag === \"Left\" ? either_.left(i.left) : either_.right(i.right),\n    encode: a => either_.match(a, {\n      onLeft: makeLeftEncoded,\n      onRight: makeRightEncoded\n    })\n  });\n  return out;\n};\nconst mapArbitrary = (key, value, ctx) => {\n  return fc => {\n    const items = fc.array(fc.tuple(key(fc), value(fc)));\n    return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(as => new Map(as));\n  };\n};\nconst readonlyMapPretty = (key, value) => map => `new Map([${Array.from(map.entries()).map(([k, v]) => `[${key(k)}, ${value(v)}]`).join(\", \")}])`;\nconst readonlyMapEquivalence = (key, value) => {\n  const arrayEquivalence = array_.getEquivalence(Equivalence.make(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb)));\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.entries()), Array.from(b.entries())));\n};\nconst readonlyMapParse = decodeUnknown => (u, options, ast) => Predicate.isMap(u) ? toComposite(decodeUnknown(Array.from(u.entries()), options), as => new Map(as), ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\nconst mapFromSelf_ = (key, value, description) => declare([key, value], {\n  decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown(Array$(Tuple(Key, Value)))),\n  encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown(Array$(Tuple(Key, Value))))\n}, {\n  description,\n  pretty: readonlyMapPretty,\n  arbitrary: mapArbitrary,\n  equivalence: readonlyMapEquivalence\n});\n/**\n * @category ReadonlyMap\n * @since 3.10.0\n */\nexport const ReadonlyMapFromSelf = ({\n  key,\n  value\n}) => mapFromSelf_(key, value, `ReadonlyMap<${format(key)}, ${format(value)}>`);\n/**\n * @category Map\n * @since 3.10.0\n */\nexport const MapFromSelf = ({\n  key,\n  value\n}) => mapFromSelf_(key, value, `Map<${format(key)}, ${format(value)}>`);\n/**\n * @category ReadonlyMap transformations\n * @since 3.10.0\n */\nexport function ReadonlyMap({\n  key,\n  value\n}) {\n  return transform(Array$(Tuple(key, value)), ReadonlyMapFromSelf({\n    key: typeSchema(asSchema(key)),\n    value: typeSchema(asSchema(value))\n  }), {\n    strict: true,\n    decode: i => new Map(i),\n    encode: a => Array.from(a.entries())\n  });\n}\n/** @ignore */\nfunction map({\n  key,\n  value\n}) {\n  return transform(Array$(Tuple(key, value)), MapFromSelf({\n    key: typeSchema(asSchema(key)),\n    value: typeSchema(asSchema(value))\n  }), {\n    strict: true,\n    decode: i => new Map(i),\n    encode: a => Array.from(a.entries())\n  });\n}\nexport {\n/**\n * @category Map transformations\n * @since 3.10.0\n */\nmap as Map };\n/**\n * @category ReadonlyMap transformations\n * @since 3.10.0\n */\nexport const ReadonlyMapFromRecord = ({\n  key,\n  value\n}) => transform(Record({\n  key: encodedBoundSchema(key),\n  value\n}).annotations({\n  description: \"a record to be decoded into a ReadonlyMap\"\n}), ReadonlyMapFromSelf({\n  key,\n  value: typeSchema(value)\n}), {\n  strict: true,\n  decode: i => new Map(Object.entries(i)),\n  encode: a => Object.fromEntries(a)\n});\n/**\n * @category Map transformations\n * @since 3.10.0\n */\nexport const MapFromRecord = ({\n  key,\n  value\n}) => transform(Record({\n  key: encodedBoundSchema(key),\n  value\n}).annotations({\n  description: \"a record to be decoded into a Map\"\n}), MapFromSelf({\n  key,\n  value: typeSchema(value)\n}), {\n  strict: true,\n  decode: i => new Map(Object.entries(i)),\n  encode: a => Object.fromEntries(a)\n});\nconst setArbitrary = (item, ctx) => fc => {\n  const items = fc.array(item(fc));\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(as => new Set(as));\n};\nconst readonlySetPretty = item => set => `new Set([${Array.from(set.values()).map(a => item(a)).join(\", \")}])`;\nconst readonlySetEquivalence = item => {\n  const arrayEquivalence = array_.getEquivalence(item);\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.values()), Array.from(b.values())));\n};\nconst readonlySetParse = decodeUnknown => (u, options, ast) => Predicate.isSet(u) ? toComposite(decodeUnknown(Array.from(u.values()), options), as => new Set(as), ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\nconst setFromSelf_ = (value, description) => declare([value], {\n  decode: item => readonlySetParse(ParseResult.decodeUnknown(Array$(item))),\n  encode: item => readonlySetParse(ParseResult.encodeUnknown(Array$(item)))\n}, {\n  description,\n  pretty: readonlySetPretty,\n  arbitrary: setArbitrary,\n  equivalence: readonlySetEquivalence\n});\n/**\n * @category ReadonlySet\n * @since 3.10.0\n */\nexport const ReadonlySetFromSelf = value => setFromSelf_(value, `ReadonlySet<${format(value)}>`);\n/**\n * @category Set\n * @since 3.10.0\n */\nexport const SetFromSelf = value => setFromSelf_(value, `Set<${format(value)}>`);\n/**\n * @category ReadonlySet transformations\n * @since 3.10.0\n */\nexport function ReadonlySet(value) {\n  return transform(Array$(value), ReadonlySetFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => new Set(i),\n    encode: a => Array.from(a)\n  });\n}\n/** @ignore */\nfunction set(value) {\n  return transform(Array$(value), SetFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => new Set(i),\n    encode: a => Array.from(a)\n  });\n}\nexport {\n/**\n * @category Set transformations\n * @since 3.10.0\n */\nset as Set };\nconst bigDecimalPretty = () => val => `BigDecimal(${bigDecimal_.format(bigDecimal_.normalize(val))})`;\nconst bigDecimalArbitrary = () => fc => fc.tuple(fc.bigInt(), fc.integer({\n  min: 0,\n  max: 18\n})).map(([value, scale]) => bigDecimal_.make(value, scale));\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport class BigDecimalFromSelf extends /*#__PURE__*/declare(bigDecimal_.isBigDecimal, {\n  identifier: \"BigDecimalFromSelf\",\n  pretty: bigDecimalPretty,\n  arbitrary: bigDecimalArbitrary,\n  equivalence: () => bigDecimal_.Equivalence\n}) {}\n/**\n * @category BigDecimal transformations\n * @since 3.10.0\n */\nexport class BigDecimal extends /*#__PURE__*/transformOrFail(String$.annotations({\n  description: \"a string to be decoded into a BigDecimal\"\n}), BigDecimalFromSelf, {\n  strict: true,\n  decode: (i, _, ast) => bigDecimal_.fromString(i).pipe(option_.match({\n    onNone: () => ParseResult.fail(new ParseResult.Type(ast, i, `Unable to decode ${JSON.stringify(i)} into a BigDecimal`)),\n    onSome: val => ParseResult.succeed(bigDecimal_.normalize(val))\n  })),\n  encode: a => ParseResult.succeed(bigDecimal_.format(bigDecimal_.normalize(a)))\n}).annotations({\n  identifier: \"BigDecimal\"\n}) {}\n/**\n * A schema that transforms a `number` into a `BigDecimal`.\n * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.\n *\n * @category BigDecimal transformations\n * @since 3.10.0\n */\nexport class BigDecimalFromNumber extends /*#__PURE__*/transform(Number$.annotations({\n  description: \"a number to be decoded into a BigDecimal\"\n}), BigDecimalFromSelf, {\n  strict: true,\n  decode: i => bigDecimal_.unsafeFromNumber(i),\n  encode: a => bigDecimal_.unsafeToNumber(a)\n}).annotations({\n  identifier: \"BigDecimalFromNumber\"\n}) {}\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/GreaterThanBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const greaterThanBigDecimal = (min, annotations) => self => {\n  const formatted = bigDecimal_.format(min);\n  return self.pipe(filter(a => bigDecimal_.greaterThan(a, min), {\n    schemaId: GreaterThanBigDecimalSchemaId,\n    [GreaterThanBigDecimalSchemaId]: {\n      min\n    },\n    title: `greaterThanBigDecimal(${formatted})`,\n    description: `a BigDecimal greater than ${formatted}`,\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const GreaterThanOrEqualToBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/GreaterThanOrEqualToBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const greaterThanOrEqualToBigDecimal = (min, annotations) => self => {\n  const formatted = bigDecimal_.format(min);\n  return self.pipe(filter(a => bigDecimal_.greaterThanOrEqualTo(a, min), {\n    schemaId: GreaterThanOrEqualToBigDecimalSchemaId,\n    [GreaterThanOrEqualToBigDecimalSchemaId]: {\n      min\n    },\n    title: `greaterThanOrEqualToBigDecimal(${formatted})`,\n    description: `a BigDecimal greater than or equal to ${formatted}`,\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/LessThanBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const lessThanBigDecimal = (max, annotations) => self => {\n  const formatted = bigDecimal_.format(max);\n  return self.pipe(filter(a => bigDecimal_.lessThan(a, max), {\n    schemaId: LessThanBigDecimalSchemaId,\n    [LessThanBigDecimalSchemaId]: {\n      max\n    },\n    title: `lessThanBigDecimal(${formatted})`,\n    description: `a BigDecimal less than ${formatted}`,\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const LessThanOrEqualToBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/LessThanOrEqualToBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const lessThanOrEqualToBigDecimal = (max, annotations) => self => {\n  const formatted = bigDecimal_.format(max);\n  return self.pipe(filter(a => bigDecimal_.lessThanOrEqualTo(a, max), {\n    schemaId: LessThanOrEqualToBigDecimalSchemaId,\n    [LessThanOrEqualToBigDecimalSchemaId]: {\n      max\n    },\n    title: `lessThanOrEqualToBigDecimal(${formatted})`,\n    description: `a BigDecimal less than or equal to ${formatted}`,\n    ...annotations\n  }));\n};\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const PositiveBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/PositiveBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const positiveBigDecimal = annotations => self => self.pipe(filter(a => bigDecimal_.isPositive(a), {\n  schemaId: PositiveBigDecimalSchemaId,\n  title: \"positiveBigDecimal\",\n  description: `a positive BigDecimal`,\n  ...annotations\n}));\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const PositiveBigDecimalFromSelf = /*#__PURE__*/BigDecimalFromSelf.pipe( /*#__PURE__*/positiveBigDecimal({\n  identifier: \"PositiveBigDecimalFromSelf\"\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NonNegativeBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/NonNegativeBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const nonNegativeBigDecimal = annotations => self => self.pipe(filter(a => a.value >= 0n, {\n  schemaId: NonNegativeBigDecimalSchemaId,\n  title: \"nonNegativeBigDecimal\",\n  description: `a non-negative BigDecimal`,\n  ...annotations\n}));\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const NonNegativeBigDecimalFromSelf = /*#__PURE__*/BigDecimalFromSelf.pipe( /*#__PURE__*/nonNegativeBigDecimal({\n  identifier: \"NonNegativeBigDecimalFromSelf\"\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NegativeBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/NegativeBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const negativeBigDecimal = annotations => self => self.pipe(filter(a => bigDecimal_.isNegative(a), {\n  schemaId: NegativeBigDecimalSchemaId,\n  title: \"negativeBigDecimal\",\n  description: `a negative BigDecimal`,\n  ...annotations\n}));\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const NegativeBigDecimalFromSelf = /*#__PURE__*/BigDecimalFromSelf.pipe( /*#__PURE__*/negativeBigDecimal({\n  identifier: \"NegativeBigDecimalFromSelf\"\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const NonPositiveBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/schema/NonPositiveBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const nonPositiveBigDecimal = annotations => self => self.pipe(filter(a => a.value <= 0n, {\n  schemaId: NonPositiveBigDecimalSchemaId,\n  title: \"nonPositiveBigDecimal\",\n  description: `a non-positive BigDecimal`,\n  ...annotations\n}));\n/**\n * @category BigDecimal constructors\n * @since 3.10.0\n */\nexport const NonPositiveBigDecimalFromSelf = /*#__PURE__*/BigDecimalFromSelf.pipe( /*#__PURE__*/nonPositiveBigDecimal({\n  identifier: \"NonPositiveBigDecimalFromSelf\"\n}));\n/**\n * @category schema id\n * @since 3.10.0\n */\nexport const BetweenBigDecimalSchemaId = /*#__PURE__*/Symbol.for(\"effect/SchemaId/BetweenBigDecimal\");\n/**\n * @category BigDecimal filters\n * @since 3.10.0\n */\nexport const betweenBigDecimal = (minimum, maximum, annotations) => self => {\n  const formattedMinimum = bigDecimal_.format(minimum);\n  const formattedMaximum = bigDecimal_.format(maximum);\n  return self.pipe(filter(a => bigDecimal_.between(a, {\n    minimum,\n    maximum\n  }), {\n    schemaId: BetweenBigDecimalSchemaId,\n    [BetweenBigDecimalSchemaId]: {\n      maximum,\n      minimum\n    },\n    title: `betweenBigDecimal(${formattedMinimum}, ${formattedMaximum})`,\n    description: `a BigDecimal between ${formattedMinimum} and ${formattedMaximum}`,\n    ...annotations\n  }));\n};\n/**\n * Clamps a `BigDecimal` between a minimum and a maximum value.\n *\n * @category BigDecimal transformations\n * @since 3.10.0\n */\nexport const clampBigDecimal = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenBigDecimal(minimum, maximum)), {\n  strict: false,\n  decode: i => bigDecimal_.clamp(i, {\n    minimum,\n    maximum\n  }),\n  encode: identity\n});\nconst chunkArbitrary = (item, ctx) => fc => {\n  const items = fc.array(item(fc));\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(chunk_.fromIterable);\n};\nconst chunkPretty = item => c => `Chunk(${chunk_.toReadonlyArray(c).map(item).join(\", \")})`;\nconst chunkParse = decodeUnknown => (u, options, ast) => chunk_.isChunk(u) ? chunk_.isEmpty(u) ? ParseResult.succeed(chunk_.empty()) : toComposite(decodeUnknown(chunk_.toReadonlyArray(u), options), chunk_.fromIterable, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category Chunk\n * @since 3.10.0\n */\nexport const ChunkFromSelf = value => {\n  return declare([value], {\n    decode: item => chunkParse(ParseResult.decodeUnknown(Array$(item))),\n    encode: item => chunkParse(ParseResult.encodeUnknown(Array$(item)))\n  }, {\n    description: `Chunk<${format(value)}>`,\n    pretty: chunkPretty,\n    arbitrary: chunkArbitrary,\n    equivalence: chunk_.getEquivalence\n  });\n};\n/**\n * @category Chunk transformations\n * @since 3.10.0\n */\nexport function Chunk(value) {\n  return transform(Array$(value), ChunkFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => i.length === 0 ? chunk_.empty() : chunk_.fromIterable(i),\n    encode: a => chunk_.toReadonlyArray(a)\n  });\n}\nconst nonEmptyChunkArbitrary = item => fc => fastCheck_.array(item(fc), {\n  minLength: 1\n}).map(as => chunk_.unsafeFromNonEmptyArray(as));\nconst nonEmptyChunkPretty = item => c => `NonEmptyChunk(${chunk_.toReadonlyArray(c).map(item).join(\", \")})`;\nconst nonEmptyChunkParse = decodeUnknown => (u, options, ast) => chunk_.isChunk(u) && chunk_.isNonEmpty(u) ? toComposite(decodeUnknown(chunk_.toReadonlyArray(u), options), chunk_.unsafeFromNonEmptyArray, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category Chunk\n * @since 3.10.0\n */\nexport const NonEmptyChunkFromSelf = value => {\n  return declare([value], {\n    decode: item => nonEmptyChunkParse(ParseResult.decodeUnknown(NonEmptyArray(item))),\n    encode: item => nonEmptyChunkParse(ParseResult.encodeUnknown(NonEmptyArray(item)))\n  }, {\n    description: `NonEmptyChunk<${format(value)}>`,\n    pretty: nonEmptyChunkPretty,\n    arbitrary: nonEmptyChunkArbitrary,\n    equivalence: chunk_.getEquivalence\n  });\n};\n/**\n * @category Chunk transformations\n * @since 3.10.0\n */\nexport function NonEmptyChunk(value) {\n  return transform(NonEmptyArray(value), NonEmptyChunkFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => chunk_.unsafeFromNonEmptyArray(i),\n    encode: a => chunk_.toReadonlyArray(a)\n  });\n}\nconst decodeData = a => Array.isArray(a) ? data_.array(a) : data_.struct(a);\nconst dataArbitrary = item => fc => item(fc).map(decodeData);\nconst dataPretty = item => d => `Data(${item(d)})`;\nconst dataParse = decodeUnknown => (u, options, ast) => Equal.isEqual(u) ? toComposite(decodeUnknown(u, options), decodeData, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * Type and Encoded must extend `Readonly<Record<string, any>> |\n * ReadonlyArray<any>` to be compatible with this API.\n *\n * @category Data transformations\n * @since 3.10.0\n */\nexport const DataFromSelf = value => {\n  return declare([value], {\n    decode: item => dataParse(ParseResult.decodeUnknown(item)),\n    encode: item => dataParse(ParseResult.encodeUnknown(item))\n  }, {\n    description: `Data<${format(value)}>`,\n    pretty: dataPretty,\n    arbitrary: dataArbitrary\n  });\n};\n/**\n * Type and Encoded must extend `Readonly<Record<string, any>> |\n * ReadonlyArray<any>` to be compatible with this API.\n *\n * @category Data transformations\n * @since 3.10.0\n */\nexport const Data = value => {\n  return transform(value, DataFromSelf(typeSchema(value)), {\n    strict: false,\n    decode: i => decodeData(i),\n    encode: a => Array.isArray(a) ? Array.from(a) : Object.assign({}, a)\n  });\n};\nconst isField = u => isSchema(u) || isPropertySignature(u);\nconst isFields = fields => util_.ownKeys(fields).every(key => isField(fields[key]));\nconst getFields = hasFields => \"fields\" in hasFields ? hasFields.fields : getFields(hasFields[RefineSchemaId]);\nconst getSchemaFromFieldsOr = fieldsOr => isFields(fieldsOr) ? Struct(fieldsOr) : isSchema(fieldsOr) ? fieldsOr : Struct(getFields(fieldsOr));\nconst getFieldsFromFieldsOr = fieldsOr => isFields(fieldsOr) ? fieldsOr : getFields(fieldsOr);\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyClass extends Schema.Class<MyClass>(\"MyClass\")({\n *  someField: Schema.String\n * }) {\n *  someMethod() {\n *    return this.someField + \"bar\"\n *  }\n * }\n * ```\n *\n * @category classes\n * @since 3.10.0\n */\nexport const Class = identifier => (fieldsOr, annotations) => makeClass({\n  kind: \"Class\",\n  identifier,\n  schema: getSchemaFromFieldsOr(fieldsOr),\n  fields: getFieldsFromFieldsOr(fieldsOr),\n  Base: data_.Class,\n  annotations\n});\n/** @internal */\nexport const getClassTag = tag => withConstructorDefault(propertySignature(Literal(tag)), () => tag);\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyClass extends Schema.TaggedClass<MyClass>(\"MyClass\")(\"MyClass\", {\n *  a: Schema.String\n * }) {}\n * ```\n *\n * @category classes\n * @since 3.10.0\n */\nexport const TaggedClass = identifier => (tag, fieldsOr, annotations) => {\n  const fields = getFieldsFromFieldsOr(fieldsOr);\n  const schema = getSchemaFromFieldsOr(fieldsOr);\n  const newFields = {\n    _tag: getClassTag(tag)\n  };\n  const taggedFields = extendFields(newFields, fields);\n  return class TaggedClass extends makeClass({\n    kind: \"TaggedClass\",\n    identifier: identifier ?? tag,\n    schema: extend(schema, Struct(newFields)),\n    fields: taggedFields,\n    Base: data_.Class,\n    annotations\n  }) {\n    static _tag = tag;\n  };\n};\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyError extends Schema.TaggedError<MyError>(\"MyError\")(\n *   \"MyError\",\n *   {\n *     module: Schema.String,\n *     method: Schema.String,\n *     description: Schema.String\n *   }\n * ) {\n *   get message(): string {\n *     return `${this.module}.${this.method}: ${this.description}`\n *   }\n * }\n * ```\n * @category classes\n * @since 3.10.0\n */\nexport const TaggedError = identifier => (tag, fieldsOr, annotations) => {\n  class Base extends data_.Error {}\n  ;\n  Base.prototype.name = tag;\n  const fields = getFieldsFromFieldsOr(fieldsOr);\n  const schema = getSchemaFromFieldsOr(fieldsOr);\n  const newFields = {\n    _tag: getClassTag(tag)\n  };\n  const taggedFields = extendFields(newFields, fields);\n  const hasMessageField = \"message\" in taggedFields;\n  class TaggedErrorClass extends makeClass({\n    kind: \"TaggedError\",\n    identifier: identifier ?? tag,\n    schema: extend(schema, Struct(newFields)),\n    fields: taggedFields,\n    Base,\n    annotations,\n    disableToString: true\n  }) {\n    static _tag = tag;\n  }\n  if (!hasMessageField) {\n    Object.defineProperty(TaggedErrorClass.prototype, \"message\", {\n      get() {\n        return `{ ${util_.ownKeys(fields).map(p => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`).join(\", \")} }`;\n      },\n      enumerable: false,\n      // mirrors the built-in Error.prototype.message, whose descriptor is also non-enumerable\n      configurable: true\n    });\n  }\n  return TaggedErrorClass;\n};\nconst extendFields = (a, b) => {\n  const out = {\n    ...a\n  };\n  for (const key of util_.ownKeys(b)) {\n    if (key in a) {\n      throw new Error(errors_.getASTDuplicatePropertySignatureErrorMessage(key));\n    }\n    out[key] = b[key];\n  }\n  return out;\n};\nfunction getDisableValidationMakeOption(options) {\n  return Predicate.isBoolean(options) ? options : options?.disableValidation ?? false;\n}\nconst astCache = /*#__PURE__*/globalValue(\"effect/Schema/astCache\", () => new WeakMap());\nconst getClassAnnotations = annotations => {\n  if (annotations === undefined) {\n    return [];\n  } else if (Array.isArray(annotations)) {\n    return annotations;\n  } else {\n    return [annotations];\n  }\n};\nconst makeClass = ({\n  Base,\n  annotations,\n  disableToString,\n  fields,\n  identifier,\n  kind,\n  schema\n}) => {\n  const classSymbol = Symbol.for(`effect/Schema/${kind}/${identifier}`);\n  const [typeAnnotations, transformationAnnotations, encodedAnnotations] = getClassAnnotations(annotations);\n  const typeSchema_ = typeSchema(schema);\n  const declarationSurrogate = typeSchema_.annotations({\n    identifier,\n    ...typeAnnotations\n  });\n  const typeSide = typeSchema_.annotations({\n    [AST.AutoTitleAnnotationId]: `${identifier} (Type side)`,\n    ...typeAnnotations\n  });\n  const constructorSchema = schema.annotations({\n    [AST.AutoTitleAnnotationId]: `${identifier} (Constructor)`,\n    ...typeAnnotations\n  });\n  const encodedSide = schema.annotations({\n    [AST.AutoTitleAnnotationId]: `${identifier} (Encoded side)`,\n    ...encodedAnnotations\n  });\n  const transformationSurrogate = schema.annotations({\n    [AST.JSONIdentifierAnnotationId]: identifier,\n    ...encodedAnnotations,\n    ...typeAnnotations,\n    ...transformationAnnotations\n  });\n  const fallbackInstanceOf = u => Predicate.hasProperty(u, classSymbol) && ParseResult.is(typeSide)(u);\n  const klass = class extends Base {\n    constructor(props = {}, options = false) {\n      props = {\n        ...props\n      };\n      if (kind !== \"Class\") {\n        delete props[\"_tag\"];\n      }\n      props = lazilyMergeDefaults(fields, props);\n      if (!getDisableValidationMakeOption(options)) {\n        props = ParseResult.validateSync(constructorSchema)(props);\n      }\n      super(props, true);\n    }\n    // ----------------\n    // Schema interface\n    // ----------------\n    static [TypeId] = variance;\n    static get ast() {\n      let out = astCache.get(this);\n      if (out) {\n        return out;\n      }\n      const declaration = declare([schema], {\n        decode: () => (input, _, ast) => input instanceof this || fallbackInstanceOf(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input)),\n        encode: () => (input, options) => input instanceof this ? ParseResult.succeed(input) : ParseResult.map(ParseResult.encodeUnknown(typeSide)(input, options), props => new this(props, true))\n      }, {\n        identifier,\n        pretty: pretty => self => `${identifier}(${pretty(self)})`,\n        // @ts-expect-error\n        arbitrary: arb => fc => arb(fc).map(props => new this(props)),\n        equivalence: identity,\n        [AST.SurrogateAnnotationId]: declarationSurrogate.ast,\n        ...typeAnnotations\n      });\n      out = transform(encodedSide, declaration, {\n        strict: true,\n        decode: i => new this(i, true),\n        encode: identity\n      }).annotations({\n        [AST.SurrogateAnnotationId]: transformationSurrogate.ast,\n        ...transformationAnnotations\n      }).ast;\n      astCache.set(this, out);\n      return out;\n    }\n    static pipe() {\n      return pipeArguments(this, arguments);\n    }\n    static annotations(annotations) {\n      return make(this.ast).annotations(annotations);\n    }\n    static toString() {\n      return `(${String(encodedSide)} <-> ${identifier})`;\n    }\n    // ----------------\n    // Class interface\n    // ----------------\n    static make(...args) {\n      return new this(...args);\n    }\n    static fields = {\n      ...fields\n    };\n    static identifier = identifier;\n    static extend(identifier) {\n      return (newFieldsOr, annotations) => {\n        const newFields = getFieldsFromFieldsOr(newFieldsOr);\n        const newSchema = getSchemaFromFieldsOr(newFieldsOr);\n        const extendedFields = extendFields(fields, newFields);\n        return makeClass({\n          kind,\n          identifier,\n          schema: extend(schema, newSchema),\n          fields: extendedFields,\n          Base: this,\n          annotations\n        });\n      };\n    }\n    static transformOrFail(identifier) {\n      return (newFieldsOr, options, annotations) => {\n        const transformedFields = extendFields(fields, newFieldsOr);\n        return makeClass({\n          kind,\n          identifier,\n          schema: transformOrFail(schema, typeSchema(Struct(transformedFields)), options),\n          fields: transformedFields,\n          Base: this,\n          annotations\n        });\n      };\n    }\n    static transformOrFailFrom(identifier) {\n      return (newFields, options, annotations) => {\n        const transformedFields = extendFields(fields, newFields);\n        return makeClass({\n          kind,\n          identifier,\n          schema: transformOrFail(encodedSchema(schema), Struct(transformedFields), options),\n          fields: transformedFields,\n          Base: this,\n          annotations\n        });\n      };\n    }\n    // ----------------\n    // other\n    // ----------------\n    get [classSymbol]() {\n      return classSymbol;\n    }\n  };\n  if (disableToString !== true) {\n    Object.defineProperty(klass.prototype, \"toString\", {\n      value() {\n        return `${identifier}({ ${util_.ownKeys(fields).map(p => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`).join(\", \")} })`;\n      },\n      configurable: true,\n      writable: true\n    });\n  }\n  return klass;\n};\nconst FiberIdNoneEncoded = /*#__PURE__*/Struct({\n  _tag: Literal(\"None\")\n}).annotations({\n  identifier: \"FiberIdNoneEncoded\"\n});\nconst FiberIdRuntimeEncoded = /*#__PURE__*/Struct({\n  _tag: Literal(\"Runtime\"),\n  id: Int,\n  startTimeMillis: Int\n}).annotations({\n  identifier: \"FiberIdRuntimeEncoded\"\n});\nconst FiberIdCompositeEncoded = /*#__PURE__*/Struct({\n  _tag: Literal(\"Composite\"),\n  left: suspend(() => FiberIdEncoded),\n  right: suspend(() => FiberIdEncoded)\n}).annotations({\n  identifier: \"FiberIdCompositeEncoded\"\n});\nconst FiberIdEncoded = /*#__PURE__*/Union(FiberIdNoneEncoded, FiberIdRuntimeEncoded, FiberIdCompositeEncoded).annotations({\n  identifier: \"FiberIdEncoded\"\n});\nconst fiberIdArbitrary = fc => fc.letrec(tie => ({\n  None: fc.record({\n    _tag: fc.constant(\"None\")\n  }),\n  Runtime: fc.record({\n    _tag: fc.constant(\"Runtime\"),\n    id: fc.integer(),\n    startTimeMillis: fc.integer()\n  }),\n  Composite: fc.record({\n    _tag: fc.constant(\"Composite\"),\n    left: tie(\"FiberId\"),\n    right: tie(\"FiberId\")\n  }),\n  FiberId: fc.oneof(tie(\"None\"), tie(\"Runtime\"), tie(\"Composite\"))\n})).FiberId.map(fiberIdDecode);\nconst fiberIdPretty = fiberId => {\n  switch (fiberId._tag) {\n    case \"None\":\n      return \"FiberId.none\";\n    case \"Runtime\":\n      return `FiberId.runtime(${fiberId.id}, ${fiberId.startTimeMillis})`;\n    case \"Composite\":\n      return `FiberId.composite(${fiberIdPretty(fiberId.right)}, ${fiberIdPretty(fiberId.left)})`;\n  }\n};\n/**\n * @category FiberId constructors\n * @since 3.10.0\n */\nexport class FiberIdFromSelf extends /*#__PURE__*/declare(fiberId_.isFiberId, {\n  identifier: \"FiberIdFromSelf\",\n  pretty: () => fiberIdPretty,\n  arbitrary: () => fiberIdArbitrary\n}) {}\nconst fiberIdDecode = input => {\n  switch (input._tag) {\n    case \"None\":\n      return fiberId_.none;\n    case \"Runtime\":\n      return fiberId_.runtime(input.id, input.startTimeMillis);\n    case \"Composite\":\n      return fiberId_.composite(fiberIdDecode(input.left), fiberIdDecode(input.right));\n  }\n};\nconst fiberIdEncode = input => {\n  switch (input._tag) {\n    case \"None\":\n      return {\n        _tag: \"None\"\n      };\n    case \"Runtime\":\n      return {\n        _tag: \"Runtime\",\n        id: input.id,\n        startTimeMillis: input.startTimeMillis\n      };\n    case \"Composite\":\n      return {\n        _tag: \"Composite\",\n        left: fiberIdEncode(input.left),\n        right: fiberIdEncode(input.right)\n      };\n  }\n};\n/**\n * @category FiberId transformations\n * @since 3.10.0\n */\nexport class FiberId extends /*#__PURE__*/transform(FiberIdEncoded, FiberIdFromSelf, {\n  strict: true,\n  decode: i => fiberIdDecode(i),\n  encode: a => fiberIdEncode(a)\n}).annotations({\n  identifier: \"FiberId\"\n}) {}\nconst causeDieEncoded = defect => Struct({\n  _tag: Literal(\"Die\"),\n  defect\n});\nconst CauseEmptyEncoded = /*#__PURE__*/Struct({\n  _tag: /*#__PURE__*/Literal(\"Empty\")\n});\nconst causeFailEncoded = error => Struct({\n  _tag: Literal(\"Fail\"),\n  error\n});\nconst CauseInterruptEncoded = /*#__PURE__*/Struct({\n  _tag: /*#__PURE__*/Literal(\"Interrupt\"),\n  fiberId: FiberIdEncoded\n});\nlet causeEncodedId = 0;\nconst causeEncoded = (error, defect) => {\n  const error_ = asSchema(error);\n  const defect_ = asSchema(defect);\n  const suspended = suspend(() => out);\n  const out = Union(CauseEmptyEncoded, causeFailEncoded(error_), causeDieEncoded(defect_), CauseInterruptEncoded, Struct({\n    _tag: Literal(\"Sequential\"),\n    left: suspended,\n    right: suspended\n  }), Struct({\n    _tag: Literal(\"Parallel\"),\n    left: suspended,\n    right: suspended\n  })).annotations({\n    title: `CauseEncoded<${format(error)}>`,\n    [AST.JSONIdentifierAnnotationId]: `CauseEncoded${causeEncodedId++}`\n  });\n  return out;\n};\nconst causeArbitrary = (error, defect) => fc => fc.letrec(tie => ({\n  Empty: fc.record({\n    _tag: fc.constant(\"Empty\")\n  }),\n  Fail: fc.record({\n    _tag: fc.constant(\"Fail\"),\n    error: error(fc)\n  }),\n  Die: fc.record({\n    _tag: fc.constant(\"Die\"),\n    defect: defect(fc)\n  }),\n  Interrupt: fc.record({\n    _tag: fc.constant(\"Interrupt\"),\n    fiberId: fiberIdArbitrary(fc)\n  }),\n  Sequential: fc.record({\n    _tag: fc.constant(\"Sequential\"),\n    left: tie(\"Cause\"),\n    right: tie(\"Cause\")\n  }),\n  Parallel: fc.record({\n    _tag: fc.constant(\"Parallel\"),\n    left: tie(\"Cause\"),\n    right: tie(\"Cause\")\n  }),\n  Cause: fc.oneof(tie(\"Empty\"), tie(\"Fail\"), tie(\"Die\"), tie(\"Interrupt\"), tie(\"Sequential\"), tie(\"Parallel\"))\n})).Cause.map(causeDecode);\nconst causePretty = error => cause => {\n  const f = cause => {\n    switch (cause._tag) {\n      case \"Empty\":\n        return \"Cause.empty\";\n      case \"Fail\":\n        return `Cause.fail(${error(cause.error)})`;\n      case \"Die\":\n        return `Cause.die(${cause_.pretty(cause)})`;\n      case \"Interrupt\":\n        return `Cause.interrupt(${fiberIdPretty(cause.fiberId)})`;\n      case \"Sequential\":\n        return `Cause.sequential(${f(cause.left)}, ${f(cause.right)})`;\n      case \"Parallel\":\n        return `Cause.parallel(${f(cause.left)}, ${f(cause.right)})`;\n    }\n  };\n  return f(cause);\n};\nconst causeParse = decodeUnknown => (u, options, ast) => cause_.isCause(u) ? toComposite(decodeUnknown(causeEncode(u), options), causeDecode, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category Cause transformations\n * @since 3.10.0\n */\nexport const CauseFromSelf = ({\n  defect,\n  error\n}) => {\n  return declare([error, defect], {\n    decode: (error, defect) => causeParse(ParseResult.decodeUnknown(causeEncoded(error, defect))),\n    encode: (error, defect) => causeParse(ParseResult.encodeUnknown(causeEncoded(error, defect)))\n  }, {\n    title: `Cause<${error.ast}>`,\n    pretty: causePretty,\n    arbitrary: causeArbitrary\n  });\n};\nfunction causeDecode(cause) {\n  switch (cause._tag) {\n    case \"Empty\":\n      return cause_.empty;\n    case \"Fail\":\n      return cause_.fail(cause.error);\n    case \"Die\":\n      return cause_.die(cause.defect);\n    case \"Interrupt\":\n      return cause_.interrupt(fiberIdDecode(cause.fiberId));\n    case \"Sequential\":\n      return cause_.sequential(causeDecode(cause.left), causeDecode(cause.right));\n    case \"Parallel\":\n      return cause_.parallel(causeDecode(cause.left), causeDecode(cause.right));\n  }\n}\nfunction causeEncode(cause) {\n  switch (cause._tag) {\n    case \"Empty\":\n      return {\n        _tag: \"Empty\"\n      };\n    case \"Fail\":\n      return {\n        _tag: \"Fail\",\n        error: cause.error\n      };\n    case \"Die\":\n      return {\n        _tag: \"Die\",\n        defect: cause.defect\n      };\n    case \"Interrupt\":\n      return {\n        _tag: \"Interrupt\",\n        fiberId: cause.fiberId\n      };\n    case \"Sequential\":\n      return {\n        _tag: \"Sequential\",\n        left: causeEncode(cause.left),\n        right: causeEncode(cause.right)\n      };\n    case \"Parallel\":\n      return {\n        _tag: \"Parallel\",\n        left: causeEncode(cause.left),\n        right: causeEncode(cause.right)\n      };\n  }\n}\n/**\n * @category Cause transformations\n * @since 3.10.0\n */\nexport const Cause = ({\n  defect,\n  error\n}) => {\n  const error_ = asSchema(error);\n  const defect_ = asSchema(defect);\n  const out = transform(causeEncoded(error_, defect_), CauseFromSelf({\n    error: typeSchema(error_),\n    defect: typeSchema(defect_)\n  }), {\n    strict: false,\n    decode: i => causeDecode(i),\n    encode: a => causeEncode(a)\n  });\n  return out;\n};\n/**\n * Defines a schema for handling JavaScript errors (`Error` instances) and other types of defects.\n * It decodes objects into Error instances if they match the expected structure (i.e., have a `message` and optionally a `name` and `stack`),\n * or converts other values to their string representations.\n *\n * When encoding, it converts `Error` instances back into plain objects containing only the error's name and message,\n * or other values into their string forms.\n *\n * This is useful for serializing and deserializing errors across network boundaries where error objects do not natively serialize.\n *\n * @category defect\n * @since 3.10.0\n */\nexport class Defect extends /*#__PURE__*/transform(Unknown, Unknown, {\n  strict: true,\n  decode: i => {\n    if (Predicate.isObject(i) && \"message\" in i && typeof i.message === \"string\") {\n      const err = new Error(i.message, {\n        cause: i\n      });\n      if (\"name\" in i && typeof i.name === \"string\") {\n        err.name = i.name;\n      }\n      err.stack = \"stack\" in i && typeof i.stack === \"string\" ? i.stack : \"\";\n      return err;\n    }\n    return String(i);\n  },\n  encode: a => {\n    if (a instanceof Error) {\n      return {\n        name: a.name,\n        message: a.message\n        // no stack because of security reasons\n      };\n    }\n    return internalCause_.prettyErrorMessage(a);\n  }\n}).annotations({\n  identifier: \"Defect\"\n}) {}\nconst exitFailureEncoded = (error, defect) => Struct({\n  _tag: Literal(\"Failure\"),\n  cause: causeEncoded(error, defect)\n});\nconst exitSuccessEncoded = value => Struct({\n  _tag: Literal(\"Success\"),\n  value\n});\nconst exitEncoded = (value, error, defect) => {\n  return Union(exitFailureEncoded(error, defect), exitSuccessEncoded(value)).annotations({\n    title: `ExitEncoded<${format(value)}, ${format(error)}, ${format(defect)}>`\n  });\n};\nconst exitDecode = input => {\n  switch (input._tag) {\n    case \"Failure\":\n      return exit_.failCause(causeDecode(input.cause));\n    case \"Success\":\n      return exit_.succeed(input.value);\n  }\n};\nconst exitArbitrary = (value, error, defect) => fc => fc.oneof(fc.record({\n  _tag: fc.constant(\"Failure\"),\n  cause: causeArbitrary(error, defect)(fc)\n}), fc.record({\n  _tag: fc.constant(\"Success\"),\n  value: value(fc)\n})).map(exitDecode);\nconst exitPretty = (value, error) => exit => exit._tag === \"Failure\" ? `Exit.failCause(${causePretty(error)(exit.cause)})` : `Exit.succeed(${value(exit.value)})`;\nconst exitParse = (decodeUnknownValue, decodeUnknownCause) => (u, options, ast) => exit_.isExit(u) ? exit_.match(u, {\n  onFailure: cause => toComposite(decodeUnknownCause(cause, options), exit_.failCause, ast, u),\n  onSuccess: value => toComposite(decodeUnknownValue(value, options), exit_.succeed, ast, u)\n}) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category Exit transformations\n * @since 3.10.0\n */\nexport const ExitFromSelf = ({\n  defect,\n  failure,\n  success\n}) => declare([success, failure, defect], {\n  decode: (success, failure, defect) => exitParse(ParseResult.decodeUnknown(success), ParseResult.decodeUnknown(CauseFromSelf({\n    error: failure,\n    defect\n  }))),\n  encode: (success, failure, defect) => exitParse(ParseResult.encodeUnknown(success), ParseResult.encodeUnknown(CauseFromSelf({\n    error: failure,\n    defect\n  })))\n}, {\n  title: `Exit<${success.ast}, ${failure.ast}>`,\n  pretty: exitPretty,\n  arbitrary: exitArbitrary\n});\n/**\n * @category Exit transformations\n * @since 3.10.0\n */\nexport const Exit = ({\n  defect,\n  failure,\n  success\n}) => {\n  const success_ = asSchema(success);\n  const failure_ = asSchema(failure);\n  const defect_ = asSchema(defect);\n  const out = transform(exitEncoded(success_, failure_, defect_), ExitFromSelf({\n    failure: typeSchema(failure_),\n    success: typeSchema(success_),\n    defect: typeSchema(defect_)\n  }), {\n    strict: false,\n    decode: i => exitDecode(i),\n    encode: a => a._tag === \"Failure\" ? {\n      _tag: \"Failure\",\n      cause: a.cause\n    } : {\n      _tag: \"Success\",\n      value: a.value\n    }\n  });\n  return out;\n};\nconst hashSetArbitrary = (item, ctx) => fc => {\n  const items = fc.array(item(fc));\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(hashSet_.fromIterable);\n};\nconst hashSetPretty = item => set => `HashSet(${Array.from(set).map(a => item(a)).join(\", \")})`;\nconst hashSetEquivalence = item => {\n  const arrayEquivalence = array_.getEquivalence(item);\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));\n};\nconst hashSetParse = decodeUnknown => (u, options, ast) => hashSet_.isHashSet(u) ? toComposite(decodeUnknown(Array.from(u), options), hashSet_.fromIterable, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category HashSet transformations\n * @since 3.10.0\n */\nexport const HashSetFromSelf = value => {\n  return declare([value], {\n    decode: item => hashSetParse(ParseResult.decodeUnknown(Array$(item))),\n    encode: item => hashSetParse(ParseResult.encodeUnknown(Array$(item)))\n  }, {\n    description: `HashSet<${format(value)}>`,\n    pretty: hashSetPretty,\n    arbitrary: hashSetArbitrary,\n    equivalence: hashSetEquivalence\n  });\n};\n/**\n * @category HashSet transformations\n * @since 3.10.0\n */\nexport function HashSet(value) {\n  return transform(Array$(value), HashSetFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => hashSet_.fromIterable(i),\n    encode: a => Array.from(a)\n  });\n}\nconst hashMapArbitrary = (key, value, ctx) => fc => {\n  const items = fc.array(fc.tuple(key(fc), value(fc)));\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(hashMap_.fromIterable);\n};\nconst hashMapPretty = (key, value) => map => `HashMap([${Array.from(map).map(([k, v]) => `[${key(k)}, ${value(v)}]`).join(\", \")}])`;\nconst hashMapEquivalence = (key, value) => {\n  const arrayEquivalence = array_.getEquivalence(Equivalence.make(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb)));\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));\n};\nconst hashMapParse = decodeUnknown => (u, options, ast) => hashMap_.isHashMap(u) ? toComposite(decodeUnknown(Array.from(u), options), hashMap_.fromIterable, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category HashMap transformations\n * @since 3.10.0\n */\nexport const HashMapFromSelf = ({\n  key,\n  value\n}) => {\n  return declare([key, value], {\n    decode: (key, value) => hashMapParse(ParseResult.decodeUnknown(Array$(Tuple(key, value)))),\n    encode: (key, value) => hashMapParse(ParseResult.encodeUnknown(Array$(Tuple(key, value))))\n  }, {\n    description: `HashMap<${format(key)}, ${format(value)}>`,\n    pretty: hashMapPretty,\n    arbitrary: hashMapArbitrary,\n    equivalence: hashMapEquivalence\n  });\n};\n/**\n * @category HashMap transformations\n * @since 3.10.0\n */\nexport const HashMap = ({\n  key,\n  value\n}) => {\n  return transform(Array$(Tuple(key, value)), HashMapFromSelf({\n    key: typeSchema(asSchema(key)),\n    value: typeSchema(asSchema(value))\n  }), {\n    strict: true,\n    decode: i => hashMap_.fromIterable(i),\n    encode: a => Array.from(a)\n  });\n};\nconst listArbitrary = (item, ctx) => fc => {\n  const items = fc.array(item(fc));\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(list_.fromIterable);\n};\nconst listPretty = item => set => `List(${Array.from(set).map(a => item(a)).join(\", \")})`;\nconst listEquivalence = item => {\n  const arrayEquivalence = array_.getEquivalence(item);\n  return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));\n};\nconst listParse = decodeUnknown => (u, options, ast) => list_.isList(u) ? toComposite(decodeUnknown(Array.from(u), options), list_.fromIterable, ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category List transformations\n * @since 3.10.0\n */\nexport const ListFromSelf = value => {\n  return declare([value], {\n    decode: item => listParse(ParseResult.decodeUnknown(Array$(item))),\n    encode: item => listParse(ParseResult.encodeUnknown(Array$(item)))\n  }, {\n    description: `List<${format(value)}>`,\n    pretty: listPretty,\n    arbitrary: listArbitrary,\n    equivalence: listEquivalence\n  });\n};\n/**\n * @category List transformations\n * @since 3.10.0\n */\nexport function List(value) {\n  return transform(Array$(value), ListFromSelf(typeSchema(asSchema(value))), {\n    strict: true,\n    decode: i => list_.fromIterable(i),\n    encode: a => Array.from(a)\n  });\n}\nconst sortedSetArbitrary = (item, ord, ctx) => fc => {\n  const items = fc.array(item(fc));\n  return (ctx.depthIdentifier !== undefined ? fc.oneof(ctx, fc.constant([]), items) : items).map(as => sortedSet_.fromIterable(as, ord));\n};\nconst sortedSetPretty = item => set => `new SortedSet([${Array.from(sortedSet_.values(set)).map(a => item(a)).join(\", \")}])`;\nconst sortedSetParse = (decodeUnknown, ord) => (u, options, ast) => sortedSet_.isSortedSet(u) ? toComposite(decodeUnknown(Array.from(sortedSet_.values(u)), options), as => sortedSet_.fromIterable(as, ord), ast, u) : ParseResult.fail(new ParseResult.Type(ast, u));\n/**\n * @category SortedSet transformations\n * @since 3.10.0\n */\nexport const SortedSetFromSelf = (value, ordA, ordI) => {\n  return declare([value], {\n    decode: item => sortedSetParse(ParseResult.decodeUnknown(Array$(item)), ordA),\n    encode: item => sortedSetParse(ParseResult.encodeUnknown(Array$(item)), ordI)\n  }, {\n    description: `SortedSet<${format(value)}>`,\n    pretty: sortedSetPretty,\n    arbitrary: (arb, ctx) => sortedSetArbitrary(arb, ordA, ctx),\n    equivalence: () => sortedSet_.getEquivalence()\n  });\n};\n/**\n * @category SortedSet transformations\n * @since 3.10.0\n */\nexport function SortedSet(value, ordA) {\n  const to = typeSchema(asSchema(value));\n  return transform(Array$(value), SortedSetFromSelf(to, ordA, ordA), {\n    strict: true,\n    decode: i => sortedSet_.fromIterable(i, ordA),\n    encode: a => Array.from(sortedSet_.values(a))\n  });\n}\n/**\n * Converts an arbitrary value to a `boolean` by testing whether it is truthy.\n * Uses `!!val` to coerce the value to a `boolean`.\n *\n * @see https://developer.mozilla.org/docs/Glossary/Truthy\n *\n * @category boolean constructors\n * @since 3.10.0\n */\nexport class BooleanFromUnknown extends /*#__PURE__*/transform(Unknown, Boolean$, {\n  strict: true,\n  decode: i => Predicate.isTruthy(i),\n  encode: identity\n}).annotations({\n  identifier: \"BooleanFromUnknown\"\n}) {}\n/**\n * Converts an `string` value into its corresponding `boolean`\n * (\"true\" as `true` and \"false\" as `false`).\n *\n * @category boolean transformations\n * @since 3.11.0\n */\nexport class BooleanFromString extends /*#__PURE__*/transform(Literal(\"true\", \"false\").annotations({\n  description: \"a string to be decoded into a boolean\"\n}), Boolean$, {\n  strict: true,\n  decode: i => i === \"true\",\n  encode: a => a ? \"true\" : \"false\"\n}).annotations({\n  identifier: \"BooleanFromString\"\n}) {}\n/**\n * @category Config validations\n * @since 3.10.0\n */\nexport const Config = (name, schema) => {\n  const decodeUnknownEither = ParseResult.decodeUnknownEither(schema);\n  return config_.string(name).pipe(config_.mapOrFail(s => decodeUnknownEither(s).pipe(either_.mapLeft(error => configError_.InvalidData([], ParseResult.TreeFormatter.formatIssueSync(error))))));\n};\n// ---------------------------------------------\n// Serializable\n// ---------------------------------------------\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const symbolSerializable = /*#__PURE__*/Symbol.for(\"effect/Schema/Serializable/symbol\");\n/**\n * @since 3.10.0\n */\nexport const asSerializable = serializable => serializable;\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const serializableSchema = self => self[symbolSerializable];\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serialize = self => encodeUnknown(self[symbolSerializable])(self);\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserialize = /*#__PURE__*/dual(2, (self, value) => decodeUnknown(self[symbolSerializable])(value));\n/**\n * @since 3.10.0\n * @category symbol\n */\nexport const symbolWithResult = /*#__PURE__*/Symbol.for(\"effect/Schema/Serializable/symbolResult\");\n/**\n * @since 3.10.0\n */\nexport const asWithResult = withExit => withExit;\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const failureSchema = self => self[symbolWithResult].failure;\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const successSchema = self => self[symbolWithResult].success;\nconst exitSchemaCache = /*#__PURE__*/globalValue(\"effect/Schema/Serializable/exitSchemaCache\", () => new WeakMap());\n/**\n * @since 3.10.0\n * @category accessor\n */\nexport const exitSchema = self => {\n  const proto = Object.getPrototypeOf(self);\n  if (!(symbolWithResult in proto)) {\n    return Exit({\n      failure: failureSchema(self),\n      success: successSchema(self),\n      defect: Defect\n    });\n  }\n  let schema = exitSchemaCache.get(proto);\n  if (schema === undefined) {\n    schema = Exit({\n      failure: failureSchema(self),\n      success: successSchema(self),\n      defect: Defect\n    });\n    exitSchemaCache.set(proto, schema);\n  }\n  return schema;\n};\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serializeFailure = /*#__PURE__*/dual(2, (self, value) => encode(self[symbolWithResult].failure)(value));\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserializeFailure = /*#__PURE__*/dual(2, (self, value) => decodeUnknown(self[symbolWithResult].failure)(value));\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serializeSuccess = /*#__PURE__*/dual(2, (self, value) => encode(self[symbolWithResult].success)(value));\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserializeSuccess = /*#__PURE__*/dual(2, (self, value) => decodeUnknown(self[symbolWithResult].success)(value));\n/**\n * @since 3.10.0\n * @category encoding\n */\nexport const serializeExit = /*#__PURE__*/dual(2, (self, value) => encode(exitSchema(self))(value));\n/**\n * @since 3.10.0\n * @category decoding\n */\nexport const deserializeExit = /*#__PURE__*/dual(2, (self, value) => decodeUnknown(exitSchema(self))(value));\n/**\n * @since 3.10.0\n */\nexport const asSerializableWithResult = procedure => procedure;\n/**\n * @example\n * ```ts\n * import { Schema } from \"effect\"\n *\n * class MyRequest extends Schema.TaggedRequest<MyRequest>(\"MyRequest\")(\"MyRequest\", {\n *  failure: Schema.String,\n *  success: Schema.Number,\n *  payload: { id: Schema.String }\n * }) {}\n * ```\n *\n * @category classes\n * @since 3.10.0\n */\nexport const TaggedRequest = identifier => (tag, options, annotations) => {\n  const taggedFields = extendFields({\n    _tag: getClassTag(tag)\n  }, options.payload);\n  return class TaggedRequestClass extends makeClass({\n    kind: \"TaggedRequest\",\n    identifier: identifier ?? tag,\n    schema: Struct(taggedFields),\n    fields: taggedFields,\n    Base: Request.Class,\n    annotations\n  }) {\n    static _tag = tag;\n    static success = options.success;\n    static failure = options.failure;\n    get [symbolSerializable]() {\n      return this.constructor;\n    }\n    get [symbolWithResult]() {\n      return {\n        failure: options.failure,\n        success: options.success\n      };\n    }\n  };\n};\n// -------------------------------------------------------------------------------------------------\n// Equivalence compiler\n// -------------------------------------------------------------------------------------------------\n/**\n * Given a schema `Schema<A, I, R>`, returns an `Equivalence` instance for `A`.\n *\n * @category Equivalence\n * @since 3.10.0\n */\nexport const equivalence = schema => go(schema.ast, []);\nconst getEquivalenceAnnotation = /*#__PURE__*/AST.getAnnotation(AST.EquivalenceAnnotationId);\nconst go = (ast, path) => {\n  const hook = getEquivalenceAnnotation(ast);\n  if (option_.isSome(hook)) {\n    switch (ast._tag) {\n      case \"Declaration\":\n        return hook.value(...ast.typeParameters.map(tp => go(tp, path)));\n      case \"Refinement\":\n        return hook.value(go(ast.from, path));\n      default:\n        return hook.value();\n    }\n  }\n  switch (ast._tag) {\n    case \"NeverKeyword\":\n      throw new Error(errors_.getEquivalenceUnsupportedErrorMessage(ast, path));\n    case \"Transformation\":\n      return go(ast.to, path);\n    case \"Declaration\":\n    case \"Literal\":\n    case \"StringKeyword\":\n    case \"TemplateLiteral\":\n    case \"UniqueSymbol\":\n    case \"SymbolKeyword\":\n    case \"UnknownKeyword\":\n    case \"AnyKeyword\":\n    case \"NumberKeyword\":\n    case \"BooleanKeyword\":\n    case \"BigIntKeyword\":\n    case \"UndefinedKeyword\":\n    case \"VoidKeyword\":\n    case \"Enums\":\n    case \"ObjectKeyword\":\n      return Equal.equals;\n    case \"Refinement\":\n      return go(ast.from, path);\n    case \"Suspend\":\n      {\n        const get = util_.memoizeThunk(() => go(ast.f(), path));\n        return (a, b) => get()(a, b);\n      }\n    case \"TupleType\":\n      {\n        const elements = ast.elements.map((element, i) => go(element.type, path.concat(i)));\n        const rest = ast.rest.map(annotatedAST => go(annotatedAST.type, path));\n        return Equivalence.make((a, b) => {\n          const len = a.length;\n          if (len !== b.length) {\n            return false;\n          }\n          // ---------------------------------------------\n          // handle elements\n          // ---------------------------------------------\n          let i = 0;\n          for (; i < Math.min(len, ast.elements.length); i++) {\n            if (!elements[i](a[i], b[i])) {\n              return false;\n            }\n          }\n          // ---------------------------------------------\n          // handle rest element\n          // ---------------------------------------------\n          if (array_.isNonEmptyReadonlyArray(rest)) {\n            const [head, ...tail] = rest;\n            for (; i < len - tail.length; i++) {\n              if (!head(a[i], b[i])) {\n                return false;\n              }\n            }\n            // ---------------------------------------------\n            // handle post rest elements\n            // ---------------------------------------------\n            for (let j = 0; j < tail.length; j++) {\n              i += j;\n              if (!tail[j](a[i], b[i])) {\n                return false;\n              }\n            }\n          }\n          return true;\n        });\n      }\n    case \"TypeLiteral\":\n      {\n        if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {\n          return Equal.equals;\n        }\n        const propertySignatures = ast.propertySignatures.map(ps => go(ps.type, path.concat(ps.name)));\n        const indexSignatures = ast.indexSignatures.map(is => go(is.type, path));\n        return Equivalence.make((a, b) => {\n          const aStringKeys = Object.keys(a);\n          const aSymbolKeys = Object.getOwnPropertySymbols(a);\n          // ---------------------------------------------\n          // handle property signatures\n          // ---------------------------------------------\n          for (let i = 0; i < propertySignatures.length; i++) {\n            const ps = ast.propertySignatures[i];\n            const name = ps.name;\n            const aHas = Object.prototype.hasOwnProperty.call(a, name);\n            const bHas = Object.prototype.hasOwnProperty.call(b, name);\n            if (ps.isOptional) {\n              if (aHas !== bHas) {\n                return false;\n              }\n            }\n            if (aHas && bHas && !propertySignatures[i](a[name], b[name])) {\n              return false;\n            }\n          }\n          // ---------------------------------------------\n          // handle index signatures\n          // ---------------------------------------------\n          let bSymbolKeys;\n          let bStringKeys;\n          for (let i = 0; i < indexSignatures.length; i++) {\n            const is = ast.indexSignatures[i];\n            const encodedParameter = AST.getEncodedParameter(is.parameter);\n            const isSymbol = AST.isSymbolKeyword(encodedParameter);\n            if (isSymbol) {\n              bSymbolKeys = bSymbolKeys || Object.getOwnPropertySymbols(b);\n              if (aSymbolKeys.length !== bSymbolKeys.length) {\n                return false;\n              }\n            } else {\n              bStringKeys = bStringKeys || Object.keys(b);\n              if (aStringKeys.length !== bStringKeys.length) {\n                return false;\n              }\n            }\n            const aKeys = isSymbol ? aSymbolKeys : aStringKeys;\n            for (let j = 0; j < aKeys.length; j++) {\n              const key = aKeys[j];\n              if (!Object.prototype.hasOwnProperty.call(b, key) || !indexSignatures[i](a[key], b[key])) {\n                return false;\n              }\n            }\n          }\n          return true;\n        });\n      }\n    case \"Union\":\n      {\n        const searchTree = ParseResult.getSearchTree(ast.types, true);\n        const ownKeys = util_.ownKeys(searchTree.keys);\n        const len = ownKeys.length;\n        return Equivalence.make((a, b) => {\n          let candidates = [];\n          if (len > 0 && Predicate.isRecordOrArray(a)) {\n            for (let i = 0; i < len; i++) {\n              const name = ownKeys[i];\n              const buckets = searchTree.keys[name].buckets;\n              if (Object.prototype.hasOwnProperty.call(a, name)) {\n                const literal = String(a[name]);\n                if (Object.prototype.hasOwnProperty.call(buckets, literal)) {\n                  candidates = candidates.concat(buckets[literal]);\n                }\n              }\n            }\n          }\n          if (searchTree.otherwise.length > 0) {\n            candidates = candidates.concat(searchTree.otherwise);\n          }\n          const tuples = candidates.map(ast => [go(ast, path), ParseResult.is({\n            ast\n          })]);\n          for (let i = 0; i < tuples.length; i++) {\n            const [equivalence, is] = tuples[i];\n            if (is(a) && is(b)) {\n              if (equivalence(a, b)) {\n                return true;\n              }\n            }\n          }\n          return false;\n        });\n      }\n  }\n};\nconst SymbolStruct = /*#__PURE__*/TaggedStruct(\"symbol\", {\n  key: String$\n}).annotations({\n  description: \"an object to be decoded into a globally shared symbol\"\n});\nconst SymbolFromStruct = /*#__PURE__*/transformOrFail(SymbolStruct, SymbolFromSelf, {\n  strict: true,\n  decode: i => decodeSymbol(i.key),\n  encode: (a, _, ast) => ParseResult.map(encodeSymbol(a, ast), key => SymbolStruct.make({\n    key\n  }))\n});\n/** @ignore */\nclass PropertyKey$ extends /*#__PURE__*/Union(String$, Number$, SymbolFromStruct).annotations({\n  identifier: \"PropertyKey\"\n}) {}\nexport {\n/**\n * @since 3.12.5\n */\nPropertyKey$ as PropertyKey };\n/**\n * @category ArrayFormatter\n * @since 3.12.5\n */\nexport class ArrayFormatterIssue extends /*#__PURE__*/Struct({\n  _tag: propertySignature(Literal(\"Pointer\", \"Unexpected\", \"Missing\", \"Composite\", \"Refinement\", \"Transformation\", \"Type\", \"Forbidden\")).annotations({\n    description: \"The tag identifying the type of parse issue\"\n  }),\n  path: propertySignature(Array$(PropertyKey$)).annotations({\n    description: \"The path to the property where the issue occurred\"\n  }),\n  message: propertySignature(String$).annotations({\n    description: \"A descriptive message explaining the issue\"\n  })\n}).annotations({\n  identifier: \"ArrayFormatterIssue\",\n  description: \"Represents an issue returned by the ArrayFormatter formatter\"\n}) {}\n//# sourceMappingURL=Schema.js.map","import type { LocalProfileSchema, SocialLinkSchema } from \"@/schemas/about\"\nimport type { LanguageId } from \"@/schemas/common\"\nimport { Option } from \"effect\"\n\nconst defaultFullName = \"Akira Komamura\"\n\nexport type SocialLink = typeof SocialLinkSchema.Type\n\nexport type LocalProfile = typeof LocalProfileSchema.Type\n\nexport function getLocalProfile(lang: LanguageId): Option.Option<LocalProfile> {\n  switch (lang) {\n    case \"en\": {\n      return Option.some({\n        fullName: defaultFullName,\n        socialLinks: [],\n      })\n    }\n\n    case \"ja\": {\n      return Option.some({\n        fullName: defaultFullName,\n        socialLinks: [],\n      })\n    }\n\n    default: {\n      return Option.none() as Option.Option<LocalProfile>\n    }\n  }\n}\n","import type { LanguageId } from \"@/schemas/common\"\nimport { createFileRoute, notFound } from \"@tanstack/react-router\"\nimport { Option, pipe } from \"effect\"\nimport { getLocalProfile } from \"@/collections/about\"\n\nexport const Route = createFileRoute(\"/about/$lang\")({\n  component: AboutComponent,\n  loader: ({ params }) => {\n    return {\n      localProfile: pipe(\n        getLocalProfile(params.lang as LanguageId),\n        Option.getOrThrowWith(() => notFound()),\n      ),\n    }\n  },\n})\n\nfunction AboutComponent() {\n  const { localProfile: { fullName } } = Route.useLoaderData()\n\n  // Generate unique IDs for aria-labelledby\n  const profileHeadingId = \"profile-heading\"\n  const socialAccountsHeadingId = \"social-accounts-heading\"\n  const publishingPlatformsHeadingId = \"publishing-platforms-heading\"\n  const receivingSponsorshipHeadingId = \"receiving-sponsorship-heading\"\n  const givingSponsorshipHeadingId = \"giving-sponsorship-heading\"\n  const websiteInfoHeadingId = \"website-info-heading\"\n  const nameOriginHeadingId = \"name-origin-heading\"\n  const websitePurposeHeadingId = \"website-purpose-heading\"\n  const localizedInfoHeadingId = \"localized-info-heading\"\n  const localSocialAccountsHeadingId = \"local-social-accounts-heading\"\n\n  return (\n    <main aria-labelledby=\"page-heading\">\n      <h1 id=\"page-heading\">About the author</h1>\n\n      <div className=\"profile-container\">\n        {/* Use section for better semantics */}\n        <section aria-labelledby={profileHeadingId} className=\"profile-info\">\n          <h2 id={profileHeadingId}>{fullName}</h2>\n          <p>\n            <strong>Location:</strong>\n            {\" \"}\n            My Current Location (e.g., City, Country)\n          </p>\n        </section>\n\n        {/* Use section for social accounts */}\n        <section aria-labelledby={socialAccountsHeadingId} className=\"social-accounts\">\n          <h3 id={socialAccountsHeadingId}>Social Accounts</h3>\n          {/* Subsections for clarity */}\n          <section aria-labelledby={publishingPlatformsHeadingId}>\n            <h4 id={publishingPlatformsHeadingId}>Publishing Platforms</h4>\n            <ul>\n              <li>\n                {/* Replace comment with actual SVG */}\n                <a href=\"#github-link\" aria-label=\"GitHub Profile\">\n                  {/* SVG for GitHub */}\n                </a>\n              </li>\n              <li>\n                {/* Replace comment with actual SVG */}\n                <a href=\"#blog-link\" aria-label=\"Personal Blog\">\n                  {/* SVG for Personal Blog */}\n                </a>\n              </li>\n              {/* Add other publishing platforms as needed, using SVG icons */}\n            </ul>\n          </section>\n          <section aria-labelledby={receivingSponsorshipHeadingId}>\n            <h4 id={receivingSponsorshipHeadingId}>Sponsorship Platforms (Receiving)</h4>\n            <p>Currently not receiving sponsorships.</p>\n            {/* Or list platforms if applicable, using SVG icons */}\n          </section>\n          <section aria-labelledby={givingSponsorshipHeadingId}>\n            <h4 id={givingSponsorshipHeadingId}>Sponsorship Platforms (Giving)</h4>\n            <ul>\n              <li>\n                {/* Replace comment with actual SVG */}\n                <a href=\"#sponsor-link-1\" aria-label=\"Sponsored Project/Person 1\">\n                  {/* SVG for Sponsorship Link 1 */}\n                </a>\n              </li>\n              {/* Add other sponsored links as needed, using SVG icons */}\n            </ul>\n          </section>\n        </section>\n\n        {/* Use section for website info */}\n        <section aria-labelledby={websiteInfoHeadingId} className=\"website-info\">\n          <h3 id={websiteInfoHeadingId}>Website Information</h3>\n          <section aria-labelledby={nameOriginHeadingId}>\n            <h4 id={nameOriginHeadingId}>Name Origin</h4>\n            <p>Explanation of how the website got its name.</p>\n          </section>\n          <section aria-labelledby={websitePurposeHeadingId}>\n            <h4 id={websitePurposeHeadingId}>Website Purpose</h4>\n            <p>Description of what this portfolio/blog aims to achieve.</p>\n          </section>\n        </section>\n\n        {/* Use section for localized info */}\n        <section aria-labelledby={localizedInfoHeadingId} className=\"localized-info\">\n          <h3 id={localizedInfoHeadingId}>Description (Localized)</h3>\n          <p>\n            Optional biographical description in the current display language.\n            Lorem ipsum dolor sit amet...\n          </p>\n        </section>\n\n        {/* Use section for local social accounts */}\n        <section aria-labelledby={localSocialAccountsHeadingId} className=\"local-social-accounts\">\n          <h3 id={localSocialAccountsHeadingId}>Local Social Accounts (Optional)</h3>\n          <ul>\n            <li>\n              {/* Replace comment with actual SVG */}\n              <a href=\"#local-social-link-1\" aria-label=\"Local Platform 1\">\n                {/* SVG for Local Platform 1 */}\n              </a>\n            </li>\n            {/* Add other local social accounts if applicable, using SVG icons */}\n          </ul>\n        </section>\n      </div>\n    </main>\n  )\n}\n","import { createFileRoute, Outlet } from \"@tanstack/react-router\"\n\nexport const Route = createFileRoute(\"/_blog/_archive\")({\n  component: ArchiveLayout,\n})\n\nfunction ArchiveLayout() {\n  return (\n    <>\n      <header>\n        Archive\n      </header>\n\n      <Outlet />\n    </>\n  )\n}\n","export default {}","import { Option, Schema } from \"effect\"\n\n/**\n * Schema for a language code, e.g. \"en\". To prevent errors caused by mistyping,\n * only supported languages are accepted in this schema.\n */\nexport const LanguageIdSchema = Schema.String.pipe(\n  Schema.filter(lang => [\"en\", \"ja\"].includes(lang)),\n)\n\nexport type LanguageId = typeof LanguageIdSchema.Type\n\n/**\n * Schema for information on a natural language used in this site.\n */\nexport const LanguagePropertiesSchema = Schema.Struct({\n  id: LanguageIdSchema,\n  localName: Schema.String,\n  englishName: Schema.optional(Schema.String),\n})\n\n/**\n * Schema for a generic slug type. You can create a branded type from this for\n * slugs for a specific collection type.\n */\nexport const GenericSlugSchema = Schema.String.pipe(\n  Schema.nonEmptyString(),\n  Schema.trimmed(),\n  Schema.lowercased(),\n)\n\n/**\n * Schema for date and time format that is used across this project.\n */\nconst DateFromISOString = Schema.DateFromString\n\n/**\n * Schema for an optional date field in a struct.\n */\nexport const OptionalDateSchema = Schema.optionalWith(\n  DateFromISOString,\n  {\n    as: \"Option\",\n    nullable: true,\n    onNoneEncoding: () => Option.some(null),\n  },\n)\n","import { Option, Schema } from \"effect\"\nimport { GenericSlugSchema, LanguageIdSchema, OptionalDateSchema } from \"./common\"\n\nexport const PostSlugSchema = GenericSlugSchema.pipe(\n  Schema.brand(\"PostSlug\"),\n)\n\n/**\n * Schema for the entire post.\n */\nexport const PostSchema = Schema.Struct({\n  fileName: Schema.String,\n  slug: PostSlugSchema,\n  title: Schema.String,\n  language: LanguageIdSchema,\n  // category: Schema.optional(Schema.String),\n  // tags: Schema.Array(Schema.String),\n  publicationDate: OptionalDateSchema,\n  draft: Schema.optionalWith(\n    Schema.Boolean,\n    {\n      default: () => false,\n      nullable: true,\n    },\n  ),\n  hastBody: Schema.Any,\n})\n\n/**\n * Schema for the metadata of a post which corresponds to the YAML header.\n */\nexport const PostMetadataSchema = PostSchema.omit(\"hastBody\").pipe(\n  Schema.filter(\n    (meta) => {\n      if (!meta.draft && Option.isNone(meta.publicationDate)) {\n        return {\n          path: [\"publicationDate\"],\n          message: \"A non-draft post must have a publicationDate metadata. Set the metadata, or set the draft status to true\",\n        }\n      }\n    },\n  ),\n)\n","export function isRunningInDeno() {\n  return \"Deno\" in globalThis\n}\n\nexport function isRunningInBrowser() {\n  return typeof globalThis.window !== \"undefined\" && typeof document !== \"undefined\"\n}\n","import type { Pagination } from \"./pagination\"\nimport events from \"node:events\"\nimport * as fs from \"node:fs\"\nimport * as fsPromise from \"node:fs/promises\"\nimport * as path from \"node:path\"\nimport readline from \"node:readline\"\nimport * as url from \"node:url\"\nimport { Option, pipe, Schema } from \"effect\"\nimport { isRunningInBrowser, isRunningInDeno } from \"./env\"\n\n/**\n * Returns a path to the data directory for SSR. Data files are only available\n * on the server, so this value is set to null on browser.\n */\nfunction getDataDir() {\n  if (isRunningInBrowser()) {\n    throw new Error(`Server data is not available inside browser`)\n  }\n  else if (isRunningInDeno()) {\n    // In the production enviroment of Deno Deploy, The data directory should be\n    // copied to .output directory. The working directory will be directly under\n    // .output.\n    return \"data\"\n  }\n  else {\n    const __filename = url.fileURLToPath(import.meta.url)\n    const __dirname = path.dirname(__filename)\n    // Top-level directory in the repository\n    return path.join(__dirname, \"../../data\")\n  }\n}\n\n/**\n * Read a JSON file in the data directory.\n *\n * If the file doesn't exist, the function returns None.\n */\nexport async function readJsonDataFile<T>(filePath: string): Promise<Option.Option<T>> {\n  const fullPath = path.join(getDataDir(), filePath)\n  if (fs.existsSync(fullPath)) {\n    return pipe(\n      (await fsPromise.readFile(fullPath, \"utf-8\")),\n      JSON.parse,\n      Option.some,\n    )\n  }\n  else {\n    return Option.none()\n  }\n}\n\nexport async function readJsonDataFileWithSchema<A, I>(\n  schema: Schema.Schema<A, I>,\n  filePath: string,\n): Promise<Option.Option<A>> {\n  return readJsonDataFile(filePath)\n    .then(Option.map(Schema.decodeUnknownSync(schema)))\n}\n\nexport async function readJsonLinesDataFileFiltered<A, I>(\n  filePath: string,\n  schema: Schema.Schema<A, I>,\n  { offset, limit }: Pagination,\n  predicate?: (x: A) => boolean,\n): Promise<I[]> {\n  const fullPath = path.join(getDataDir(), filePath)\n  const stream = fs.createReadStream(fullPath, \"utf-8\")\n  const rl = readline.createInterface({\n    input: stream,\n    crlfDelay: Infinity,\n  })\n  const result: I[] = []\n  let count = -offset\n  rl.on(\"line\", (line) => {\n    if (typeof line === \"string\") {\n      if (line.length > 0) {\n        const encoded = JSON.parse(line)\n        const data = Schema.decodeUnknownSync(schema)(encoded)\n        // There is an opportunity for optimization here if the predicate is\n        // null.\n        if (!predicate || predicate(data)) {\n          if (count >= 0) {\n            result.push(encoded)\n          }\n          count += 1\n        }\n      }\n    }\n    else {\n      throw new TypeError(`undecoded input while reading a file ${filePath}`)\n    }\n    if (count === limit) {\n      rl.close()\n    }\n  })\n  await events.once(rl, \"close\")\n  return result\n}\n\nexport async function readJsonLinesDataFileWithSchema<A, I>(\n  filePath: string,\n  schema: Schema.Schema<A, I>,\n  { offset, limit }: Pagination,\n  predicate: (x: A) => boolean,\n): Promise<A[]> {\n  const fullPath = path.join(getDataDir(), filePath)\n  const stream = fs.createReadStream(fullPath, \"utf-8\")\n  const rl = readline.createInterface({\n    input: stream,\n    crlfDelay: Infinity,\n  })\n  const result: A[] = []\n  let count = -offset\n  rl.on(\"line\", (line) => {\n    if (typeof line === \"string\") {\n      if (line.length > 0) {\n        const data = Schema.decodeUnknownSync(schema)(JSON.parse(line))\n        if (predicate(data)) {\n          if (count >= 0) {\n            result.push(data)\n          }\n          count += 1\n        }\n      }\n    }\n    else {\n      throw new TypeError(`undecoded input while reading a file ${filePath}`)\n    }\n    if (count === limit) {\n      rl.close()\n    }\n  })\n  await events.once(rl, \"close\")\n  return result\n}\n","import path from \"node:path\"\nimport { notFound } from \"@tanstack/react-router\"\nimport { createServerFn } from \"@tanstack/react-start\"\nimport { Option, Schema } from \"effect\"\nimport { LanguageIdSchema } from \"@/schemas/common\"\nimport { PostSchema, PostSlugSchema } from \"@/schemas/post\"\nimport { readJsonDataFile } from \"@/utils/data\"\n\nexport type PostSlug = typeof PostSlugSchema.Type\n\nexport type Post = typeof PostSchema.Type\n\nconst PostDir = \"posts\"\n\nconst PostSpec = Schema.Struct({\n  slug: PostSlugSchema,\n  lang: LanguageIdSchema,\n})\n\nfunction getPostInternal({ slug, lang }: typeof PostSpec.Type) {\n  return readJsonDataFile<typeof PostSchema.Encoded>(\n    path.join(PostDir, `${slug}.${lang}.json`),\n  )\n}\n\nconst getPostFn = createServerFn({ method: \"GET\" })\n  .validator(Schema.decodeUnknownSync(PostSpec))\n  .handler(({ data }) =>\n    getPostInternal(data).then(Option.getOrThrowWith(() => notFound()),\n    ))\n\nexport function getPost(data: typeof PostSpec.Encoded) {\n  return getPostFn({ data }).then(Schema.decodeUnknownSync(PostSchema))\n}\n","import { Schema } from \"effect\"\n\nconst DefaultLimit = 30\n\nexport const PaginationSchema = Schema.Struct({\n  offset: Schema.optionalWith(\n    Schema.Number,\n    {\n      default: () => 0,\n    },\n  ),\n  limit: Schema.optionalWith(\n    Schema.Number,\n    {\n      default: () => DefaultLimit,\n    },\n  ),\n})\n\nexport type Pagination = typeof PaginationSchema.Type\n\nexport type PaginationEncoded = typeof PaginationSchema.Encoded\n\nexport const DefaultPagination = Schema.decodeUnknownSync(PaginationSchema)({})\n","import type { Pagination } from \"@/utils/pagination\"\nimport { createServerFn } from \"@tanstack/react-start\"\nimport { Schema } from \"effect\"\nimport { constTrue } from \"effect/Function\"\nimport { LanguageIdSchema } from \"@/schemas/common\"\nimport { PostMetadataSchema } from \"@/schemas/post\"\nimport { readJsonLinesDataFileFiltered } from \"@/utils/data\"\nimport { PaginationSchema } from \"@/utils/pagination\"\n\nexport type PostMetadata = typeof PostMetadataSchema.Type\n\nconst PostsIndexFile = \"posts.index.jsonl\"\n\nconst PostFilterSchema = Schema.Struct({\n  language: Schema.optional(LanguageIdSchema),\n})\n\nfunction toPostFilter(params: typeof PostFilterSchema.Type) {\n  if (params.language) {\n    return (meta: PostMetadata) => (meta.language === params.language)\n  }\n  return constTrue\n}\n\nconst DefaultPagination: Pagination = Schema.decodeUnknownSync(PaginationSchema)({\n  offset: 0,\n  limit: 30,\n})\n\nconst PostListSpec = Schema.Struct({\n  page: Schema.optional(PaginationSchema),\n  filters: Schema.optional(PostFilterSchema),\n})\n\nfunction getPostListInternal({ page, filters }: typeof PostListSpec.Type) {\n  return readJsonLinesDataFileFiltered<typeof PostMetadataSchema.Type, typeof PostMetadataSchema.Encoded>(\n    PostsIndexFile,\n    PostMetadataSchema,\n    page ?? DefaultPagination,\n    filters && toPostFilter(filters),\n  )\n}\n\nconst getPostListFn = createServerFn({ method: \"GET\" })\n  .validator(Schema.decodeUnknownSync(PostListSpec))\n  .handler(({ data }) => getPostListInternal(data))\n\nexport function getPostList(data: typeof PostListSpec.Encoded): Promise<readonly PostMetadata[]> {\n  return getPostListFn({ data }).then(Schema.decodeUnknownSync(Schema.Array(PostMetadataSchema)))\n}\n","import { Option, pipe } from \"effect\"\n\nfunction formatDate(date: Date): string {\n  return date.toISOString().split(\"T\")[0]\n}\n\nexport function DateFormat({ date }: { date: Option.Option<Date> }) {\n  const dateString = pipe(\n    date,\n    Option.map(formatDate),\n    Option.getOrUndefined,\n  )\n\n  return (\n    <span>\n      {dateString}\n    </span>\n  )\n}\n","import type { PostMetadata } from \"@/collections/posts\"\nimport { Link } from \"@tanstack/react-router\"\nimport { DateFormat } from \"@/components/inline/DateFormat\"\n\nexport function PostListTable({ posts }: { posts: readonly PostMetadata[] }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            Title\n          </th>\n          <th>\n            Date published\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {posts.map(post => (\n          <tr key={post.slug}>\n            <td>\n              <Link\n                to=\"/post/$lang/$slug\"\n                params={{\n                  lang: post.language,\n                  slug: post.slug,\n                }}\n              >\n                {post.title}\n              </Link>\n            </td>\n            <td>\n              <DateFormat date={post.publicationDate} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { createFileRoute } from \"@tanstack/react-router\"\nimport { getPostList } from \"@/collections/posts\"\nimport { PostListTable } from \"@/features/blog/components/PostListTable\"\n\nexport const Route = createFileRoute(\"/_blog/_archive/post/\")({\n  component: PostArchiveComponent,\n  loader: async () => {\n    return { posts: await getPostList({}) }\n  },\n})\n\nfunction PostArchiveComponent() {\n  const { posts } = Route.useLoaderData()\n  return (\n    <>\n      <header>\n        List of posts\n      </header>\n\n      <PostListTable posts={posts} />\n    </>\n  )\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","import type { JsxElement } from \"node_modules/hast-util-to-jsx-runtime/lib/types\"\nimport { toJsxRuntime } from \"hast-util-to-jsx-runtime\"\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\"\n\nexport function hastToJsx(hastTree: any): JsxElement {\n  return toJsxRuntime(hastTree, { Fragment, jsxs, jsx })\n}\n","import { createFileRoute } from \"@tanstack/react-router\"\nimport { getPost } from \"@/collections/posts\"\nimport { hastToJsx } from \"@/utils/hast\"\n\nexport const Route = createFileRoute(\"/_blog/post/$lang/$slug\")({\n  component: PostComponent,\n  loader: async ({ params }) => {\n    return {\n      post: await getPost(params),\n    }\n  },\n})\n\nfunction PostComponent() {\n  const { post } = Route.useLoaderData()\n\n  return (\n    <main>\n      <h1>\n        {post.title}\n      </h1>\n\n      <div>\n        {hastToJsx(post.hastBody)}\n      </div>\n    </main>\n  )\n}\n","import type { Option } from \"effect\"\nimport type { LanguageId } from \"@/schemas/common\"\nimport { Array, pipe, Schema } from \"effect\"\nimport { LanguagePropertiesSchema } from \"@/schemas/common\"\n\ntype LanguageProperties = typeof LanguagePropertiesSchema.Type\n\nconst UsedLanguages: readonly LanguageProperties[]\n      = Schema.decodeUnknownSync(Schema.Array(LanguagePropertiesSchema))([\n        {\n          id: \"en\",\n          localName: \"English\",\n        },\n        {\n          id: \"ja\",\n          localName: \"日本語\",\n          englishName: \"Japanese\",\n        },\n      ])\n\nexport function getLanguageById(id: LanguageId): Option.Option<LanguageProperties> {\n  return pipe(\n    UsedLanguages,\n    Array.findFirst(language => language.id === id),\n  )\n}\n\nexport function getAvailableLanguages() {\n  return UsedLanguages\n}\n","import type { LanguageId } from \"@/schemas/common\"\nimport { createFileRoute, notFound } from \"@tanstack/react-router\"\nimport { Option, pipe } from \"effect\"\nimport { getLanguageById } from \"@/collections/languages\"\nimport { getPostList } from \"@/collections/posts\"\nimport { PostListTable } from \"@/features/blog/components/PostListTable\"\n\nexport const Route = createFileRoute(\"/_blog/_archive/post/$lang/\")({\n  component: PostArchiveComponent,\n  loader: async ({ params }) => {\n    const language = pipe(\n      getLanguageById(params.lang as LanguageId),\n      Option.getOrThrowWith(() => notFound()),\n    )\n    return { language, posts: await getPostList({\n      filters: {\n        language: language.id,\n      },\n    }) }\n  },\n})\n\nfunction PostArchiveComponent() {\n  const { language, posts } = Route.useLoaderData()\n\n  return (\n    <>\n      <header>\n        List of posts in\n        {\" \"}\n        {\n          language.englishName\n            ? (\n                <span title={language.englishName}>\n                  {language.localName}\n                </span>\n              )\n            : (\n                <span>\n                  {language.localName}\n                </span>\n              )\n        }\n      </header>\n\n      <PostListTable posts={posts} />\n    </>\n  )\n}\n","/* eslint-disable */\n\n\n\n\n\nimport { Route as rootRoute } from './routes/__root'\nimport { Route as BlogRouteImport } from './routes/_blog/route'\nimport { Route as IndexImport } from './routes/index'\nimport { Route as AboutIndexImport } from './routes/about.index'\nimport { Route as AboutLangImport } from './routes/about.$lang'\nimport { Route as BlogArchiveRouteImport } from './routes/_blog/_archive.route'\nimport { Route as BlogArchivePostIndexImport } from './routes/_blog/_archive.post.index'\nimport { Route as BlogPostLangSlugImport } from './routes/_blog/post.$lang.$slug'\nimport { Route as BlogArchivePostLangIndexImport } from './routes/_blog/_archive.post.$lang.index'\n\n\nconst BlogRouteRoute = BlogRouteImport.update({\n  id: '/_blog',\n  getParentRoute: () => rootRoute,\n} as any)\n\nconst IndexRoute = IndexImport.update({\n  id: '/',\n  path: '/',\n  getParentRoute: () => rootRoute,\n} as any)\n\nconst AboutIndexRoute = AboutIndexImport.update({\n  id: '/about/',\n  path: '/about/',\n  getParentRoute: () => rootRoute,\n} as any)\n\nconst AboutLangRoute = AboutLangImport.update({\n  id: '/about/$lang',\n  path: '/about/$lang',\n  getParentRoute: () => rootRoute,\n} as any)\n\nconst BlogArchiveRouteRoute = BlogArchiveRouteImport.update({\n  id: '/_archive',\n  getParentRoute: () => BlogRouteRoute,\n} as any)\n\nconst BlogArchivePostIndexRoute = BlogArchivePostIndexImport.update({\n  id: '/post/',\n  path: '/post/',\n  getParentRoute: () => BlogArchiveRouteRoute,\n} as any)\n\nconst BlogPostLangSlugRoute = BlogPostLangSlugImport.update({\n  id: '/post/$lang/$slug',\n  path: '/post/$lang/$slug',\n  getParentRoute: () => BlogRouteRoute,\n} as any)\n\nconst BlogArchivePostLangIndexRoute = BlogArchivePostLangIndexImport.update({\n  id: '/post/$lang/',\n  path: '/post/$lang/',\n  getParentRoute: () => BlogArchiveRouteRoute,\n} as any)\n\n\ndeclare module '@tanstack/react-router' {\n  interface FileRoutesByPath {\n    '/': {\n      id: '/'\n      path: '/'\n      fullPath: '/'\n      preLoaderRoute: typeof IndexImport\n      parentRoute: typeof rootRoute\n    }\n    '/_blog': {\n      id: '/_blog'\n      path: ''\n      fullPath: ''\n      preLoaderRoute: typeof BlogRouteImport\n      parentRoute: typeof rootRoute\n    }\n    '/_blog/_archive': {\n      id: '/_blog/_archive'\n      path: ''\n      fullPath: ''\n      preLoaderRoute: typeof BlogArchiveRouteImport\n      parentRoute: typeof BlogRouteImport\n    }\n    '/about/$lang': {\n      id: '/about/$lang'\n      path: '/about/$lang'\n      fullPath: '/about/$lang'\n      preLoaderRoute: typeof AboutLangImport\n      parentRoute: typeof rootRoute\n    }\n    '/about/': {\n      id: '/about/'\n      path: '/about'\n      fullPath: '/about'\n      preLoaderRoute: typeof AboutIndexImport\n      parentRoute: typeof rootRoute\n    }\n    '/_blog/post/$lang/$slug': {\n      id: '/_blog/post/$lang/$slug'\n      path: '/post/$lang/$slug'\n      fullPath: '/post/$lang/$slug'\n      preLoaderRoute: typeof BlogPostLangSlugImport\n      parentRoute: typeof BlogRouteImport\n    }\n    '/_blog/_archive/post/': {\n      id: '/_blog/_archive/post/'\n      path: '/post'\n      fullPath: '/post'\n      preLoaderRoute: typeof BlogArchivePostIndexImport\n      parentRoute: typeof BlogArchiveRouteImport\n    }\n    '/_blog/_archive/post/$lang/': {\n      id: '/_blog/_archive/post/$lang/'\n      path: '/post/$lang'\n      fullPath: '/post/$lang'\n      preLoaderRoute: typeof BlogArchivePostLangIndexImport\n      parentRoute: typeof BlogArchiveRouteImport\n    }\n  }\n}\n\n\ninterface BlogArchiveRouteRouteChildren {\n  BlogArchivePostIndexRoute: typeof BlogArchivePostIndexRoute\n  BlogArchivePostLangIndexRoute: typeof BlogArchivePostLangIndexRoute\n}\n\nconst BlogArchiveRouteRouteChildren: BlogArchiveRouteRouteChildren = {\n  BlogArchivePostIndexRoute: BlogArchivePostIndexRoute,\n  BlogArchivePostLangIndexRoute: BlogArchivePostLangIndexRoute,\n}\n\nconst BlogArchiveRouteRouteWithChildren =\n  BlogArchiveRouteRoute._addFileChildren(BlogArchiveRouteRouteChildren)\n\ninterface BlogRouteRouteChildren {\n  BlogArchiveRouteRoute: typeof BlogArchiveRouteRouteWithChildren\n  BlogPostLangSlugRoute: typeof BlogPostLangSlugRoute\n}\n\nconst BlogRouteRouteChildren: BlogRouteRouteChildren = {\n  BlogArchiveRouteRoute: BlogArchiveRouteRouteWithChildren,\n  BlogPostLangSlugRoute: BlogPostLangSlugRoute,\n}\n\nconst BlogRouteRouteWithChildren = BlogRouteRoute._addFileChildren(\n  BlogRouteRouteChildren,\n)\n\nexport interface FileRoutesByFullPath {\n  '/': typeof IndexRoute\n  '': typeof BlogArchiveRouteRouteWithChildren\n  '/about/$lang': typeof AboutLangRoute\n  '/about': typeof AboutIndexRoute\n  '/post/$lang/$slug': typeof BlogPostLangSlugRoute\n  '/post': typeof BlogArchivePostIndexRoute\n  '/post/$lang': typeof BlogArchivePostLangIndexRoute\n}\n\nexport interface FileRoutesByTo {\n  '/': typeof IndexRoute\n  '': typeof BlogArchiveRouteRouteWithChildren\n  '/about/$lang': typeof AboutLangRoute\n  '/about': typeof AboutIndexRoute\n  '/post/$lang/$slug': typeof BlogPostLangSlugRoute\n  '/post': typeof BlogArchivePostIndexRoute\n  '/post/$lang': typeof BlogArchivePostLangIndexRoute\n}\n\nexport interface FileRoutesById {\n  __root__: typeof rootRoute\n  '/': typeof IndexRoute\n  '/_blog': typeof BlogRouteRouteWithChildren\n  '/_blog/_archive': typeof BlogArchiveRouteRouteWithChildren\n  '/about/$lang': typeof AboutLangRoute\n  '/about/': typeof AboutIndexRoute\n  '/_blog/post/$lang/$slug': typeof BlogPostLangSlugRoute\n  '/_blog/_archive/post/': typeof BlogArchivePostIndexRoute\n  '/_blog/_archive/post/$lang/': typeof BlogArchivePostLangIndexRoute\n}\n\nexport interface FileRouteTypes {\n  fileRoutesByFullPath: FileRoutesByFullPath\n  fullPaths:\n    | '/'\n    | ''\n    | '/about/$lang'\n    | '/about'\n    | '/post/$lang/$slug'\n    | '/post'\n    | '/post/$lang'\n  fileRoutesByTo: FileRoutesByTo\n  to:\n    | '/'\n    | ''\n    | '/about/$lang'\n    | '/about'\n    | '/post/$lang/$slug'\n    | '/post'\n    | '/post/$lang'\n  id:\n    | '__root__'\n    | '/'\n    | '/_blog'\n    | '/_blog/_archive'\n    | '/about/$lang'\n    | '/about/'\n    | '/_blog/post/$lang/$slug'\n    | '/_blog/_archive/post/'\n    | '/_blog/_archive/post/$lang/'\n  fileRoutesById: FileRoutesById\n}\n\nexport interface RootRouteChildren {\n  IndexRoute: typeof IndexRoute\n  BlogRouteRoute: typeof BlogRouteRouteWithChildren\n  AboutLangRoute: typeof AboutLangRoute\n  AboutIndexRoute: typeof AboutIndexRoute\n}\n\nconst rootRouteChildren: RootRouteChildren = {\n  IndexRoute: IndexRoute,\n  BlogRouteRoute: BlogRouteRouteWithChildren,\n  AboutLangRoute: AboutLangRoute,\n  AboutIndexRoute: AboutIndexRoute,\n}\n\nexport const routeTree = rootRoute\n  ._addFileChildren(rootRouteChildren)\n  ._addFileTypes<FileRouteTypes>()\n\n/* ROUTE_MANIFEST_START\n{\n  \"routes\": {\n    \"__root__\": {\n      \"filePath\": \"__root.tsx\",\n      \"children\": [\n        \"/\",\n        \"/_blog\",\n        \"/about/$lang\",\n        \"/about/\"\n      ]\n    },\n    \"/\": {\n      \"filePath\": \"index.tsx\"\n    },\n    \"/_blog\": {\n      \"filePath\": \"_blog/route.tsx\",\n      \"children\": [\n        \"/_blog/_archive\",\n        \"/_blog/post/$lang/$slug\"\n      ]\n    },\n    \"/_blog/_archive\": {\n      \"filePath\": \"_blog/_archive.route.tsx\",\n      \"parent\": \"/_blog\",\n      \"children\": [\n        \"/_blog/_archive/post/\",\n        \"/_blog/_archive/post/$lang/\"\n      ]\n    },\n    \"/about/$lang\": {\n      \"filePath\": \"about.$lang.tsx\"\n    },\n    \"/about/\": {\n      \"filePath\": \"about.index.tsx\"\n    },\n    \"/_blog/post/$lang/$slug\": {\n      \"filePath\": \"_blog/post.$lang.$slug.tsx\",\n      \"parent\": \"/_blog\"\n    },\n    \"/_blog/_archive/post/\": {\n      \"filePath\": \"_blog/_archive.post.index.tsx\",\n      \"parent\": \"/_blog/_archive\"\n    },\n    \"/_blog/_archive/post/$lang/\": {\n      \"filePath\": \"_blog/_archive.post.$lang.index.tsx\",\n      \"parent\": \"/_blog/_archive\"\n    }\n  }\n}\nROUTE_MANIFEST_END */\n","import { createRouter as createTanStackRouter } from \"@tanstack/react-router\"\nimport * as React from \"react\"\nimport { routeTree } from \"./routeTree.gen\"\n\nexport function createRouter() {\n  const router = createTanStackRouter({\n    routeTree,\n    defaultStaleTime: Infinity,\n    defaultPreload: \"intent\",\n    defaultErrorComponent: err => (\n      <div>\n        <p>\n          {err.error.message}\n        </p>\n      </div>\n    ),\n    defaultNotFoundComponent: () => <p>not found</p>,\n    scrollRestoration: true,\n  })\n\n  return router\n}\n\ndeclare module \"@tanstack/react-router\" {\n  interface Register {\n    router: ReturnType<typeof createRouter>\n  }\n}\n","import { StartClient } from \"@tanstack/react-start\"\nimport * as React from \"react\"\nimport { hydrateRoot } from \"react-dom/client\"\nimport { createRouter } from \"./router\"\n\nconst router = createRouter()\n\nhydrateRoot(document, <StartClient router={router} />)\n"],"file":"assets/index-DlkUdxGe.js"}