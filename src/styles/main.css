@import url("./reset.css") layer(reset);
@import url("./fonts.css") layer(theme);

@layer reset, theme, utilities, typography, components;

@layer theme {
  /* CSS Custom Properties for Color Schemes */
  :root {
    /* Light Theme Colors */
    --bg-primary: oklch(98% 0.005 70); /* Very light, subtle sepia/beige */
    --bg-secondary: oklch(95% 0.008 75); /* Slightly darker, warmer background for components */
    --bg-highlight: oklch(100% 0 0); /* Slightly more saturated and darker than --bg-primary, still subtle */
    --text-primary: oklch(20% 0.01 70); /* Dark gray for main text */
    --text-secondary: oklch(45% 0.01 70); /* Medium gray for secondary text */
    --accent-primary: oklch(35% 0.08 240); /* Navy blue accent */
    --accent-secondary: oklch(60% 0.05 180); /* Muted teal/cyan secondary accent */
    --border-subtle: oklch(90% 0.005 70); /* Very light gray-brown for borders */
    --color-link: var(--accent-primary); /* Links use primary accent color */
    --accent-hover: oklch(30% 0.1 240); /* Darker navy on hover */
    --color-information: oklch(50% 0.12 250); /* Blue for information messages */
    --color-success: oklch(50% 0.12 150); /* Green for success messages */
    --color-warning: oklch(60% 0.12 90); /* Yellow for warnings */
    --color-error: oklch(50% 0.12 20); /* Red for error messages */
    /* Dedicated colors for inline code */
    --color-inline-code-bg: oklch(92% 0.015 70);
    --color-inline-code-text: var(--text-primary);
    /* --color-blockquote-bg: oklch(96% 0.012 75); /\* Slightly more saturated and darker than --bg-primary, still subtle *\/ */
    --color-blockquote-bg: var(--bg-highlight);
    --color-blockquote-border: oklch(80% 0.01 70); /* Light gray, subtle sepia tint */

    /* Semantic color mappings */
    --color-bg: var(--bg-primary);
    --color-bg-secondary: var(--bg-secondary);
    --color-bg-highlight: var(--bg-highlight);
    --color-bg-inline-code: var(--color-inline-code-bg);
    --color-bg-blockquote: var(--color-blockquote-bg);
    --color-text: var(--text-primary);
    --color-text-muted: var(--text-secondary);
    --color-text-inline-code: var(--color-inline-code-text);
    --color-accent: var(--accent-primary);
    --accent-primary: var(--accent-primary);
    --color-accent-hover: var(--accent-hover);
    --border-subtle: var(--border-subtle);
    --border-blockquote: var(--color-blockquote-border);
    --color-bg-information: var(--color-information);
    --color-bg-success: var(--color-success);
    --color-bg-warning: var(--color-warning);
    --color-bg-error: var(--color-error);

    /* Transitions */
    --transition-fast: 0.2s ease;
    --transition-normal: 0.3s ease;
    --transition-slow: 0.5s ease;

    --theme-button-image: url("/theme/light-mode.svg");
    --dark-theme-button-image: url("/theme/dark-mode.svg");

    --theme-link-image: url("/theme/link.svg");

    /* Color variables for the dark theme.
     * All the tokens are prefixed with --dark
     * and then applied to the dark mode */
    --dark-bg-primary: oklch(20% 0.05 240); /* Very dark navy-tinted background */
    --dark-bg-secondary: oklch(25% 0.06 245); /* Slightly lighter, more saturated background for components */
    --dark-bg-highlight: oklch(15% 0.02 70); /* Darker, more saturated background for components */
    --dark-text-primary: oklch(95% 0 0); /* Near-white for main content */
    --dark-text-secondary: oklch(75% 0 0); /* Medium gray for secondary info, captions */
    --dark-color-inline-code-bg: oklch(28% 0.06 245); /* Slightly lighter than dark-bg-secondary */
    --dark-color-inline-code-text: oklch(75% 0.1 150); /* A subtle, desaturated green for code text */
    --dark-accent-primary: oklch(70% 0.1 70); /* A vibrant but not overpowering magenta/purple */
    --dark-accent-secondary: oklch(55% 0.08 300); /* Muted blue/violet secondary accent */
    --dark-border-subtle: oklch(25% 0.03 240); /* For outlines, etc. */
    --dark-color-link: var(--dark-accent-primary); /* Links use primary accent color */
    --dark-accent-hover: oklch(75% 0.1 70); /* Lighter for hover state */
    --dark-color-information: oklch(72% 0.15 250); /* Blue for information messages */
    --dark-color-success: oklch(60% 0.15 150); /* Green for success messages */
    --dark-color-warning: oklch(70% 0.15 90); /* Yellow for warnings */
    --dark-color-error: oklch(60% 0.15 20); /* Red for error messages */
    --dark-color-blockquote-bg: var(--dark-bg-highlight);
    --dark-color-blockquote-border: oklch(45% 0.04 240); /* Darker gray, subtle navy tint */

    &[data-theme="dark"] {
      /* --- Dark Theme --- */
      --bg-primary: var(--dark-bg-primary);
      --bg-secondary: var(--dark-bg-secondary);
      --bg-highlight: var(--dark-bg-highlight);
      --color-bg-inline-code: var(--dark-color-inline-code-bg);
      --color-bg-blockquote: var(--dark-color-blockquote-bg);
      --text-primary: var(--dark-text-primary);
      --text-secondary: var(--dark-text-secondary);
      --color-text-inline-code: var(--dark-color-inline-code-text);
      --color-accent: var(--dark-accent-primary);
      --accent-primary: var(--dark-accent-primary);
      --border-subtle: var(--dark-border-subtle);
      --border-blockquote: var(--dark-color-blockquote-border);
      --color-link: var(--dark-color-link);
      --accent-hover: var(--dark-accent-hover);
      --theme-button-image: var(--dark-theme-button-image);
      --color-bg-information: var(--dark-color-information);
      --color-bg-success: var(--dark-color-success);
      --color-bg-warning: var(--dark-color-warning);
      --color-bg-error: var(--dark-color-error);
    }

    @media (prefers-color-scheme: dark) {
      &:not([data-theme="light"]) {
        /* --- Dark Theme --- */
        --bg-primary: var(--dark-bg-primary);
        --bg-secondary: var(--dark-bg-secondary);
        --bg-highlight: var(--dark-bg-highlight);
        --color-bg-inline-code: var(--dark-color-inline-code-bg);
        --color-bg-blockquote: var(--dark-color-blockquote-bg);
        --text-primary: var(--dark-text-primary);
        --text-secondary: var(--dark-text-secondary);
        --color-text-inline-code: var(--dark-color-inline-code-text);
        --color-accent: var(--dark-accent-primary);
        --accent-primary: var(--dark-accent-primary);
        --border-subtle: var(--dark-border-subtle);
        --border-blockquote: var(--dark-color-blockquote-border);
        --color-link: var(--dark-color-link);
        --accent-hover: var(--dark-accent-hover);
        --theme-button-image: var(--dark-theme-button-image);
        --color-bg-information: var(--dark-color-information);
        --color-bg-success: var(--dark-color-success);
        --color-bg-warning: var(--dark-color-warning);
        --color-bg-error: var(--dark-color-error);
      }
    }
  }

  /* Base theme application */
  body {
    background-color: var(--color-bg);
    color: var(--color-text);
    transition:
      background-color var(--transition-normal),
      color var(--transition-normal);
  }

  /* Global transition for theme changes */
  * {
    transition:
      background-color var(--transition-normal),
      color var(--transition-normal),
      border-color var(--transition-normal);
  }

  /* Respect user's motion preferences for transitions */
  @media (prefers-reduced-motion: reduce) {
    * {
      transition: none !important;
    }
  }
}

@layer utilities {
  :root {
    /* Spacing scale */
    --space-xs: 0.25rem;
    --space-sm: 0.5rem;
    --space-md: 1rem;
    --space-lg: 1.5rem;
    --space-xl: 2rem;
    --space-2xl: 3rem;

    /* Border radius scale */
    --radius-sm: 4px;
    --radius-md: 8px;
    --radius-lg: 12px;
  }

  .hidden {
    display: none;
  }

  .sticky {
    display: sticky;
  }

  .flex {
    display: flex;
  }

  .flex-row {
    flex-direction: row;
  }

  .flex-col {
    flex-direction: column;
  }

  .truncate-single-line {
    whitespace: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-height: 1.5em;
    width: 100%;
  }
}

@layer typography {
  /* Font family definitions */
  :root {
    --font-system:
      "Manrope", "Manrope Fallback", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    --font-serif: "Source Serif 4", "Source Serif 4 Fallback", Georgia, "Times New Roman", serif;
    --font-mono:
      "DM Mono", "DM Mono Fallback", /* Modern System Monospace */ Menlo, Monaco, Consolas,
      /* Apple & Android/ChromeOS */ "SF Mono", "Roboto Mono", /* The Ultimate Fallback */ "Courier New",
      /* Generic Keyword */ monospace;

    /* Font size scale */
    --text-xs: 0.75rem;
    --text-sm: 0.875rem;
    --text-base: 1rem;
    --text-lg: 1.125rem;
    --text-xl: 1.25rem;
    --text-2xl: 1.5rem;
    --text-3xl: 1.875rem;
    --text-4xl: 2.25rem;
    --text-5xl: 3rem;

    /* Font weights */
    --font-normal: 400;
    --font-medium: 500;
    --font-semibold: 600;
    --font-bold: 700;

    /* Line heights */
    --leading-tight: 1.25;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
  }

  /* Base typography */
  body {
    font-family: var(--font-system);
    font-size: var(--text-base);
    line-height: var(--leading-normal);
    font-optical-sizing: auto;
  }

  /* Headings */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-serif);
    line-height: var(--leading-tight);
    margin-bottom: var(--space-md);
  }

  h1 {
    font-weight: var(--font-semibold);
    font-size: clamp(var(--text-3xl), 4vw, var(--text-5xl));
    margin-bottom: var(--space-sm);
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    /* font-style: italic; */
    font-weight: var(--font-semibold);
  }

  h2 {
    font-size: clamp(var(--text-2xl), 3vw, var(--text-3xl));
    margin-top: var(--space-xl);
  }

  h3 {
    font-size: clamp(var(--text-xl), 2.5vw, var(--text-2xl));
    margin-top: var(--space-lg);
  }

  h4 {
    font-size: var(--text-xl);
    margin-top: var(--space-lg);
  }

  h5 {
    font-size: var(--text-lg);
    margin-top: var(--space-md);
  }

  h6 {
    font-size: var(--text-base);
    margin-top: var(--space-md);
  }

  /* Paragraphs and text */
  p {
    margin-bottom: var(--space-md);
    color: var(--color-text);
    line-height: var(--leading-relaxed);
  }

  /* Text utilities */
  .text-muted {
    color: var(--color-text-muted);
  }

  .text-small {
    font-size: var(--text-sm);
  }

  .text-large {
    font-size: var(--text-lg);
  }

  /* Emphasis and inline elements */
  strong,
  b {
    font-weight: var(--font-semibold);
  }

  em,
  i {
    font-style: italic;
  }

  /* Links */
  a {
    transition: color var(--transition-fast);
  }

  :where(main, aside) a,
  a:hover {
    text-decoration: underline;
    text-underline-offset: 0.2rem;
  }

  a:hover {
    color: var(--color-link);
  }

  a:focus-visible {
    outline: 2px solid var(--color-link);
    outline-offset: 2px;
    border-radius: var(--radius-sm);
  }

  /* Code and preformatted text */
  code {
    font-family: var(--font-mono);
    font-size: 0.9em;
    background: var(--color-bg-inline-code);
    color: var(--color-text-inline-code);
    padding: calc(var(--space-xs) * 0.5) var(--space-xs);
    border-radius: var(--radius-sm);
    font-feature-settings:
      "liga" on,
      "calt" on;

    :not(pre) & {
      border: 1px solid var(--border-subtle);
    }
  }

  pre {
    font-family: var(--font-mono);
    background: var(--color-border);
    padding: var(--space-md);
    border-radius: var(--radius-md);
    overflow-x: auto;
    margin-bottom: var(--space-md);
  }

  pre code {
    background: none;
    padding: 0;
  }

  /* Blockquotes */
  /* Base Blockquote Styles (for light theme primarily) */
  blockquote {
    position: relative; /* Essential for pseudo-elements */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */

    /* Generous Vertical and Horizontal Margins for separation */
    margin: var(--space-xl) 0; /* 2rem (32px) top/bottom margin for good separation */

    /* Padding for inner content - more generous for aesthetic appeal */
    /* top & bottom: space-lg (24px)
       left: space-xl (32px) + border-width (4px)
       right: space-xl (32px) */
    padding: var(--space-lg) var(--space-xl) var(--space-sm) calc(var(--space-xl) + 4px);

    /* Background and Border - designed for subtle elegance */
    background-color: var(--color-bg-blockquote);
    border-left: 4px solid var(--border-blockquote); /* Your accent line */
    border-radius: var(--radius-md); /* Softer, more pleasing corners (8px) */
    box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.05); /* Very subtle shadow for depth */

    /* Typography - distinct and readable */
    font-family: var(--font-serif); /* Source Serif 4 - assuming 400 weight is now loaded */
    font-size: var(--text-xl); /* 1.25rem (20px) - larger than base text for emphasis */
    line-height: var(--leading-relaxed); /* 1.625 - more generous line spacing for readability */
    font-style: italic;
    font-weight: var(--font-normal); /* 400 */
    color: var(--color-text-muted); /* Muted color to indicate secondary content */

    /* Decorative Quote Marks (Large and impactful) */
    &::before {
      content: "“"; /* Unicode left double quotation mark */
      position: absolute;
      left: var(--space-sm); /* Positions it to the left of the text content */
      top: var(--space-sm); /* Adjust vertically to sit nicely above the first line */
      font-size: var(--text-5xl); /* 3rem (48px) - very large for strong visual impact */
      line-height: 1; /* Prevents it from affecting text line height */
      color: var(--border-blockquote); /* Use the same gray border color */
      opacity: 0.7;
      font-family: var(--font-serif); /* Ensure consistent font for the quote mark itself */
      pointer-events: none; /* Allows text selection underneath */
      user-select: none; /* Prevents text selection on the pseudo-element itself */
      z-index: 0; /* Ensures it's behind the actual text */
    }
  }

  /* Lists (only inside main contents) */
  .typography {
    :where(ul, ol) {
      /* Remove default browser margins if not desired, or set specific top/bottom */
      margin-top: var(--space-md); /* Space above a list when it follows content */
      margin-bottom: var(--space-md); /* Space below a list */
      padding-left: var(--space-lg); /* Indentation for bullets/numbers */
      /* Remove default list-style-position: outside; if you want custom bullets positioned inside padding-left */
    }

    li > :where(ul, ol) {
      margin-top: var(--space-xs); /* Smaller margin for nested lists, or even 0 */
      margin-bottom: 0; /* Nested lists typically don't need their own bottom margin pushing against parent's content */
    }

    /* Spacing between list items */
    /* Apply margin-top to all list items *except the first one* in a list */
    li + li {
      margin-top: var(--space-xs); /* Space between sibling list items */
    }

    ul > li {
      list-style-type: disc;
    }

    ol > li {
      list-style-type: decimal;
    }
  }

  /* Tables in main contents */
  .typography {
    table {
      width: 100%;
      border-collapse: collapse;
      margin: var(--space-lg) 0;
      font-size: var(--text-base);
      line-height: var(--leading-normal);
      color: var(--color-text);
      background-color: var(--color-bg);
    }

    tr:hover {
      background-color: color-mix(in oklch, var(--bg-secondary) 30%, transparent);

      thead > & {
        background-color: var(--bg-secondary);
      }
    }

    :where(th, td) {
      padding: var(--space-sm) var(--space-md);
      text-align: left;
      vertical-align: top;
      border-bottom: 1px solid var(--border-subtle);

      tbody tr:last-child & {
        border-bottom: none;
      }
    }

    th {
      font-family: var(--font-system);
      font-weight: var(--font-semibold);
      color: var(--color-text);
      background-color: var(--bg-secondary);
      border-bottom: 2px solid var(--border-subtle);
    }

    /* Responsive table handling with container queries */
    @container (max-width: 500px) {
      table {
        font-size: var(--text-sm);
        overflow-x: auto;
        display: block;
        white-space: nowrap;
      }

      th,
      td {
        padding: var(--space-xs) var(--space-sm);
      }
    }

    /* Captions */
    figure:has(table) {
      margin: var(--space-lg) 0;
      container-type: inline-size;
    }

    figure > table {
      margin: 0;
    }

    figcaption {
      font-family: var(--font-serif);
      font-size: var(--text-sm); /* Keep it slightly smaller than body text, e.g., 0.875rem / 14px */
      line-height: var(--leading-normal); /* Standard line height for readability */
      color: var(--color-text-muted); /* A slightly muted color helps it feel less like main text */
      text-align: left; /* Left-align captions for readability. Center-alignment is harder to read for multi-line text. */
      margin-top: var(--space-sm); /* Space between figure/table and caption */
      margin-bottom: var(--space-lg); /* Space after caption before next content */
      padding: 0 var(--space-md); /* Add a little horizontal padding if your figures span full width,
                                    or align it with your main text column */
    }

    @container (max-width: 500px) {
      figcaption {
        font-size: var(--text-xs);
        margin-top: var(--space-xs);
      }
    }
  }

  /* Responsive typography adjustments */
  @media (max-width: 768px) {
    :root {
      --text-base: 0.9rem;
    }

    body {
      line-height: var(--leading-relaxed);
    }
  }
}

@layer components {
  /* Global utility components - use CSS Modules for component-specific styles */
  :root {
    /* Variables that are specific to the blog layout */
    --logo-height: 2.5rem;
    --header-padding: 0.5rem;
    --header-height: calc(var(--logo-height) + 2 * var(--header-padding));

    --footer-height: 6rem;
  }

  /* Layout specific */
  /* Require a class so prevent development tools (e.g. ladle) to not get affected
   by this style */
  body.site {
    display: flex;
    flex-direction: column;
    align-items: center;

    & > :where(nav, footer) {
      color: var(--text-secondary);
    }
  }

  :where(.root-header, .root-nav) {
    top: 0;

    padding: var(--header-padding);
    height: var(--header-height);

    z-index: 10;

    &.root-header {
      left: 0;
      position: sticky;
      align-self: flex-start;

      /* Keep the position even if the content is centered */
      width: calc(var(--logo-height) + 2 * var(--header-padding));

      svg {
        border: medium solid;
        box-shadow:
          0 10px 15px -3px rgba(0, 0, 0, 0.5),
          0 4px 6px -2px rgba(0, 0, 0, 0.05);
      }

      a:hover > svg {
        color: var(--accent-hover) !important;
        opacity: 0.7;
      }
    }

    &.root-nav {
      right: 0;
      position: fixed;
      align-self: flex-end;
      padding-right: calc(var(--header-padding) * 2);

      background-color: var(--color-bg);

      & > ul {
        padding: calc(var(--logo-height) * 0.125);
        display: flex;
        flex-direction: row;
        align-items: center;

        gap: calc(var(--logo-height) * 0.5);

        & > li {
          font-size: var(--text-lg);

          :where(svg, button) {
            display: block;
            --icon-size: calc(var(--text-lg) * 1.25);
            height: var(--icon-size);
            width: var(--icon-size);
            object-fit: contain;

            &[aria-label="Toggle theme"] {
              height: var(--icon-size);
              width: var(--icon-size);
              background-color: var(--text-secondary);
              mask-image: var(--theme-button-image);
              mask-repeat: no-repeat;
              mask-size: contain;
              mask-position: center;
              line-height: 1;

              &:hover {
                /* Same as links */
                background-color: var(--color-accent-hover);
              }
            }
          }
        }
      }
    }
  }

  .root-footer {
    height: var(--footer-height);
    left: 0;
    right: 0;

    --text-size: var(--text-xs);

    padding: calc(var(--text-size) * 0.5);
    margin-inline: var(--text-size);

    display: flex;
    flex-direction: row;
    align-items: flex-end;
    justify-content: center;
    gap: calc(var(--text-size) * 0.5);
    font-size: var(--text-size);
  }

  /* Layout Components */

  .sticky-active {
    position: sticky;
    top: 0;
    padding: var(--space-xs) 0;
    color: var(--text-secondary);
    background: var(--bg-primary);
    /* border-bottom: thin solid var(--color-border); */
    box-shadow: 0 2px 2px var(--border-subtle);
    /* border-radius: var(--space-xs); */
    z-index: 5;
  }

  .linked-heading {
    &:not(.sticky-active) {
      /* .sticky-active sets sticky position, so don't override it */
      position: relative;
    }

    .heading-anchor {
      visibility: hidden;
    }

    &:hover .heading-anchor {
      visibility: visible;
    }

    .heading-anchor {
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      transform: translateX(-100%);
      display: flex;
      align-items: center;

      .icon {
        background-color: var(--text-secondary);
        line-height: 1;
        width: 1em;
        height: 0.8em;
        padding: 0.1rem;
      }
    }
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: var(--space-xl) var(--space-md);
  }

  .tagline {
    font-style: italic;
    margin-top: var(--space-sm);
  }

  /* icons */
  .icon {
    display: inline-block;
    mask-repeat: no-repeat;
    mask-size: contain;
    mask-position: center;
    background-color: currentColor;

    &.icon-link {
      mask-image: var(--theme-link-image);
    }
  }

  /* Card Component */
  .card {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    padding: var(--space-lg);
    margin-bottom: var(--space-xl);
    transition:
      background-color var(--transition-normal),
      border-color var(--transition-normal);
  }

  .card:hover {
    border-color: var(--color-border-strong);
  }

  /* Article Meta Component */
  .article-meta {
    display: flex;
    gap: var(--space-md);
    align-items: center;
    margin-bottom: var(--space-md);
    font-size: var(--text-sm);
  }

  .article-meta time {
    color: var(--color-text-muted);
  }

  /* Tag Component */
  .tag {
    background: var(--color-accent);
    color: var(--color-bg);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    white-space: nowrap;
  }

  /* Button Base Styles */
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-sm) var(--space-md);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-sm);
    font-weight: var(--font-medium);
    cursor: pointer;
    transition: all var(--transition-fast);
    text-decoration: none;
  }

  .btn:hover {
    border-color: var(--color-border-strong);
    text-decoration: none;
  }

  .btn:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }

  .btn-primary {
    background: var(--color-accent);
    color: var(--color-bg);
    border-color: var(--color-accent);
  }

  .btn-primary:hover {
    background: var(--color-accent-hover);
    border-color: var(--color-accent-hover);
  }

  .task-list-item {
    list-style-type: none !important;

    & > input:first-child {
      margin-right: var(--space-sm);
      width: 1.25em;
      height: 1.25em;
      vertical-align: middle;
    }

    :where(ul, ol):has(> &) {
      padding-left: 0 !important;
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .container {
      padding: var(--space-md) var(--space-sm);
    }

    .nav {
      flex-direction: column;
      gap: var(--space-md);
    }

    .article-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-sm);
    }

    .theme-toggle {
      width: 44px;
      height: 44px;
      font-size: var(--text-lg);
    }
  }

  @media (max-width: 480px) {
    .card {
      padding: var(--space-md);
    }

    .theme-toggle {
      top: var(--space-sm);
      right: var(--space-sm);
    }
  }

  /* Print Styles */
  @media print {
    .theme-toggle {
      display: none;
    }

    .card {
      border: 1px solid #000;
      margin-bottom: var(--space-md);
    }

    a {
      text-decoration: underline;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .card {
      border-width: 2px;
    }

    .theme-toggle {
      border-width: 2px;
    }
  }

  /* Admonition Components */
  .admonition {
    border: 1px solid var(--border-subtle);
    border-left: 4px solid var(--color-admonition-status);
    border-radius: var(--radius-md);
    margin: var(--space-lg) 0;
    background: var(--bg-secondary);
    overflow: hidden;

    &.admonition-info {
      --color-admonition-status: var(--color-bg-information);
    }

    &.admonition-warning {
      --color-admonition-status: var(--color-bg-warning);
    }

    &.admonition-error {
      --color-admonition-status: var(--color-bg-error);
    }

    .admonition-header {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
      padding: var(--space-sm) var(--space-lg);
      font-weight: var(--font-semibold);

      color: color-mix(in oklch, var(--color-admonition-status) 70%, var(--color-text));
      background: color-mix(in oklch, var(--color-admonition-status) 15%, transparent);

      .admonition-icon {
        font-size: var(--text-lg);
        flex-shrink: 0;

        /* Add text shadow so a light emoji (like ⭐) stands out even on a light
           background. */
        text-shadow:
          0px 0px 2px rgba(0, 0, 0, 0.6),
          0px 0px 1px rgba(0, 0, 0, 0.5);
      }
    }

    .admonition-content {
      padding: var(--space-md) var(--space-lg);

      & > :last-child {
        margin-bottom: 0;
      }
    }
  }

  /* LinkCard component */
  .link-card {
    background-color: var(--color-bg-highlight);
    border: 1px solid var(--border-subtle);
    border-radius: var(--radius-md);
    transition:
      background-color var(--transition-normal),
      border-color var(--transition-normal);

    &:hover {
      border-color: var(--color-border-strong);
      background-color: color-mix(in oklch, var(--bg-secondary) 5%, transparent);
    }

    display: flex;
    flex-direction: row;
    align-items: stretch;
    justify-items: stretch;

    text-decoration: none;

    --image-width: 120px;
    --image-height: 120px;

    height: var(--image-height);

    & > .link-card-image {
      flex-basis: var(--image-width);
      flex-grow: 0;
      flex-shrink: 0;

      width: var(--image-width);
      height: 100%;

      img {
        width: 100%;
        height: 100%;
        border-radius: var(--radius-md) 0 0 var(--radius-md);
        object-fit: cover;
      }
    }

    & > :last-child {
      flex-grow: 1;

      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: space-evenly;

      padding: var(--space-md);
    }

    .link-card-site {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: var(--space-xs);
      color: var(--color-text-muted);

      & > img {
        width: 1em;
        height: 1em;
      }

      font-size: var(--text-xs);
    }

    :where(h2, h3, h4, h5, h6).link-card-title {
      font-size: var(--text-lg);
      font-weight: var(--font-semibold);
      color: var(--color-text);
      margin: 0;
      text-overflow: clip;
    }

    :hover .link-card-title {
      text-decoration: underline;
    }

    .link-card-description {
      font-size: var(--text-sm);
      color: var(--color-text-muted);
      margin: 0;
      /* Also use .truncate-single-line */
    }
  }

  .diagram-tabs {
    .react-aria-TabList {
      /* Format the tab list */
      display: flex;
      flex-direction: row;
      gap: var(--space-xs);
      margin-bottom: var(--space-md);
      border-bottom: 1px solid var(--border-subtle);
      padding-bottom: var(--space-xs);
    }

    .react-aria-Tab {
      padding: var(--space-sm) var(--space-md);
      border: none;
      background: transparent;
      color: var(--color-text-muted);
      font-size: var(--text-sm);
      font-weight: var(--font-medium);
      border-radius: var(--radius-sm) var(--radius-sm) 0 0;
      cursor: pointer;
      transition:
        color var(--transition-fast),
        background-color var(--transition-fast),
        border-color var(--transition-fast);
      position: relative;

      &:hover {
        color: var(--color-text);
        background-color: color-mix(in oklch, var(--bg-secondary) 30%, transparent);
      }

      &[data-selected="true"] {
        color: var(--color-accent);
        background-color: var(--bg-secondary);

        &::after {
          content: "";
          position: absolute;
          bottom: -1px;
          left: 0;
          right: 0;
          height: 2px;
          background-color: var(--color-accent);
        }
      }

      &:focus-visible {
        outline: 2px solid var(--color-accent);
        outline-offset: 2px;
      }
    }

    .react-aria-TabPanel {
      position: relative;

      .diagram-code {
        position: relative;
        max-height: 100%;
        overflow-y: auto;
        border: 1px solid var(--border-subtle);
        border-radius: var(--radius-md);
        pre {
          /* Avoid duplicate borders */
          border-style: none !important;
        }
      }

      .button-group.diagram-code-buttons {
        position: absolute;
        top: var(--space-sm);
        right: var(--space-sm);
        z-index: 10;
        opacity: 0;
        :hover > & {
          opacity: 1;
        }
        transition: opacity var(--transition-fast);

        .copy-button {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 2rem;
          height: 2rem;
          background-color: var(--bg-secondary);
          border: 1px solid var(--border-subtle);
          border-radius: var(--radius-sm);
          cursor: pointer;
          transition: all var(--transition-fast);

          &:hover {
            background-color: var(--bg-highlight);
            border-color: var(--color-accent);
          }

          &:focus-visible {
            outline: 2px solid var(--color-accent);
            outline-offset: 2px;
          }

          .icon {
            width: 1.2rem;
            height: 1.2rem;
            color: transparent;
            stroke: rgba(0, 0, 0, 0.5);
            transition: color var(--transition-fast);
          }
        }
      }

      .diagram-container {
        &:not(:has(.diagram-fit, .diagram-scrollable)) {
          display: flex;
        }

        & > figure {
          position: relative;
          --diagram-tab-height: 50vh;

          .diagram:not(:where(.diagram-fit, .diagram-scrollable)) svg {
            height: var(--diagram-tab-height);
          }

          .diagram-fit {
            width: 100%;
          }

          .diagram-scrollable {
            max-height: var(--diagram-tab-height);
            overflow-y: auto;
          }

          & > .button-group {
            position: absolute;
            top: var(--space-sm);
            right: var(--space-sm);
            z-index: 10;
            opacity: 0;
            transition: opacity var(--transition-fast);

            display: flex;
            flex-direction: row;
            align-items: center;
            gap: var(--space-xs);

            button {
              display: flex;
              align-items: center;
              justify-content: center;
              width: 2rem;
              height: 2rem;
              background-color: var(--bg-secondary);
              border: 1px solid var(--border-subtle);
              border-radius: var(--radius-sm);
              cursor: pointer;
              transition: all var(--transition-fast);

              &:hover {
                background-color: var(--bg-highlight);
                border-color: var(--color-accent);
              }

              &:focus-visible {
                outline: 2px solid var(--color-accent);
                outline-offset: 2px;
              }

              .icon {
                width: 1rem;
                height: 1rem;
                color: transparent;
                stroke: rgba(0, 0, 0, 0.5);
                fill: none;
                transition: color var(--transition-fast);
              }
            }
          }

          &:hover > .button-group {
            opacity: 1;
          }
        }
      }
    }
  }

  .diagram {
    border: 1px solid var(--border-subtle);
    border-radius: var(--radius-md);
    box-shadow: 4px 2px 4px rgba(0, 0, 0, 0.06);
  }

  .react-aria-ModalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 100;

    display: flex;
    align-items: center;
    justify-content: center;

    .diagram-modal {
      --diagram-width: 90vw;
      --diagram-height: 90vh;

      .close-modal {
        position: absolute;
        top: 0;
        right: 0;
        width: 2rem;
        height: 2rem;
      }

      .diagram {
        svg {
          height: var(--diagram-height);
        }

        &.diagram-fit svg {
          width: var(--diagram-width);
          height: auto;
        }

        &.diagram-scrollable svg {
          height: var(--diagram-height);
        }
      }
    }
  }

  .react-aria-Tooltip {
    position: relative;
    color: rgba(100%, 100%, 100%, 1);
    background-color: var(--color-bg-success);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    white-space: nowrap;
    z-index: 1000;
    transform: translateX(-6px);
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition:
      opacity var(--transition-fast),
      transform var(--transition-slow);

    /* Speech bubble arrow on the right side */
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      right: -6px;
      transform: translateY(-50%);
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 6px 0 6px 6px;
      border-color: transparent transparent transparent var(--color-bg-success);
    }

    &[data-entering] {
      opacity: 1;
      transform: translate(-6px, 0);
    }

    &[data-exiting] {
      opacity: 0;
      transform: translateY(-6px, 4px);
    }
  }

  /* Utilities */
  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }
}
